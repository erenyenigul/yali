; ModuleID = '/home/ml4code/host/experimento_malware/spec_cpu_2006_range/bytecodes_llvm_4/dealII_polynomial_space.ll'
source_filename = "polynomial_space.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.PolynomialSpace<1>::ExcDimensionMismatch2" = type <{ %class.ExceptionBase, i32, i32, i32, [4 x i8] }>
%class.ExceptionBase = type { %"class.std::exception", i8*, i32, i8*, i8*, i8* }
%"class.std::exception" = type { i32 (...)** }
%"class.PolynomialSpace<2>::ExcDimensionMismatch2" = type <{ %class.ExceptionBase, i32, i32, i32, [4 x i8] }>
%"class.PolynomialSpace<3>::ExcDimensionMismatch2" = type <{ %class.ExceptionBase, i32, i32, i32, [4 x i8] }>
%class.PolynomialSpace = type { %"class.std::vector", i32, %"class.std::vector.5", %"class.std::vector.5" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data" = type { %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"* }
%"class.Polynomials::Polynomial" = type { %class.Subscriptor, %"class.std::vector.0" }
%class.Subscriptor = type { i32 (...)**, i32, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" = type { double*, double*, double* }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%class.PolynomialSpace.10 = type { %"class.std::vector", i32, %"class.std::vector.5", %"class.std::vector.5" }
%class.PolynomialSpace.11 = type { %"class.std::vector", i32, %"class.std::vector.5", %"class.std::vector.5" }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.__gnu_cxx::__normal_iterator" = type { i32* }
%"class.__gnu_cxx::__normal_iterator.49" = type { i32* }
%"class.std::allocator.7" = type { i8 }
%class.Point = type { %class.Tensor }
%class.Tensor = type { [1 x double] }
%"class.std::vector.12" = type { %"struct.std::_Vector_base.13" }
%"struct.std::_Vector_base.13" = type { %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data" = type { %class.Tensor*, %class.Tensor*, %class.Tensor* }
%"class.std::vector.17" = type { %"struct.std::_Vector_base.18" }
%"struct.std::_Vector_base.18" = type { %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data" = type { %class.Tensor.22*, %class.Tensor.22*, %class.Tensor.22* }
%class.Tensor.22 = type { [1 x %class.Tensor] }
%class.Table = type { %class.TableBase.base, [4 x i8] }
%class.TableBase.base = type <{ %class.Subscriptor, %"class.std::vector.0"*, i32, %class.TableIndices }>
%class.TableIndices = type { %class.TableIndicesBase }
%class.TableIndicesBase = type { [2 x i32] }
%"class.internal::TableBaseAccessors::Accessor" = type { %class.TableBase*, %"class.std::vector.0"* }
%class.TableBase = type <{ %class.Subscriptor, %"class.std::vector.0"*, i32, %class.TableIndices, [4 x i8] }>
%"class.__gnu_cxx::__normal_iterator.51" = type { double* }
%"class.std::allocator.2" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%class.Point.23 = type { %class.Tensor.24 }
%class.Tensor.24 = type { [2 x double] }
%"class.std::vector.25" = type { %"struct.std::_Vector_base.26" }
%"struct.std::_Vector_base.26" = type { %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data" = type { %class.Tensor.24*, %class.Tensor.24*, %class.Tensor.24* }
%"class.std::vector.30" = type { %"struct.std::_Vector_base.31" }
%"struct.std::_Vector_base.31" = type { %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data" = type { %class.Tensor.35*, %class.Tensor.35*, %class.Tensor.35* }
%class.Tensor.35 = type { [2 x %class.Tensor.24] }
%class.Point.36 = type { %class.Tensor.37 }
%class.Tensor.37 = type { [3 x double] }
%"class.std::vector.38" = type { %"struct.std::_Vector_base.39" }
%"struct.std::_Vector_base.39" = type { %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data" = type { %class.Tensor.37*, %class.Tensor.37*, %class.Tensor.37* }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data" = type { %class.Tensor.48*, %class.Tensor.48*, %class.Tensor.48* }
%class.Tensor.48 = type { [3 x %class.Tensor.37] }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.50" = type { double* }

$_ZNKSt6vectorIjSaIjEEixEm = comdat any

$_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv = comdat any

$_ZNK15PolynomialSpaceILi1EE14output_indicesERSo = comdat any

$_ZN15PolynomialSpaceILi1EE13set_numberingERKSt6vectorIjSaIjEE = comdat any

$_ZNSt6vectorIjSaIjEEaSERKS1_ = comdat any

$_ZNKSt6vectorIjSaIjEE4sizeEv = comdat any

$_ZNSt6vectorIjSaIjEEixEm = comdat any

$_ZNK15PolynomialSpaceILi1EE7computeERK5PointILi1EERSt6vectorIdSaIdEERS5_I6TensorILi1ELi1EESaISA_EERS5_IS9_ILi2ELi1EESaISE_EE = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZNKSt6vectorI6TensorILi1ELi1EESaIS1_EE4sizeEv = comdat any

$_ZNKSt6vectorI6TensorILi2ELi1EESaIS1_EE4sizeEv = comdat any

$_ZN5TableILi2ESt6vectorIdSaIdEEEC2Ejj = comdat any

$_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE4sizeEv = comdat any

$_ZNK16TableIndicesBaseILi2EEixEj = comdat any

$_ZN5TableILi2ESt6vectorIdSaIdEEEclEjj = comdat any

$_ZNSt6vectorIdSaIdEE6resizeEmd = comdat any

$_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm = comdat any

$_ZNK5PointILi1EEclEj = comdat any

$_ZN5TableILi2ESt6vectorIdSaIdEEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj = comdat any

$_ZNSt6vectorIdSaIdEEixEm = comdat any

$_ZNSt6vectorI6TensorILi1ELi1EESaIS1_EEixEm = comdat any

$_ZN6TensorILi1ELi1EEixEj = comdat any

$_ZNSt6vectorI6TensorILi2ELi1EESaIS1_EEixEm = comdat any

$_ZN6TensorILi2ELi1EEixEj = comdat any

$_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNK15PolynomialSpaceILi1EE13compute_valueEjRK5PointILi1EE = comdat any

$_ZNK15PolynomialSpaceILi1EE12compute_gradEjRK5PointILi1EE = comdat any

$_ZN6TensorILi1ELi1EEC2Eb = comdat any

$_ZNSaIdEC2Ev = comdat any

$_ZNSt6vectorIdSaIdEEC2EmRKdRKS0_ = comdat any

$_ZNSaIdED2Ev = comdat any

$_ZNSt6vectorIdSaIdEED2Ev = comdat any

$_ZNK15PolynomialSpaceILi1EE17compute_grad_gradEjRK5PointILi1EE = comdat any

$_ZN6TensorILi2ELi1EEC2Ev = comdat any

$_ZNK15PolynomialSpaceILi1EE1nEv = comdat any

$_ZNK15PolynomialSpaceILi1EE6degreeEv = comdat any

$_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2C5Eiii = comdat any

$_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D5Ev = comdat any

$_ZNK15PolynomialSpaceILi1EE21ExcDimensionMismatch29PrintInfoERSo = comdat any

$_ZN15PolynomialSpaceILi1EE14compute_n_polsEj = comdat any

$_ZNK15PolynomialSpaceILi2EE14output_indicesERSo = comdat any

$_ZN15PolynomialSpaceILi2EE13set_numberingERKSt6vectorIjSaIjEE = comdat any

$_ZNK15PolynomialSpaceILi2EE7computeERK5PointILi2EERSt6vectorIdSaIdEERS5_I6TensorILi1ELi2EESaISA_EERS5_IS9_ILi2ELi2EESaISE_EE = comdat any

$_ZNKSt6vectorI6TensorILi1ELi2EESaIS1_EE4sizeEv = comdat any

$_ZNKSt6vectorI6TensorILi2ELi2EESaIS1_EE4sizeEv = comdat any

$_ZNK5PointILi2EEclEj = comdat any

$_ZNSt6vectorI6TensorILi1ELi2EESaIS1_EEixEm = comdat any

$_ZN6TensorILi1ELi2EEixEj = comdat any

$_ZNSt6vectorI6TensorILi2ELi2EESaIS1_EEixEm = comdat any

$_ZN6TensorILi2ELi2EEixEj = comdat any

$_ZNK15PolynomialSpaceILi2EE13compute_valueEjRK5PointILi2EE = comdat any

$_ZNK15PolynomialSpaceILi2EE12compute_gradEjRK5PointILi2EE = comdat any

$_ZN6TensorILi1ELi2EEC2Eb = comdat any

$_ZNK15PolynomialSpaceILi2EE17compute_grad_gradEjRK5PointILi2EE = comdat any

$_ZN6TensorILi2ELi2EEC2Ev = comdat any

$_ZNK15PolynomialSpaceILi2EE1nEv = comdat any

$_ZNK15PolynomialSpaceILi2EE6degreeEv = comdat any

$_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2C5Eiii = comdat any

$_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D5Ev = comdat any

$_ZNK15PolynomialSpaceILi2EE21ExcDimensionMismatch29PrintInfoERSo = comdat any

$_ZN15PolynomialSpaceILi2EE14compute_n_polsEj = comdat any

$_ZNK15PolynomialSpaceILi3EE14output_indicesERSo = comdat any

$_ZN15PolynomialSpaceILi3EE13set_numberingERKSt6vectorIjSaIjEE = comdat any

$_ZNK15PolynomialSpaceILi3EE7computeERK5PointILi3EERSt6vectorIdSaIdEERS5_I6TensorILi1ELi3EESaISA_EERS5_IS9_ILi2ELi3EESaISE_EE = comdat any

$_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv = comdat any

$_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv = comdat any

$_ZNK5PointILi3EEclEj = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm = comdat any

$_ZN6TensorILi1ELi3EEixEj = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm = comdat any

$_ZN6TensorILi2ELi3EEixEj = comdat any

$_ZNK15PolynomialSpaceILi3EE13compute_valueEjRK5PointILi3EE = comdat any

$_ZNK15PolynomialSpaceILi3EE12compute_gradEjRK5PointILi3EE = comdat any

$_ZN6TensorILi1ELi3EEC2Eb = comdat any

$_ZNK15PolynomialSpaceILi3EE17compute_grad_gradEjRK5PointILi3EE = comdat any

$_ZN6TensorILi2ELi3EEC2Ev = comdat any

$_ZNK15PolynomialSpaceILi3EE1nEv = comdat any

$_ZNK15PolynomialSpaceILi3EE6degreeEv = comdat any

$_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2C5Eiii = comdat any

$_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D5Ev = comdat any

$_ZNK15PolynomialSpaceILi3EE21ExcDimensionMismatch29PrintInfoERSo = comdat any

$_ZN15PolynomialSpaceILi3EE14compute_n_polsEj = comdat any

$_ZN9TableBaseILi2ESt6vectorIdSaIdEEED2Ev = comdat any

$_ZN9TableBaseILi2ESt6vectorIdSaIdEEED0Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIdED2Ev = comdat any

$_ZNKSt6vectorIjSaIjEE8capacityEv = comdat any

$_ZNSt6vectorIjSaIjEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKjS1_EEEEPjmT_S9_ = comdat any

$_ZNKSt6vectorIjSaIjEE5beginEv = comdat any

$_ZNKSt6vectorIjSaIjEE3endEv = comdat any

$_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEjEvT_S7_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEENS1_IPjS6_EEET0_T_SB_SA_ = comdat any

$_ZNSt6vectorIjSaIjEE5beginEv = comdat any

$_ZNSt6vectorIjSaIjEE3endEv = comdat any

$_ZSt4copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_ = comdat any

$_ZSt12__niter_wrapIPjET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZSt12__niter_baseIPjET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_ = comdat any

$_ZSt8_DestroyIPjEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEENS1_IPjS6_EEET1_T0_SB_SA_ = comdat any

$_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEES2_ET_S7_T0_ = comdat any

$_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEplEl = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPjET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_ = comdat any

$_ZN12TableIndicesILi2EEC2Ejj = comdat any

$_ZN9TableBaseILi2ESt6vectorIdSaIdEEEC2ERK12TableIndicesILi2EE = comdat any

$_ZN5TableILi2ESt6vectorIdSaIdEEED0Ev = comdat any

$_ZN12TableIndicesILi2EEC2Ev = comdat any

$_ZN9TableBaseILi2ESt6vectorIdSaIdEEE6reinitERK12TableIndicesILi2EE = comdat any

$_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE10n_elementsEv = comdat any

$_ZNSt6vectorIdSaIdEEC2Ev = comdat any

$_ZN9TableBaseILi2ESt6vectorIdSaIdEEE12reset_valuesEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev = comdat any

$_ZSt6fill_nIPSt6vectorIdSaIdEEjS2_ET_S4_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPSt6vectorIdSaIdEEET_RKS4_S4_ = comdat any

$_ZSt10__fill_n_aIPSt6vectorIdSaIdEEjS2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES7_T0_RKS6_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIdSaIdEEET_S4_ = comdat any

$_ZNSt6vectorIdSaIdEEaSERKS1_ = comdat any

$_ZNKSt6vectorIdSaIdEE8capacityEv = comdat any

$_ZNSt6vectorIdSaIdEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKdS1_EEEEPdmT_S9_ = comdat any

$_ZNKSt6vectorIdSaIdEE5beginEv = comdat any

$_ZNKSt6vectorIdSaIdEE3endEv = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEdEvT_S7_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEENS1_IPdS6_EEET0_T_SB_SA_ = comdat any

$_ZNSt6vectorIdSaIdEE5beginEv = comdat any

$_ZNSt6vectorIdSaIdEE3endEv = comdat any

$_ZSt4copyIPdS0_ET0_T_S2_S1_ = comdat any

$_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_ = comdat any

$_ZSt12__niter_wrapIPdET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_ = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEEEvT_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEENS1_IPdS6_EEET1_T0_SB_SA_ = comdat any

$_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEES2_ET_S7_T0_ = comdat any

$_ZSt12__niter_baseIPdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEplEl = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPdET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_ = comdat any

$_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd = comdat any

$_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd = comdat any

$_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_ = comdat any

$_ZSt4fillIPddEvT_S1_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPdmdET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNKSt6vectorIdSaIdEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNK5TableILi2ESt6vectorIdSaIdEEE6n_colsEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_ = comdat any

$_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIdSaIdEE18_M_fill_initializeEmRKd = comdat any

$_ZNSt12_Vector_baseIdSaIdEED2Ev = comdat any

$_ZNSaIdEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev = comdat any

$_ZTVN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E = comdat any

$_ZTVN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E = comdat any

$_ZTVN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E = comdat any

$_ZTSN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E = comdat any

$_ZTIN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E = comdat any

$_ZTSN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E = comdat any

$_ZTIN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E = comdat any

$_ZTSN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E = comdat any

$_ZTIN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E = comdat any

$_ZTV9TableBaseILi2ESt6vectorIdSaIdEEE = comdat any

$_ZTS9TableBaseILi2ESt6vectorIdSaIdEEE = comdat any

$_ZTI9TableBaseILi2ESt6vectorIdSaIdEEE = comdat any

$_ZTV5TableILi2ESt6vectorIdSaIdEEE = comdat any

$_ZTS5TableILi2ESt6vectorIdSaIdEEE = comdat any

$_ZTI5TableILi2ESt6vectorIdSaIdEEE = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZTVN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E to i8*), i8* bitcast (void (%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D1Ev to i8*), i8* bitcast (void (%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, %"class.std::basic_ostream"*)* @_ZNK15PolynomialSpaceILi1EE21ExcDimensionMismatch29PrintInfoERSo to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"Dimension \00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c" not equal to \00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c" nor to \00", align 1
@_ZTVN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E to i8*), i8* bitcast (void (%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D1Ev to i8*), i8* bitcast (void (%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.std::basic_ostream"*)* @_ZNK15PolynomialSpaceILi2EE21ExcDimensionMismatch29PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTVN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E to i8*), i8* bitcast (void (%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D1Ev to i8*), i8* bitcast (void (%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, %"class.std::basic_ostream"*)* @_ZNK15PolynomialSpaceILi3EE21ExcDimensionMismatch29PrintInfoERSo to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E = weak_odr constant [49 x i8] c"N15PolynomialSpaceILi1EE21ExcDimensionMismatch2E\00", comdat
@_ZTI13ExceptionBase = external constant i8*
@_ZTIN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZTSN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTSN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E = weak_odr constant [49 x i8] c"N15PolynomialSpaceILi2EE21ExcDimensionMismatch2E\00", comdat
@_ZTIN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZTSN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTSN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E = weak_odr constant [49 x i8] c"N15PolynomialSpaceILi3EE21ExcDimensionMismatch2E\00", comdat
@_ZTIN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZTSN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTV9TableBaseILi2ESt6vectorIdSaIdEEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2ESt6vectorIdSaIdEEE to i8*), i8* bitcast (void (%class.TableBase*)* @_ZN9TableBaseILi2ESt6vectorIdSaIdEEED2Ev to i8*), i8* bitcast (void (%class.TableBase*)* @_ZN9TableBaseILi2ESt6vectorIdSaIdEEED0Ev to i8*)] }, comdat, align 8
@_ZTS9TableBaseILi2ESt6vectorIdSaIdEEE = linkonce_odr constant [34 x i8] c"9TableBaseILi2ESt6vectorIdSaIdEEE\00", comdat
@_ZTI11Subscriptor = external constant i8*
@_ZTI9TableBaseILi2ESt6vectorIdSaIdEEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZTS9TableBaseILi2ESt6vectorIdSaIdEEE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTV5TableILi2ESt6vectorIdSaIdEEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI5TableILi2ESt6vectorIdSaIdEEE to i8*), i8* bitcast (void (%class.Table*)* @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev to i8*), i8* bitcast (void (%class.Table*)* @_ZN5TableILi2ESt6vectorIdSaIdEEED0Ev to i8*)] }, comdat, align 8
@_ZTS5TableILi2ESt6vectorIdSaIdEEE = linkonce_odr constant [30 x i8] c"5TableILi2ESt6vectorIdSaIdEEE\00", comdat
@_ZTI5TableILi2ESt6vectorIdSaIdEEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTS5TableILi2ESt6vectorIdSaIdEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2ESt6vectorIdSaIdEEE to i8*) }, comdat
@.str.5 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0

@_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2C1Eiii = weak_odr alias void (%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, i32, i32, i32), void (%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, i32, i32, i32)* @_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2C2Eiii
@_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D1Ev = weak_odr alias void (%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*), void (%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D2Ev
@_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2C1Eiii = weak_odr alias void (%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, i32, i32, i32), void (%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, i32, i32, i32)* @_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2C2Eiii
@_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D1Ev = weak_odr alias void (%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*), void (%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D2Ev
@_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2C1Eiii = weak_odr alias void (%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, i32, i32, i32), void (%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, i32, i32, i32)* @_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2C2Eiii
@_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D1Ev = weak_odr alias void (%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*), void (%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*)* @_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D2Ev

; Function Attrs: noinline uwtable
define void @_ZNK15PolynomialSpaceILi1EE13compute_indexEjRA1_j(%class.PolynomialSpace*, i32, [1 x i32]* dereferenceable(4)) #0 align 2 {
  %4 = alloca %class.PolynomialSpace*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [1 x i32]*, align 8
  %7 = alloca i32, align 4
  store %class.PolynomialSpace* %0, %class.PolynomialSpace** %4, align 8
  store i32 %1, i32* %5, align 4
  store [1 x i32]* %2, [1 x i32]** %6, align 8
  %8 = load %class.PolynomialSpace*, %class.PolynomialSpace** %4, align 8
  %9 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %8, i32 0, i32 2
  %10 = load i32, i32* %5, align 4
  %11 = zext i32 %10 to i64
  %12 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %9, i64 %11)
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %7, align 4
  %14 = load i32, i32* %7, align 4
  %15 = load [1 x i32]*, [1 x i32]** %6, align 8
  %16 = getelementptr inbounds [1 x i32], [1 x i32]* %15, i64 0, i64 0
  store i32 %14, i32* %16, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.1
  %4 = load i32, i32* @y.2
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.5"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %11, align 8
  %14 = bitcast %"class.std::vector.5"* %13 to %"struct.std::_Vector_base.6"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds i32, i32* %18, i64 %19
  %21 = load i32, i32* @x.1
  %22 = load i32, i32* @y.2
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.5"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %32 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define void @_ZNK15PolynomialSpaceILi2EE13compute_indexEjRA2_j(%class.PolynomialSpace.10*, i32, [2 x i32]* dereferenceable(8)) #0 align 2 {
  %4 = load i32, i32* @x.3
  %5 = load i32, i32* @y.4
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.PolynomialSpace.10*, align 8
  %13 = alloca i32, align 4
  %14 = alloca [2 x i32]*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %12, align 8
  store i32 %1, i32* %13, align 4
  store [2 x i32]* %2, [2 x i32]** %14, align 8
  %19 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %12, align 8
  %20 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %19, i32 0, i32 2
  %21 = load i32, i32* %13, align 4
  %22 = zext i32 %21 to i64
  %23 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %20, i64 %22)
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %15, align 4
  %25 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %19, i32 0, i32 0
  %26 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %25)
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  %28 = load i32, i32* @x.3
  %29 = load i32, i32* @y.4
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36

; <label>:36:                                     ; preds = %80, %originalBBpart2
  %37 = load i32, i32* %18, align 4
  %38 = load i32, i32* %16, align 4
  %39 = icmp ult i32 %37, %38
  br i1 %39, label %40, label %83

; <label>:40:                                     ; preds = %36
  %41 = load i32, i32* @x.3
  %42 = load i32, i32* @y.4
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = load i32, i32* %15, align 4
  %50 = load i32, i32* %17, align 4
  %51 = load i32, i32* %16, align 4
  %52 = add i32 %50, %51
  %53 = load i32, i32* %18, align 4
  %54 = sub i32 %52, %53
  %55 = icmp ult i32 %49, %54
  %56 = load i32, i32* @x.3
  %57 = load i32, i32* @y.4
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart215, label %originalBB1alteredBB

originalBBpart215:                                ; preds = %originalBB1
  br i1 %55, label %64, label %73

; <label>:64:                                     ; preds = %originalBBpart215
  %65 = load i32, i32* %15, align 4
  %66 = load i32, i32* %17, align 4
  %67 = sub i32 %65, %66
  %68 = load [2 x i32]*, [2 x i32]** %14, align 8
  %69 = getelementptr inbounds [2 x i32], [2 x i32]* %68, i64 0, i64 0
  store i32 %67, i32* %69, align 4
  %70 = load i32, i32* %18, align 4
  %71 = load [2 x i32]*, [2 x i32]** %14, align 8
  %72 = getelementptr inbounds [2 x i32], [2 x i32]* %71, i64 0, i64 1
  store i32 %70, i32* %72, align 4
  br label %83

; <label>:73:                                     ; preds = %originalBBpart215
  %74 = load i32, i32* %16, align 4
  %75 = load i32, i32* %18, align 4
  %76 = sub i32 %74, %75
  %77 = load i32, i32* %17, align 4
  %78 = add i32 %77, %76
  store i32 %78, i32* %17, align 4
  br label %79

; <label>:79:                                     ; preds = %73
  br label %80

; <label>:80:                                     ; preds = %79
  %81 = load i32, i32* %18, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %18, align 4
  br label %36

; <label>:83:                                     ; preds = %64, %36
  %84 = load i32, i32* @x.3
  %85 = load i32, i32* @y.4
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %83, %originalBB17alteredBB
  %92 = load i32, i32* @x.3
  %93 = load i32, i32* @y.4
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %100 = alloca %class.PolynomialSpace.10*, align 8
  %101 = alloca i32, align 4
  %102 = alloca [2 x i32]*, align 8
  %103 = alloca i32, align 4
  %104 = alloca i32, align 4
  %105 = alloca i32, align 4
  %106 = alloca i32, align 4
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %100, align 8
  store i32 %1, i32* %101, align 4
  store [2 x i32]* %2, [2 x i32]** %102, align 8
  %107 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %100, align 8
  %108 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %107, i32 0, i32 2
  %109 = load i32, i32* %101, align 4
  %110 = zext i32 %109 to i64
  %111 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %108, i64 %110)
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %103, align 4
  %113 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %107, i32 0, i32 0
  %114 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %113)
  %115 = trunc i64 %114 to i32
  store i32 %115, i32* %104, align 4
  store i32 0, i32* %105, align 4
  store i32 0, i32* %106, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %116 = load i32, i32* %15, align 4
  %117 = load i32, i32* %17, align 4
  %118 = load i32, i32* %16, align 4
  %_ = sub i32 %117, %118
  %gen = mul i32 %_, %118
  %_2 = sub i32 0, %117
  %gen3 = add i32 %_2, %118
  %119 = add i32 %117, %118
  %120 = load i32, i32* %18, align 4
  %_4 = shl i32 %119, %120
  %_5 = sub i32 %119, %120
  %gen6 = mul i32 %_5, %120
  %_7 = shl i32 %119, %120
  %_8 = sub i32 0, %119
  %gen9 = add i32 %_8, %120
  %_10 = sub i32 %119, %120
  %gen11 = mul i32 %_10, %120
  %_12 = sub i32 %119, %120
  %gen13 = mul i32 %_12, %120
  %121 = sub i32 %119, %120
  %122 = icmp ult i32 %116, %121
  br label %originalBB1

originalBB17alteredBB:                            ; preds = %originalBB17, %83
  br label %originalBB17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %12, align 8
  %14 = ptrtoint %"class.Polynomials::Polynomial"* %8 to i64
  %15 = ptrtoint %"class.Polynomials::Polynomial"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 48
  ret i64 %17
}

; Function Attrs: noinline uwtable
define void @_ZNK15PolynomialSpaceILi3EE13compute_indexEjRA3_j(%class.PolynomialSpace.11*, i32, [3 x i32]* dereferenceable(12)) #0 align 2 {
  %4 = alloca %class.PolynomialSpace.11*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [3 x i32]*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %4, align 8
  store i32 %1, i32* %5, align 4
  store [3 x i32]* %2, [3 x i32]** %6, align 8
  %12 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %4, align 8
  %13 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %12, i32 0, i32 2
  %14 = load i32, i32* %5, align 4
  %15 = zext i32 %14 to i64
  %16 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %13, i64 %15)
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %7, align 4
  %18 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %12, i32 0, i32 0
  %19 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %18)
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %21

; <label>:21:                                     ; preds = %163, %3
  %22 = load i32, i32* @x.7
  %23 = load i32, i32* @y.8
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i32, i32* %10, align 4
  %31 = load i32, i32* %8, align 4
  %32 = icmp ult i32 %30, %31
  %33 = load i32, i32* @x.7
  %34 = load i32, i32* @y.8
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %41, label %166

; <label>:41:                                     ; preds = %originalBBpart2
  store i32 0, i32* %11, align 4
  br label %42

; <label>:42:                                     ; preds = %143, %41
  %43 = load i32, i32* @x.7
  %44 = load i32, i32* @y.8
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i32, i32* %11, align 4
  %52 = load i32, i32* %8, align 4
  %53 = load i32, i32* %10, align 4
  %54 = sub i32 %52, %53
  %55 = icmp ult i32 %51, %54
  %56 = load i32, i32* @x.7
  %57 = load i32, i32* @y.8
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  br i1 %55, label %64, label %146

; <label>:64:                                     ; preds = %originalBBpart28
  %65 = load i32, i32* %7, align 4
  %66 = load i32, i32* %9, align 4
  %67 = load i32, i32* %8, align 4
  %68 = add i32 %66, %67
  %69 = load i32, i32* %11, align 4
  %70 = sub i32 %68, %69
  %71 = load i32, i32* %10, align 4
  %72 = sub i32 %70, %71
  %73 = icmp ult i32 %65, %72
  br i1 %73, label %74, label %102

; <label>:74:                                     ; preds = %64
  %75 = load i32, i32* @x.7
  %76 = load i32, i32* @y.8
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load i32, i32* %7, align 4
  %84 = load i32, i32* %9, align 4
  %85 = sub i32 %83, %84
  %86 = load [3 x i32]*, [3 x i32]** %6, align 8
  %87 = getelementptr inbounds [3 x i32], [3 x i32]* %86, i64 0, i64 0
  store i32 %85, i32* %87, align 4
  %88 = load i32, i32* %11, align 4
  %89 = load [3 x i32]*, [3 x i32]** %6, align 8
  %90 = getelementptr inbounds [3 x i32], [3 x i32]* %89, i64 0, i64 1
  store i32 %88, i32* %90, align 4
  %91 = load i32, i32* %10, align 4
  %92 = load [3 x i32]*, [3 x i32]** %6, align 8
  %93 = getelementptr inbounds [3 x i32], [3 x i32]* %92, i64 0, i64 2
  store i32 %91, i32* %93, align 4
  %94 = load i32, i32* @x.7
  %95 = load i32, i32* @y.8
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart218, label %originalBB10alteredBB

originalBBpart218:                                ; preds = %originalBB10
  br label %166

; <label>:102:                                    ; preds = %64
  %103 = load i32, i32* @x.7
  %104 = load i32, i32* @y.8
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %102, %originalBB20alteredBB
  %111 = load i32, i32* %8, align 4
  %112 = load i32, i32* %11, align 4
  %113 = sub i32 %111, %112
  %114 = load i32, i32* %10, align 4
  %115 = sub i32 %113, %114
  %116 = load i32, i32* %9, align 4
  %117 = add i32 %116, %115
  store i32 %117, i32* %9, align 4
  %118 = load i32, i32* @x.7
  %119 = load i32, i32* @y.8
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart249, label %originalBB20alteredBB

originalBBpart249:                                ; preds = %originalBB20
  br label %126

; <label>:126:                                    ; preds = %originalBBpart249
  %127 = load i32, i32* @x.7
  %128 = load i32, i32* @y.8
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %126, %originalBB51alteredBB
  %135 = load i32, i32* @x.7
  %136 = load i32, i32* @y.8
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %143

; <label>:143:                                    ; preds = %originalBBpart253
  %144 = load i32, i32* %11, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %11, align 4
  br label %42

; <label>:146:                                    ; preds = %originalBBpart28
  %147 = load i32, i32* @x.7
  %148 = load i32, i32* @y.8
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %146, %originalBB55alteredBB
  %155 = load i32, i32* @x.7
  %156 = load i32, i32* @y.8
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %163

; <label>:163:                                    ; preds = %originalBBpart257
  %164 = load i32, i32* %10, align 4
  %165 = add i32 %164, 1
  store i32 %165, i32* %10, align 4
  br label %21

; <label>:166:                                    ; preds = %originalBBpart218, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %21
  %167 = load i32, i32* %10, align 4
  %168 = load i32, i32* %8, align 4
  %169 = icmp ult i32 %167, %168
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %170 = load i32, i32* %11, align 4
  %171 = load i32, i32* %8, align 4
  %172 = load i32, i32* %10, align 4
  %_ = sub i32 0, %171
  %gen = add i32 %_, %172
  %_2 = shl i32 %171, %172
  %_3 = sub i32 %171, %172
  %gen4 = mul i32 %_3, %172
  %_5 = sub i32 0, %171
  %gen6 = add i32 %_5, %172
  %173 = sub i32 %171, %172
  %174 = icmp ult i32 %170, %173
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %175 = load i32, i32* %7, align 4
  %176 = load i32, i32* %9, align 4
  %_11 = sub i32 %175, %176
  %gen12 = mul i32 %_11, %176
  %_13 = sub i32 %175, %176
  %gen14 = mul i32 %_13, %176
  %_15 = sub i32 %175, %176
  %gen16 = mul i32 %_15, %176
  %177 = sub i32 %175, %176
  %178 = load [3 x i32]*, [3 x i32]** %6, align 8
  %179 = getelementptr inbounds [3 x i32], [3 x i32]* %178, i64 0, i64 0
  store i32 %177, i32* %179, align 4
  %180 = load i32, i32* %11, align 4
  %181 = load [3 x i32]*, [3 x i32]** %6, align 8
  %182 = getelementptr inbounds [3 x i32], [3 x i32]* %181, i64 0, i64 1
  store i32 %180, i32* %182, align 4
  %183 = load i32, i32* %10, align 4
  %184 = load [3 x i32]*, [3 x i32]** %6, align 8
  %185 = getelementptr inbounds [3 x i32], [3 x i32]* %184, i64 0, i64 2
  store i32 %183, i32* %185, align 4
  br label %originalBB10

originalBB20alteredBB:                            ; preds = %originalBB20, %102
  %186 = load i32, i32* %8, align 4
  %187 = load i32, i32* %11, align 4
  %_21 = shl i32 %186, %187
  %_22 = sub i32 %186, %187
  %gen23 = mul i32 %_22, %187
  %_24 = sub i32 %186, %187
  %gen25 = mul i32 %_24, %187
  %_26 = shl i32 %186, %187
  %_27 = sub i32 %186, %187
  %gen28 = mul i32 %_27, %187
  %188 = sub i32 %186, %187
  %189 = load i32, i32* %10, align 4
  %_29 = shl i32 %188, %189
  %_30 = shl i32 %188, %189
  %_31 = sub i32 %188, %189
  %gen32 = mul i32 %_31, %189
  %_33 = sub i32 %188, %189
  %gen34 = mul i32 %_33, %189
  %_35 = shl i32 %188, %189
  %_36 = sub i32 %188, %189
  %gen37 = mul i32 %_36, %189
  %_38 = sub i32 %188, %189
  %gen39 = mul i32 %_38, %189
  %190 = sub i32 %188, %189
  %191 = load i32, i32* %9, align 4
  %_40 = sub i32 %191, %190
  %gen41 = mul i32 %_40, %190
  %_42 = sub i32 %191, %190
  %gen43 = mul i32 %_42, %190
  %_44 = shl i32 %191, %190
  %_45 = shl i32 %191, %190
  %_46 = sub i32 0, %191
  %gen47 = add i32 %_46, %190
  %192 = add i32 %191, %190
  store i32 %192, i32* %9, align 4
  br label %originalBB20

originalBB51alteredBB:                            ; preds = %originalBB51, %126
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %146
  br label %originalBB55
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi1EE14output_indicesERSo(%class.PolynomialSpace*, %"class.std::basic_ostream"* dereferenceable(272)) #0 comdat align 2 {
  %3 = alloca %class.PolynomialSpace*, align 8
  %4 = alloca %"class.std::basic_ostream"*, align 8
  %5 = alloca [1 x i32], align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %class.PolynomialSpace* %0, %class.PolynomialSpace** %3, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %4, align 8
  %8 = load %class.PolynomialSpace*, %class.PolynomialSpace** %3, align 8
  store i32 0, i32* %6, align 4
  br label %9

; <label>:9:                                      ; preds = %originalBBpart27, %2
  %10 = load i32, i32* %6, align 4
  %11 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %8, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %14, label %72

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi1EE13compute_indexEjRA1_j(%class.PolynomialSpace* %8, i32 %15, [1 x i32]* dereferenceable(4) %5)
  %16 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %17 = load i32, i32* %6, align 4
  %18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %16, i32 %17)
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  store i32 0, i32* %7, align 4
  br label %20

; <label>:20:                                     ; preds = %31, %14
  %21 = load i32, i32* %7, align 4
  %22 = icmp ult i32 %21, 1
  br i1 %22, label %23, label %34

; <label>:23:                                     ; preds = %20
  %24 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %25 = load i32, i32* %7, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [1 x i32], [1 x i32]* %5, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %24, i32 %28)
  %30 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  br label %31

; <label>:31:                                     ; preds = %23
  %32 = load i32, i32* %7, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %7, align 4
  br label %20

; <label>:34:                                     ; preds = %20
  %35 = load i32, i32* @x.9
  %36 = load i32, i32* @y.10
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %34, %originalBBalteredBB
  %43 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %44 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %43, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %45 = load i32, i32* @x.9
  %46 = load i32, i32* @y.10
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %53

; <label>:53:                                     ; preds = %originalBBpart2
  %54 = load i32, i32* @x.9
  %55 = load i32, i32* @y.10
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %53, %originalBB1alteredBB
  %62 = load i32, i32* %6, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %6, align 4
  %64 = load i32, i32* @x.9
  %65 = load i32, i32* @y.10
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart27, label %originalBB1alteredBB

originalBBpart27:                                 ; preds = %originalBB1
  br label %9

; <label>:72:                                     ; preds = %9
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %34
  %73 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %74 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %73, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  %75 = load i32, i32* %6, align 4
  %_ = shl i32 %75, 1
  %_2 = sub i32 %75, 1
  %gen = mul i32 %_2, 1
  %_3 = shl i32 %75, 1
  %_4 = sub i32 0, %75
  %gen5 = add i32 %_4, 1
  %76 = add i32 %75, 1
  store i32 %76, i32* %6, align 4
  br label %originalBB1
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"*, i32) #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #2

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15PolynomialSpaceILi1EE13set_numberingERKSt6vectorIjSaIjEE(%class.PolynomialSpace*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.11
  %4 = load i32, i32* @y.12
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.PolynomialSpace*, align 8
  %12 = alloca %"class.std::vector.5"*, align 8
  %13 = alloca i32, align 4
  store %class.PolynomialSpace* %0, %class.PolynomialSpace** %11, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %12, align 8
  %14 = load %class.PolynomialSpace*, %class.PolynomialSpace** %11, align 8
  %15 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %16 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %14, i32 0, i32 2
  %17 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIjSaIjEEaSERKS1_(%"class.std::vector.5"* %16, %"class.std::vector.5"* dereferenceable(24) %15)
  store i32 0, i32* %13, align 4
  %18 = load i32, i32* @x.11
  %19 = load i32, i32* @y.12
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %originalBBpart28, %originalBBpart2
  %27 = load i32, i32* %13, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %14, i32 0, i32 2
  %30 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %29)
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %32, label %77

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* @x.11
  %34 = load i32, i32* @y.12
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* %13, align 4
  %42 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %14, i32 0, i32 3
  %43 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %14, i32 0, i32 2
  %44 = load i32, i32* %13, align 4
  %45 = zext i32 %44 to i64
  %46 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %43, i64 %45)
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %42, i64 %48)
  store i32 %41, i32* %49, align 4
  %50 = load i32, i32* @x.11
  %51 = load i32, i32* @y.12
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* @x.11
  %60 = load i32, i32* @y.12
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* %13, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %13, align 4
  %69 = load i32, i32* @x.11
  %70 = load i32, i32* @y.12
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %26

; <label>:77:                                     ; preds = %26
  %78 = load i32, i32* @x.11
  %79 = load i32, i32* @y.12
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load i32, i32* @x.11
  %87 = load i32, i32* @y.12
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %94 = alloca %class.PolynomialSpace*, align 8
  %95 = alloca %"class.std::vector.5"*, align 8
  %96 = alloca i32, align 4
  store %class.PolynomialSpace* %0, %class.PolynomialSpace** %94, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %95, align 8
  %97 = load %class.PolynomialSpace*, %class.PolynomialSpace** %94, align 8
  %98 = load %"class.std::vector.5"*, %"class.std::vector.5"** %95, align 8
  %99 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %97, i32 0, i32 2
  %100 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIjSaIjEEaSERKS1_(%"class.std::vector.5"* %99, %"class.std::vector.5"* dereferenceable(24) %98)
  store i32 0, i32* %96, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %101 = load i32, i32* %13, align 4
  %102 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %14, i32 0, i32 3
  %103 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %14, i32 0, i32 2
  %104 = load i32, i32* %13, align 4
  %105 = zext i32 %104 to i64
  %106 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %103, i64 %105)
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  %109 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %102, i64 %108)
  store i32 %101, i32* %109, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  %110 = load i32, i32* %13, align 4
  %_ = sub i32 0, %110
  %gen = add i32 %_, 1
  %111 = add i32 %110, 1
  store i32 %111, i32* %13, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIjSaIjEEaSERKS1_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %15 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %16 = icmp ne %"class.std::vector.5"* %15, %14
  br i1 %16, label %17, label %185

; <label>:17:                                     ; preds = %2
  %18 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %19 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %18)
  store i64 %19, i64* %5, align 8
  %20 = load i64, i64* %5, align 8
  %21 = call i64 @_ZNKSt6vectorIjSaIjEE8capacityEv(%"class.std::vector.5"* %14)
  %22 = icmp ugt i64 %20, %21
  br i1 %22, label %23, label %100

; <label>:23:                                     ; preds = %17
  %24 = load i32, i32* @x.13
  %25 = load i32, i32* @y.14
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = load i64, i64* %5, align 8
  %33 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %34 = call i32* @_ZNKSt6vectorIjSaIjEE5beginEv(%"class.std::vector.5"* %33)
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store i32* %34, i32** %35, align 8
  %36 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %37 = call i32* @_ZNKSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"* %36)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store i32* %37, i32** %38, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = call i32* @_ZNSt6vectorIjSaIjEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKjS1_EEEEPjmT_S9_(%"class.std::vector.5"* %14, i64 %32, i32* %40, i32* %42)
  store i32* %43, i32** %6, align 8
  %44 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %44, i32 0, i32 0
  %46 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %45 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %50 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %51, i32 0, i32 1
  %53 = load i32*, i32** %52, align 8
  %54 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %55 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %54)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %48, i32* %53, %"class.std::allocator.7"* dereferenceable(1) %55)
  %56 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %57 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %58 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %63 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %64, i32 0, i32 2
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %67, i32 0, i32 0
  %69 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %68 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %69, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = ptrtoint i32* %66 to i64
  %73 = ptrtoint i32* %71 to i64
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, 4
  call void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.6"* %56, i32* %61, i64 %75)
  %76 = load i32*, i32** %6, align 8
  %77 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %78 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %79, i32 0, i32 0
  store i32* %76, i32** %80, align 8
  %81 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %82 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %83, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = load i64, i64* %5, align 8
  %87 = getelementptr inbounds i32, i32* %85, i64 %86
  %88 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %89 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %90, i32 0, i32 2
  store i32* %87, i32** %91, align 8
  %92 = load i32, i32* @x.13
  %93 = load i32, i32* @y.14
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %173

; <label>:100:                                    ; preds = %17
  %101 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %14)
  %102 = load i64, i64* %5, align 8
  %103 = icmp uge i64 %101, %102
  br i1 %103, label %104, label %129

; <label>:104:                                    ; preds = %100
  %105 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %106 = call i32* @_ZNKSt6vectorIjSaIjEE5beginEv(%"class.std::vector.5"* %105)
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store i32* %106, i32** %107, align 8
  %108 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %109 = call i32* @_ZNKSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"* %108)
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store i32* %109, i32** %110, align 8
  %111 = call i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.5"* %14)
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %12, i32 0, i32 0
  store i32* %111, i32** %112, align 8
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %12, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEENS1_IPjS6_EEET0_T_SB_SA_(i32* %114, i32* %116, i32* %118)
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %9, i32 0, i32 0
  store i32* %119, i32** %120, align 8
  %121 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"* %14)
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %13, i32 0, i32 0
  store i32* %121, i32** %122, align 8
  %123 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %124 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %123)
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %9, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %13, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEjEvT_S7_RSaIT0_E(i32* %126, i32* %128, %"class.std::allocator.7"* dereferenceable(1) %124)
  br label %172

; <label>:129:                                    ; preds = %100
  %130 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %131 = bitcast %"class.std::vector.5"* %130 to %"struct.std::_Vector_base.6"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %131, i32 0, i32 0
  %133 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %132 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %133, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %137 = bitcast %"class.std::vector.5"* %136 to %"struct.std::_Vector_base.6"*
  %138 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %137, i32 0, i32 0
  %139 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %138 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %139, i32 0, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %14)
  %143 = getelementptr inbounds i32, i32* %141, i64 %142
  %144 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %145 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %144, i32 0, i32 0
  %146 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %145 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %147 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %146, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = call i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32* %135, i32* %143, i32* %148)
  %150 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %151 = bitcast %"class.std::vector.5"* %150 to %"struct.std::_Vector_base.6"*
  %152 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %151, i32 0, i32 0
  %153 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %152 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %154 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %153, i32 0, i32 0
  %155 = load i32*, i32** %154, align 8
  %156 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %14)
  %157 = getelementptr inbounds i32, i32* %155, i64 %156
  %158 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %159 = bitcast %"class.std::vector.5"* %158 to %"struct.std::_Vector_base.6"*
  %160 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %159, i32 0, i32 0
  %161 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %160 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %162 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %161, i32 0, i32 1
  %163 = load i32*, i32** %162, align 8
  %164 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %164, i32 0, i32 0
  %166 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %165 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %166, i32 0, i32 1
  %168 = load i32*, i32** %167, align 8
  %169 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %170 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %169)
  %171 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %157, i32* %163, i32* %168, %"class.std::allocator.7"* dereferenceable(1) %170)
  br label %172

; <label>:172:                                    ; preds = %129, %104
  br label %173

; <label>:173:                                    ; preds = %172, %originalBBpart2
  %174 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %174, i32 0, i32 0
  %176 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %175 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %176, i32 0, i32 0
  %178 = load i32*, i32** %177, align 8
  %179 = load i64, i64* %5, align 8
  %180 = getelementptr inbounds i32, i32* %178, i64 %179
  %181 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %182 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %181, i32 0, i32 0
  %183 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %182 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %184 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %183, i32 0, i32 1
  store i32* %180, i32** %184, align 8
  br label %185

; <label>:185:                                    ; preds = %173, %2
  ret %"class.std::vector.5"* %14

originalBBalteredBB:                              ; preds = %originalBB, %23
  %186 = load i64, i64* %5, align 8
  %187 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %188 = call i32* @_ZNKSt6vectorIjSaIjEE5beginEv(%"class.std::vector.5"* %187)
  %189 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store i32* %188, i32** %189, align 8
  %190 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %191 = call i32* @_ZNKSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"* %190)
  %192 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store i32* %191, i32** %192, align 8
  %193 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %194 = load i32*, i32** %193, align 8
  %195 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %196 = load i32*, i32** %195, align 8
  %197 = call i32* @_ZNSt6vectorIjSaIjEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKjS1_EEEEPjmT_S9_(%"class.std::vector.5"* %14, i64 %186, i32* %194, i32* %196)
  store i32* %197, i32** %6, align 8
  %198 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %199 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %198, i32 0, i32 0
  %200 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %199 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %200, i32 0, i32 0
  %202 = load i32*, i32** %201, align 8
  %203 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %204 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %203, i32 0, i32 0
  %205 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %204 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %205, i32 0, i32 1
  %207 = load i32*, i32** %206, align 8
  %208 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %209 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %208)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %202, i32* %207, %"class.std::allocator.7"* dereferenceable(1) %209)
  %210 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %211 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %212 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %211, i32 0, i32 0
  %213 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %212 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %213, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %217 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %216, i32 0, i32 0
  %218 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %217 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %218, i32 0, i32 2
  %220 = load i32*, i32** %219, align 8
  %221 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %222 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %221, i32 0, i32 0
  %223 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %222 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %224 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %223, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = ptrtoint i32* %220 to i64
  %227 = ptrtoint i32* %225 to i64
  %_ = sub i64 0, %226
  %gen = add i64 %_, %227
  %228 = sub i64 %226, %227
  %229 = sdiv exact i64 %228, 4
  call void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.6"* %210, i32* %215, i64 %229)
  %230 = load i32*, i32** %6, align 8
  %231 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %232 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %231, i32 0, i32 0
  %233 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %232 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %233, i32 0, i32 0
  store i32* %230, i32** %234, align 8
  %235 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %236 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %235, i32 0, i32 0
  %237 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %236 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %238 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %237, i32 0, i32 0
  %239 = load i32*, i32** %238, align 8
  %240 = load i64, i64* %5, align 8
  %241 = getelementptr inbounds i32, i32* %239, i64 %240
  %242 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %242, i32 0, i32 0
  %244 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %243 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %244, i32 0, i32 2
  store i32* %241, i32** %245, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = ptrtoint i32* %8 to i64
  %15 = ptrtoint i32* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 4
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  ret i32* %12
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi1EE7computeERK5PointILi1EERSt6vectorIdSaIdEERS5_I6TensorILi1ELi1EESaISA_EERS5_IS9_ILi2ELi1EESaISE_EE(%class.PolynomialSpace*, %class.Point* dereferenceable(8), %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.12"* dereferenceable(24), %"class.std::vector.17"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.PolynomialSpace*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::vector.0"*, align 8
  %9 = alloca %"class.std::vector.12"*, align 8
  %10 = alloca %"class.std::vector.17"*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca %class.Table, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*
  %19 = alloca i32
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  store %class.PolynomialSpace* %0, %class.PolynomialSpace** %6, align 8
  store %class.Point* %1, %class.Point** %7, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.12"* %3, %"class.std::vector.12"** %9, align 8
  store %"class.std::vector.17"* %4, %"class.std::vector.17"** %10, align 8
  %44 = load %class.PolynomialSpace*, %class.PolynomialSpace** %6, align 8
  %45 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 0
  %46 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %45)
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i8 0, i8* %13, align 1
  store i8 0, i8* %14, align 1
  store i8 0, i8* %15, align 1
  %48 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %49 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %48)
  %50 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  %53 = icmp eq i64 %49, %52
  br i1 %53, label %54, label %71

; <label>:54:                                     ; preds = %5
  %55 = load i32, i32* @x.19
  %56 = load i32, i32* @y.20
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %54, %originalBBalteredBB
  store i8 1, i8* %13, align 1
  store i32 1, i32* %12, align 4
  %63 = load i32, i32* @x.19
  %64 = load i32, i32* @y.20
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %71

; <label>:71:                                     ; preds = %originalBBpart2, %5
  %72 = load i32, i32* @x.19
  %73 = load i32, i32* @y.20
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %71, %originalBB1alteredBB
  %80 = load %"class.std::vector.12"*, %"class.std::vector.12"** %9, align 8
  %81 = call i64 @_ZNKSt6vectorI6TensorILi1ELi1EESaIS1_EE4sizeEv(%"class.std::vector.12"* %80)
  %82 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = zext i32 %83 to i64
  %85 = icmp eq i64 %81, %84
  %86 = load i32, i32* @x.19
  %87 = load i32, i32* @y.20
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %85, label %94, label %111

; <label>:94:                                     ; preds = %originalBBpart24
  %95 = load i32, i32* @x.19
  %96 = load i32, i32* @y.20
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %94, %originalBB6alteredBB
  store i8 1, i8* %14, align 1
  store i32 2, i32* %12, align 4
  %103 = load i32, i32* @x.19
  %104 = load i32, i32* @y.20
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %111

; <label>:111:                                    ; preds = %originalBBpart28, %originalBBpart24
  %112 = load %"class.std::vector.17"*, %"class.std::vector.17"** %10, align 8
  %113 = call i64 @_ZNKSt6vectorI6TensorILi2ELi1EESaIS1_EE4sizeEv(%"class.std::vector.17"* %112)
  %114 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = zext i32 %115 to i64
  %117 = icmp eq i64 %113, %116
  br i1 %117, label %118, label %119

; <label>:118:                                    ; preds = %111
  store i8 1, i8* %15, align 1
  store i32 3, i32* %12, align 4
  br label %119

; <label>:119:                                    ; preds = %118, %111
  %120 = load i32, i32* %11, align 4
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEEC2Ejj(%class.Table* %16, i32 1, i32 %120)
  store i32 0, i32* %17, align 4
  br label %121

; <label>:121:                                    ; preds = %282, %119
  %122 = load i32, i32* @x.19
  %123 = load i32, i32* @y.20
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %121, %originalBB10alteredBB
  %130 = load i32, i32* %17, align 4
  %131 = bitcast %class.Table* %16 to %class.TableBase*
  %132 = load i32, i32* @x.19
  %133 = load i32, i32* @y.20
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %140 = invoke dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE4sizeEv(%class.TableBase* %131)
          to label %141 unwind label %277

; <label>:141:                                    ; preds = %originalBBpart212
  %142 = load i32, i32* @x.19
  %143 = load i32, i32* @y.20
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %141, %originalBB14alteredBB
  %150 = bitcast %class.TableIndices* %140 to %class.TableIndicesBase*
  %151 = load i32, i32* @x.19
  %152 = load i32, i32* @y.20
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %159 = invoke i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %150, i32 0)
          to label %160 unwind label %277

; <label>:160:                                    ; preds = %originalBBpart216
  %161 = load i32, i32* @x.19
  %162 = load i32, i32* @y.20
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %160, %originalBB18alteredBB
  %169 = icmp ult i32 %130, %159
  %170 = load i32, i32* @x.19
  %171 = load i32, i32* @y.20
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %169, label %178, label %285

; <label>:178:                                    ; preds = %originalBBpart220
  store i32 0, i32* %20, align 4
  br label %179

; <label>:179:                                    ; preds = %originalBBpart247, %178
  %180 = load i32, i32* @x.19
  %181 = load i32, i32* @y.20
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %179, %originalBB22alteredBB
  %188 = load i32, i32* %20, align 4
  %189 = bitcast %class.Table* %16 to %class.TableBase*
  %190 = load i32, i32* @x.19
  %191 = load i32, i32* @y.20
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %198 = invoke dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE4sizeEv(%class.TableBase* %189)
          to label %199 unwind label %277

; <label>:199:                                    ; preds = %originalBBpart224
  %200 = bitcast %class.TableIndices* %198 to %class.TableIndicesBase*
  %201 = invoke i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %200, i32 1)
          to label %202 unwind label %277

; <label>:202:                                    ; preds = %199
  %203 = icmp ult i32 %188, %201
  br i1 %203, label %204, label %281

; <label>:204:                                    ; preds = %202
  %205 = load i32, i32* %17, align 4
  %206 = load i32, i32* %20, align 4
  %207 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZN5TableILi2ESt6vectorIdSaIdEEEclEjj(%class.Table* %16, i32 %205, i32 %206)
          to label %208 unwind label %277

; <label>:208:                                    ; preds = %204
  %209 = load i32, i32* %12, align 4
  %210 = zext i32 %209 to i64
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEmd(%"class.std::vector.0"* %207, i64 %210, double 0.000000e+00)
          to label %211 unwind label %277

; <label>:211:                                    ; preds = %208
  %212 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 0
  %213 = load i32, i32* %20, align 4
  %214 = zext i32 %213 to i64
  %215 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %212, i64 %214)
          to label %216 unwind label %277

; <label>:216:                                    ; preds = %211
  %217 = load i32, i32* @x.19
  %218 = load i32, i32* @y.20
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %216, %originalBB26alteredBB
  %225 = load %class.Point*, %class.Point** %7, align 8
  %226 = load i32, i32* %17, align 4
  %227 = load i32, i32* @x.19
  %228 = load i32, i32* @y.20
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %235 = invoke double @_ZNK5PointILi1EEclEj(%class.Point* %225, i32 %226)
          to label %236 unwind label %277

; <label>:236:                                    ; preds = %originalBBpart228
  %237 = load i32, i32* %17, align 4
  %238 = load i32, i32* %20, align 4
  %239 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZN5TableILi2ESt6vectorIdSaIdEEEclEjj(%class.Table* %16, i32 %237, i32 %238)
          to label %240 unwind label %277

; <label>:240:                                    ; preds = %236
  %241 = load i32, i32* @x.19
  %242 = load i32, i32* @y.20
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %240, %originalBB30alteredBB
  %249 = load i32, i32* @x.19
  %250 = load i32, i32* @y.20
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %215, double %235, %"class.std::vector.0"* dereferenceable(24) %239)
          to label %257 unwind label %277

; <label>:257:                                    ; preds = %originalBBpart232
  br label %258

; <label>:258:                                    ; preds = %257
  %259 = load i32, i32* @x.19
  %260 = load i32, i32* @y.20
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %258, %originalBB34alteredBB
  %267 = load i32, i32* %20, align 4
  %268 = add i32 %267, 1
  store i32 %268, i32* %20, align 4
  %269 = load i32, i32* @x.19
  %270 = load i32, i32* @y.20
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart247, label %originalBB34alteredBB

originalBBpart247:                                ; preds = %originalBB34
  br label %179

; <label>:277:                                    ; preds = %930, %927, %originalBBpart2268, %899, %896, %originalBBpart2244, %811, %originalBBpart2160, %originalBBpart2156, %597, %594, %originalBBpart2136, %550, %401, %391, %originalBBpart282, %originalBBpart278, %originalBBpart274, %originalBBpart232, %236, %originalBBpart228, %211, %208, %204, %199, %originalBBpart224, %originalBBpart216, %originalBBpart212
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %18, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %19, align 4
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %16)
          to label %1003 unwind label %1025

; <label>:281:                                    ; preds = %202
  br label %282

; <label>:282:                                    ; preds = %281
  %283 = load i32, i32* %17, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %17, align 4
  br label %121

; <label>:285:                                    ; preds = %originalBBpart220
  %286 = load i32, i32* @x.19
  %287 = load i32, i32* @y.20
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %285, %originalBB49alteredBB
  %294 = load i8, i8* %13, align 1
  %295 = trunc i8 %294 to i1
  %296 = load i32, i32* @x.19
  %297 = load i32, i32* @y.20
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %295, label %304, label %466

; <label>:304:                                    ; preds = %originalBBpart251
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  br label %305

; <label>:305:                                    ; preds = %462, %304
  %306 = load i32, i32* %22, align 4
  %307 = icmp ult i32 %306, 1
  br i1 %307, label %308, label %465

; <label>:308:                                    ; preds = %305
  store i32 0, i32* %23, align 4
  br label %309

; <label>:309:                                    ; preds = %originalBBpart2103, %308
  %310 = load i32, i32* %23, align 4
  %311 = icmp ult i32 %310, 1
  br i1 %311, label %312, label %445

; <label>:312:                                    ; preds = %309
  store i32 0, i32* %24, align 4
  br label %313

; <label>:313:                                    ; preds = %originalBBpart287, %312
  %314 = load i32, i32* @x.19
  %315 = load i32, i32* @y.20
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %313, %originalBB53alteredBB
  %322 = load i32, i32* %24, align 4
  %323 = load i32, i32* %11, align 4
  %324 = load i32, i32* %23, align 4
  %325 = sub i32 %323, %324
  %326 = load i32, i32* %22, align 4
  %327 = sub i32 %325, %326
  %328 = icmp ult i32 %322, %327
  %329 = load i32, i32* @x.19
  %330 = load i32, i32* @y.20
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart270, label %originalBB53alteredBB

originalBBpart270:                                ; preds = %originalBB53
  br i1 %328, label %337, label %425

; <label>:337:                                    ; preds = %originalBBpart270
  %338 = load i32, i32* @x.19
  %339 = load i32, i32* @y.20
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %337, %originalBB72alteredBB
  %346 = load i32, i32* @x.19
  %347 = load i32, i32* @y.20
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %25, %class.Table* %16, i32 0)
          to label %354 unwind label %277

; <label>:354:                                    ; preds = %originalBBpart274
  %355 = load i32, i32* @x.19
  %356 = load i32, i32* @y.20
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %354, %originalBB76alteredBB
  %363 = load i32, i32* %24, align 4
  %364 = load i32, i32* @x.19
  %365 = load i32, i32* @y.20
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  %372 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %25, i32 %363)
          to label %373 unwind label %277

; <label>:373:                                    ; preds = %originalBBpart278
  %374 = load i32, i32* @x.19
  %375 = load i32, i32* @y.20
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %373, %originalBB80alteredBB
  %382 = load i32, i32* @x.19
  %383 = load i32, i32* @y.20
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  %390 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %372, i64 0)
          to label %391 unwind label %277

; <label>:391:                                    ; preds = %originalBBpart282
  %392 = load double, double* %390, align 8
  %393 = fmul double %392, 1.000000e+00
  %394 = fmul double %393, 1.000000e+00
  %395 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %396 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 3
  %397 = load i32, i32* %21, align 4
  %398 = add i32 %397, 1
  store i32 %398, i32* %21, align 4
  %399 = zext i32 %397 to i64
  %400 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %396, i64 %399)
          to label %401 unwind label %277

; <label>:401:                                    ; preds = %391
  %402 = load i32, i32* %400, align 4
  %403 = zext i32 %402 to i64
  %404 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %395, i64 %403)
          to label %405 unwind label %277

; <label>:405:                                    ; preds = %401
  store double %394, double* %404, align 8
  br label %406

; <label>:406:                                    ; preds = %405
  %407 = load i32, i32* @x.19
  %408 = load i32, i32* @y.20
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %406, %originalBB84alteredBB
  %415 = load i32, i32* %24, align 4
  %416 = add i32 %415, 1
  store i32 %416, i32* %24, align 4
  %417 = load i32, i32* @x.19
  %418 = load i32, i32* @y.20
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart287, label %originalBB84alteredBB

originalBBpart287:                                ; preds = %originalBB84
  br label %313

; <label>:425:                                    ; preds = %originalBBpart270
  br label %426

; <label>:426:                                    ; preds = %425
  %427 = load i32, i32* @x.19
  %428 = load i32, i32* @y.20
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %426, %originalBB89alteredBB
  %435 = load i32, i32* %23, align 4
  %436 = add i32 %435, 1
  store i32 %436, i32* %23, align 4
  %437 = load i32, i32* @x.19
  %438 = load i32, i32* @y.20
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBBpart2103, label %originalBB89alteredBB

originalBBpart2103:                               ; preds = %originalBB89
  br label %309

; <label>:445:                                    ; preds = %309
  %446 = load i32, i32* @x.19
  %447 = load i32, i32* @y.20
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %445, %originalBB105alteredBB
  %454 = load i32, i32* @x.19
  %455 = load i32, i32* @y.20
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %462

; <label>:462:                                    ; preds = %originalBBpart2107
  %463 = load i32, i32* %22, align 4
  %464 = add i32 %463, 1
  store i32 %464, i32* %22, align 4
  br label %305

; <label>:465:                                    ; preds = %305
  br label %466

; <label>:466:                                    ; preds = %465, %originalBBpart251
  %467 = load i32, i32* @x.19
  %468 = load i32, i32* @y.20
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %466, %originalBB109alteredBB
  %475 = load i8, i8* %14, align 1
  %476 = trunc i8 %475 to i1
  %477 = load i32, i32* @x.19
  %478 = load i32, i32* @y.20
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %476, label %485, label %727

; <label>:485:                                    ; preds = %originalBBpart2111
  store i32 0, i32* %26, align 4
  store i32 0, i32* %27, align 4
  br label %486

; <label>:486:                                    ; preds = %723, %485
  %487 = load i32, i32* @x.19
  %488 = load i32, i32* @y.20
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %486, %originalBB113alteredBB
  %495 = load i32, i32* %27, align 4
  %496 = icmp ult i32 %495, 1
  %497 = load i32, i32* @x.19
  %498 = load i32, i32* @y.20
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br i1 %496, label %505, label %726

; <label>:505:                                    ; preds = %originalBBpart2115
  store i32 0, i32* %28, align 4
  br label %506

; <label>:506:                                    ; preds = %originalBBpart2195, %505
  %507 = load i32, i32* %28, align 4
  %508 = icmp ult i32 %507, 1
  br i1 %508, label %509, label %722

; <label>:509:                                    ; preds = %506
  %510 = load i32, i32* @x.19
  %511 = load i32, i32* @y.20
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %509, %originalBB117alteredBB
  store i32 0, i32* %29, align 4
  %518 = load i32, i32* @x.19
  %519 = load i32, i32* @y.20
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %526

; <label>:526:                                    ; preds = %699, %originalBBpart2119
  %527 = load i32, i32* @x.19
  %528 = load i32, i32* @y.20
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %526, %originalBB121alteredBB
  %535 = load i32, i32* %29, align 4
  %536 = load i32, i32* %11, align 4
  %537 = load i32, i32* %28, align 4
  %538 = sub i32 %536, %537
  %539 = load i32, i32* %27, align 4
  %540 = sub i32 %538, %539
  %541 = icmp ult i32 %535, %540
  %542 = load i32, i32* @x.19
  %543 = load i32, i32* @y.20
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBBpart2128, label %originalBB121alteredBB

originalBBpart2128:                               ; preds = %originalBB121
  br i1 %541, label %550, label %702

; <label>:550:                                    ; preds = %originalBBpart2128
  %551 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 3
  %552 = load i32, i32* %26, align 4
  %553 = add i32 %552, 1
  store i32 %553, i32* %26, align 4
  %554 = zext i32 %552 to i64
  %555 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %551, i64 %554)
          to label %556 unwind label %277

; <label>:556:                                    ; preds = %550
  %557 = load i32, i32* @x.19
  %558 = load i32, i32* @y.20
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %556, %originalBB130alteredBB
  %565 = load i32, i32* %555, align 4
  store i32 %565, i32* %30, align 4
  store i32 0, i32* %31, align 4
  %566 = load i32, i32* @x.19
  %567 = load i32, i32* @y.20
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %574

; <label>:574:                                    ; preds = %originalBBpart2180, %originalBBpart2132
  %575 = load i32, i32* %31, align 4
  %576 = icmp ult i32 %575, 1
  br i1 %576, label %577, label %682

; <label>:577:                                    ; preds = %574
  %578 = load i32, i32* @x.19
  %579 = load i32, i32* @y.20
  %580 = sub i32 %578, 1
  %581 = mul i32 %578, %580
  %582 = urem i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = icmp slt i32 %579, 10
  %585 = or i1 %583, %584
  br i1 %585, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %577, %originalBB134alteredBB
  %586 = load i32, i32* @x.19
  %587 = load i32, i32* @y.20
  %588 = sub i32 %586, 1
  %589 = mul i32 %586, %588
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %587, 10
  %593 = or i1 %591, %592
  br i1 %593, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %32, %class.Table* %16, i32 0)
          to label %594 unwind label %277

; <label>:594:                                    ; preds = %originalBBpart2136
  %595 = load i32, i32* %29, align 4
  %596 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %32, i32 %595)
          to label %597 unwind label %277

; <label>:597:                                    ; preds = %594
  %598 = load i32, i32* %31, align 4
  %599 = icmp eq i32 %598, 0
  %600 = select i1 %599, i32 1, i32 0
  %601 = sext i32 %600 to i64
  %602 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %596, i64 %601)
          to label %603 unwind label %277

; <label>:603:                                    ; preds = %597
  %604 = load i32, i32* @x.19
  %605 = load i32, i32* @y.20
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %603, %originalBB138alteredBB
  %612 = load double, double* %602, align 8
  %613 = fmul double %612, 1.000000e+00
  %614 = fmul double %613, 1.000000e+00
  %615 = load %"class.std::vector.12"*, %"class.std::vector.12"** %9, align 8
  %616 = load i32, i32* %30, align 4
  %617 = zext i32 %616 to i64
  %618 = load i32, i32* @x.19
  %619 = load i32, i32* @y.20
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart2156, label %originalBB138alteredBB

originalBBpart2156:                               ; preds = %originalBB138
  %626 = invoke dereferenceable(8) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi1EESaIS1_EEixEm(%"class.std::vector.12"* %615, i64 %617)
          to label %627 unwind label %277

; <label>:627:                                    ; preds = %originalBBpart2156
  %628 = load i32, i32* @x.19
  %629 = load i32, i32* @y.20
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %627, %originalBB158alteredBB
  %636 = load i32, i32* %31, align 4
  %637 = load i32, i32* @x.19
  %638 = load i32, i32* @y.20
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  %645 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %626, i32 %636)
          to label %646 unwind label %277

; <label>:646:                                    ; preds = %originalBBpart2160
  %647 = load i32, i32* @x.19
  %648 = load i32, i32* @y.20
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %646, %originalBB162alteredBB
  store double %614, double* %645, align 8
  %655 = load i32, i32* @x.19
  %656 = load i32, i32* @y.20
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br label %663

; <label>:663:                                    ; preds = %originalBBpart2164
  %664 = load i32, i32* @x.19
  %665 = load i32, i32* @y.20
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %663, %originalBB166alteredBB
  %672 = load i32, i32* %31, align 4
  %673 = add i32 %672, 1
  store i32 %673, i32* %31, align 4
  %674 = load i32, i32* @x.19
  %675 = load i32, i32* @y.20
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBBpart2180, label %originalBB166alteredBB

originalBBpart2180:                               ; preds = %originalBB166
  br label %574

; <label>:682:                                    ; preds = %574
  %683 = load i32, i32* @x.19
  %684 = load i32, i32* @y.20
  %685 = sub i32 %683, 1
  %686 = mul i32 %683, %685
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %688, %689
  br i1 %690, label %originalBB182, label %originalBB182alteredBB

originalBB182:                                    ; preds = %682, %originalBB182alteredBB
  %691 = load i32, i32* @x.19
  %692 = load i32, i32* @y.20
  %693 = sub i32 %691, 1
  %694 = mul i32 %691, %693
  %695 = urem i32 %694, 2
  %696 = icmp eq i32 %695, 0
  %697 = icmp slt i32 %692, 10
  %698 = or i1 %696, %697
  br i1 %698, label %originalBBpart2184, label %originalBB182alteredBB

originalBBpart2184:                               ; preds = %originalBB182
  br label %699

; <label>:699:                                    ; preds = %originalBBpart2184
  %700 = load i32, i32* %29, align 4
  %701 = add i32 %700, 1
  store i32 %701, i32* %29, align 4
  br label %526

; <label>:702:                                    ; preds = %originalBBpart2128
  br label %703

; <label>:703:                                    ; preds = %702
  %704 = load i32, i32* @x.19
  %705 = load i32, i32* @y.20
  %706 = sub i32 %704, 1
  %707 = mul i32 %704, %706
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %705, 10
  %711 = or i1 %709, %710
  br i1 %711, label %originalBB186, label %originalBB186alteredBB

originalBB186:                                    ; preds = %703, %originalBB186alteredBB
  %712 = load i32, i32* %28, align 4
  %713 = add i32 %712, 1
  store i32 %713, i32* %28, align 4
  %714 = load i32, i32* @x.19
  %715 = load i32, i32* @y.20
  %716 = sub i32 %714, 1
  %717 = mul i32 %714, %716
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %715, 10
  %721 = or i1 %719, %720
  br i1 %721, label %originalBBpart2195, label %originalBB186alteredBB

originalBBpart2195:                               ; preds = %originalBB186
  br label %506

; <label>:722:                                    ; preds = %506
  br label %723

; <label>:723:                                    ; preds = %722
  %724 = load i32, i32* %27, align 4
  %725 = add i32 %724, 1
  store i32 %725, i32* %27, align 4
  br label %486

; <label>:726:                                    ; preds = %originalBBpart2115
  br label %727

; <label>:727:                                    ; preds = %726, %originalBBpart2111
  %728 = load i8, i8* %15, align 1
  %729 = trunc i8 %728 to i1
  br i1 %729, label %730, label %986

; <label>:730:                                    ; preds = %727
  store i32 0, i32* %33, align 4
  store i32 0, i32* %34, align 4
  br label %731

; <label>:731:                                    ; preds = %966, %730
  %732 = load i32, i32* @x.19
  %733 = load i32, i32* @y.20
  %734 = sub i32 %732, 1
  %735 = mul i32 %732, %734
  %736 = urem i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = icmp slt i32 %733, 10
  %739 = or i1 %737, %738
  br i1 %739, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %731, %originalBB197alteredBB
  %740 = load i32, i32* %34, align 4
  %741 = icmp ult i32 %740, 1
  %742 = load i32, i32* @x.19
  %743 = load i32, i32* @y.20
  %744 = sub i32 %742, 1
  %745 = mul i32 %742, %744
  %746 = urem i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = icmp slt i32 %743, 10
  %749 = or i1 %747, %748
  br i1 %749, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br i1 %741, label %750, label %969

; <label>:750:                                    ; preds = %originalBBpart2199
  %751 = load i32, i32* @x.19
  %752 = load i32, i32* @y.20
  %753 = sub i32 %751, 1
  %754 = mul i32 %751, %753
  %755 = urem i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = icmp slt i32 %752, 10
  %758 = or i1 %756, %757
  br i1 %758, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %750, %originalBB201alteredBB
  store i32 0, i32* %35, align 4
  %759 = load i32, i32* @x.19
  %760 = load i32, i32* @y.20
  %761 = sub i32 %759, 1
  %762 = mul i32 %759, %761
  %763 = urem i32 %762, 2
  %764 = icmp eq i32 %763, 0
  %765 = icmp slt i32 %760, 10
  %766 = or i1 %764, %765
  br i1 %766, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %767

; <label>:767:                                    ; preds = %962, %originalBBpart2203
  %768 = load i32, i32* @x.19
  %769 = load i32, i32* @y.20
  %770 = sub i32 %768, 1
  %771 = mul i32 %768, %770
  %772 = urem i32 %771, 2
  %773 = icmp eq i32 %772, 0
  %774 = icmp slt i32 %769, 10
  %775 = or i1 %773, %774
  br i1 %775, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %767, %originalBB205alteredBB
  %776 = load i32, i32* %35, align 4
  %777 = icmp ult i32 %776, 1
  %778 = load i32, i32* @x.19
  %779 = load i32, i32* @y.20
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br i1 %777, label %786, label %965

; <label>:786:                                    ; preds = %originalBBpart2207
  %787 = load i32, i32* @x.19
  %788 = load i32, i32* @y.20
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %786, %originalBB209alteredBB
  store i32 0, i32* %36, align 4
  %795 = load i32, i32* @x.19
  %796 = load i32, i32* @y.20
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br label %803

; <label>:803:                                    ; preds = %942, %originalBBpart2211
  %804 = load i32, i32* %36, align 4
  %805 = load i32, i32* %11, align 4
  %806 = load i32, i32* %35, align 4
  %807 = sub i32 %805, %806
  %808 = load i32, i32* %34, align 4
  %809 = sub i32 %807, %808
  %810 = icmp ult i32 %804, %809
  br i1 %810, label %811, label %945

; <label>:811:                                    ; preds = %803
  %812 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 3
  %813 = load i32, i32* %33, align 4
  %814 = add i32 %813, 1
  store i32 %814, i32* %33, align 4
  %815 = zext i32 %813 to i64
  %816 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %812, i64 %815)
          to label %817 unwind label %277

; <label>:817:                                    ; preds = %811
  %818 = load i32, i32* %816, align 4
  store i32 %818, i32* %37, align 4
  store i32 0, i32* %38, align 4
  br label %819

; <label>:819:                                    ; preds = %938, %817
  %820 = load i32, i32* @x.19
  %821 = load i32, i32* @y.20
  %822 = sub i32 %820, 1
  %823 = mul i32 %820, %822
  %824 = urem i32 %823, 2
  %825 = icmp eq i32 %824, 0
  %826 = icmp slt i32 %821, 10
  %827 = or i1 %825, %826
  br i1 %827, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %819, %originalBB213alteredBB
  %828 = load i32, i32* %38, align 4
  %829 = icmp ult i32 %828, 1
  %830 = load i32, i32* @x.19
  %831 = load i32, i32* @y.20
  %832 = sub i32 %830, 1
  %833 = mul i32 %830, %832
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %831, 10
  %837 = or i1 %835, %836
  br i1 %837, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br i1 %829, label %838, label %941

; <label>:838:                                    ; preds = %originalBBpart2215
  store i32 0, i32* %39, align 4
  br label %839

; <label>:839:                                    ; preds = %934, %838
  %840 = load i32, i32* @x.19
  %841 = load i32, i32* @y.20
  %842 = sub i32 %840, 1
  %843 = mul i32 %840, %842
  %844 = urem i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = icmp slt i32 %841, 10
  %847 = or i1 %845, %846
  br i1 %847, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %839, %originalBB217alteredBB
  %848 = load i32, i32* %39, align 4
  %849 = icmp ult i32 %848, 1
  %850 = load i32, i32* @x.19
  %851 = load i32, i32* @y.20
  %852 = sub i32 %850, 1
  %853 = mul i32 %850, %852
  %854 = urem i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = icmp slt i32 %851, 10
  %857 = or i1 %855, %856
  br i1 %857, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br i1 %849, label %858, label %937

; <label>:858:                                    ; preds = %originalBBpart2219
  %859 = load i32, i32* @x.19
  %860 = load i32, i32* @y.20
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %858, %originalBB221alteredBB
  %867 = load i32, i32* %38, align 4
  %868 = icmp eq i32 %867, 0
  %869 = select i1 %868, i32 1, i32 0
  %870 = load i32, i32* %39, align 4
  %871 = icmp eq i32 %870, 0
  %872 = select i1 %871, i32 1, i32 0
  %873 = add nsw i32 %869, %872
  store i32 %873, i32* %40, align 4
  %874 = load i32, i32* %38, align 4
  %875 = icmp eq i32 %874, 1
  %876 = select i1 %875, i32 1, i32 0
  %877 = load i32, i32* %39, align 4
  %878 = icmp eq i32 %877, 1
  %879 = select i1 %878, i32 1, i32 0
  %880 = add nsw i32 %876, %879
  store i32 %880, i32* %41, align 4
  %881 = load i32, i32* %38, align 4
  %882 = icmp eq i32 %881, 2
  %883 = select i1 %882, i32 1, i32 0
  %884 = load i32, i32* %39, align 4
  %885 = icmp eq i32 %884, 2
  %886 = select i1 %885, i32 1, i32 0
  %887 = add nsw i32 %883, %886
  store i32 %887, i32* %42, align 4
  %888 = load i32, i32* @x.19
  %889 = load i32, i32* @y.20
  %890 = sub i32 %888, 1
  %891 = mul i32 %888, %890
  %892 = urem i32 %891, 2
  %893 = icmp eq i32 %892, 0
  %894 = icmp slt i32 %889, 10
  %895 = or i1 %893, %894
  br i1 %895, label %originalBBpart2244, label %originalBB221alteredBB

originalBBpart2244:                               ; preds = %originalBB221
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %43, %class.Table* %16, i32 0)
          to label %896 unwind label %277

; <label>:896:                                    ; preds = %originalBBpart2244
  %897 = load i32, i32* %36, align 4
  %898 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %43, i32 %897)
          to label %899 unwind label %277

; <label>:899:                                    ; preds = %896
  %900 = load i32, i32* %40, align 4
  %901 = zext i32 %900 to i64
  %902 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %898, i64 %901)
          to label %903 unwind label %277

; <label>:903:                                    ; preds = %899
  %904 = load i32, i32* @x.19
  %905 = load i32, i32* @y.20
  %906 = sub i32 %904, 1
  %907 = mul i32 %904, %906
  %908 = urem i32 %907, 2
  %909 = icmp eq i32 %908, 0
  %910 = icmp slt i32 %905, 10
  %911 = or i1 %909, %910
  br i1 %911, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %903, %originalBB246alteredBB
  %912 = load double, double* %902, align 8
  %913 = fmul double %912, 1.000000e+00
  %914 = fmul double %913, 1.000000e+00
  %915 = load %"class.std::vector.17"*, %"class.std::vector.17"** %10, align 8
  %916 = load i32, i32* %37, align 4
  %917 = zext i32 %916 to i64
  %918 = load i32, i32* @x.19
  %919 = load i32, i32* @y.20
  %920 = sub i32 %918, 1
  %921 = mul i32 %918, %920
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %919, 10
  %925 = or i1 %923, %924
  br i1 %925, label %originalBBpart2268, label %originalBB246alteredBB

originalBBpart2268:                               ; preds = %originalBB246
  %926 = invoke dereferenceable(8) %class.Tensor.22* @_ZNSt6vectorI6TensorILi2ELi1EESaIS1_EEixEm(%"class.std::vector.17"* %915, i64 %917)
          to label %927 unwind label %277

; <label>:927:                                    ; preds = %originalBBpart2268
  %928 = load i32, i32* %38, align 4
  %929 = invoke dereferenceable(8) %class.Tensor* @_ZN6TensorILi2ELi1EEixEj(%class.Tensor.22* %926, i32 %928)
          to label %930 unwind label %277

; <label>:930:                                    ; preds = %927
  %931 = load i32, i32* %39, align 4
  %932 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %929, i32 %931)
          to label %933 unwind label %277

; <label>:933:                                    ; preds = %930
  store double %914, double* %932, align 8
  br label %934

; <label>:934:                                    ; preds = %933
  %935 = load i32, i32* %39, align 4
  %936 = add i32 %935, 1
  store i32 %936, i32* %39, align 4
  br label %839

; <label>:937:                                    ; preds = %originalBBpart2219
  br label %938

; <label>:938:                                    ; preds = %937
  %939 = load i32, i32* %38, align 4
  %940 = add i32 %939, 1
  store i32 %940, i32* %38, align 4
  br label %819

; <label>:941:                                    ; preds = %originalBBpart2215
  br label %942

; <label>:942:                                    ; preds = %941
  %943 = load i32, i32* %36, align 4
  %944 = add i32 %943, 1
  store i32 %944, i32* %36, align 4
  br label %803

; <label>:945:                                    ; preds = %803
  %946 = load i32, i32* @x.19
  %947 = load i32, i32* @y.20
  %948 = sub i32 %946, 1
  %949 = mul i32 %946, %948
  %950 = urem i32 %949, 2
  %951 = icmp eq i32 %950, 0
  %952 = icmp slt i32 %947, 10
  %953 = or i1 %951, %952
  br i1 %953, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %945, %originalBB270alteredBB
  %954 = load i32, i32* @x.19
  %955 = load i32, i32* @y.20
  %956 = sub i32 %954, 1
  %957 = mul i32 %954, %956
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %955, 10
  %961 = or i1 %959, %960
  br i1 %961, label %originalBBpart2273, label %originalBB270alteredBB

originalBBpart2273:                               ; preds = %originalBB270
  br label %962

; <label>:962:                                    ; preds = %originalBBpart2273
  %963 = load i32, i32* %35, align 4
  %964 = add i32 %963, 1
  store i32 %964, i32* %35, align 4
  br label %767

; <label>:965:                                    ; preds = %originalBBpart2207
  br label %966

; <label>:966:                                    ; preds = %965
  %967 = load i32, i32* %34, align 4
  %968 = add i32 %967, 1
  store i32 %968, i32* %34, align 4
  br label %731

; <label>:969:                                    ; preds = %originalBBpart2199
  %970 = load i32, i32* @x.19
  %971 = load i32, i32* @y.20
  %972 = sub i32 %970, 1
  %973 = mul i32 %970, %972
  %974 = urem i32 %973, 2
  %975 = icmp eq i32 %974, 0
  %976 = icmp slt i32 %971, 10
  %977 = or i1 %975, %976
  br i1 %977, label %originalBB275, label %originalBB275alteredBB

originalBB275:                                    ; preds = %969, %originalBB275alteredBB
  %978 = load i32, i32* @x.19
  %979 = load i32, i32* @y.20
  %980 = sub i32 %978, 1
  %981 = mul i32 %978, %980
  %982 = urem i32 %981, 2
  %983 = icmp eq i32 %982, 0
  %984 = icmp slt i32 %979, 10
  %985 = or i1 %983, %984
  br i1 %985, label %originalBBpart2277, label %originalBB275alteredBB

originalBBpart2277:                               ; preds = %originalBB275
  br label %986

; <label>:986:                                    ; preds = %originalBBpart2277, %727
  %987 = load i32, i32* @x.19
  %988 = load i32, i32* @y.20
  %989 = sub i32 %987, 1
  %990 = mul i32 %987, %989
  %991 = urem i32 %990, 2
  %992 = icmp eq i32 %991, 0
  %993 = icmp slt i32 %988, 10
  %994 = or i1 %992, %993
  br i1 %994, label %originalBB279, label %originalBB279alteredBB

originalBB279:                                    ; preds = %986, %originalBB279alteredBB
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %16)
  %995 = load i32, i32* @x.19
  %996 = load i32, i32* @y.20
  %997 = sub i32 %995, 1
  %998 = mul i32 %995, %997
  %999 = urem i32 %998, 2
  %1000 = icmp eq i32 %999, 0
  %1001 = icmp slt i32 %996, 10
  %1002 = or i1 %1000, %1001
  br i1 %1002, label %originalBBpart2281, label %originalBB279alteredBB

originalBBpart2281:                               ; preds = %originalBB279
  ret void

; <label>:1003:                                   ; preds = %277
  %1004 = load i32, i32* @x.19
  %1005 = load i32, i32* @y.20
  %1006 = sub i32 %1004, 1
  %1007 = mul i32 %1004, %1006
  %1008 = urem i32 %1007, 2
  %1009 = icmp eq i32 %1008, 0
  %1010 = icmp slt i32 %1005, 10
  %1011 = or i1 %1009, %1010
  br i1 %1011, label %originalBB283, label %originalBB283alteredBB

originalBB283:                                    ; preds = %1003, %originalBB283alteredBB
  %1012 = load i32, i32* @x.19
  %1013 = load i32, i32* @y.20
  %1014 = sub i32 %1012, 1
  %1015 = mul i32 %1012, %1014
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1013, 10
  %1019 = or i1 %1017, %1018
  br i1 %1019, label %originalBBpart2285, label %originalBB283alteredBB

originalBBpart2285:                               ; preds = %originalBB283
  br label %1020

; <label>:1020:                                   ; preds = %originalBBpart2285
  %1021 = load i8*, i8** %18, align 8
  %1022 = load i32, i32* %19, align 4
  %1023 = insertvalue { i8*, i32 } undef, i8* %1021, 0
  %1024 = insertvalue { i8*, i32 } %1023, i32 %1022, 1
  resume { i8*, i32 } %1024

; <label>:1025:                                   ; preds = %277
  %1026 = load i32, i32* @x.19
  %1027 = load i32, i32* @y.20
  %1028 = sub i32 %1026, 1
  %1029 = mul i32 %1026, %1028
  %1030 = urem i32 %1029, 2
  %1031 = icmp eq i32 %1030, 0
  %1032 = icmp slt i32 %1027, 10
  %1033 = or i1 %1031, %1032
  br i1 %1033, label %originalBB287, label %originalBB287alteredBB

originalBB287:                                    ; preds = %1025, %originalBB287alteredBB
  %1034 = landingpad { i8*, i32 }
          catch i8* null
  %1035 = extractvalue { i8*, i32 } %1034, 0
  call void @__clang_call_terminate(i8* %1035) #7
  %1036 = load i32, i32* @x.19
  %1037 = load i32, i32* @y.20
  %1038 = sub i32 %1036, 1
  %1039 = mul i32 %1036, %1038
  %1040 = urem i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  %1042 = icmp slt i32 %1037, 10
  %1043 = or i1 %1041, %1042
  br i1 %1043, label %originalBBpart2290, label %originalBB287alteredBB

originalBBpart2290:                               ; preds = %originalBB287
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %54
  store i8 1, i8* %13, align 1
  store i32 1, i32* %12, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %71
  %1044 = load %"class.std::vector.12"*, %"class.std::vector.12"** %9, align 8
  %1045 = call i64 @_ZNKSt6vectorI6TensorILi1ELi1EESaIS1_EE4sizeEv(%"class.std::vector.12"* %1044)
  %1046 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %44, i32 0, i32 1
  %1047 = load i32, i32* %1046, align 8
  %1048 = zext i32 %1047 to i64
  %1049 = icmp eq i64 %1045, %1048
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %94
  store i8 1, i8* %14, align 1
  store i32 2, i32* %12, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %121
  %1050 = load i32, i32* %17, align 4
  %1051 = bitcast %class.Table* %16 to %class.TableBase*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %141
  %1052 = bitcast %class.TableIndices* %140 to %class.TableIndicesBase*
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %160
  %1053 = icmp ult i32 %130, %159
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %179
  %1054 = load i32, i32* %20, align 4
  %1055 = bitcast %class.Table* %16 to %class.TableBase*
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %216
  %1056 = load %class.Point*, %class.Point** %7, align 8
  %1057 = load i32, i32* %17, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %240
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %258
  %1058 = load i32, i32* %20, align 4
  %_ = sub i32 %1058, 1
  %gen = mul i32 %_, 1
  %_35 = sub i32 %1058, 1
  %gen36 = mul i32 %_35, 1
  %_37 = sub i32 %1058, 1
  %gen38 = mul i32 %_37, 1
  %_39 = sub i32 0, %1058
  %gen40 = add i32 %_39, 1
  %_41 = sub i32 0, %1058
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 %1058, 1
  %gen44 = mul i32 %_43, 1
  %_45 = shl i32 %1058, 1
  %1059 = add i32 %1058, 1
  store i32 %1059, i32* %20, align 4
  br label %originalBB34

originalBB49alteredBB:                            ; preds = %originalBB49, %285
  %1060 = load i8, i8* %13, align 1
  %1061 = trunc i8 %1060 to i1
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %313
  %1062 = load i32, i32* %24, align 4
  %1063 = load i32, i32* %11, align 4
  %1064 = load i32, i32* %23, align 4
  %_54 = sub i32 %1063, %1064
  %gen55 = mul i32 %_54, %1064
  %_56 = sub i32 %1063, %1064
  %gen57 = mul i32 %_56, %1064
  %_58 = sub i32 0, %1063
  %gen59 = add i32 %_58, %1064
  %_60 = shl i32 %1063, %1064
  %_61 = sub i32 %1063, %1064
  %gen62 = mul i32 %_61, %1064
  %_63 = sub i32 %1063, %1064
  %gen64 = mul i32 %_63, %1064
  %1065 = sub i32 %1063, %1064
  %1066 = load i32, i32* %22, align 4
  %_65 = sub i32 0, %1065
  %gen66 = add i32 %_65, %1066
  %_67 = sub i32 0, %1065
  %gen68 = add i32 %_67, %1066
  %1067 = sub i32 %1065, %1066
  %1068 = icmp ult i32 %1062, %1067
  br label %originalBB53

originalBB72alteredBB:                            ; preds = %originalBB72, %337
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %354
  %1069 = load i32, i32* %24, align 4
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %373
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %406
  %1070 = load i32, i32* %24, align 4
  %_85 = shl i32 %1070, 1
  %1071 = add i32 %1070, 1
  store i32 %1071, i32* %24, align 4
  br label %originalBB84

originalBB89alteredBB:                            ; preds = %originalBB89, %426
  %1072 = load i32, i32* %23, align 4
  %_90 = shl i32 %1072, 1
  %_91 = shl i32 %1072, 1
  %_92 = sub i32 0, %1072
  %gen93 = add i32 %_92, 1
  %_94 = sub i32 %1072, 1
  %gen95 = mul i32 %_94, 1
  %_96 = sub i32 %1072, 1
  %gen97 = mul i32 %_96, 1
  %_98 = sub i32 %1072, 1
  %gen99 = mul i32 %_98, 1
  %_100 = sub i32 0, %1072
  %gen101 = add i32 %_100, 1
  %1073 = add i32 %1072, 1
  store i32 %1073, i32* %23, align 4
  br label %originalBB89

originalBB105alteredBB:                           ; preds = %originalBB105, %445
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %466
  %1074 = load i8, i8* %14, align 1
  %1075 = trunc i8 %1074 to i1
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %486
  %1076 = load i32, i32* %27, align 4
  %1077 = icmp ult i32 %1076, 1
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %509
  store i32 0, i32* %29, align 4
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %526
  %1078 = load i32, i32* %29, align 4
  %1079 = load i32, i32* %11, align 4
  %1080 = load i32, i32* %28, align 4
  %_122 = sub i32 0, %1079
  %gen123 = add i32 %_122, %1080
  %1081 = sub i32 %1079, %1080
  %1082 = load i32, i32* %27, align 4
  %_124 = sub i32 %1081, %1082
  %gen125 = mul i32 %_124, %1082
  %_126 = shl i32 %1081, %1082
  %1083 = sub i32 %1081, %1082
  %1084 = icmp ult i32 %1078, %1083
  br label %originalBB121

originalBB130alteredBB:                           ; preds = %originalBB130, %556
  %1085 = load i32, i32* %555, align 4
  store i32 %1085, i32* %30, align 4
  store i32 0, i32* %31, align 4
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %577
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %603
  %1086 = load double, double* %602, align 8
  %_139 = fsub double %1086, 1.000000e+00
  %gen140 = fmul double %_139, 1.000000e+00
  %1087 = fmul double %1086, 1.000000e+00
  %_141 = fsub double %1087, 1.000000e+00
  %gen142 = fmul double %_141, 1.000000e+00
  %_143 = fsub double %1087, 1.000000e+00
  %gen144 = fmul double %_143, 1.000000e+00
  %_145 = fsub double -0.000000e+00, %1087
  %gen146 = fadd double %_145, 1.000000e+00
  %_147 = fsub double -0.000000e+00, %1087
  %gen148 = fadd double %_147, 1.000000e+00
  %_149 = fsub double %1087, 1.000000e+00
  %gen150 = fmul double %_149, 1.000000e+00
  %_151 = fsub double %1087, 1.000000e+00
  %gen152 = fmul double %_151, 1.000000e+00
  %_153 = fsub double -0.000000e+00, %1087
  %gen154 = fadd double %_153, 1.000000e+00
  %1088 = fmul double %1087, 1.000000e+00
  %1089 = load %"class.std::vector.12"*, %"class.std::vector.12"** %9, align 8
  %1090 = load i32, i32* %30, align 4
  %1091 = zext i32 %1090 to i64
  br label %originalBB138

originalBB158alteredBB:                           ; preds = %originalBB158, %627
  %1092 = load i32, i32* %31, align 4
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %646
  store double %614, double* %645, align 8
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %663
  %1093 = load i32, i32* %31, align 4
  %_167 = sub i32 0, %1093
  %gen168 = add i32 %_167, 1
  %_169 = shl i32 %1093, 1
  %_170 = sub i32 %1093, 1
  %gen171 = mul i32 %_170, 1
  %_172 = sub i32 0, %1093
  %gen173 = add i32 %_172, 1
  %_174 = sub i32 0, %1093
  %gen175 = add i32 %_174, 1
  %_176 = sub i32 0, %1093
  %gen177 = add i32 %_176, 1
  %_178 = shl i32 %1093, 1
  %1094 = add i32 %1093, 1
  store i32 %1094, i32* %31, align 4
  br label %originalBB166

originalBB182alteredBB:                           ; preds = %originalBB182, %682
  br label %originalBB182

originalBB186alteredBB:                           ; preds = %originalBB186, %703
  %1095 = load i32, i32* %28, align 4
  %_187 = shl i32 %1095, 1
  %_188 = sub i32 0, %1095
  %gen189 = add i32 %_188, 1
  %_190 = sub i32 0, %1095
  %gen191 = add i32 %_190, 1
  %_192 = sub i32 0, %1095
  %gen193 = add i32 %_192, 1
  %1096 = add i32 %1095, 1
  store i32 %1096, i32* %28, align 4
  br label %originalBB186

originalBB197alteredBB:                           ; preds = %originalBB197, %731
  %1097 = load i32, i32* %34, align 4
  %1098 = icmp ult i32 %1097, 1
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %750
  store i32 0, i32* %35, align 4
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %767
  %1099 = load i32, i32* %35, align 4
  %1100 = icmp ult i32 %1099, 1
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %786
  store i32 0, i32* %36, align 4
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %819
  %1101 = load i32, i32* %38, align 4
  %1102 = icmp ult i32 %1101, 1
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %839
  %1103 = load i32, i32* %39, align 4
  %1104 = icmp ult i32 %1103, 1
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %858
  %1105 = load i32, i32* %38, align 4
  %1106 = icmp eq i32 %1105, 0
  %1107 = select i1 %1106, i32 1, i32 0
  %1108 = load i32, i32* %39, align 4
  %1109 = icmp eq i32 %1108, 0
  %1110 = select i1 %1109, i32 1, i32 0
  %_222 = shl i32 %1107, %1110
  %_223 = sub i32 %1107, %1110
  %gen224 = mul i32 %_223, %1110
  %_225 = sub i32 0, %1107
  %gen226 = add i32 %_225, %1110
  %_227 = shl i32 %1107, %1110
  %_228 = shl i32 %1107, %1110
  %_229 = shl i32 %1107, %1110
  %1111 = add nsw i32 %1107, %1110
  store i32 %1111, i32* %40, align 4
  %1112 = load i32, i32* %38, align 4
  %1113 = icmp eq i32 %1112, 1
  %1114 = select i1 %1113, i32 1, i32 0
  %1115 = load i32, i32* %39, align 4
  %1116 = icmp eq i32 %1115, 1
  %1117 = select i1 %1116, i32 1, i32 0
  %_230 = sub i32 0, %1114
  %gen231 = add i32 %_230, %1117
  %_232 = sub i32 %1114, %1117
  %gen233 = mul i32 %_232, %1117
  %_234 = sub i32 %1114, %1117
  %gen235 = mul i32 %_234, %1117
  %_236 = sub i32 %1114, %1117
  %gen237 = mul i32 %_236, %1117
  %_238 = shl i32 %1114, %1117
  %_239 = sub i32 %1114, %1117
  %gen240 = mul i32 %_239, %1117
  %1118 = add nsw i32 %1114, %1117
  store i32 %1118, i32* %41, align 4
  %1119 = load i32, i32* %38, align 4
  %1120 = icmp eq i32 %1119, 2
  %1121 = select i1 %1120, i32 1, i32 0
  %1122 = load i32, i32* %39, align 4
  %1123 = icmp eq i32 %1122, 2
  %1124 = select i1 %1123, i32 1, i32 0
  %_241 = sub i32 %1121, %1124
  %gen242 = mul i32 %_241, %1124
  %1125 = add nsw i32 %1121, %1124
  store i32 %1125, i32* %42, align 4
  br label %originalBB221

originalBB246alteredBB:                           ; preds = %originalBB246, %903
  %1126 = load double, double* %902, align 8
  %_247 = fsub double %1126, 1.000000e+00
  %gen248 = fmul double %_247, 1.000000e+00
  %_249 = fsub double -0.000000e+00, %1126
  %gen250 = fadd double %_249, 1.000000e+00
  %_251 = fsub double %1126, 1.000000e+00
  %gen252 = fmul double %_251, 1.000000e+00
  %_253 = fsub double -0.000000e+00, %1126
  %gen254 = fadd double %_253, 1.000000e+00
  %_255 = fsub double %1126, 1.000000e+00
  %gen256 = fmul double %_255, 1.000000e+00
  %1127 = fmul double %1126, 1.000000e+00
  %_257 = fsub double -0.000000e+00, %1127
  %gen258 = fadd double %_257, 1.000000e+00
  %_259 = fsub double -0.000000e+00, %1127
  %gen260 = fadd double %_259, 1.000000e+00
  %_261 = fsub double -0.000000e+00, %1127
  %gen262 = fadd double %_261, 1.000000e+00
  %_263 = fsub double %1127, 1.000000e+00
  %gen264 = fmul double %_263, 1.000000e+00
  %_265 = fsub double %1127, 1.000000e+00
  %gen266 = fmul double %_265, 1.000000e+00
  %1128 = fmul double %1127, 1.000000e+00
  %1129 = load %"class.std::vector.17"*, %"class.std::vector.17"** %10, align 8
  %1130 = load i32, i32* %37, align 4
  %1131 = zext i32 %1130 to i64
  br label %originalBB246

originalBB270alteredBB:                           ; preds = %originalBB270, %945
  br label %originalBB270

originalBB275alteredBB:                           ; preds = %originalBB275, %969
  br label %originalBB275

originalBB279alteredBB:                           ; preds = %originalBB279, %986
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %16)
  br label %originalBB279

originalBB283alteredBB:                           ; preds = %originalBB283, %1003
  br label %originalBB283

originalBB287alteredBB:                           ; preds = %originalBB287, %1025
  %1132 = landingpad { i8*, i32 }
          catch i8* null
  %1133 = extractvalue { i8*, i32 } %1132, 0
  call void @__clang_call_terminate(i8* %1133) #7
  br label %originalBB287
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load double*, double** %7, align 8
  %9 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load double*, double** %12, align 8
  %14 = ptrtoint double* %8 to i64
  %15 = ptrtoint double* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi1ELi1EESaIS1_EE4sizeEv(%"class.std::vector.12"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %3 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  %4 = bitcast %"class.std::vector.12"* %3 to %"struct.std::_Vector_base.13"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Tensor*, %class.Tensor** %7, align 8
  %9 = bitcast %"class.std::vector.12"* %3 to %"struct.std::_Vector_base.13"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Tensor*, %class.Tensor** %12, align 8
  %14 = ptrtoint %class.Tensor* %8 to i64
  %15 = ptrtoint %class.Tensor* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi2ELi1EESaIS1_EE4sizeEv(%"class.std::vector.17"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.17"*, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %10, align 8
  %11 = load %"class.std::vector.17"*, %"class.std::vector.17"** %10, align 8
  %12 = bitcast %"class.std::vector.17"* %11 to %"struct.std::_Vector_base.18"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load %class.Tensor.22*, %class.Tensor.22** %15, align 8
  %17 = bitcast %"class.std::vector.17"* %11 to %"struct.std::_Vector_base.18"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Tensor.22*, %class.Tensor.22** %20, align 8
  %22 = ptrtoint %class.Tensor.22* %16 to i64
  %23 = ptrtoint %class.Tensor.22* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 8
  %26 = load i32, i32* @x.25
  %27 = load i32, i32* @y.26
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.17"*, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %34, align 8
  %35 = load %"class.std::vector.17"*, %"class.std::vector.17"** %34, align 8
  %36 = bitcast %"class.std::vector.17"* %35 to %"struct.std::_Vector_base.18"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %class.Tensor.22*, %class.Tensor.22** %39, align 8
  %41 = bitcast %"class.std::vector.17"* %35 to %"struct.std::_Vector_base.18"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %class.Tensor.22*, %class.Tensor.22** %44, align 8
  %46 = ptrtoint %class.Tensor.22* %40 to i64
  %47 = ptrtoint %class.Tensor.22* %45 to i64
  %_ = shl i64 %46, %47
  %_1 = sub i64 %46, %47
  %gen = mul i64 %_1, %47
  %_2 = sub i64 0, %46
  %gen3 = add i64 %_2, %47
  %_4 = sub i64 0, %46
  %gen5 = add i64 %_4, %47
  %48 = sub i64 %46, %47
  %_6 = shl i64 %48, 8
  %_7 = sub i64 %48, 8
  %gen8 = mul i64 %_7, 8
  %_9 = sub i64 %48, 8
  %gen10 = mul i64 %_9, 8
  %49 = sdiv exact i64 %48, 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2ESt6vectorIdSaIdEEEC2Ejj(%class.Table*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.TableIndices, align 4
  store %class.Table* %0, %class.Table** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.Table*, %class.Table** %4, align 8
  %9 = bitcast %class.Table* %8 to %class.TableBase*
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %6, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %7, i32 %10, i32 %11)
  call void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEEC2ERK12TableIndicesILi2EE(%class.TableBase* %9, %class.TableIndices* dereferenceable(8) %7)
  %12 = bitcast %class.Table* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2ESt6vectorIdSaIdEEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE4sizeEv(%class.TableBase*) #1 comdat align 2 {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase*, align 8
  store %class.TableBase* %0, %class.TableBase** %10, align 8
  %11 = load %class.TableBase*, %class.TableBase** %10, align 8
  %12 = getelementptr inbounds %class.TableBase, %class.TableBase* %11, i32 0, i32 3
  %13 = load i32, i32* @x.29
  %14 = load i32, i32* @y.30
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TableIndices* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TableBase*, align 8
  store %class.TableBase* %0, %class.TableBase** %21, align 8
  %22 = load %class.TableBase*, %class.TableBase** %21, align 8
  %23 = getelementptr inbounds %class.TableBase, %class.TableBase* %22, i32 0, i32 3
  br label %originalBB
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase*, i32) #1 comdat align 2 {
  %3 = alloca %class.TableIndicesBase*, align 8
  %4 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.TableIndicesBase*, %class.TableIndicesBase** %3, align 8
  %6 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZN5TableILi2ESt6vectorIdSaIdEEEclEjj(%class.Table*, i32, i32) #1 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Table* %0, %class.Table** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Table*, %class.Table** %4, align 8
  %8 = bitcast %class.Table* %7 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = bitcast %class.Table* %7 to %class.TableBase*
  %13 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = mul i32 %11, %15
  %17 = load i32, i32* %6, align 4
  %18 = add i32 %16, %17
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %10, i64 %19
  ret %"class.std::vector.0"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE6resizeEmd(%"class.std::vector.0"*, i64, double) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store double %2, double* %6, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %8)
  %11 = icmp ugt i64 %9, %10
  br i1 %11, label %12, label %36

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.35
  %14 = load i32, i32* @y.36
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %8)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  store double* %21, double** %22, align 8
  %23 = load i64, i64* %5, align 8
  %24 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %8)
  %25 = sub i64 %23, %24
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  call void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(%"class.std::vector.0"* %8, double* %27, i64 %25, double* dereferenceable(8) %6)
  %28 = load i32, i32* @x.35
  %29 = load i32, i32* @y.36
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:36:                                     ; preds = %3
  %37 = load i64, i64* %5, align 8
  %38 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %8)
  %39 = icmp ult i64 %37, %38
  br i1 %39, label %40, label %48

; <label>:40:                                     ; preds = %36
  %41 = bitcast %"class.std::vector.0"* %8 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load double*, double** %44, align 8
  %46 = load i64, i64* %5, align 8
  %47 = getelementptr inbounds double, double* %45, i64 %46
  call void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(%"class.std::vector.0"* %8, double* %47)
  br label %48

; <label>:48:                                     ; preds = %40, %36
  br label %49

; <label>:49:                                     ; preds = %48, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %12
  %50 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %8)
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  store double* %50, double** %51, align 8
  %52 = load i64, i64* %5, align 8
  %53 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %8)
  %_ = shl i64 %52, %53
  %_1 = sub i64 %52, %53
  %gen = mul i64 %_1, %53
  %_2 = shl i64 %52, %53
  %_3 = sub i64 %52, %53
  %gen4 = mul i64 %_3, %53
  %54 = sub i64 %52, %53
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  %56 = load double*, double** %55, align 8
  call void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(%"class.std::vector.0"* %8, double* %56, i64 %54, double* dereferenceable(8) %6)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %10, i64 %11
  ret %"class.Polynomials::Polynomial"* %12
}

declare void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"*, double, %"class.std::vector.0"* dereferenceable(24)) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZNK5PointILi1EEclEj(%class.Point*, i32) #1 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca i32, align 4
  store %class.Point* %0, %class.Point** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to %class.Tensor*
  %7 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [1 x double], [1 x double]* %7, i64 0, i64 %9
  %11 = load double, double* %10, align 8
  ret double %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* noalias sret, %class.Table*, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.41
  %5 = load i32, i32* @y.42
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Table*, align 8
  %13 = alloca i32, align 4
  store %class.Table* %1, %class.Table** %12, align 8
  store i32 %2, i32* %13, align 4
  %14 = load %class.Table*, %class.Table** %12, align 8
  %15 = bitcast %class.Table* %14 to %class.TableBase*
  %16 = bitcast %class.Table* %14 to %class.TableBase*
  %17 = getelementptr inbounds %class.TableBase, %class.TableBase* %16, i32 0, i32 1
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %19 = load i32, i32* %13, align 4
  %20 = call i32 @_ZNK5TableILi2ESt6vectorIdSaIdEEE6n_colsEv(%class.Table* %14)
  %21 = mul i32 %19, %20
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %18, i64 %22
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_(%"class.internal::TableBaseAccessors::Accessor"* %0, %class.TableBase* dereferenceable(48) %15, %"class.std::vector.0"* %23)
  %24 = load i32, i32* @x.41
  %25 = load i32, i32* @y.42
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca %class.Table*, align 8
  %33 = alloca i32, align 4
  store %class.Table* %1, %class.Table** %32, align 8
  store i32 %2, i32* %33, align 4
  %34 = load %class.Table*, %class.Table** %32, align 8
  %35 = bitcast %class.Table* %34 to %class.TableBase*
  %36 = bitcast %class.Table* %34 to %class.TableBase*
  %37 = getelementptr inbounds %class.TableBase, %class.TableBase* %36, i32 0, i32 1
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %37, align 8
  %39 = load i32, i32* %33, align 4
  %40 = call i32 @_ZNK5TableILi2ESt6vectorIdSaIdEEE6n_colsEv(%class.Table* %34)
  %_ = sub i32 0, %39
  %gen = add i32 %_, %40
  %_1 = sub i32 0, %39
  %gen2 = add i32 %_1, %40
  %_3 = sub i32 0, %39
  %gen4 = add i32 %_3, %40
  %_5 = sub i32 %39, %40
  %gen6 = mul i32 %_5, %40
  %_7 = shl i32 %39, %40
  %_8 = sub i32 0, %39
  %gen9 = add i32 %_8, %40
  %_10 = sub i32 %39, %40
  %gen11 = mul i32 %_10, %40
  %41 = mul i32 %39, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %38, i64 %42
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_(%"class.internal::TableBaseAccessors::Accessor"* %0, %class.TableBase* dereferenceable(48) %35, %"class.std::vector.0"* %43)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"*, i32) #1 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %7, i64 %9
  ret %"class.std::vector.0"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.45
  %4 = load i32, i32* @y.46
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.0"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %14 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds double, double* %18, i64 %19
  %21 = load i32, i32* @x.45
  %22 = load i32, i32* @y.46
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds double, double* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi1EESaIS1_EEixEm(%"class.std::vector.12"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.47
  %4 = load i32, i32* @y.48
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.12"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.12"*, %"class.std::vector.12"** %11, align 8
  %14 = bitcast %"class.std::vector.12"* %13 to %"struct.std::_Vector_base.13"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.Tensor*, %class.Tensor** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %class.Tensor, %class.Tensor* %18, i64 %19
  %21 = load i32, i32* @x.47
  %22 = load i32, i32* @y.48
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.12"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.12"*, %"class.std::vector.12"** %29, align 8
  %32 = bitcast %"class.std::vector.12"* %31 to %"struct.std::_Vector_base.13"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 1>, std::allocator<Tensor<1, 1> > >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %class.Tensor*, %class.Tensor** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %class.Tensor, %class.Tensor* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor*, %class.Tensor** %3, align 8
  %6 = getelementptr inbounds %class.Tensor, %class.Tensor* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [1 x double], [1 x double]* %6, i64 0, i64 %8
  ret double* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Tensor.22* @_ZNSt6vectorI6TensorILi2ELi1EESaIS1_EEixEm(%"class.std::vector.17"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.17"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.17"* %0, %"class.std::vector.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.17"*, %"class.std::vector.17"** %3, align 8
  %6 = bitcast %"class.std::vector.17"* %5 to %"struct.std::_Vector_base.18"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.18", %"struct.std::_Vector_base.18"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 1>, std::allocator<Tensor<2, 1> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor.22*, %class.Tensor.22** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %10, i64 %11
  ret %class.Tensor.22* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Tensor* @_ZN6TensorILi2ELi1EEixEj(%class.Tensor.22*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor.22*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor.22* %0, %class.Tensor.22** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor.22*, %class.Tensor.22** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [1 x %class.Tensor], [1 x %class.Tensor]* %6, i64 0, i64 %8
  ret %class.Tensor* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.55
  %3 = load i32, i32* @y.56
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %10, align 8
  %11 = load %class.Table*, %class.Table** %10, align 8
  %12 = bitcast %class.Table* %11 to %class.TableBase*
  call void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEED2Ev(%class.TableBase* %12)
  %13 = load i32, i32* @x.55
  %14 = load i32, i32* @y.56
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %21, align 8
  %22 = load %class.Table*, %class.Table** %21, align 8
  %23 = bitcast %class.Table* %22 to %class.TableBase*
  call void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEED2Ev(%class.TableBase* %23)
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #3 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #11
  call void @_ZSt9terminatev() #7
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK15PolynomialSpaceILi1EE13compute_valueEjRK5PointILi1EE(%class.PolynomialSpace*, i32, %class.Point* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %class.PolynomialSpace*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Point*, align 8
  %7 = alloca [1 x i32], align 4
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  store %class.PolynomialSpace* %0, %class.PolynomialSpace** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Point* %2, %class.Point** %6, align 8
  %10 = load %class.PolynomialSpace*, %class.PolynomialSpace** %4, align 8
  %11 = load i32, i32* %5, align 4
  call void @_ZNK15PolynomialSpaceILi1EE13compute_indexEjRA1_j(%class.PolynomialSpace* %10, i32 %11, [1 x i32]* dereferenceable(4) %7)
  store double 1.000000e+00, double* %8, align 8
  store i32 0, i32* %9, align 4
  br label %12

; <label>:12:                                     ; preds = %originalBBpart215, %3
  %13 = load i32, i32* %9, align 4
  %14 = icmp ult i32 %13, 1
  br i1 %14, label %15, label %64

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* @x.59
  %17 = load i32, i32* @y.60
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %10, i32 0, i32 0
  %25 = load i32, i32* %9, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = call dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %24, i64 %29)
  %31 = load %class.Point*, %class.Point** %6, align 8
  %32 = load i32, i32* %9, align 4
  %33 = call double @_ZNK5PointILi1EEclEj(%class.Point* %31, i32 %32)
  %34 = call double @_ZNK11Polynomials10PolynomialIdE5valueEd(%"class.Polynomials::Polynomial"* %30, double %33)
  %35 = load double, double* %8, align 8
  %36 = fmul double %35, %34
  store double %36, double* %8, align 8
  %37 = load i32, i32* @x.59
  %38 = load i32, i32* @y.60
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* @x.59
  %47 = load i32, i32* @y.60
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %45, %originalBB9alteredBB
  %54 = load i32, i32* %9, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %9, align 4
  %56 = load i32, i32* @x.59
  %57 = load i32, i32* @y.60
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart215, label %originalBB9alteredBB

originalBBpart215:                                ; preds = %originalBB9
  br label %12

; <label>:64:                                     ; preds = %12
  %65 = load double, double* %8, align 8
  ret double %65

originalBBalteredBB:                              ; preds = %originalBB, %15
  %66 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %10, i32 0, i32 0
  %67 = load i32, i32* %9, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [1 x i32], [1 x i32]* %7, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = call dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %66, i64 %71)
  %73 = load %class.Point*, %class.Point** %6, align 8
  %74 = load i32, i32* %9, align 4
  %75 = call double @_ZNK5PointILi1EEclEj(%class.Point* %73, i32 %74)
  %76 = call double @_ZNK11Polynomials10PolynomialIdE5valueEd(%"class.Polynomials::Polynomial"* %72, double %75)
  %77 = load double, double* %8, align 8
  %_ = fsub double -0.000000e+00, %77
  %gen = fadd double %_, %76
  %_1 = fsub double -0.000000e+00, %77
  %gen2 = fadd double %_1, %76
  %_3 = fsub double -0.000000e+00, %77
  %gen4 = fadd double %_3, %76
  %_5 = fsub double -0.000000e+00, %77
  %gen6 = fadd double %_5, %76
  %_7 = fsub double %77, %76
  %gen8 = fmul double %_7, %76
  %78 = fmul double %77, %76
  store double %78, double* %8, align 8
  br label %originalBB

originalBB9alteredBB:                             ; preds = %originalBB9, %45
  %79 = load i32, i32* %9, align 4
  %_10 = sub i32 0, %79
  %gen11 = add i32 %_10, 1
  %_12 = sub i32 0, %79
  %gen13 = add i32 %_12, 1
  %80 = add i32 %79, 1
  store i32 %80, i32* %9, align 4
  br label %originalBB9
}

declare double @_ZNK11Polynomials10PolynomialIdE5valueEd(%"class.Polynomials::Polynomial"*, double) #2

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi1EE12compute_gradEjRK5PointILi1EE(%class.Tensor* noalias sret, %class.PolynomialSpace*, i32, %class.Point* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.PolynomialSpace*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.Point*, align 8
  %8 = alloca [1 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.0", align 8
  %11 = alloca double, align 8
  %12 = alloca %"class.std::allocator.2", align 1
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %class.PolynomialSpace* %1, %class.PolynomialSpace** %5, align 8
  store i32 %2, i32* %6, align 4
  store %class.Point* %3, %class.Point** %7, align 8
  %17 = load %class.PolynomialSpace*, %class.PolynomialSpace** %5, align 8
  %18 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi1EE13compute_indexEjRA1_j(%class.PolynomialSpace* %17, i32 %18, [1 x i32]* dereferenceable(4) %8)
  call void @_ZN6TensorILi1ELi1EEC2Eb(%class.Tensor* %0, i1 zeroext true)
  store i32 0, i32* %9, align 4
  br label %19

; <label>:19:                                     ; preds = %41, %4
  %20 = load i32, i32* @x.61
  %21 = load i32, i32* @y.62
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i32, i32* %9, align 4
  %29 = icmp ult i32 %28, 1
  %30 = load i32, i32* @x.61
  %31 = load i32, i32* @y.62
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %44

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* %9, align 4
  %40 = call dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %0, i32 %39)
  store double 1.000000e+00, double* %40, align 8
  br label %41

; <label>:41:                                     ; preds = %38
  %42 = load i32, i32* %9, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %9, align 4
  br label %19

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i32, i32* @x.61
  %46 = load i32, i32* @y.62
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  store double 0.000000e+00, double* %11, align 8
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %12) #11
  %53 = load i32, i32* @x.61
  %54 = load i32, i32* @y.62
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKdRKS0_(%"class.std::vector.0"* %10, i64 2, double* dereferenceable(8) %11, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %61 unwind label %183

; <label>:61:                                     ; preds = %originalBBpart24
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  store i32 0, i32* %15, align 4
  br label %62

; <label>:62:                                     ; preds = %originalBBpart250, %61
  %63 = load i32, i32* %15, align 4
  %64 = icmp ult i32 %63, 1
  br i1 %64, label %65, label %247

; <label>:65:                                     ; preds = %62
  %66 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %17, i32 0, i32 0
  %67 = load i32, i32* %15, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [1 x i32], [1 x i32]* %8, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %66, i64 %71)
          to label %73 unwind label %203

; <label>:73:                                     ; preds = %65
  %74 = load %class.Point*, %class.Point** %7, align 8
  %75 = load i32, i32* %15, align 4
  %76 = invoke double @_ZNK5PointILi1EEclEj(%class.Point* %74, i32 %75)
          to label %77 unwind label %203

; <label>:77:                                     ; preds = %73
  %78 = load i32, i32* @x.61
  %79 = load i32, i32* @y.62
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %77, %originalBB6alteredBB
  %86 = load i32, i32* @x.61
  %87 = load i32, i32* @y.62
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %72, double %76, %"class.std::vector.0"* dereferenceable(24) %10)
          to label %94 unwind label %203

; <label>:94:                                     ; preds = %originalBBpart28
  %95 = load i32, i32* @x.61
  %96 = load i32, i32* @y.62
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %94, %originalBB10alteredBB
  %103 = load i32, i32* @x.61
  %104 = load i32, i32* @y.62
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %111 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %10, i64 1)
          to label %112 unwind label %203

; <label>:112:                                    ; preds = %originalBBpart212
  %113 = load double, double* %111, align 8
  %114 = load i32, i32* %15, align 4
  %115 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %0, i32 %114)
          to label %116 unwind label %203

; <label>:116:                                    ; preds = %112
  %117 = load double, double* %115, align 8
  %118 = fmul double %117, %113
  store double %118, double* %115, align 8
  store i32 0, i32* %16, align 4
  br label %119

; <label>:119:                                    ; preds = %224, %116
  %120 = load i32, i32* %16, align 4
  %121 = icmp ult i32 %120, 1
  br i1 %121, label %122, label %227

; <label>:122:                                    ; preds = %119
  %123 = load i32, i32* @x.61
  %124 = load i32, i32* @y.62
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %122, %originalBB14alteredBB
  %131 = load i32, i32* %16, align 4
  %132 = load i32, i32* %15, align 4
  %133 = icmp ne i32 %131, %132
  %134 = load i32, i32* @x.61
  %135 = load i32, i32* @y.62
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %133, label %142, label %207

; <label>:142:                                    ; preds = %originalBBpart216
  %143 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %10, i64 0)
          to label %144 unwind label %203

; <label>:144:                                    ; preds = %142
  %145 = load i32, i32* @x.61
  %146 = load i32, i32* @y.62
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %144, %originalBB18alteredBB
  %153 = load double, double* %143, align 8
  %154 = load i32, i32* %16, align 4
  %155 = load i32, i32* @x.61
  %156 = load i32, i32* @y.62
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %163 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %0, i32 %154)
          to label %164 unwind label %203

; <label>:164:                                    ; preds = %originalBBpart220
  %165 = load i32, i32* @x.61
  %166 = load i32, i32* @y.62
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %164, %originalBB22alteredBB
  %173 = load double, double* %163, align 8
  %174 = fmul double %173, %153
  store double %174, double* %163, align 8
  %175 = load i32, i32* @x.61
  %176 = load i32, i32* @y.62
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %207

; <label>:183:                                    ; preds = %originalBBpart24
  %184 = load i32, i32* @x.61
  %185 = load i32, i32* @y.62
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %183, %originalBB26alteredBB
  %192 = landingpad { i8*, i32 }
          cleanup
  %193 = extractvalue { i8*, i32 } %192, 0
  store i8* %193, i8** %13, align 8
  %194 = extractvalue { i8*, i32 } %192, 1
  store i32 %194, i32* %14, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  %195 = load i32, i32* @x.61
  %196 = load i32, i32* @y.62
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %281

; <label>:203:                                    ; preds = %originalBBpart220, %142, %112, %originalBBpart212, %originalBBpart28, %73, %65
  %204 = landingpad { i8*, i32 }
          cleanup
  %205 = extractvalue { i8*, i32 } %204, 0
  store i8* %205, i8** %13, align 8
  %206 = extractvalue { i8*, i32 } %204, 1
  store i32 %206, i32* %14, align 4
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %10)
          to label %264 unwind label %302

; <label>:207:                                    ; preds = %originalBBpart224, %originalBBpart216
  %208 = load i32, i32* @x.61
  %209 = load i32, i32* @y.62
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %207, %originalBB30alteredBB
  %216 = load i32, i32* @x.61
  %217 = load i32, i32* @y.62
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %224

; <label>:224:                                    ; preds = %originalBBpart232
  %225 = load i32, i32* %16, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %16, align 4
  br label %119

; <label>:227:                                    ; preds = %119
  br label %228

; <label>:228:                                    ; preds = %227
  %229 = load i32, i32* @x.61
  %230 = load i32, i32* @y.62
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %228, %originalBB34alteredBB
  %237 = load i32, i32* %15, align 4
  %238 = add i32 %237, 1
  store i32 %238, i32* %15, align 4
  %239 = load i32, i32* @x.61
  %240 = load i32, i32* @y.62
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart250, label %originalBB34alteredBB

originalBBpart250:                                ; preds = %originalBB34
  br label %62

; <label>:247:                                    ; preds = %62
  %248 = load i32, i32* @x.61
  %249 = load i32, i32* @y.62
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %247, %originalBB52alteredBB
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %10)
  %256 = load i32, i32* @x.61
  %257 = load i32, i32* @y.62
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  ret void

; <label>:264:                                    ; preds = %203
  %265 = load i32, i32* @x.61
  %266 = load i32, i32* @y.62
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %264, %originalBB56alteredBB
  %273 = load i32, i32* @x.61
  %274 = load i32, i32* @y.62
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %281

; <label>:281:                                    ; preds = %originalBBpart258, %originalBBpart228
  %282 = load i32, i32* @x.61
  %283 = load i32, i32* @y.62
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %281, %originalBB60alteredBB
  %290 = load i8*, i8** %13, align 8
  %291 = load i32, i32* %14, align 4
  %292 = insertvalue { i8*, i32 } undef, i8* %290, 0
  %293 = insertvalue { i8*, i32 } %292, i32 %291, 1
  %294 = load i32, i32* @x.61
  %295 = load i32, i32* @y.62
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  resume { i8*, i32 } %293

; <label>:302:                                    ; preds = %203
  %303 = landingpad { i8*, i32 }
          catch i8* null
  %304 = extractvalue { i8*, i32 } %303, 0
  call void @__clang_call_terminate(i8* %304) #7
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %305 = load i32, i32* %9, align 4
  %306 = icmp ult i32 %305, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  store double 0.000000e+00, double* %11, align 8
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %12) #11
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %77
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %94
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %122
  %307 = load i32, i32* %16, align 4
  %308 = load i32, i32* %15, align 4
  %309 = icmp ne i32 %307, %308
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %144
  %310 = load double, double* %143, align 8
  %311 = load i32, i32* %16, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %164
  %312 = load double, double* %163, align 8
  %_ = fsub double -0.000000e+00, %312
  %gen = fadd double %_, %153
  %313 = fmul double %312, %153
  store double %313, double* %163, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %183
  %314 = landingpad { i8*, i32 }
          cleanup
  %315 = extractvalue { i8*, i32 } %314, 0
  store i8* %315, i8** %13, align 8
  %316 = extractvalue { i8*, i32 } %314, 1
  store i32 %316, i32* %14, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %207
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %228
  %317 = load i32, i32* %15, align 4
  %_35 = sub i32 %317, 1
  %gen36 = mul i32 %_35, 1
  %_37 = sub i32 %317, 1
  %gen38 = mul i32 %_37, 1
  %_39 = sub i32 %317, 1
  %gen40 = mul i32 %_39, 1
  %_41 = sub i32 0, %317
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 0, %317
  %gen44 = add i32 %_43, 1
  %_45 = sub i32 %317, 1
  %gen46 = mul i32 %_45, 1
  %_47 = sub i32 %317, 1
  %gen48 = mul i32 %_47, 1
  %318 = add i32 %317, 1
  store i32 %318, i32* %15, align 4
  br label %originalBB34

originalBB52alteredBB:                            ; preds = %originalBB52, %247
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %10)
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %264
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %281
  %319 = load i8*, i8** %13, align 8
  %320 = load i32, i32* %14, align 4
  %321 = insertvalue { i8*, i32 } undef, i8* %319, 0
  %322 = insertvalue { i8*, i32 } %321, i32 %320, 1
  br label %originalBB60
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi1EEC2Eb(%class.Tensor*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %class.Tensor*, %class.Tensor** %3, align 8
  %8 = load i8, i8* %4, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %39

; <label>:10:                                     ; preds = %2
  store i32 0, i32* %5, align 4
  br label %11

; <label>:11:                                     ; preds = %originalBBpart2, %10
  %12 = load i32, i32* %5, align 4
  %13 = icmp ne i32 %12, 1
  br i1 %13, label %14, label %38

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %class.Tensor, %class.Tensor* %7, i32 0, i32 0
  %16 = load i32, i32* %5, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [1 x double], [1 x double]* %15, i64 0, i64 %17
  store double 0.000000e+00, double* %18, align 8
  br label %19

; <label>:19:                                     ; preds = %14
  %20 = load i32, i32* @x.63
  %21 = load i32, i32* @y.64
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i32, i32* %5, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %5, align 4
  %30 = load i32, i32* @x.63
  %31 = load i32, i32* @y.64
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %11

; <label>:38:                                     ; preds = %11
  br label %39

; <label>:39:                                     ; preds = %38, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %40 = load i32, i32* %5, align 4
  %_ = sub i32 0, %40
  %gen = add i32 %_, 1
  %_1 = sub i32 %40, 1
  %gen2 = mul i32 %_1, 1
  %_3 = sub i32 0, %40
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 %40, 1
  %gen6 = mul i32 %_5, 1
  %_7 = shl i32 %40, 1
  %_8 = sub i32 %40, 1
  %gen9 = mul i32 %_8, 1
  %41 = add i32 %40, 1
  store i32 %41, i32* %5, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2Ev(%"class.std::allocator.2"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEEC2EmRKdRKS0_(%"class.std::vector.0"*, i64, double* dereferenceable(8), %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  %15 = call i64 @_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_(i64 %13, %"class.std::allocator.2"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  call void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %12, i64 %15, %"class.std::allocator.2"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load double*, double** %7, align 8
  invoke void @_ZNSt6vectorIdSaIdEE18_M_fill_initializeEmRKd(%"class.std::vector.0"* %11, i64 %17, double* dereferenceable(8) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %4
  ret void

; <label>:20:                                     ; preds = %4
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %9, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %10, align 4
  %24 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.1"* %24)
          to label %25 unwind label %31

; <label>:25:                                     ; preds = %20
  br label %26

; <label>:26:                                     ; preds = %25
  %27 = load i8*, i8** %9, align 8
  %28 = load i32, i32* %10, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30

; <label>:31:                                     ; preds = %20
  %32 = landingpad { i8*, i32 }
          catch i8* null
  %33 = extractvalue { i8*, i32 } %32, 0
  call void @__clang_call_terminate(i8* %33) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdED2Ev(%"class.std::allocator.2"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.69
  %3 = load i32, i32* @y.70
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %10, align 8
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %10, align 8
  %12 = bitcast %"class.std::allocator.2"* %11 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.3"* %12) #11
  %13 = load i32, i32* @x.69
  %14 = load i32, i32* @y.70
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %21, align 8
  %22 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %21, align 8
  %23 = bitcast %"class.std::allocator.2"* %22 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.3"* %23) #11
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load double*, double** %9, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load double*, double** %14, align 8
  %16 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %10, double* %15, %"class.std::allocator.2"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.1"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.1"* %25)
          to label %26 unwind label %64

; <label>:26:                                     ; preds = %21
  %27 = load i32, i32* @x.71
  %28 = load i32, i32* @y.72
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i32, i32* @x.71
  %36 = load i32, i32* @y.72
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i32, i32* @x.71
  %45 = load i32, i32* @y.72
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = load i8*, i8** %3, align 8
  %53 = load i32, i32* %4, align 4
  %54 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  %56 = load i32, i32* @x.71
  %57 = load i32, i32* @y.72
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %55

; <label>:64:                                     ; preds = %21
  %65 = load i32, i32* @x.71
  %66 = load i32, i32* @y.72
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #7
  %75 = load i32, i32* @x.71
  %76 = load i32, i32* @y.72
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %26
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %83 = load i8*, i8** %3, align 8
  %84 = load i32, i32* %4, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %87 = landingpad { i8*, i32 }
          catch i8* null
  %88 = extractvalue { i8*, i32 } %87, 0
  call void @__clang_call_terminate(i8* %88) #7
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi1EE17compute_grad_gradEjRK5PointILi1EE(%class.Tensor.22* noalias sret, %class.PolynomialSpace*, i32, %class.Point* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.PolynomialSpace*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.Point*, align 8
  %8 = alloca [1 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::vector.0", align 8
  %12 = alloca double, align 8
  %13 = alloca %"class.std::allocator.2", align 1
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %class.PolynomialSpace* %1, %class.PolynomialSpace** %5, align 8
  store i32 %2, i32* %6, align 4
  store %class.Point* %3, %class.Point** %7, align 8
  %19 = load %class.PolynomialSpace*, %class.PolynomialSpace** %5, align 8
  %20 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi1EE13compute_indexEjRA1_j(%class.PolynomialSpace* %19, i32 %20, [1 x i32]* dereferenceable(4) %8)
  call void @_ZN6TensorILi2ELi1EEC2Ev(%class.Tensor.22* %0)
  store i32 0, i32* %9, align 4
  br label %21

; <label>:21:                                     ; preds = %69, %4
  %22 = load i32, i32* %9, align 4
  %23 = icmp ult i32 %22, 1
  br i1 %23, label %24, label %72

; <label>:24:                                     ; preds = %21
  %25 = load i32, i32* @x.73
  %26 = load i32, i32* @y.74
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  store i32 0, i32* %10, align 4
  %33 = load i32, i32* @x.73
  %34 = load i32, i32* @y.74
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41

; <label>:41:                                     ; preds = %65, %originalBBpart2
  %42 = load i32, i32* @x.73
  %43 = load i32, i32* @y.74
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i32, i32* %10, align 4
  %51 = icmp ult i32 %50, 1
  %52 = load i32, i32* @x.73
  %53 = load i32, i32* @y.74
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %51, label %60, label %68

; <label>:60:                                     ; preds = %originalBBpart24
  %61 = load i32, i32* %9, align 4
  %62 = call dereferenceable(8) %class.Tensor* @_ZN6TensorILi2ELi1EEixEj(%class.Tensor.22* %0, i32 %61)
  %63 = load i32, i32* %10, align 4
  %64 = call dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %62, i32 %63)
  store double 1.000000e+00, double* %64, align 8
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i32, i32* %10, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %10, align 4
  br label %41

; <label>:68:                                     ; preds = %originalBBpart24
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* %9, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %9, align 4
  br label %21

; <label>:72:                                     ; preds = %21
  store double 0.000000e+00, double* %12, align 8
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %13) #11
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKdRKS0_(%"class.std::vector.0"* %11, i64 3, double* dereferenceable(8) %12, %"class.std::allocator.2"* dereferenceable(1) %13)
          to label %73 unwind label %279

; <label>:73:                                     ; preds = %72
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  store i32 0, i32* %16, align 4
  br label %74

; <label>:74:                                     ; preds = %345, %73
  %75 = load i32, i32* %16, align 4
  %76 = icmp ult i32 %75, 1
  br i1 %76, label %77, label %348

; <label>:77:                                     ; preds = %74
  %78 = load i32, i32* @x.73
  %79 = load i32, i32* @y.74
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %77, %originalBB6alteredBB
  %86 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %19, i32 0, i32 0
  %87 = load i32, i32* %16, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [1 x i32], [1 x i32]* %8, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i64
  %92 = load i32, i32* @x.73
  %93 = load i32, i32* @y.74
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %100 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %86, i64 %91)
          to label %101 unwind label %283

; <label>:101:                                    ; preds = %originalBBpart28
  %102 = load %class.Point*, %class.Point** %7, align 8
  %103 = load i32, i32* %16, align 4
  %104 = invoke double @_ZNK5PointILi1EEclEj(%class.Point* %102, i32 %103)
          to label %105 unwind label %283

; <label>:105:                                    ; preds = %101
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %100, double %104, %"class.std::vector.0"* dereferenceable(24) %11)
          to label %106 unwind label %283

; <label>:106:                                    ; preds = %105
  %107 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 2)
          to label %108 unwind label %283

; <label>:108:                                    ; preds = %106
  %109 = load i32, i32* @x.73
  %110 = load i32, i32* @y.74
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %108, %originalBB10alteredBB
  %117 = load double, double* %107, align 8
  %118 = load i32, i32* %16, align 4
  %119 = load i32, i32* @x.73
  %120 = load i32, i32* @y.74
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %127 = invoke dereferenceable(8) %class.Tensor* @_ZN6TensorILi2ELi1EEixEj(%class.Tensor.22* %0, i32 %118)
          to label %128 unwind label %283

; <label>:128:                                    ; preds = %originalBBpart212
  %129 = load i32, i32* @x.73
  %130 = load i32, i32* @y.74
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %128, %originalBB14alteredBB
  %137 = load i32, i32* %16, align 4
  %138 = load i32, i32* @x.73
  %139 = load i32, i32* @y.74
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %146 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %127, i32 %137)
          to label %147 unwind label %283

; <label>:147:                                    ; preds = %originalBBpart216
  %148 = load i32, i32* @x.73
  %149 = load i32, i32* @y.74
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %147, %originalBB18alteredBB
  %156 = load double, double* %146, align 8
  %157 = fmul double %156, %117
  store double %157, double* %146, align 8
  store i32 0, i32* %17, align 4
  %158 = load i32, i32* @x.73
  %159 = load i32, i32* @y.74
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %166

; <label>:166:                                    ; preds = %originalBBpart253, %originalBBpart220
  %167 = load i32, i32* %17, align 4
  %168 = icmp ult i32 %167, 1
  br i1 %168, label %169, label %344

; <label>:169:                                    ; preds = %166
  %170 = load i32, i32* %17, align 4
  %171 = load i32, i32* %16, align 4
  %172 = icmp ne i32 %170, %171
  br i1 %172, label %173, label %308

; <label>:173:                                    ; preds = %169
  %174 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 1)
          to label %175 unwind label %283

; <label>:175:                                    ; preds = %173
  %176 = load double, double* %174, align 8
  %177 = load i32, i32* %16, align 4
  %178 = invoke dereferenceable(8) %class.Tensor* @_ZN6TensorILi2ELi1EEixEj(%class.Tensor.22* %0, i32 %177)
          to label %179 unwind label %283

; <label>:179:                                    ; preds = %175
  %180 = load i32, i32* @x.73
  %181 = load i32, i32* @y.74
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %179, %originalBB22alteredBB
  %188 = load i32, i32* %17, align 4
  %189 = load i32, i32* @x.73
  %190 = load i32, i32* @y.74
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %197 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %178, i32 %188)
          to label %198 unwind label %283

; <label>:198:                                    ; preds = %originalBBpart224
  %199 = load double, double* %197, align 8
  %200 = fmul double %199, %176
  store double %200, double* %197, align 8
  %201 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 1)
          to label %202 unwind label %283

; <label>:202:                                    ; preds = %198
  %203 = load double, double* %201, align 8
  %204 = load i32, i32* %17, align 4
  %205 = invoke dereferenceable(8) %class.Tensor* @_ZN6TensorILi2ELi1EEixEj(%class.Tensor.22* %0, i32 %204)
          to label %206 unwind label %283

; <label>:206:                                    ; preds = %202
  %207 = load i32, i32* @x.73
  %208 = load i32, i32* @y.74
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %206, %originalBB26alteredBB
  %215 = load i32, i32* %16, align 4
  %216 = load i32, i32* @x.73
  %217 = load i32, i32* @y.74
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %224 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %205, i32 %215)
          to label %225 unwind label %283

; <label>:225:                                    ; preds = %originalBBpart228
  %226 = load double, double* %224, align 8
  %227 = fmul double %226, %203
  store double %227, double* %224, align 8
  store i32 0, i32* %18, align 4
  br label %228

; <label>:228:                                    ; preds = %304, %225
  %229 = load i32, i32* @x.73
  %230 = load i32, i32* @y.74
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %228, %originalBB30alteredBB
  %237 = load i32, i32* %18, align 4
  %238 = icmp ult i32 %237, 1
  %239 = load i32, i32* @x.73
  %240 = load i32, i32* @y.74
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %238, label %247, label %307

; <label>:247:                                    ; preds = %originalBBpart232
  %248 = load i32, i32* %18, align 4
  %249 = load i32, i32* %16, align 4
  %250 = icmp ne i32 %248, %249
  br i1 %250, label %251, label %303

; <label>:251:                                    ; preds = %247
  %252 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 0)
          to label %253 unwind label %283

; <label>:253:                                    ; preds = %251
  %254 = load double, double* %252, align 8
  %255 = load i32, i32* %17, align 4
  %256 = invoke dereferenceable(8) %class.Tensor* @_ZN6TensorILi2ELi1EEixEj(%class.Tensor.22* %0, i32 %255)
          to label %257 unwind label %283

; <label>:257:                                    ; preds = %253
  %258 = load i32, i32* @x.73
  %259 = load i32, i32* @y.74
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %257, %originalBB34alteredBB
  %266 = load i32, i32* %18, align 4
  %267 = load i32, i32* @x.73
  %268 = load i32, i32* @y.74
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  %275 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi1EEixEj(%class.Tensor* %256, i32 %266)
          to label %276 unwind label %283

; <label>:276:                                    ; preds = %originalBBpart236
  %277 = load double, double* %275, align 8
  %278 = fmul double %277, %254
  store double %278, double* %275, align 8
  br label %303

; <label>:279:                                    ; preds = %72
  %280 = landingpad { i8*, i32 }
          cleanup
  %281 = extractvalue { i8*, i32 } %280, 0
  store i8* %281, i8** %14, align 8
  %282 = extractvalue { i8*, i32 } %280, 1
  store i32 %282, i32* %15, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  br label %382

; <label>:283:                                    ; preds = %originalBBpart236, %253, %251, %originalBBpart228, %202, %198, %originalBBpart224, %175, %173, %originalBBpart216, %originalBBpart212, %106, %105, %101, %originalBBpart28
  %284 = load i32, i32* @x.73
  %285 = load i32, i32* @y.74
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %283, %originalBB38alteredBB
  %292 = landingpad { i8*, i32 }
          cleanup
  %293 = extractvalue { i8*, i32 } %292, 0
  store i8* %293, i8** %14, align 8
  %294 = extractvalue { i8*, i32 } %292, 1
  store i32 %294, i32* %15, align 4
  %295 = load i32, i32* @x.73
  %296 = load i32, i32* @y.74
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
          to label %365 unwind label %387

; <label>:303:                                    ; preds = %276, %247
  br label %304

; <label>:304:                                    ; preds = %303
  %305 = load i32, i32* %18, align 4
  %306 = add i32 %305, 1
  store i32 %306, i32* %18, align 4
  br label %228

; <label>:307:                                    ; preds = %originalBBpart232
  br label %308

; <label>:308:                                    ; preds = %307, %169
  %309 = load i32, i32* @x.73
  %310 = load i32, i32* @y.74
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %308, %originalBB42alteredBB
  %317 = load i32, i32* @x.73
  %318 = load i32, i32* @y.74
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %325

; <label>:325:                                    ; preds = %originalBBpart244
  %326 = load i32, i32* @x.73
  %327 = load i32, i32* @y.74
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %325, %originalBB46alteredBB
  %334 = load i32, i32* %17, align 4
  %335 = add i32 %334, 1
  store i32 %335, i32* %17, align 4
  %336 = load i32, i32* @x.73
  %337 = load i32, i32* @y.74
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart253, label %originalBB46alteredBB

originalBBpart253:                                ; preds = %originalBB46
  br label %166

; <label>:344:                                    ; preds = %166
  br label %345

; <label>:345:                                    ; preds = %344
  %346 = load i32, i32* %16, align 4
  %347 = add i32 %346, 1
  store i32 %347, i32* %16, align 4
  br label %74

; <label>:348:                                    ; preds = %74
  %349 = load i32, i32* @x.73
  %350 = load i32, i32* @y.74
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %348, %originalBB55alteredBB
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
  %357 = load i32, i32* @x.73
  %358 = load i32, i32* @y.74
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  ret void

; <label>:365:                                    ; preds = %originalBBpart240
  %366 = load i32, i32* @x.73
  %367 = load i32, i32* @y.74
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %365, %originalBB59alteredBB
  %374 = load i32, i32* @x.73
  %375 = load i32, i32* @y.74
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %382

; <label>:382:                                    ; preds = %originalBBpart261, %279
  %383 = load i8*, i8** %14, align 8
  %384 = load i32, i32* %15, align 4
  %385 = insertvalue { i8*, i32 } undef, i8* %383, 0
  %386 = insertvalue { i8*, i32 } %385, i32 %384, 1
  resume { i8*, i32 } %386

; <label>:387:                                    ; preds = %originalBBpart240
  %388 = landingpad { i8*, i32 }
          catch i8* null
  %389 = extractvalue { i8*, i32 } %388, 0
  call void @__clang_call_terminate(i8* %389) #7
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %24
  store i32 0, i32* %10, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %390 = load i32, i32* %10, align 4
  %391 = icmp ult i32 %390, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %77
  %392 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %19, i32 0, i32 0
  %393 = load i32, i32* %16, align 4
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds [1 x i32], [1 x i32]* %8, i64 0, i64 %394
  %396 = load i32, i32* %395, align 4
  %397 = zext i32 %396 to i64
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %108
  %398 = load double, double* %107, align 8
  %399 = load i32, i32* %16, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %128
  %400 = load i32, i32* %16, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %147
  %401 = load double, double* %146, align 8
  %_ = fsub double %401, %117
  %gen = fmul double %_, %117
  %402 = fmul double %401, %117
  store double %402, double* %146, align 8
  store i32 0, i32* %17, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %179
  %403 = load i32, i32* %17, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %206
  %404 = load i32, i32* %16, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %228
  %405 = load i32, i32* %18, align 4
  %406 = icmp ult i32 %405, 1
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %257
  %407 = load i32, i32* %18, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %283
  %408 = landingpad { i8*, i32 }
          cleanup
  %409 = extractvalue { i8*, i32 } %408, 0
  store i8* %409, i8** %14, align 8
  %410 = extractvalue { i8*, i32 } %408, 1
  store i32 %410, i32* %15, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %308
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %325
  %411 = load i32, i32* %17, align 4
  %_47 = shl i32 %411, 1
  %_48 = shl i32 %411, 1
  %_49 = sub i32 0, %411
  %gen50 = add i32 %_49, 1
  %_51 = shl i32 %411, 1
  %412 = add i32 %411, 1
  store i32 %412, i32* %17, align 4
  br label %originalBB46

originalBB55alteredBB:                            ; preds = %originalBB55, %348
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %365
  br label %originalBB59
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6TensorILi2ELi1EEC2Ev(%class.Tensor.22*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Tensor.22*, align 8
  store %class.Tensor.22* %0, %class.Tensor.22** %2, align 8
  %3 = load %class.Tensor.22*, %class.Tensor.22** %2, align 8
  %4 = getelementptr inbounds %class.Tensor.22, %class.Tensor.22* %3, i32 0, i32 0
  %5 = getelementptr inbounds [1 x %class.Tensor], [1 x %class.Tensor]* %4, i32 0, i32 0
  %6 = getelementptr inbounds %class.Tensor, %class.Tensor* %5, i64 1
  br label %7

; <label>:7:                                      ; preds = %originalBBpart2, %1
  %8 = phi %class.Tensor* [ %5, %1 ], [ %17, %originalBBpart2 ]
  %9 = load i32, i32* @x.75
  %10 = load i32, i32* @y.76
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  call void @_ZN6TensorILi1ELi1EEC2Eb(%class.Tensor* %8, i1 zeroext true)
  %17 = getelementptr inbounds %class.Tensor, %class.Tensor* %8, i64 1
  %18 = icmp eq %class.Tensor* %17, %6
  %19 = load i32, i32* @x.75
  %20 = load i32, i32* @y.76
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %7

; <label>:27:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  call void @_ZN6TensorILi1ELi1EEC2Eb(%class.Tensor* %8, i1 zeroext true)
  %28 = getelementptr inbounds %class.Tensor, %class.Tensor* %8, i64 1
  %29 = icmp eq %class.Tensor* %28, %6
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK15PolynomialSpaceILi1EE1nEv(%class.PolynomialSpace*) #1 comdat align 2 {
  %2 = alloca %class.PolynomialSpace*, align 8
  store %class.PolynomialSpace* %0, %class.PolynomialSpace** %2, align 8
  %3 = load %class.PolynomialSpace*, %class.PolynomialSpace** %2, align 8
  %4 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK15PolynomialSpaceILi1EE6degreeEv(%class.PolynomialSpace*) #0 comdat align 2 {
  %2 = alloca %class.PolynomialSpace*, align 8
  store %class.PolynomialSpace* %0, %class.PolynomialSpace** %2, align 8
  %3 = load %class.PolynomialSpace*, %class.PolynomialSpace** %2, align 8
  %4 = getelementptr inbounds %class.PolynomialSpace, %class.PolynomialSpace* %3, i32 0, i32 0
  %5 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %4)
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2C2Eiii(%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, i32, i32, i32) unnamed_addr #0 comdat($_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2C5Eiii) align 2 {
  %5 = alloca %"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<1>::ExcDimensionMismatch2"** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<1>::ExcDimensionMismatch2"** %5, align 8
  %10 = bitcast %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %9 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %10)
  %11 = bitcast %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15PolynomialSpaceILi1EE21ExcDimensionMismatch2E, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.PolynomialSpace<1>::ExcDimensionMismatch2", %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %9, i32 0, i32 1
  %13 = load i32, i32* %6, align 4
  store i32 %13, i32* %12, align 8
  %14 = getelementptr inbounds %"class.PolynomialSpace<1>::ExcDimensionMismatch2", %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %9, i32 0, i32 2
  %15 = load i32, i32* %7, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"class.PolynomialSpace<1>::ExcDimensionMismatch2", %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %9, i32 0, i32 3
  %17 = load i32, i32* %8, align 4
  store i32 %17, i32* %16, align 8
  ret void
}

declare void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D2Ev(%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*) unnamed_addr #1 comdat($_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D5Ev) align 2 {
  %2 = alloca %"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, align 8
  store %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<1>::ExcDimensionMismatch2"** %2, align 8
  %3 = load %"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<1>::ExcDimensionMismatch2"** %2, align 8
  %4 = bitcast %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %4) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase*) unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D0Ev(%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*) unnamed_addr #1 comdat($_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D5Ev) align 2 {
  %2 = alloca %"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, align 8
  store %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<1>::ExcDimensionMismatch2"** %2, align 8
  %3 = load %"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<1>::ExcDimensionMismatch2"** %2, align 8
  call void @_ZN15PolynomialSpaceILi1EE21ExcDimensionMismatch2D1Ev(%"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %3) #11
  %4 = bitcast %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #5

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi1EE21ExcDimensionMismatch29PrintInfoERSo(%"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, align 8
  %4 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<1>::ExcDimensionMismatch2"** %3, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %4, align 8
  %5 = load %"class.PolynomialSpace<1>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<1>::ExcDimensionMismatch2"** %3, align 8
  %6 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0))
  %8 = getelementptr inbounds %"class.PolynomialSpace<1>::ExcDimensionMismatch2", %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %5, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %7, i32 %9)
  %11 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0))
  %12 = getelementptr inbounds %"class.PolynomialSpace<1>::ExcDimensionMismatch2", %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %5, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %11, i32 %13)
  %15 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0))
  %16 = getelementptr inbounds %"class.PolynomialSpace<1>::ExcDimensionMismatch2", %"class.PolynomialSpace<1>::ExcDimensionMismatch2"* %5, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %15, i32 %17)
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %18, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #2

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZN15PolynomialSpaceILi1EE14compute_n_polsEj(i32) #1 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  store i32 %5, i32* %3, align 4
  store i32 1, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %35, %1
  %7 = load i32, i32* @x.89
  %8 = load i32, i32* @y.90
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = load i32, i32* %4, align 4
  %16 = icmp ult i32 %15, 1
  %17 = load i32, i32* @x.89
  %18 = load i32, i32* @y.90
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %38

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* %2, align 4
  %27 = load i32, i32* %4, align 4
  %28 = add i32 %26, %27
  %29 = load i32, i32* %3, align 4
  %30 = mul i32 %29, %28
  store i32 %30, i32* %3, align 4
  %31 = load i32, i32* %4, align 4
  %32 = add i32 %31, 1
  %33 = load i32, i32* %3, align 4
  %34 = udiv i32 %33, %32
  store i32 %34, i32* %3, align 4
  br label %35

; <label>:35:                                     ; preds = %25
  %36 = load i32, i32* %4, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %4, align 4
  br label %6

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* %3, align 4
  ret i32 %39

originalBBalteredBB:                              ; preds = %originalBB, %6
  %40 = load i32, i32* %4, align 4
  %41 = icmp ult i32 %40, 1
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi2EE14output_indicesERSo(%class.PolynomialSpace.10*, %"class.std::basic_ostream"* dereferenceable(272)) #0 comdat align 2 {
  %3 = alloca %class.PolynomialSpace.10*, align 8
  %4 = alloca %"class.std::basic_ostream"*, align 8
  %5 = alloca [2 x i32], align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %3, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %4, align 8
  %8 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %3, align 8
  store i32 0, i32* %6, align 4
  br label %9

; <label>:9:                                      ; preds = %85, %2
  %10 = load i32, i32* %6, align 4
  %11 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %8, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %14, label %88

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi2EE13compute_indexEjRA2_j(%class.PolynomialSpace.10* %8, i32 %15, [2 x i32]* dereferenceable(8) %5)
  %16 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %17 = load i32, i32* %6, align 4
  %18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %16, i32 %17)
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  store i32 0, i32* %7, align 4
  br label %20

; <label>:20:                                     ; preds = %originalBBpart24, %14
  %21 = load i32, i32* @x.91
  %22 = load i32, i32* @y.92
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i32, i32* %7, align 4
  %30 = icmp ult i32 %29, 2
  %31 = load i32, i32* @x.91
  %32 = load i32, i32* @y.92
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %66

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %41 = load i32, i32* %7, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %40, i32 %44)
  %46 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  br label %47

; <label>:47:                                     ; preds = %39
  %48 = load i32, i32* @x.91
  %49 = load i32, i32* @y.92
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = load i32, i32* %7, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %7, align 4
  %58 = load i32, i32* @x.91
  %59 = load i32, i32* @y.92
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %20

; <label>:66:                                     ; preds = %originalBBpart2
  %67 = load i32, i32* @x.91
  %68 = load i32, i32* @y.92
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %76 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %75, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %77 = load i32, i32* @x.91
  %78 = load i32, i32* @y.92
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85

; <label>:85:                                     ; preds = %originalBBpart28
  %86 = load i32, i32* %6, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %6, align 4
  br label %9

; <label>:88:                                     ; preds = %9
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %20
  %89 = load i32, i32* %7, align 4
  %90 = icmp ult i32 %89, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %91 = load i32, i32* %7, align 4
  %_ = sub i32 0, %91
  %gen = add i32 %_, 1
  %92 = add i32 %91, 1
  store i32 %92, i32* %7, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  %93 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %94 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %93, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15PolynomialSpaceILi2EE13set_numberingERKSt6vectorIjSaIjEE(%class.PolynomialSpace.10*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.93
  %4 = load i32, i32* @y.94
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.PolynomialSpace.10*, align 8
  %12 = alloca %"class.std::vector.5"*, align 8
  %13 = alloca i32, align 4
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %11, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %12, align 8
  %14 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %11, align 8
  %15 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %16 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %14, i32 0, i32 2
  %17 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIjSaIjEEaSERKS1_(%"class.std::vector.5"* %16, %"class.std::vector.5"* dereferenceable(24) %15)
  store i32 0, i32* %13, align 4
  %18 = load i32, i32* @x.93
  %19 = load i32, i32* @y.94
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %42, %originalBBpart2
  %27 = load i32, i32* %13, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %14, i32 0, i32 2
  %30 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %29)
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %32, label %45

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* %13, align 4
  %34 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %14, i32 0, i32 3
  %35 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %14, i32 0, i32 2
  %36 = load i32, i32* %13, align 4
  %37 = zext i32 %36 to i64
  %38 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %35, i64 %37)
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %34, i64 %40)
  store i32 %33, i32* %41, align 4
  br label %42

; <label>:42:                                     ; preds = %32
  %43 = load i32, i32* %13, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %13, align 4
  br label %26

; <label>:45:                                     ; preds = %26
  %46 = load i32, i32* @x.93
  %47 = load i32, i32* @y.94
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i32, i32* @x.93
  %55 = load i32, i32* @y.94
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %62 = alloca %class.PolynomialSpace.10*, align 8
  %63 = alloca %"class.std::vector.5"*, align 8
  %64 = alloca i32, align 4
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %62, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %63, align 8
  %65 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %62, align 8
  %66 = load %"class.std::vector.5"*, %"class.std::vector.5"** %63, align 8
  %67 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %65, i32 0, i32 2
  %68 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIjSaIjEEaSERKS1_(%"class.std::vector.5"* %67, %"class.std::vector.5"* dereferenceable(24) %66)
  store i32 0, i32* %64, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi2EE7computeERK5PointILi2EERSt6vectorIdSaIdEERS5_I6TensorILi1ELi2EESaISA_EERS5_IS9_ILi2ELi2EESaISE_EE(%class.PolynomialSpace.10*, %class.Point.23* dereferenceable(16), %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.25"* dereferenceable(24), %"class.std::vector.30"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.PolynomialSpace.10*, align 8
  %7 = alloca %class.Point.23*, align 8
  %8 = alloca %"class.std::vector.0"*, align 8
  %9 = alloca %"class.std::vector.25"*, align 8
  %10 = alloca %"class.std::vector.30"*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca %class.Table, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*
  %19 = alloca i32
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %26 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %34 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %46 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %6, align 8
  store %class.Point.23* %1, %class.Point.23** %7, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.25"* %3, %"class.std::vector.25"** %9, align 8
  store %"class.std::vector.30"* %4, %"class.std::vector.30"** %10, align 8
  %47 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %6, align 8
  %48 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 0
  %49 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %48)
  %50 = trunc i64 %49 to i32
  store i32 %50, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i8 0, i8* %13, align 1
  store i8 0, i8* %14, align 1
  store i8 0, i8* %15, align 1
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %52 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %51)
  %53 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = zext i32 %54 to i64
  %56 = icmp eq i64 %52, %55
  br i1 %56, label %57, label %58

; <label>:57:                                     ; preds = %5
  store i8 1, i8* %13, align 1
  store i32 1, i32* %12, align 4
  br label %58

; <label>:58:                                     ; preds = %57, %5
  %59 = load i32, i32* @x.95
  %60 = load i32, i32* @y.96
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %58, %originalBBalteredBB
  %67 = load %"class.std::vector.25"*, %"class.std::vector.25"** %9, align 8
  %68 = call i64 @_ZNKSt6vectorI6TensorILi1ELi2EESaIS1_EE4sizeEv(%"class.std::vector.25"* %67)
  %69 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = zext i32 %70 to i64
  %72 = icmp eq i64 %68, %71
  %73 = load i32, i32* @x.95
  %74 = load i32, i32* @y.96
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %72, label %81, label %82

; <label>:81:                                     ; preds = %originalBBpart2
  store i8 1, i8* %14, align 1
  store i32 2, i32* %12, align 4
  br label %82

; <label>:82:                                     ; preds = %81, %originalBBpart2
  %83 = load %"class.std::vector.30"*, %"class.std::vector.30"** %10, align 8
  %84 = call i64 @_ZNKSt6vectorI6TensorILi2ELi2EESaIS1_EE4sizeEv(%"class.std::vector.30"* %83)
  %85 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = icmp eq i64 %84, %87
  br i1 %88, label %89, label %90

; <label>:89:                                     ; preds = %82
  store i8 1, i8* %15, align 1
  store i32 3, i32* %12, align 4
  br label %90

; <label>:90:                                     ; preds = %89, %82
  %91 = load i32, i32* @x.95
  %92 = load i32, i32* @y.96
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %90, %originalBB1alteredBB
  %99 = load i32, i32* %11, align 4
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEEC2Ejj(%class.Table* %16, i32 2, i32 %99)
  store i32 0, i32* %17, align 4
  %100 = load i32, i32* @x.95
  %101 = load i32, i32* @y.96
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %108

; <label>:108:                                    ; preds = %269, %originalBBpart24
  %109 = load i32, i32* @x.95
  %110 = load i32, i32* @y.96
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %108, %originalBB6alteredBB
  %117 = load i32, i32* %17, align 4
  %118 = bitcast %class.Table* %16 to %class.TableBase*
  %119 = load i32, i32* @x.95
  %120 = load i32, i32* @y.96
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %127 = invoke dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE4sizeEv(%class.TableBase* %118)
          to label %128 unwind label %232

; <label>:128:                                    ; preds = %originalBBpart28
  %129 = load i32, i32* @x.95
  %130 = load i32, i32* @y.96
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %128, %originalBB10alteredBB
  %137 = bitcast %class.TableIndices* %127 to %class.TableIndicesBase*
  %138 = load i32, i32* @x.95
  %139 = load i32, i32* @y.96
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %146 = invoke i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %137, i32 0)
          to label %147 unwind label %232

; <label>:147:                                    ; preds = %originalBBpart212
  %148 = icmp ult i32 %117, %146
  br i1 %148, label %149, label %272

; <label>:149:                                    ; preds = %147
  store i32 0, i32* %20, align 4
  br label %150

; <label>:150:                                    ; preds = %229, %149
  %151 = load i32, i32* @x.95
  %152 = load i32, i32* @y.96
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %150, %originalBB14alteredBB
  %159 = load i32, i32* %20, align 4
  %160 = bitcast %class.Table* %16 to %class.TableBase*
  %161 = load i32, i32* @x.95
  %162 = load i32, i32* @y.96
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %169 = invoke dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE4sizeEv(%class.TableBase* %160)
          to label %170 unwind label %232

; <label>:170:                                    ; preds = %originalBBpart216
  %171 = bitcast %class.TableIndices* %169 to %class.TableIndicesBase*
  %172 = invoke i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %171, i32 1)
          to label %173 unwind label %232

; <label>:173:                                    ; preds = %170
  %174 = load i32, i32* @x.95
  %175 = load i32, i32* @y.96
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %173, %originalBB18alteredBB
  %182 = icmp ult i32 %159, %172
  %183 = load i32, i32* @x.95
  %184 = load i32, i32* @y.96
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %182, label %191, label %252

; <label>:191:                                    ; preds = %originalBBpart220
  %192 = load i32, i32* @x.95
  %193 = load i32, i32* @y.96
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %191, %originalBB22alteredBB
  %200 = load i32, i32* %17, align 4
  %201 = load i32, i32* %20, align 4
  %202 = load i32, i32* @x.95
  %203 = load i32, i32* @y.96
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %210 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZN5TableILi2ESt6vectorIdSaIdEEEclEjj(%class.Table* %16, i32 %200, i32 %201)
          to label %211 unwind label %232

; <label>:211:                                    ; preds = %originalBBpart224
  %212 = load i32, i32* %12, align 4
  %213 = zext i32 %212 to i64
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEmd(%"class.std::vector.0"* %210, i64 %213, double 0.000000e+00)
          to label %214 unwind label %232

; <label>:214:                                    ; preds = %211
  %215 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 0
  %216 = load i32, i32* %20, align 4
  %217 = zext i32 %216 to i64
  %218 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %215, i64 %217)
          to label %219 unwind label %232

; <label>:219:                                    ; preds = %214
  %220 = load %class.Point.23*, %class.Point.23** %7, align 8
  %221 = load i32, i32* %17, align 4
  %222 = invoke double @_ZNK5PointILi2EEclEj(%class.Point.23* %220, i32 %221)
          to label %223 unwind label %232

; <label>:223:                                    ; preds = %219
  %224 = load i32, i32* %17, align 4
  %225 = load i32, i32* %20, align 4
  %226 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZN5TableILi2ESt6vectorIdSaIdEEEclEjj(%class.Table* %16, i32 %224, i32 %225)
          to label %227 unwind label %232

; <label>:227:                                    ; preds = %223
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %218, double %222, %"class.std::vector.0"* dereferenceable(24) %226)
          to label %228 unwind label %232

; <label>:228:                                    ; preds = %227
  br label %229

; <label>:229:                                    ; preds = %228
  %230 = load i32, i32* %20, align 4
  %231 = add i32 %230, 1
  store i32 %231, i32* %20, align 4
  br label %150

; <label>:232:                                    ; preds = %originalBBpart2225, %982, %974, %originalBBpart2221, %951, %949, %945, %942, %920, %originalBBpart2213, %718, %originalBBpart2156, %688, %originalBBpart2136, %originalBBpart2132, %originalBBpart2128, %originalBBpart2124, %609, %originalBBpart2120, %originalBBpart265, %404, %402, %originalBBpart261, %originalBBpart257, %originalBBpart253, %344, %343, %227, %223, %219, %214, %211, %originalBBpart224, %170, %originalBBpart216, %originalBBpart212, %originalBBpart28
  %233 = load i32, i32* @x.95
  %234 = load i32, i32* @y.96
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %232, %originalBB26alteredBB
  %241 = landingpad { i8*, i32 }
          cleanup
  %242 = extractvalue { i8*, i32 } %241, 0
  store i8* %242, i8** %18, align 8
  %243 = extractvalue { i8*, i32 } %241, 1
  store i32 %243, i32* %19, align 4
  %244 = load i32, i32* @x.95
  %245 = load i32, i32* @y.96
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %16)
          to label %1090 unwind label %1096

; <label>:252:                                    ; preds = %originalBBpart220
  %253 = load i32, i32* @x.95
  %254 = load i32, i32* @y.96
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %252, %originalBB30alteredBB
  %261 = load i32, i32* @x.95
  %262 = load i32, i32* @y.96
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %269

; <label>:269:                                    ; preds = %originalBBpart232
  %270 = load i32, i32* %17, align 4
  %271 = add i32 %270, 1
  store i32 %271, i32* %17, align 4
  br label %108

; <label>:272:                                    ; preds = %147
  %273 = load i8, i8* %13, align 1
  %274 = trunc i8 %273 to i1
  br i1 %274, label %275, label %495

; <label>:275:                                    ; preds = %272
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  br label %276

; <label>:276:                                    ; preds = %originalBBpart284, %275
  %277 = load i32, i32* @x.95
  %278 = load i32, i32* @y.96
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %276, %originalBB34alteredBB
  %285 = load i32, i32* %22, align 4
  %286 = icmp ult i32 %285, 1
  %287 = load i32, i32* @x.95
  %288 = load i32, i32* @y.96
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %286, label %295, label %494

; <label>:295:                                    ; preds = %originalBBpart236
  store i32 0, i32* %23, align 4
  br label %296

; <label>:296:                                    ; preds = %471, %295
  %297 = load i32, i32* @x.95
  %298 = load i32, i32* @y.96
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %296, %originalBB38alteredBB
  %305 = load i32, i32* %23, align 4
  %306 = load i32, i32* %11, align 4
  %307 = load i32, i32* %22, align 4
  %308 = sub i32 %306, %307
  %309 = icmp ult i32 %305, %308
  %310 = load i32, i32* @x.95
  %311 = load i32, i32* @y.96
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart245, label %originalBB38alteredBB

originalBBpart245:                                ; preds = %originalBB38
  br i1 %309, label %318, label %474

; <label>:318:                                    ; preds = %originalBBpart245
  %319 = load i32, i32* @x.95
  %320 = load i32, i32* @y.96
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %318, %originalBB47alteredBB
  store i32 0, i32* %24, align 4
  %327 = load i32, i32* @x.95
  %328 = load i32, i32* @y.96
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %335

; <label>:335:                                    ; preds = %451, %originalBBpart249
  %336 = load i32, i32* %24, align 4
  %337 = load i32, i32* %11, align 4
  %338 = load i32, i32* %23, align 4
  %339 = sub i32 %337, %338
  %340 = load i32, i32* %22, align 4
  %341 = sub i32 %339, %340
  %342 = icmp ult i32 %336, %341
  br i1 %342, label %343, label %454

; <label>:343:                                    ; preds = %335
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %25, %class.Table* %16, i32 0)
          to label %344 unwind label %232

; <label>:344:                                    ; preds = %343
  %345 = load i32, i32* %24, align 4
  %346 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %25, i32 %345)
          to label %347 unwind label %232

; <label>:347:                                    ; preds = %344
  %348 = load i32, i32* @x.95
  %349 = load i32, i32* @y.96
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %347, %originalBB51alteredBB
  %356 = load i32, i32* @x.95
  %357 = load i32, i32* @y.96
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  %364 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %346, i64 0)
          to label %365 unwind label %232

; <label>:365:                                    ; preds = %originalBBpart253
  %366 = load i32, i32* @x.95
  %367 = load i32, i32* @y.96
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %365, %originalBB55alteredBB
  %374 = load double, double* %364, align 8
  %375 = load i32, i32* @x.95
  %376 = load i32, i32* @y.96
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %26, %class.Table* %16, i32 1)
          to label %383 unwind label %232

; <label>:383:                                    ; preds = %originalBBpart257
  %384 = load i32, i32* @x.95
  %385 = load i32, i32* @y.96
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %383, %originalBB59alteredBB
  %392 = load i32, i32* %23, align 4
  %393 = load i32, i32* @x.95
  %394 = load i32, i32* @y.96
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  %401 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %26, i32 %392)
          to label %402 unwind label %232

; <label>:402:                                    ; preds = %originalBBpart261
  %403 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %401, i64 0)
          to label %404 unwind label %232

; <label>:404:                                    ; preds = %402
  %405 = load double, double* %403, align 8
  %406 = fmul double %374, %405
  %407 = fmul double %406, 1.000000e+00
  %408 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %409 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 3
  %410 = load i32, i32* %21, align 4
  %411 = add i32 %410, 1
  store i32 %411, i32* %21, align 4
  %412 = zext i32 %410 to i64
  %413 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %409, i64 %412)
          to label %414 unwind label %232

; <label>:414:                                    ; preds = %404
  %415 = load i32, i32* @x.95
  %416 = load i32, i32* @y.96
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %414, %originalBB63alteredBB
  %423 = load i32, i32* %413, align 4
  %424 = zext i32 %423 to i64
  %425 = load i32, i32* @x.95
  %426 = load i32, i32* @y.96
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  %433 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %408, i64 %424)
          to label %434 unwind label %232

; <label>:434:                                    ; preds = %originalBBpart265
  %435 = load i32, i32* @x.95
  %436 = load i32, i32* @y.96
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %434, %originalBB67alteredBB
  store double %407, double* %433, align 8
  %443 = load i32, i32* @x.95
  %444 = load i32, i32* @y.96
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %451

; <label>:451:                                    ; preds = %originalBBpart269
  %452 = load i32, i32* %24, align 4
  %453 = add i32 %452, 1
  store i32 %453, i32* %24, align 4
  br label %335

; <label>:454:                                    ; preds = %335
  %455 = load i32, i32* @x.95
  %456 = load i32, i32* @y.96
  %457 = sub i32 %455, 1
  %458 = mul i32 %455, %457
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %460, %461
  br i1 %462, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %454, %originalBB71alteredBB
  %463 = load i32, i32* @x.95
  %464 = load i32, i32* @y.96
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %471

; <label>:471:                                    ; preds = %originalBBpart273
  %472 = load i32, i32* %23, align 4
  %473 = add i32 %472, 1
  store i32 %473, i32* %23, align 4
  br label %296

; <label>:474:                                    ; preds = %originalBBpart245
  br label %475

; <label>:475:                                    ; preds = %474
  %476 = load i32, i32* @x.95
  %477 = load i32, i32* @y.96
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %475, %originalBB75alteredBB
  %484 = load i32, i32* %22, align 4
  %485 = add i32 %484, 1
  store i32 %485, i32* %22, align 4
  %486 = load i32, i32* @x.95
  %487 = load i32, i32* @y.96
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBBpart284, label %originalBB75alteredBB

originalBBpart284:                                ; preds = %originalBB75
  br label %276

; <label>:494:                                    ; preds = %originalBBpart236
  br label %495

; <label>:495:                                    ; preds = %494, %272
  %496 = load i32, i32* @x.95
  %497 = load i32, i32* @y.96
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %495, %originalBB86alteredBB
  %504 = load i8, i8* %14, align 1
  %505 = trunc i8 %504 to i1
  %506 = load i32, i32* @x.95
  %507 = load i32, i32* @y.96
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %505, label %514, label %786

; <label>:514:                                    ; preds = %originalBBpart288
  %515 = load i32, i32* @x.95
  %516 = load i32, i32* @y.96
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %514, %originalBB90alteredBB
  store i32 0, i32* %27, align 4
  store i32 0, i32* %28, align 4
  %523 = load i32, i32* @x.95
  %524 = load i32, i32* @y.96
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %531

; <label>:531:                                    ; preds = %782, %originalBBpart292
  %532 = load i32, i32* @x.95
  %533 = load i32, i32* @y.96
  %534 = sub i32 %532, 1
  %535 = mul i32 %532, %534
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %537, %538
  br i1 %539, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %531, %originalBB94alteredBB
  %540 = load i32, i32* %28, align 4
  %541 = icmp ult i32 %540, 1
  %542 = load i32, i32* @x.95
  %543 = load i32, i32* @y.96
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br i1 %541, label %550, label %785

; <label>:550:                                    ; preds = %originalBBpart296
  %551 = load i32, i32* @x.95
  %552 = load i32, i32* @y.96
  %553 = sub i32 %551, 1
  %554 = mul i32 %551, %553
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %556, %557
  br i1 %558, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %550, %originalBB98alteredBB
  store i32 0, i32* %29, align 4
  %559 = load i32, i32* @x.95
  %560 = load i32, i32* @y.96
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %567

; <label>:567:                                    ; preds = %originalBBpart2178, %originalBBpart2100
  %568 = load i32, i32* %29, align 4
  %569 = load i32, i32* %11, align 4
  %570 = load i32, i32* %28, align 4
  %571 = sub i32 %569, %570
  %572 = icmp ult i32 %568, %571
  br i1 %572, label %573, label %765

; <label>:573:                                    ; preds = %567
  store i32 0, i32* %30, align 4
  br label %574

; <label>:574:                                    ; preds = %originalBBpart2171, %573
  %575 = load i32, i32* %30, align 4
  %576 = load i32, i32* %11, align 4
  %577 = load i32, i32* %29, align 4
  %578 = sub i32 %576, %577
  %579 = load i32, i32* %28, align 4
  %580 = sub i32 %578, %579
  %581 = icmp ult i32 %575, %580
  br i1 %581, label %582, label %745

; <label>:582:                                    ; preds = %574
  %583 = load i32, i32* @x.95
  %584 = load i32, i32* @y.96
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %582, %originalBB102alteredBB
  %591 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 3
  %592 = load i32, i32* %27, align 4
  %593 = add i32 %592, 1
  store i32 %593, i32* %27, align 4
  %594 = zext i32 %592 to i64
  %595 = load i32, i32* @x.95
  %596 = load i32, i32* @y.96
  %597 = sub i32 %595, 1
  %598 = mul i32 %595, %597
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %596, 10
  %602 = or i1 %600, %601
  br i1 %602, label %originalBBpart2120, label %originalBB102alteredBB

originalBBpart2120:                               ; preds = %originalBB102
  %603 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %591, i64 %594)
          to label %604 unwind label %232

; <label>:604:                                    ; preds = %originalBBpart2120
  %605 = load i32, i32* %603, align 4
  store i32 %605, i32* %31, align 4
  store i32 0, i32* %32, align 4
  br label %606

; <label>:606:                                    ; preds = %722, %604
  %607 = load i32, i32* %32, align 4
  %608 = icmp ult i32 %607, 2
  br i1 %608, label %609, label %725

; <label>:609:                                    ; preds = %606
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %33, %class.Table* %16, i32 0)
          to label %610 unwind label %232

; <label>:610:                                    ; preds = %609
  %611 = load i32, i32* @x.95
  %612 = load i32, i32* @y.96
  %613 = sub i32 %611, 1
  %614 = mul i32 %611, %613
  %615 = urem i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = icmp slt i32 %612, 10
  %618 = or i1 %616, %617
  br i1 %618, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %610, %originalBB122alteredBB
  %619 = load i32, i32* %30, align 4
  %620 = load i32, i32* @x.95
  %621 = load i32, i32* @y.96
  %622 = sub i32 %620, 1
  %623 = mul i32 %620, %622
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %625, %626
  br i1 %627, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  %628 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %33, i32 %619)
          to label %629 unwind label %232

; <label>:629:                                    ; preds = %originalBBpart2124
  %630 = load i32, i32* @x.95
  %631 = load i32, i32* @y.96
  %632 = sub i32 %630, 1
  %633 = mul i32 %630, %632
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %631, 10
  %637 = or i1 %635, %636
  br i1 %637, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %629, %originalBB126alteredBB
  %638 = load i32, i32* %32, align 4
  %639 = icmp eq i32 %638, 0
  %640 = select i1 %639, i32 1, i32 0
  %641 = sext i32 %640 to i64
  %642 = load i32, i32* @x.95
  %643 = load i32, i32* @y.96
  %644 = sub i32 %642, 1
  %645 = mul i32 %642, %644
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %647, %648
  br i1 %649, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  %650 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %628, i64 %641)
          to label %651 unwind label %232

; <label>:651:                                    ; preds = %originalBBpart2128
  %652 = load i32, i32* @x.95
  %653 = load i32, i32* @y.96
  %654 = sub i32 %652, 1
  %655 = mul i32 %652, %654
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %653, 10
  %659 = or i1 %657, %658
  br i1 %659, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %651, %originalBB130alteredBB
  %660 = load double, double* %650, align 8
  %661 = load i32, i32* @x.95
  %662 = load i32, i32* @y.96
  %663 = sub i32 %661, 1
  %664 = mul i32 %661, %663
  %665 = urem i32 %664, 2
  %666 = icmp eq i32 %665, 0
  %667 = icmp slt i32 %662, 10
  %668 = or i1 %666, %667
  br i1 %668, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %34, %class.Table* %16, i32 1)
          to label %669 unwind label %232

; <label>:669:                                    ; preds = %originalBBpart2132
  %670 = load i32, i32* @x.95
  %671 = load i32, i32* @y.96
  %672 = sub i32 %670, 1
  %673 = mul i32 %670, %672
  %674 = urem i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = icmp slt i32 %671, 10
  %677 = or i1 %675, %676
  br i1 %677, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %669, %originalBB134alteredBB
  %678 = load i32, i32* %29, align 4
  %679 = load i32, i32* @x.95
  %680 = load i32, i32* @y.96
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  %687 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %34, i32 %678)
          to label %688 unwind label %232

; <label>:688:                                    ; preds = %originalBBpart2136
  %689 = load i32, i32* %32, align 4
  %690 = icmp eq i32 %689, 1
  %691 = select i1 %690, i32 1, i32 0
  %692 = sext i32 %691 to i64
  %693 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %687, i64 %692)
          to label %694 unwind label %232

; <label>:694:                                    ; preds = %688
  %695 = load i32, i32* @x.95
  %696 = load i32, i32* @y.96
  %697 = sub i32 %695, 1
  %698 = mul i32 %695, %697
  %699 = urem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = icmp slt i32 %696, 10
  %702 = or i1 %700, %701
  br i1 %702, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %694, %originalBB138alteredBB
  %703 = load double, double* %693, align 8
  %704 = fmul double %660, %703
  %705 = fmul double %704, 1.000000e+00
  %706 = load %"class.std::vector.25"*, %"class.std::vector.25"** %9, align 8
  %707 = load i32, i32* %31, align 4
  %708 = zext i32 %707 to i64
  %709 = load i32, i32* @x.95
  %710 = load i32, i32* @y.96
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBBpart2156, label %originalBB138alteredBB

originalBBpart2156:                               ; preds = %originalBB138
  %717 = invoke dereferenceable(16) %class.Tensor.24* @_ZNSt6vectorI6TensorILi1ELi2EESaIS1_EEixEm(%"class.std::vector.25"* %706, i64 %708)
          to label %718 unwind label %232

; <label>:718:                                    ; preds = %originalBBpart2156
  %719 = load i32, i32* %32, align 4
  %720 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %717, i32 %719)
          to label %721 unwind label %232

; <label>:721:                                    ; preds = %718
  store double %705, double* %720, align 8
  br label %722

; <label>:722:                                    ; preds = %721
  %723 = load i32, i32* %32, align 4
  %724 = add i32 %723, 1
  store i32 %724, i32* %32, align 4
  br label %606

; <label>:725:                                    ; preds = %606
  br label %726

; <label>:726:                                    ; preds = %725
  %727 = load i32, i32* @x.95
  %728 = load i32, i32* @y.96
  %729 = sub i32 %727, 1
  %730 = mul i32 %727, %729
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %728, 10
  %734 = or i1 %732, %733
  br i1 %734, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %726, %originalBB158alteredBB
  %735 = load i32, i32* %30, align 4
  %736 = add i32 %735, 1
  store i32 %736, i32* %30, align 4
  %737 = load i32, i32* @x.95
  %738 = load i32, i32* @y.96
  %739 = sub i32 %737, 1
  %740 = mul i32 %737, %739
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %738, 10
  %744 = or i1 %742, %743
  br i1 %744, label %originalBBpart2171, label %originalBB158alteredBB

originalBBpart2171:                               ; preds = %originalBB158
  br label %574

; <label>:745:                                    ; preds = %574
  br label %746

; <label>:746:                                    ; preds = %745
  %747 = load i32, i32* @x.95
  %748 = load i32, i32* @y.96
  %749 = sub i32 %747, 1
  %750 = mul i32 %747, %749
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %752, %753
  br i1 %754, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %746, %originalBB173alteredBB
  %755 = load i32, i32* %29, align 4
  %756 = add i32 %755, 1
  store i32 %756, i32* %29, align 4
  %757 = load i32, i32* @x.95
  %758 = load i32, i32* @y.96
  %759 = sub i32 %757, 1
  %760 = mul i32 %757, %759
  %761 = urem i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = icmp slt i32 %758, 10
  %764 = or i1 %762, %763
  br i1 %764, label %originalBBpart2178, label %originalBB173alteredBB

originalBBpart2178:                               ; preds = %originalBB173
  br label %567

; <label>:765:                                    ; preds = %567
  %766 = load i32, i32* @x.95
  %767 = load i32, i32* @y.96
  %768 = sub i32 %766, 1
  %769 = mul i32 %766, %768
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %767, 10
  %773 = or i1 %771, %772
  br i1 %773, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %765, %originalBB180alteredBB
  %774 = load i32, i32* @x.95
  %775 = load i32, i32* @y.96
  %776 = sub i32 %774, 1
  %777 = mul i32 %774, %776
  %778 = urem i32 %777, 2
  %779 = icmp eq i32 %778, 0
  %780 = icmp slt i32 %775, 10
  %781 = or i1 %779, %780
  br i1 %781, label %originalBBpart2182, label %originalBB180alteredBB

originalBBpart2182:                               ; preds = %originalBB180
  br label %782

; <label>:782:                                    ; preds = %originalBBpart2182
  %783 = load i32, i32* %28, align 4
  %784 = add i32 %783, 1
  store i32 %784, i32* %28, align 4
  br label %531

; <label>:785:                                    ; preds = %originalBBpart296
  br label %786

; <label>:786:                                    ; preds = %785, %originalBBpart288
  %787 = load i8, i8* %15, align 1
  %788 = trunc i8 %787 to i1
  br i1 %788, label %789, label %1089

; <label>:789:                                    ; preds = %786
  %790 = load i32, i32* @x.95
  %791 = load i32, i32* @y.96
  %792 = sub i32 %790, 1
  %793 = mul i32 %790, %792
  %794 = urem i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = icmp slt i32 %791, 10
  %797 = or i1 %795, %796
  br i1 %797, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %789, %originalBB184alteredBB
  store i32 0, i32* %35, align 4
  store i32 0, i32* %36, align 4
  %798 = load i32, i32* @x.95
  %799 = load i32, i32* @y.96
  %800 = sub i32 %798, 1
  %801 = mul i32 %798, %800
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %799, 10
  %805 = or i1 %803, %804
  br i1 %805, label %originalBBpart2186, label %originalBB184alteredBB

originalBBpart2186:                               ; preds = %originalBB184
  br label %806

; <label>:806:                                    ; preds = %1085, %originalBBpart2186
  %807 = load i32, i32* @x.95
  %808 = load i32, i32* @y.96
  %809 = sub i32 %807, 1
  %810 = mul i32 %807, %809
  %811 = urem i32 %810, 2
  %812 = icmp eq i32 %811, 0
  %813 = icmp slt i32 %808, 10
  %814 = or i1 %812, %813
  br i1 %814, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %806, %originalBB188alteredBB
  %815 = load i32, i32* %36, align 4
  %816 = icmp ult i32 %815, 1
  %817 = load i32, i32* @x.95
  %818 = load i32, i32* @y.96
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br i1 %816, label %825, label %1088

; <label>:825:                                    ; preds = %originalBBpart2190
  %826 = load i32, i32* @x.95
  %827 = load i32, i32* @y.96
  %828 = sub i32 %826, 1
  %829 = mul i32 %826, %828
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %827, 10
  %833 = or i1 %831, %832
  br i1 %833, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %825, %originalBB192alteredBB
  store i32 0, i32* %37, align 4
  %834 = load i32, i32* @x.95
  %835 = load i32, i32* @y.96
  %836 = sub i32 %834, 1
  %837 = mul i32 %834, %836
  %838 = urem i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = icmp slt i32 %835, 10
  %841 = or i1 %839, %840
  br i1 %841, label %originalBBpart2194, label %originalBB192alteredBB

originalBBpart2194:                               ; preds = %originalBB192
  br label %842

; <label>:842:                                    ; preds = %1065, %originalBBpart2194
  %843 = load i32, i32* @x.95
  %844 = load i32, i32* @y.96
  %845 = sub i32 %843, 1
  %846 = mul i32 %843, %845
  %847 = urem i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = icmp slt i32 %844, 10
  %850 = or i1 %848, %849
  br i1 %850, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %842, %originalBB196alteredBB
  %851 = load i32, i32* %37, align 4
  %852 = load i32, i32* %11, align 4
  %853 = load i32, i32* %36, align 4
  %854 = sub i32 %852, %853
  %855 = icmp ult i32 %851, %854
  %856 = load i32, i32* @x.95
  %857 = load i32, i32* @y.96
  %858 = sub i32 %856, 1
  %859 = mul i32 %856, %858
  %860 = urem i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = icmp slt i32 %857, 10
  %863 = or i1 %861, %862
  br i1 %863, label %originalBBpart2204, label %originalBB196alteredBB

originalBBpart2204:                               ; preds = %originalBB196
  br i1 %855, label %864, label %1068

; <label>:864:                                    ; preds = %originalBBpart2204
  store i32 0, i32* %38, align 4
  br label %865

; <label>:865:                                    ; preds = %1061, %864
  %866 = load i32, i32* %38, align 4
  %867 = load i32, i32* %11, align 4
  %868 = load i32, i32* %37, align 4
  %869 = sub i32 %867, %868
  %870 = load i32, i32* %36, align 4
  %871 = sub i32 %869, %870
  %872 = icmp ult i32 %866, %871
  br i1 %872, label %873, label %1064

; <label>:873:                                    ; preds = %865
  %874 = load i32, i32* @x.95
  %875 = load i32, i32* @y.96
  %876 = sub i32 %874, 1
  %877 = mul i32 %874, %876
  %878 = urem i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = icmp slt i32 %875, 10
  %881 = or i1 %879, %880
  br i1 %881, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %873, %originalBB206alteredBB
  %882 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 3
  %883 = load i32, i32* %35, align 4
  %884 = add i32 %883, 1
  store i32 %884, i32* %35, align 4
  %885 = zext i32 %883 to i64
  %886 = load i32, i32* @x.95
  %887 = load i32, i32* @y.96
  %888 = sub i32 %886, 1
  %889 = mul i32 %886, %888
  %890 = urem i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = icmp slt i32 %887, 10
  %893 = or i1 %891, %892
  br i1 %893, label %originalBBpart2213, label %originalBB206alteredBB

originalBBpart2213:                               ; preds = %originalBB206
  %894 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %882, i64 %885)
          to label %895 unwind label %232

; <label>:895:                                    ; preds = %originalBBpart2213
  %896 = load i32, i32* @x.95
  %897 = load i32, i32* @y.96
  %898 = sub i32 %896, 1
  %899 = mul i32 %896, %898
  %900 = urem i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = icmp slt i32 %897, 10
  %903 = or i1 %901, %902
  br i1 %903, label %originalBB215, label %originalBB215alteredBB

originalBB215:                                    ; preds = %895, %originalBB215alteredBB
  %904 = load i32, i32* %894, align 4
  store i32 %904, i32* %39, align 4
  store i32 0, i32* %40, align 4
  %905 = load i32, i32* @x.95
  %906 = load i32, i32* @y.96
  %907 = sub i32 %905, 1
  %908 = mul i32 %905, %907
  %909 = urem i32 %908, 2
  %910 = icmp eq i32 %909, 0
  %911 = icmp slt i32 %906, 10
  %912 = or i1 %910, %911
  br i1 %912, label %originalBBpart2217, label %originalBB215alteredBB

originalBBpart2217:                               ; preds = %originalBB215
  br label %913

; <label>:913:                                    ; preds = %1041, %originalBBpart2217
  %914 = load i32, i32* %40, align 4
  %915 = icmp ult i32 %914, 2
  br i1 %915, label %916, label %1044

; <label>:916:                                    ; preds = %913
  store i32 0, i32* %41, align 4
  br label %917

; <label>:917:                                    ; preds = %originalBBpart2233, %916
  %918 = load i32, i32* %41, align 4
  %919 = icmp ult i32 %918, 2
  br i1 %919, label %920, label %1024

; <label>:920:                                    ; preds = %917
  %921 = load i32, i32* %40, align 4
  %922 = icmp eq i32 %921, 0
  %923 = select i1 %922, i32 1, i32 0
  %924 = load i32, i32* %41, align 4
  %925 = icmp eq i32 %924, 0
  %926 = select i1 %925, i32 1, i32 0
  %927 = add nsw i32 %923, %926
  store i32 %927, i32* %42, align 4
  %928 = load i32, i32* %40, align 4
  %929 = icmp eq i32 %928, 1
  %930 = select i1 %929, i32 1, i32 0
  %931 = load i32, i32* %41, align 4
  %932 = icmp eq i32 %931, 1
  %933 = select i1 %932, i32 1, i32 0
  %934 = add nsw i32 %930, %933
  store i32 %934, i32* %43, align 4
  %935 = load i32, i32* %40, align 4
  %936 = icmp eq i32 %935, 2
  %937 = select i1 %936, i32 1, i32 0
  %938 = load i32, i32* %41, align 4
  %939 = icmp eq i32 %938, 2
  %940 = select i1 %939, i32 1, i32 0
  %941 = add nsw i32 %937, %940
  store i32 %941, i32* %44, align 4
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %45, %class.Table* %16, i32 0)
          to label %942 unwind label %232

; <label>:942:                                    ; preds = %920
  %943 = load i32, i32* %38, align 4
  %944 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %45, i32 %943)
          to label %945 unwind label %232

; <label>:945:                                    ; preds = %942
  %946 = load i32, i32* %42, align 4
  %947 = zext i32 %946 to i64
  %948 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %944, i64 %947)
          to label %949 unwind label %232

; <label>:949:                                    ; preds = %945
  %950 = load double, double* %948, align 8
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %46, %class.Table* %16, i32 1)
          to label %951 unwind label %232

; <label>:951:                                    ; preds = %949
  %952 = load i32, i32* %37, align 4
  %953 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %46, i32 %952)
          to label %954 unwind label %232

; <label>:954:                                    ; preds = %951
  %955 = load i32, i32* @x.95
  %956 = load i32, i32* @y.96
  %957 = sub i32 %955, 1
  %958 = mul i32 %955, %957
  %959 = urem i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = icmp slt i32 %956, 10
  %962 = or i1 %960, %961
  br i1 %962, label %originalBB219, label %originalBB219alteredBB

originalBB219:                                    ; preds = %954, %originalBB219alteredBB
  %963 = load i32, i32* %43, align 4
  %964 = zext i32 %963 to i64
  %965 = load i32, i32* @x.95
  %966 = load i32, i32* @y.96
  %967 = sub i32 %965, 1
  %968 = mul i32 %965, %967
  %969 = urem i32 %968, 2
  %970 = icmp eq i32 %969, 0
  %971 = icmp slt i32 %966, 10
  %972 = or i1 %970, %971
  br i1 %972, label %originalBBpart2221, label %originalBB219alteredBB

originalBBpart2221:                               ; preds = %originalBB219
  %973 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %953, i64 %964)
          to label %974 unwind label %232

; <label>:974:                                    ; preds = %originalBBpart2221
  %975 = load double, double* %973, align 8
  %976 = fmul double %950, %975
  %977 = fmul double %976, 1.000000e+00
  %978 = load %"class.std::vector.30"*, %"class.std::vector.30"** %10, align 8
  %979 = load i32, i32* %39, align 4
  %980 = zext i32 %979 to i64
  %981 = invoke dereferenceable(32) %class.Tensor.35* @_ZNSt6vectorI6TensorILi2ELi2EESaIS1_EEixEm(%"class.std::vector.30"* %978, i64 %980)
          to label %982 unwind label %232

; <label>:982:                                    ; preds = %974
  %983 = load i32, i32* %40, align 4
  %984 = invoke dereferenceable(16) %class.Tensor.24* @_ZN6TensorILi2ELi2EEixEj(%class.Tensor.35* %981, i32 %983)
          to label %985 unwind label %232

; <label>:985:                                    ; preds = %982
  %986 = load i32, i32* @x.95
  %987 = load i32, i32* @y.96
  %988 = sub i32 %986, 1
  %989 = mul i32 %986, %988
  %990 = urem i32 %989, 2
  %991 = icmp eq i32 %990, 0
  %992 = icmp slt i32 %987, 10
  %993 = or i1 %991, %992
  br i1 %993, label %originalBB223, label %originalBB223alteredBB

originalBB223:                                    ; preds = %985, %originalBB223alteredBB
  %994 = load i32, i32* %41, align 4
  %995 = load i32, i32* @x.95
  %996 = load i32, i32* @y.96
  %997 = sub i32 %995, 1
  %998 = mul i32 %995, %997
  %999 = urem i32 %998, 2
  %1000 = icmp eq i32 %999, 0
  %1001 = icmp slt i32 %996, 10
  %1002 = or i1 %1000, %1001
  br i1 %1002, label %originalBBpart2225, label %originalBB223alteredBB

originalBBpart2225:                               ; preds = %originalBB223
  %1003 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %984, i32 %994)
          to label %1004 unwind label %232

; <label>:1004:                                   ; preds = %originalBBpart2225
  store double %977, double* %1003, align 8
  br label %1005

; <label>:1005:                                   ; preds = %1004
  %1006 = load i32, i32* @x.95
  %1007 = load i32, i32* @y.96
  %1008 = sub i32 %1006, 1
  %1009 = mul i32 %1006, %1008
  %1010 = urem i32 %1009, 2
  %1011 = icmp eq i32 %1010, 0
  %1012 = icmp slt i32 %1007, 10
  %1013 = or i1 %1011, %1012
  br i1 %1013, label %originalBB227, label %originalBB227alteredBB

originalBB227:                                    ; preds = %1005, %originalBB227alteredBB
  %1014 = load i32, i32* %41, align 4
  %1015 = add i32 %1014, 1
  store i32 %1015, i32* %41, align 4
  %1016 = load i32, i32* @x.95
  %1017 = load i32, i32* @y.96
  %1018 = sub i32 %1016, 1
  %1019 = mul i32 %1016, %1018
  %1020 = urem i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  %1022 = icmp slt i32 %1017, 10
  %1023 = or i1 %1021, %1022
  br i1 %1023, label %originalBBpart2233, label %originalBB227alteredBB

originalBBpart2233:                               ; preds = %originalBB227
  br label %917

; <label>:1024:                                   ; preds = %917
  %1025 = load i32, i32* @x.95
  %1026 = load i32, i32* @y.96
  %1027 = sub i32 %1025, 1
  %1028 = mul i32 %1025, %1027
  %1029 = urem i32 %1028, 2
  %1030 = icmp eq i32 %1029, 0
  %1031 = icmp slt i32 %1026, 10
  %1032 = or i1 %1030, %1031
  br i1 %1032, label %originalBB235, label %originalBB235alteredBB

originalBB235:                                    ; preds = %1024, %originalBB235alteredBB
  %1033 = load i32, i32* @x.95
  %1034 = load i32, i32* @y.96
  %1035 = sub i32 %1033, 1
  %1036 = mul i32 %1033, %1035
  %1037 = urem i32 %1036, 2
  %1038 = icmp eq i32 %1037, 0
  %1039 = icmp slt i32 %1034, 10
  %1040 = or i1 %1038, %1039
  br i1 %1040, label %originalBBpart2237, label %originalBB235alteredBB

originalBBpart2237:                               ; preds = %originalBB235
  br label %1041

; <label>:1041:                                   ; preds = %originalBBpart2237
  %1042 = load i32, i32* %40, align 4
  %1043 = add i32 %1042, 1
  store i32 %1043, i32* %40, align 4
  br label %913

; <label>:1044:                                   ; preds = %913
  %1045 = load i32, i32* @x.95
  %1046 = load i32, i32* @y.96
  %1047 = sub i32 %1045, 1
  %1048 = mul i32 %1045, %1047
  %1049 = urem i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = icmp slt i32 %1046, 10
  %1052 = or i1 %1050, %1051
  br i1 %1052, label %originalBB239, label %originalBB239alteredBB

originalBB239:                                    ; preds = %1044, %originalBB239alteredBB
  %1053 = load i32, i32* @x.95
  %1054 = load i32, i32* @y.96
  %1055 = sub i32 %1053, 1
  %1056 = mul i32 %1053, %1055
  %1057 = urem i32 %1056, 2
  %1058 = icmp eq i32 %1057, 0
  %1059 = icmp slt i32 %1054, 10
  %1060 = or i1 %1058, %1059
  br i1 %1060, label %originalBBpart2241, label %originalBB239alteredBB

originalBBpart2241:                               ; preds = %originalBB239
  br label %1061

; <label>:1061:                                   ; preds = %originalBBpart2241
  %1062 = load i32, i32* %38, align 4
  %1063 = add i32 %1062, 1
  store i32 %1063, i32* %38, align 4
  br label %865

; <label>:1064:                                   ; preds = %865
  br label %1065

; <label>:1065:                                   ; preds = %1064
  %1066 = load i32, i32* %37, align 4
  %1067 = add i32 %1066, 1
  store i32 %1067, i32* %37, align 4
  br label %842

; <label>:1068:                                   ; preds = %originalBBpart2204
  %1069 = load i32, i32* @x.95
  %1070 = load i32, i32* @y.96
  %1071 = sub i32 %1069, 1
  %1072 = mul i32 %1069, %1071
  %1073 = urem i32 %1072, 2
  %1074 = icmp eq i32 %1073, 0
  %1075 = icmp slt i32 %1070, 10
  %1076 = or i1 %1074, %1075
  br i1 %1076, label %originalBB243, label %originalBB243alteredBB

originalBB243:                                    ; preds = %1068, %originalBB243alteredBB
  %1077 = load i32, i32* @x.95
  %1078 = load i32, i32* @y.96
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBBpart2245, label %originalBB243alteredBB

originalBBpart2245:                               ; preds = %originalBB243
  br label %1085

; <label>:1085:                                   ; preds = %originalBBpart2245
  %1086 = load i32, i32* %36, align 4
  %1087 = add i32 %1086, 1
  store i32 %1087, i32* %36, align 4
  br label %806

; <label>:1088:                                   ; preds = %originalBBpart2190
  br label %1089

; <label>:1089:                                   ; preds = %1088, %786
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %16)
  ret void

; <label>:1090:                                   ; preds = %originalBBpart228
  br label %1091

; <label>:1091:                                   ; preds = %1090
  %1092 = load i8*, i8** %18, align 8
  %1093 = load i32, i32* %19, align 4
  %1094 = insertvalue { i8*, i32 } undef, i8* %1092, 0
  %1095 = insertvalue { i8*, i32 } %1094, i32 %1093, 1
  resume { i8*, i32 } %1095

; <label>:1096:                                   ; preds = %originalBBpart228
  %1097 = load i32, i32* @x.95
  %1098 = load i32, i32* @y.96
  %1099 = sub i32 %1097, 1
  %1100 = mul i32 %1097, %1099
  %1101 = urem i32 %1100, 2
  %1102 = icmp eq i32 %1101, 0
  %1103 = icmp slt i32 %1098, 10
  %1104 = or i1 %1102, %1103
  br i1 %1104, label %originalBB247, label %originalBB247alteredBB

originalBB247:                                    ; preds = %1096, %originalBB247alteredBB
  %1105 = landingpad { i8*, i32 }
          catch i8* null
  %1106 = extractvalue { i8*, i32 } %1105, 0
  call void @__clang_call_terminate(i8* %1106) #7
  %1107 = load i32, i32* @x.95
  %1108 = load i32, i32* @y.96
  %1109 = sub i32 %1107, 1
  %1110 = mul i32 %1107, %1109
  %1111 = urem i32 %1110, 2
  %1112 = icmp eq i32 %1111, 0
  %1113 = icmp slt i32 %1108, 10
  %1114 = or i1 %1112, %1113
  br i1 %1114, label %originalBBpart2249, label %originalBB247alteredBB

originalBBpart2249:                               ; preds = %originalBB247
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %58
  %1115 = load %"class.std::vector.25"*, %"class.std::vector.25"** %9, align 8
  %1116 = call i64 @_ZNKSt6vectorI6TensorILi1ELi2EESaIS1_EE4sizeEv(%"class.std::vector.25"* %1115)
  %1117 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 1
  %1118 = load i32, i32* %1117, align 8
  %1119 = zext i32 %1118 to i64
  %1120 = icmp eq i64 %1116, %1119
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %90
  %1121 = load i32, i32* %11, align 4
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEEC2Ejj(%class.Table* %16, i32 2, i32 %1121)
  store i32 0, i32* %17, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %108
  %1122 = load i32, i32* %17, align 4
  %1123 = bitcast %class.Table* %16 to %class.TableBase*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %128
  %1124 = bitcast %class.TableIndices* %127 to %class.TableIndicesBase*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %150
  %1125 = load i32, i32* %20, align 4
  %1126 = bitcast %class.Table* %16 to %class.TableBase*
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %173
  %1127 = icmp ult i32 %159, %172
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %191
  %1128 = load i32, i32* %17, align 4
  %1129 = load i32, i32* %20, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %232
  %1130 = landingpad { i8*, i32 }
          cleanup
  %1131 = extractvalue { i8*, i32 } %1130, 0
  store i8* %1131, i8** %18, align 8
  %1132 = extractvalue { i8*, i32 } %1130, 1
  store i32 %1132, i32* %19, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %252
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %276
  %1133 = load i32, i32* %22, align 4
  %1134 = icmp ult i32 %1133, 1
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %296
  %1135 = load i32, i32* %23, align 4
  %1136 = load i32, i32* %11, align 4
  %1137 = load i32, i32* %22, align 4
  %_ = sub i32 0, %1136
  %gen = add i32 %_, %1137
  %_39 = sub i32 %1136, %1137
  %gen40 = mul i32 %_39, %1137
  %_41 = sub i32 %1136, %1137
  %gen42 = mul i32 %_41, %1137
  %_43 = shl i32 %1136, %1137
  %1138 = sub i32 %1136, %1137
  %1139 = icmp ult i32 %1135, %1138
  br label %originalBB38

originalBB47alteredBB:                            ; preds = %originalBB47, %318
  store i32 0, i32* %24, align 4
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %347
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %365
  %1140 = load double, double* %364, align 8
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %383
  %1141 = load i32, i32* %23, align 4
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %414
  %1142 = load i32, i32* %413, align 4
  %1143 = zext i32 %1142 to i64
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %434
  store double %407, double* %433, align 8
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %454
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %475
  %1144 = load i32, i32* %22, align 4
  %_76 = shl i32 %1144, 1
  %_77 = sub i32 0, %1144
  %gen78 = add i32 %_77, 1
  %_79 = sub i32 %1144, 1
  %gen80 = mul i32 %_79, 1
  %_81 = shl i32 %1144, 1
  %_82 = shl i32 %1144, 1
  %1145 = add i32 %1144, 1
  store i32 %1145, i32* %22, align 4
  br label %originalBB75

originalBB86alteredBB:                            ; preds = %originalBB86, %495
  %1146 = load i8, i8* %14, align 1
  %1147 = trunc i8 %1146 to i1
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %514
  store i32 0, i32* %27, align 4
  store i32 0, i32* %28, align 4
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %531
  %1148 = load i32, i32* %28, align 4
  %1149 = icmp ult i32 %1148, 1
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %550
  store i32 0, i32* %29, align 4
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %582
  %1150 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 3
  %1151 = load i32, i32* %27, align 4
  %_103 = sub i32 %1151, 1
  %gen104 = mul i32 %_103, 1
  %_105 = sub i32 %1151, 1
  %gen106 = mul i32 %_105, 1
  %_107 = sub i32 %1151, 1
  %gen108 = mul i32 %_107, 1
  %_109 = sub i32 %1151, 1
  %gen110 = mul i32 %_109, 1
  %_111 = sub i32 0, %1151
  %gen112 = add i32 %_111, 1
  %_113 = sub i32 0, %1151
  %gen114 = add i32 %_113, 1
  %_115 = sub i32 %1151, 1
  %gen116 = mul i32 %_115, 1
  %_117 = sub i32 0, %1151
  %gen118 = add i32 %_117, 1
  %1152 = add i32 %1151, 1
  store i32 %1152, i32* %27, align 4
  %1153 = zext i32 %1151 to i64
  br label %originalBB102

originalBB122alteredBB:                           ; preds = %originalBB122, %610
  %1154 = load i32, i32* %30, align 4
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %629
  %1155 = load i32, i32* %32, align 4
  %1156 = icmp eq i32 %1155, 0
  %1157 = select i1 %1156, i32 1, i32 0
  %1158 = sext i32 %1157 to i64
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %651
  %1159 = load double, double* %650, align 8
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %669
  %1160 = load i32, i32* %29, align 4
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %694
  %1161 = load double, double* %693, align 8
  %_139 = fsub double %660, %1161
  %gen140 = fmul double %_139, %1161
  %_141 = fsub double -0.000000e+00, %660
  %gen142 = fadd double %_141, %1161
  %_143 = fsub double %660, %1161
  %gen144 = fmul double %_143, %1161
  %_145 = fsub double -0.000000e+00, %660
  %gen146 = fadd double %_145, %1161
  %_147 = fsub double -0.000000e+00, %660
  %gen148 = fadd double %_147, %1161
  %1162 = fmul double %660, %1161
  %_149 = fsub double -0.000000e+00, %1162
  %gen150 = fadd double %_149, 1.000000e+00
  %_151 = fsub double -0.000000e+00, %1162
  %gen152 = fadd double %_151, 1.000000e+00
  %_153 = fsub double %1162, 1.000000e+00
  %gen154 = fmul double %_153, 1.000000e+00
  %1163 = fmul double %1162, 1.000000e+00
  %1164 = load %"class.std::vector.25"*, %"class.std::vector.25"** %9, align 8
  %1165 = load i32, i32* %31, align 4
  %1166 = zext i32 %1165 to i64
  br label %originalBB138

originalBB158alteredBB:                           ; preds = %originalBB158, %726
  %1167 = load i32, i32* %30, align 4
  %_159 = sub i32 0, %1167
  %gen160 = add i32 %_159, 1
  %_161 = shl i32 %1167, 1
  %_162 = shl i32 %1167, 1
  %_163 = sub i32 0, %1167
  %gen164 = add i32 %_163, 1
  %_165 = sub i32 0, %1167
  %gen166 = add i32 %_165, 1
  %_167 = sub i32 0, %1167
  %gen168 = add i32 %_167, 1
  %_169 = shl i32 %1167, 1
  %1168 = add i32 %1167, 1
  store i32 %1168, i32* %30, align 4
  br label %originalBB158

originalBB173alteredBB:                           ; preds = %originalBB173, %746
  %1169 = load i32, i32* %29, align 4
  %_174 = sub i32 0, %1169
  %gen175 = add i32 %_174, 1
  %_176 = shl i32 %1169, 1
  %1170 = add i32 %1169, 1
  store i32 %1170, i32* %29, align 4
  br label %originalBB173

originalBB180alteredBB:                           ; preds = %originalBB180, %765
  br label %originalBB180

originalBB184alteredBB:                           ; preds = %originalBB184, %789
  store i32 0, i32* %35, align 4
  store i32 0, i32* %36, align 4
  br label %originalBB184

originalBB188alteredBB:                           ; preds = %originalBB188, %806
  %1171 = load i32, i32* %36, align 4
  %1172 = icmp ult i32 %1171, 1
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %825
  store i32 0, i32* %37, align 4
  br label %originalBB192

originalBB196alteredBB:                           ; preds = %originalBB196, %842
  %1173 = load i32, i32* %37, align 4
  %1174 = load i32, i32* %11, align 4
  %1175 = load i32, i32* %36, align 4
  %_197 = sub i32 0, %1174
  %gen198 = add i32 %_197, %1175
  %_199 = sub i32 0, %1174
  %gen200 = add i32 %_199, %1175
  %_201 = sub i32 %1174, %1175
  %gen202 = mul i32 %_201, %1175
  %1176 = sub i32 %1174, %1175
  %1177 = icmp ult i32 %1173, %1176
  br label %originalBB196

originalBB206alteredBB:                           ; preds = %originalBB206, %873
  %1178 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %47, i32 0, i32 3
  %1179 = load i32, i32* %35, align 4
  %_207 = shl i32 %1179, 1
  %_208 = sub i32 0, %1179
  %gen209 = add i32 %_208, 1
  %_210 = sub i32 0, %1179
  %gen211 = add i32 %_210, 1
  %1180 = add i32 %1179, 1
  store i32 %1180, i32* %35, align 4
  %1181 = zext i32 %1179 to i64
  br label %originalBB206

originalBB215alteredBB:                           ; preds = %originalBB215, %895
  %1182 = load i32, i32* %894, align 4
  store i32 %1182, i32* %39, align 4
  store i32 0, i32* %40, align 4
  br label %originalBB215

originalBB219alteredBB:                           ; preds = %originalBB219, %954
  %1183 = load i32, i32* %43, align 4
  %1184 = zext i32 %1183 to i64
  br label %originalBB219

originalBB223alteredBB:                           ; preds = %originalBB223, %985
  %1185 = load i32, i32* %41, align 4
  br label %originalBB223

originalBB227alteredBB:                           ; preds = %originalBB227, %1005
  %1186 = load i32, i32* %41, align 4
  %_228 = sub i32 0, %1186
  %gen229 = add i32 %_228, 1
  %_230 = sub i32 %1186, 1
  %gen231 = mul i32 %_230, 1
  %1187 = add i32 %1186, 1
  store i32 %1187, i32* %41, align 4
  br label %originalBB227

originalBB235alteredBB:                           ; preds = %originalBB235, %1024
  br label %originalBB235

originalBB239alteredBB:                           ; preds = %originalBB239, %1044
  br label %originalBB239

originalBB243alteredBB:                           ; preds = %originalBB243, %1068
  br label %originalBB243

originalBB247alteredBB:                           ; preds = %originalBB247, %1096
  %1188 = landingpad { i8*, i32 }
          catch i8* null
  %1189 = extractvalue { i8*, i32 } %1188, 0
  call void @__clang_call_terminate(i8* %1189) #7
  br label %originalBB247
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi1ELi2EESaIS1_EE4sizeEv(%"class.std::vector.25"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.97
  %3 = load i32, i32* @y.98
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %10, align 8
  %11 = load %"class.std::vector.25"*, %"class.std::vector.25"** %10, align 8
  %12 = bitcast %"class.std::vector.25"* %11 to %"struct.std::_Vector_base.26"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load %class.Tensor.24*, %class.Tensor.24** %15, align 8
  %17 = bitcast %"class.std::vector.25"* %11 to %"struct.std::_Vector_base.26"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Tensor.24*, %class.Tensor.24** %20, align 8
  %22 = ptrtoint %class.Tensor.24* %16 to i64
  %23 = ptrtoint %class.Tensor.24* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 16
  %26 = load i32, i32* @x.97
  %27 = load i32, i32* @y.98
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %34, align 8
  %35 = load %"class.std::vector.25"*, %"class.std::vector.25"** %34, align 8
  %36 = bitcast %"class.std::vector.25"* %35 to %"struct.std::_Vector_base.26"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %class.Tensor.24*, %class.Tensor.24** %39, align 8
  %41 = bitcast %"class.std::vector.25"* %35 to %"struct.std::_Vector_base.26"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %class.Tensor.24*, %class.Tensor.24** %44, align 8
  %46 = ptrtoint %class.Tensor.24* %40 to i64
  %47 = ptrtoint %class.Tensor.24* %45 to i64
  %_ = shl i64 %46, %47
  %_1 = shl i64 %46, %47
  %48 = sub i64 %46, %47
  %_2 = shl i64 %48, 16
  %_3 = sub i64 %48, 16
  %gen = mul i64 %_3, 16
  %49 = sdiv exact i64 %48, 16
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi2ELi2EESaIS1_EE4sizeEv(%"class.std::vector.30"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.30"*, align 8
  store %"class.std::vector.30"* %0, %"class.std::vector.30"** %2, align 8
  %3 = load %"class.std::vector.30"*, %"class.std::vector.30"** %2, align 8
  %4 = bitcast %"class.std::vector.30"* %3 to %"struct.std::_Vector_base.31"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Tensor.35*, %class.Tensor.35** %7, align 8
  %9 = bitcast %"class.std::vector.30"* %3 to %"struct.std::_Vector_base.31"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Tensor.35*, %class.Tensor.35** %12, align 8
  %14 = ptrtoint %class.Tensor.35* %8 to i64
  %15 = ptrtoint %class.Tensor.35* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 32
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZNK5PointILi2EEclEj(%class.Point.23*, i32) #1 comdat align 2 {
  %3 = alloca %class.Point.23*, align 8
  %4 = alloca i32, align 4
  store %class.Point.23* %0, %class.Point.23** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Point.23*, %class.Point.23** %3, align 8
  %6 = bitcast %class.Point.23* %5 to %class.Tensor.24*
  %7 = getelementptr inbounds %class.Tensor.24, %class.Tensor.24* %6, i32 0, i32 0
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [2 x double], [2 x double]* %7, i64 0, i64 %9
  %11 = load double, double* %10, align 8
  ret double %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Tensor.24* @_ZNSt6vectorI6TensorILi1ELi2EESaIS1_EEixEm(%"class.std::vector.25"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 2>, std::allocator<Tensor<1, 2> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor.24*, %class.Tensor.24** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Tensor.24, %class.Tensor.24* %10, i64 %11
  ret %class.Tensor.24* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor.24*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor.24* %0, %class.Tensor.24** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor.24*, %class.Tensor.24** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.24, %class.Tensor.24* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 %8
  ret double* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %class.Tensor.35* @_ZNSt6vectorI6TensorILi2ELi2EESaIS1_EEixEm(%"class.std::vector.30"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.30"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.30"* %0, %"class.std::vector.30"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.30"*, %"class.std::vector.30"** %3, align 8
  %6 = bitcast %"class.std::vector.30"* %5 to %"struct.std::_Vector_base.31"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 2>, std::allocator<Tensor<2, 2> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor.35*, %class.Tensor.35** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Tensor.35, %class.Tensor.35* %10, i64 %11
  ret %class.Tensor.35* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Tensor.24* @_ZN6TensorILi2ELi2EEixEj(%class.Tensor.35*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor.35*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor.35* %0, %class.Tensor.35** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor.35*, %class.Tensor.35** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.35, %class.Tensor.35* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [2 x %class.Tensor.24], [2 x %class.Tensor.24]* %6, i64 0, i64 %8
  ret %class.Tensor.24* %9
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK15PolynomialSpaceILi2EE13compute_valueEjRK5PointILi2EE(%class.PolynomialSpace.10*, i32, %class.Point.23* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %class.PolynomialSpace.10*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Point.23*, align 8
  %7 = alloca [2 x i32], align 4
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Point.23* %2, %class.Point.23** %6, align 8
  %10 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %4, align 8
  %11 = load i32, i32* %5, align 4
  call void @_ZNK15PolynomialSpaceILi2EE13compute_indexEjRA2_j(%class.PolynomialSpace.10* %10, i32 %11, [2 x i32]* dereferenceable(8) %7)
  store double 1.000000e+00, double* %8, align 8
  store i32 0, i32* %9, align 4
  br label %12

; <label>:12:                                     ; preds = %45, %3
  %13 = load i32, i32* %9, align 4
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %15, label %48

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* @x.111
  %17 = load i32, i32* @y.112
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %10, i32 0, i32 0
  %25 = load i32, i32* %9, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = call dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %24, i64 %29)
  %31 = load %class.Point.23*, %class.Point.23** %6, align 8
  %32 = load i32, i32* %9, align 4
  %33 = call double @_ZNK5PointILi2EEclEj(%class.Point.23* %31, i32 %32)
  %34 = call double @_ZNK11Polynomials10PolynomialIdE5valueEd(%"class.Polynomials::Polynomial"* %30, double %33)
  %35 = load double, double* %8, align 8
  %36 = fmul double %35, %34
  store double %36, double* %8, align 8
  %37 = load i32, i32* @x.111
  %38 = load i32, i32* @y.112
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i32, i32* %9, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %9, align 4
  br label %12

; <label>:48:                                     ; preds = %12
  %49 = load i32, i32* @x.111
  %50 = load i32, i32* @y.112
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %48, %originalBB7alteredBB
  %57 = load double, double* %8, align 8
  %58 = load i32, i32* @x.111
  %59 = load i32, i32* @y.112
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  ret double %57

originalBBalteredBB:                              ; preds = %originalBB, %15
  %66 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %10, i32 0, i32 0
  %67 = load i32, i32* %9, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = call dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %66, i64 %71)
  %73 = load %class.Point.23*, %class.Point.23** %6, align 8
  %74 = load i32, i32* %9, align 4
  %75 = call double @_ZNK5PointILi2EEclEj(%class.Point.23* %73, i32 %74)
  %76 = call double @_ZNK11Polynomials10PolynomialIdE5valueEd(%"class.Polynomials::Polynomial"* %72, double %75)
  %77 = load double, double* %8, align 8
  %_ = fsub double -0.000000e+00, %77
  %gen = fadd double %_, %76
  %_1 = fsub double -0.000000e+00, %77
  %gen2 = fadd double %_1, %76
  %_3 = fsub double -0.000000e+00, %77
  %gen4 = fadd double %_3, %76
  %_5 = fsub double %77, %76
  %gen6 = fmul double %_5, %76
  %78 = fmul double %77, %76
  store double %78, double* %8, align 8
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %48
  %79 = load double, double* %8, align 8
  br label %originalBB7
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi2EE12compute_gradEjRK5PointILi2EE(%class.Tensor.24* noalias sret, %class.PolynomialSpace.10*, i32, %class.Point.23* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.PolynomialSpace.10*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.Point.23*, align 8
  %8 = alloca [2 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.0", align 8
  %11 = alloca double, align 8
  %12 = alloca %"class.std::allocator.2", align 1
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %class.PolynomialSpace.10* %1, %class.PolynomialSpace.10** %5, align 8
  store i32 %2, i32* %6, align 4
  store %class.Point.23* %3, %class.Point.23** %7, align 8
  %17 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %5, align 8
  %18 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi2EE13compute_indexEjRA2_j(%class.PolynomialSpace.10* %17, i32 %18, [2 x i32]* dereferenceable(8) %8)
  call void @_ZN6TensorILi1ELi2EEC2Eb(%class.Tensor.24* %0, i1 zeroext true)
  store i32 0, i32* %9, align 4
  br label %19

; <label>:19:                                     ; preds = %41, %4
  %20 = load i32, i32* %9, align 4
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %22, label %44

; <label>:22:                                     ; preds = %19
  %23 = load i32, i32* @x.113
  %24 = load i32, i32* @y.114
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = load i32, i32* %9, align 4
  %32 = call dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %0, i32 %31)
  store double 1.000000e+00, double* %32, align 8
  %33 = load i32, i32* @x.113
  %34 = load i32, i32* @y.114
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i32, i32* %9, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %9, align 4
  br label %19

; <label>:44:                                     ; preds = %19
  store double 0.000000e+00, double* %11, align 8
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %12) #11
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKdRKS0_(%"class.std::vector.0"* %10, i64 2, double* dereferenceable(8) %11, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %45 unwind label %151

; <label>:45:                                     ; preds = %44
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  store i32 0, i32* %15, align 4
  br label %46

; <label>:46:                                     ; preds = %212, %45
  %47 = load i32, i32* @x.113
  %48 = load i32, i32* @y.114
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = load i32, i32* %15, align 4
  %56 = icmp ult i32 %55, 2
  %57 = load i32, i32* @x.113
  %58 = load i32, i32* @y.114
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %56, label %65, label %215

; <label>:65:                                     ; preds = %originalBBpart24
  %66 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %17, i32 0, i32 0
  %67 = load i32, i32* %15, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %66, i64 %71)
          to label %73 unwind label %171

; <label>:73:                                     ; preds = %65
  %74 = load i32, i32* @x.113
  %75 = load i32, i32* @y.114
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = load %class.Point.23*, %class.Point.23** %7, align 8
  %83 = load i32, i32* %15, align 4
  %84 = load i32, i32* @x.113
  %85 = load i32, i32* @y.114
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %92 = invoke double @_ZNK5PointILi2EEclEj(%class.Point.23* %82, i32 %83)
          to label %93 unwind label %171

; <label>:93:                                     ; preds = %originalBBpart28
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %72, double %92, %"class.std::vector.0"* dereferenceable(24) %10)
          to label %94 unwind label %171

; <label>:94:                                     ; preds = %93
  %95 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %10, i64 1)
          to label %96 unwind label %171

; <label>:96:                                     ; preds = %94
  %97 = load double, double* %95, align 8
  %98 = load i32, i32* %15, align 4
  %99 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %0, i32 %98)
          to label %100 unwind label %171

; <label>:100:                                    ; preds = %96
  %101 = load double, double* %99, align 8
  %102 = fmul double %101, %97
  store double %102, double* %99, align 8
  store i32 0, i32* %16, align 4
  br label %103

; <label>:103:                                    ; preds = %originalBBpart241, %100
  %104 = load i32, i32* @x.113
  %105 = load i32, i32* @y.114
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %103, %originalBB10alteredBB
  %112 = load i32, i32* %16, align 4
  %113 = icmp ult i32 %112, 2
  %114 = load i32, i32* @x.113
  %115 = load i32, i32* @y.114
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %113, label %122, label %195

; <label>:122:                                    ; preds = %originalBBpart212
  %123 = load i32, i32* %16, align 4
  %124 = load i32, i32* %15, align 4
  %125 = icmp ne i32 %123, %124
  br i1 %125, label %126, label %175

; <label>:126:                                    ; preds = %122
  %127 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %10, i64 0)
          to label %128 unwind label %171

; <label>:128:                                    ; preds = %126
  %129 = load double, double* %127, align 8
  %130 = load i32, i32* %16, align 4
  %131 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %0, i32 %130)
          to label %132 unwind label %171

; <label>:132:                                    ; preds = %128
  %133 = load i32, i32* @x.113
  %134 = load i32, i32* @y.114
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %132, %originalBB14alteredBB
  %141 = load double, double* %131, align 8
  %142 = fmul double %141, %129
  store double %142, double* %131, align 8
  %143 = load i32, i32* @x.113
  %144 = load i32, i32* @y.114
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart220, label %originalBB14alteredBB

originalBBpart220:                                ; preds = %originalBB14
  br label %175

; <label>:151:                                    ; preds = %44
  %152 = load i32, i32* @x.113
  %153 = load i32, i32* @y.114
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %151, %originalBB22alteredBB
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %13, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %14, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  %163 = load i32, i32* @x.113
  %164 = load i32, i32* @y.114
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %217

; <label>:171:                                    ; preds = %128, %126, %96, %94, %93, %originalBBpart28, %65
  %172 = landingpad { i8*, i32 }
          cleanup
  %173 = extractvalue { i8*, i32 } %172, 0
  store i8* %173, i8** %13, align 8
  %174 = extractvalue { i8*, i32 } %172, 1
  store i32 %174, i32* %14, align 4
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %10)
          to label %216 unwind label %238

; <label>:175:                                    ; preds = %originalBBpart220, %122
  br label %176

; <label>:176:                                    ; preds = %175
  %177 = load i32, i32* @x.113
  %178 = load i32, i32* @y.114
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %176, %originalBB26alteredBB
  %185 = load i32, i32* %16, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %16, align 4
  %187 = load i32, i32* @x.113
  %188 = load i32, i32* @y.114
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart241, label %originalBB26alteredBB

originalBBpart241:                                ; preds = %originalBB26
  br label %103

; <label>:195:                                    ; preds = %originalBBpart212
  %196 = load i32, i32* @x.113
  %197 = load i32, i32* @y.114
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %195, %originalBB43alteredBB
  %204 = load i32, i32* @x.113
  %205 = load i32, i32* @y.114
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %212

; <label>:212:                                    ; preds = %originalBBpart245
  %213 = load i32, i32* %15, align 4
  %214 = add i32 %213, 1
  store i32 %214, i32* %15, align 4
  br label %46

; <label>:215:                                    ; preds = %originalBBpart24
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %10)
  ret void

; <label>:216:                                    ; preds = %171
  br label %217

; <label>:217:                                    ; preds = %216, %originalBBpart224
  %218 = load i32, i32* @x.113
  %219 = load i32, i32* @y.114
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %217, %originalBB47alteredBB
  %226 = load i8*, i8** %13, align 8
  %227 = load i32, i32* %14, align 4
  %228 = insertvalue { i8*, i32 } undef, i8* %226, 0
  %229 = insertvalue { i8*, i32 } %228, i32 %227, 1
  %230 = load i32, i32* @x.113
  %231 = load i32, i32* @y.114
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  resume { i8*, i32 } %229

; <label>:238:                                    ; preds = %171
  %239 = landingpad { i8*, i32 }
          catch i8* null
  %240 = extractvalue { i8*, i32 } %239, 0
  call void @__clang_call_terminate(i8* %240) #7
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %22
  %241 = load i32, i32* %9, align 4
  %242 = call dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %0, i32 %241)
  store double 1.000000e+00, double* %242, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %243 = load i32, i32* %15, align 4
  %244 = icmp ult i32 %243, 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  %245 = load %class.Point.23*, %class.Point.23** %7, align 8
  %246 = load i32, i32* %15, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %103
  %247 = load i32, i32* %16, align 4
  %248 = icmp ult i32 %247, 2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  %249 = load double, double* %131, align 8
  %_ = fsub double %249, %129
  %gen = fmul double %_, %129
  %_15 = fsub double -0.000000e+00, %249
  %gen16 = fadd double %_15, %129
  %_17 = fsub double %249, %129
  %gen18 = fmul double %_17, %129
  %250 = fmul double %249, %129
  store double %250, double* %131, align 8
  br label %originalBB14

originalBB22alteredBB:                            ; preds = %originalBB22, %151
  %251 = landingpad { i8*, i32 }
          cleanup
  %252 = extractvalue { i8*, i32 } %251, 0
  store i8* %252, i8** %13, align 8
  %253 = extractvalue { i8*, i32 } %251, 1
  store i32 %253, i32* %14, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %176
  %254 = load i32, i32* %16, align 4
  %_27 = sub i32 %254, 1
  %gen28 = mul i32 %_27, 1
  %_29 = shl i32 %254, 1
  %_30 = sub i32 %254, 1
  %gen31 = mul i32 %_30, 1
  %_32 = sub i32 0, %254
  %gen33 = add i32 %_32, 1
  %_34 = sub i32 0, %254
  %gen35 = add i32 %_34, 1
  %_36 = sub i32 %254, 1
  %gen37 = mul i32 %_36, 1
  %_38 = sub i32 %254, 1
  %gen39 = mul i32 %_38, 1
  %255 = add i32 %254, 1
  store i32 %255, i32* %16, align 4
  br label %originalBB26

originalBB43alteredBB:                            ; preds = %originalBB43, %195
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %217
  %256 = load i8*, i8** %13, align 8
  %257 = load i32, i32* %14, align 4
  %258 = insertvalue { i8*, i32 } undef, i8* %256, 0
  %259 = insertvalue { i8*, i32 } %258, i32 %257, 1
  br label %originalBB47
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi2EEC2Eb(%class.Tensor.24*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Tensor.24*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store %class.Tensor.24* %0, %class.Tensor.24** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %class.Tensor.24*, %class.Tensor.24** %3, align 8
  %8 = load i8, i8* %4, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %39

; <label>:10:                                     ; preds = %2
  store i32 0, i32* %5, align 4
  br label %11

; <label>:11:                                     ; preds = %35, %10
  %12 = load i32, i32* @x.115
  %13 = load i32, i32* @y.116
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* %5, align 4
  %21 = icmp ne i32 %20, 2
  %22 = load i32, i32* @x.115
  %23 = load i32, i32* @y.116
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %38

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = getelementptr inbounds %class.Tensor.24, %class.Tensor.24* %7, i32 0, i32 0
  %32 = load i32, i32* %5, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [2 x double], [2 x double]* %31, i64 0, i64 %33
  store double 0.000000e+00, double* %34, align 8
  br label %35

; <label>:35:                                     ; preds = %30
  %36 = load i32, i32* %5, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %5, align 4
  br label %11

; <label>:38:                                     ; preds = %originalBBpart2
  br label %39

; <label>:39:                                     ; preds = %38, %2
  %40 = load i32, i32* @x.115
  %41 = load i32, i32* @y.116
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* @x.115
  %49 = load i32, i32* @y.116
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %56 = load i32, i32* %5, align 4
  %57 = icmp ne i32 %56, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi2EE17compute_grad_gradEjRK5PointILi2EE(%class.Tensor.35* noalias sret, %class.PolynomialSpace.10*, i32, %class.Point.23* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.PolynomialSpace.10*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.Point.23*, align 8
  %8 = alloca [2 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::vector.0", align 8
  %12 = alloca double, align 8
  %13 = alloca %"class.std::allocator.2", align 1
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %class.PolynomialSpace.10* %1, %class.PolynomialSpace.10** %5, align 8
  store i32 %2, i32* %6, align 4
  store %class.Point.23* %3, %class.Point.23** %7, align 8
  %19 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %5, align 8
  %20 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi2EE13compute_indexEjRA2_j(%class.PolynomialSpace.10* %19, i32 %20, [2 x i32]* dereferenceable(8) %8)
  call void @_ZN6TensorILi2ELi2EEC2Ev(%class.Tensor.35* %0)
  store i32 0, i32* %9, align 4
  br label %21

; <label>:21:                                     ; preds = %69, %4
  %22 = load i32, i32* @x.117
  %23 = load i32, i32* @y.118
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i32, i32* %9, align 4
  %31 = icmp ult i32 %30, 2
  %32 = load i32, i32* @x.117
  %33 = load i32, i32* @y.118
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %72

; <label>:40:                                     ; preds = %originalBBpart2
  store i32 0, i32* %10, align 4
  br label %41

; <label>:41:                                     ; preds = %49, %40
  %42 = load i32, i32* %10, align 4
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %44, label %52

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* %9, align 4
  %46 = call dereferenceable(16) %class.Tensor.24* @_ZN6TensorILi2ELi2EEixEj(%class.Tensor.35* %0, i32 %45)
  %47 = load i32, i32* %10, align 4
  %48 = call dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %46, i32 %47)
  store double 1.000000e+00, double* %48, align 8
  br label %49

; <label>:49:                                     ; preds = %44
  %50 = load i32, i32* %10, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %10, align 4
  br label %41

; <label>:52:                                     ; preds = %41
  %53 = load i32, i32* @x.117
  %54 = load i32, i32* @y.118
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %52, %originalBB1alteredBB
  %61 = load i32, i32* @x.117
  %62 = load i32, i32* @y.118
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %69

; <label>:69:                                     ; preds = %originalBBpart24
  %70 = load i32, i32* %9, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %9, align 4
  br label %21

; <label>:72:                                     ; preds = %originalBBpart2
  store double 0.000000e+00, double* %12, align 8
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %13) #11
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKdRKS0_(%"class.std::vector.0"* %11, i64 3, double* dereferenceable(8) %12, %"class.std::allocator.2"* dereferenceable(1) %13)
          to label %73 unwind label %247

; <label>:73:                                     ; preds = %72
  %74 = load i32, i32* @x.117
  %75 = load i32, i32* @y.118
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  store i32 0, i32* %16, align 4
  %82 = load i32, i32* @x.117
  %83 = load i32, i32* @y.118
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %90

; <label>:90:                                     ; preds = %297, %originalBBpart28
  %91 = load i32, i32* @x.117
  %92 = load i32, i32* @y.118
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %90, %originalBB10alteredBB
  %99 = load i32, i32* %16, align 4
  %100 = icmp ult i32 %99, 2
  %101 = load i32, i32* @x.117
  %102 = load i32, i32* @y.118
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %100, label %109, label %300

; <label>:109:                                    ; preds = %originalBBpart212
  %110 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %19, i32 0, i32 0
  %111 = load i32, i32* %16, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %110, i64 %115)
          to label %117 unwind label %267

; <label>:117:                                    ; preds = %109
  %118 = load %class.Point.23*, %class.Point.23** %7, align 8
  %119 = load i32, i32* %16, align 4
  %120 = invoke double @_ZNK5PointILi2EEclEj(%class.Point.23* %118, i32 %119)
          to label %121 unwind label %267

; <label>:121:                                    ; preds = %117
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %116, double %120, %"class.std::vector.0"* dereferenceable(24) %11)
          to label %122 unwind label %267

; <label>:122:                                    ; preds = %121
  %123 = load i32, i32* @x.117
  %124 = load i32, i32* @y.118
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %122, %originalBB14alteredBB
  %131 = load i32, i32* @x.117
  %132 = load i32, i32* @y.118
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %139 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 2)
          to label %140 unwind label %267

; <label>:140:                                    ; preds = %originalBBpart216
  %141 = load i32, i32* @x.117
  %142 = load i32, i32* @y.118
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %140, %originalBB18alteredBB
  %149 = load double, double* %139, align 8
  %150 = load i32, i32* %16, align 4
  %151 = load i32, i32* @x.117
  %152 = load i32, i32* @y.118
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %159 = invoke dereferenceable(16) %class.Tensor.24* @_ZN6TensorILi2ELi2EEixEj(%class.Tensor.35* %0, i32 %150)
          to label %160 unwind label %267

; <label>:160:                                    ; preds = %originalBBpart220
  %161 = load i32, i32* %16, align 4
  %162 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %159, i32 %161)
          to label %163 unwind label %267

; <label>:163:                                    ; preds = %160
  %164 = load double, double* %162, align 8
  %165 = fmul double %164, %149
  store double %165, double* %162, align 8
  store i32 0, i32* %17, align 4
  br label %166

; <label>:166:                                    ; preds = %277, %163
  %167 = load i32, i32* %17, align 4
  %168 = icmp ult i32 %167, 2
  br i1 %168, label %169, label %280

; <label>:169:                                    ; preds = %166
  %170 = load i32, i32* %17, align 4
  %171 = load i32, i32* %16, align 4
  %172 = icmp ne i32 %170, %171
  br i1 %172, label %173, label %276

; <label>:173:                                    ; preds = %169
  %174 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 1)
          to label %175 unwind label %267

; <label>:175:                                    ; preds = %173
  %176 = load double, double* %174, align 8
  %177 = load i32, i32* %16, align 4
  %178 = invoke dereferenceable(16) %class.Tensor.24* @_ZN6TensorILi2ELi2EEixEj(%class.Tensor.35* %0, i32 %177)
          to label %179 unwind label %267

; <label>:179:                                    ; preds = %175
  %180 = load i32, i32* %17, align 4
  %181 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %178, i32 %180)
          to label %182 unwind label %267

; <label>:182:                                    ; preds = %179
  %183 = load double, double* %181, align 8
  %184 = fmul double %183, %176
  store double %184, double* %181, align 8
  %185 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 1)
          to label %186 unwind label %267

; <label>:186:                                    ; preds = %182
  %187 = load i32, i32* @x.117
  %188 = load i32, i32* @y.118
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %186, %originalBB22alteredBB
  %195 = load double, double* %185, align 8
  %196 = load i32, i32* %17, align 4
  %197 = load i32, i32* @x.117
  %198 = load i32, i32* @y.118
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %205 = invoke dereferenceable(16) %class.Tensor.24* @_ZN6TensorILi2ELi2EEixEj(%class.Tensor.35* %0, i32 %196)
          to label %206 unwind label %267

; <label>:206:                                    ; preds = %originalBBpart224
  %207 = load i32, i32* %16, align 4
  %208 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %205, i32 %207)
          to label %209 unwind label %267

; <label>:209:                                    ; preds = %206
  %210 = load double, double* %208, align 8
  %211 = fmul double %210, %195
  store double %211, double* %208, align 8
  store i32 0, i32* %18, align 4
  br label %212

; <label>:212:                                    ; preds = %272, %209
  %213 = load i32, i32* %18, align 4
  %214 = icmp ult i32 %213, 2
  br i1 %214, label %215, label %275

; <label>:215:                                    ; preds = %212
  %216 = load i32, i32* %18, align 4
  %217 = load i32, i32* %16, align 4
  %218 = icmp ne i32 %216, %217
  br i1 %218, label %219, label %271

; <label>:219:                                    ; preds = %215
  %220 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 0)
          to label %221 unwind label %267

; <label>:221:                                    ; preds = %219
  %222 = load double, double* %220, align 8
  %223 = load i32, i32* %17, align 4
  %224 = invoke dereferenceable(16) %class.Tensor.24* @_ZN6TensorILi2ELi2EEixEj(%class.Tensor.35* %0, i32 %223)
          to label %225 unwind label %267

; <label>:225:                                    ; preds = %221
  %226 = load i32, i32* %18, align 4
  %227 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi2EEixEj(%class.Tensor.24* %224, i32 %226)
          to label %228 unwind label %267

; <label>:228:                                    ; preds = %225
  %229 = load i32, i32* @x.117
  %230 = load i32, i32* @y.118
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %228, %originalBB26alteredBB
  %237 = load double, double* %227, align 8
  %238 = fmul double %237, %222
  store double %238, double* %227, align 8
  %239 = load i32, i32* @x.117
  %240 = load i32, i32* @y.118
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart236, label %originalBB26alteredBB

originalBBpart236:                                ; preds = %originalBB26
  br label %271

; <label>:247:                                    ; preds = %72
  %248 = load i32, i32* @x.117
  %249 = load i32, i32* @y.118
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %247, %originalBB38alteredBB
  %256 = landingpad { i8*, i32 }
          cleanup
  %257 = extractvalue { i8*, i32 } %256, 0
  store i8* %257, i8** %14, align 8
  %258 = extractvalue { i8*, i32 } %256, 1
  store i32 %258, i32* %15, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  %259 = load i32, i32* @x.117
  %260 = load i32, i32* @y.118
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %302

; <label>:267:                                    ; preds = %225, %221, %219, %206, %originalBBpart224, %182, %179, %175, %173, %160, %originalBBpart220, %originalBBpart216, %121, %117, %109
  %268 = landingpad { i8*, i32 }
          cleanup
  %269 = extractvalue { i8*, i32 } %268, 0
  store i8* %269, i8** %14, align 8
  %270 = extractvalue { i8*, i32 } %268, 1
  store i32 %270, i32* %15, align 4
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
          to label %301 unwind label %307

; <label>:271:                                    ; preds = %originalBBpart236, %215
  br label %272

; <label>:272:                                    ; preds = %271
  %273 = load i32, i32* %18, align 4
  %274 = add i32 %273, 1
  store i32 %274, i32* %18, align 4
  br label %212

; <label>:275:                                    ; preds = %212
  br label %276

; <label>:276:                                    ; preds = %275, %169
  br label %277

; <label>:277:                                    ; preds = %276
  %278 = load i32, i32* %17, align 4
  %279 = add i32 %278, 1
  store i32 %279, i32* %17, align 4
  br label %166

; <label>:280:                                    ; preds = %166
  %281 = load i32, i32* @x.117
  %282 = load i32, i32* @y.118
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %280, %originalBB42alteredBB
  %289 = load i32, i32* @x.117
  %290 = load i32, i32* @y.118
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %297

; <label>:297:                                    ; preds = %originalBBpart244
  %298 = load i32, i32* %16, align 4
  %299 = add i32 %298, 1
  store i32 %299, i32* %16, align 4
  br label %90

; <label>:300:                                    ; preds = %originalBBpart212
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
  ret void

; <label>:301:                                    ; preds = %267
  br label %302

; <label>:302:                                    ; preds = %301, %originalBBpart240
  %303 = load i8*, i8** %14, align 8
  %304 = load i32, i32* %15, align 4
  %305 = insertvalue { i8*, i32 } undef, i8* %303, 0
  %306 = insertvalue { i8*, i32 } %305, i32 %304, 1
  resume { i8*, i32 } %306

; <label>:307:                                    ; preds = %267
  %308 = landingpad { i8*, i32 }
          catch i8* null
  %309 = extractvalue { i8*, i32 } %308, 0
  call void @__clang_call_terminate(i8* %309) #7
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  %310 = load i32, i32* %9, align 4
  %311 = icmp ult i32 %310, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  store i32 0, i32* %16, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %312 = load i32, i32* %16, align 4
  %313 = icmp ult i32 %312, 2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %122
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %140
  %314 = load double, double* %139, align 8
  %315 = load i32, i32* %16, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %186
  %316 = load double, double* %185, align 8
  %317 = load i32, i32* %17, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %228
  %318 = load double, double* %227, align 8
  %_ = fsub double %318, %222
  %gen = fmul double %_, %222
  %_27 = fsub double %318, %222
  %gen28 = fmul double %_27, %222
  %_29 = fsub double -0.000000e+00, %318
  %gen30 = fadd double %_29, %222
  %_31 = fsub double %318, %222
  %gen32 = fmul double %_31, %222
  %_33 = fsub double %318, %222
  %gen34 = fmul double %_33, %222
  %319 = fmul double %318, %222
  store double %319, double* %227, align 8
  br label %originalBB26

originalBB38alteredBB:                            ; preds = %originalBB38, %247
  %320 = landingpad { i8*, i32 }
          cleanup
  %321 = extractvalue { i8*, i32 } %320, 0
  store i8* %321, i8** %14, align 8
  %322 = extractvalue { i8*, i32 } %320, 1
  store i32 %322, i32* %15, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %280
  br label %originalBB42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6TensorILi2ELi2EEC2Ev(%class.Tensor.35*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Tensor.35*, align 8
  store %class.Tensor.35* %0, %class.Tensor.35** %2, align 8
  %3 = load %class.Tensor.35*, %class.Tensor.35** %2, align 8
  %4 = getelementptr inbounds %class.Tensor.35, %class.Tensor.35* %3, i32 0, i32 0
  %5 = getelementptr inbounds [2 x %class.Tensor.24], [2 x %class.Tensor.24]* %4, i32 0, i32 0
  %6 = getelementptr inbounds %class.Tensor.24, %class.Tensor.24* %5, i64 2
  br label %7

; <label>:7:                                      ; preds = %7, %1
  %8 = phi %class.Tensor.24* [ %5, %1 ], [ %9, %7 ]
  call void @_ZN6TensorILi1ELi2EEC2Eb(%class.Tensor.24* %8, i1 zeroext true)
  %9 = getelementptr inbounds %class.Tensor.24, %class.Tensor.24* %8, i64 1
  %10 = icmp eq %class.Tensor.24* %9, %6
  br i1 %10, label %11, label %7

; <label>:11:                                     ; preds = %7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK15PolynomialSpaceILi2EE1nEv(%class.PolynomialSpace.10*) #1 comdat align 2 {
  %2 = load i32, i32* @x.121
  %3 = load i32, i32* @y.122
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.PolynomialSpace.10*, align 8
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %10, align 8
  %11 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %10, align 8
  %12 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i32, i32* @x.121
  %15 = load i32, i32* @y.122
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.PolynomialSpace.10*, align 8
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %22, align 8
  %23 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %22, align 8
  %24 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK15PolynomialSpaceILi2EE6degreeEv(%class.PolynomialSpace.10*) #0 comdat align 2 {
  %2 = alloca %class.PolynomialSpace.10*, align 8
  store %class.PolynomialSpace.10* %0, %class.PolynomialSpace.10** %2, align 8
  %3 = load %class.PolynomialSpace.10*, %class.PolynomialSpace.10** %2, align 8
  %4 = getelementptr inbounds %class.PolynomialSpace.10, %class.PolynomialSpace.10* %3, i32 0, i32 0
  %5 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %4)
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2C2Eiii(%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, i32, i32, i32) unnamed_addr #0 comdat($_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2C5Eiii) align 2 {
  %5 = load i32, i32* @x.125
  %6 = load i32, i32* @y.126
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %13, align 8
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  store i32 %3, i32* %16, align 4
  %17 = load %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %13, align 8
  %18 = bitcast %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %17 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %18)
  %19 = bitcast %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %17, i32 0, i32 1
  %21 = load i32, i32* %14, align 4
  store i32 %21, i32* %20, align 8
  %22 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %17, i32 0, i32 2
  %23 = load i32, i32* %15, align 4
  store i32 %23, i32* %22, align 4
  %24 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %17, i32 0, i32 3
  %25 = load i32, i32* %16, align 4
  store i32 %25, i32* %24, align 8
  %26 = load i32, i32* @x.125
  %27 = load i32, i32* @y.126
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %34 = alloca %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  store %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %34, align 8
  store i32 %1, i32* %35, align 4
  store i32 %2, i32* %36, align 4
  store i32 %3, i32* %37, align 4
  %38 = load %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %34, align 8
  %39 = bitcast %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %38 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %39)
  %40 = bitcast %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %38 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15PolynomialSpaceILi2EE21ExcDimensionMismatch2E, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %38, i32 0, i32 1
  %42 = load i32, i32* %35, align 4
  store i32 %42, i32* %41, align 8
  %43 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %38, i32 0, i32 2
  %44 = load i32, i32* %36, align 4
  store i32 %44, i32* %43, align 4
  %45 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %38, i32 0, i32 3
  %46 = load i32, i32* %37, align 4
  store i32 %46, i32* %45, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D2Ev(%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*) unnamed_addr #1 comdat($_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D5Ev) align 2 {
  %2 = load i32, i32* @x.127
  %3 = load i32, i32* @y.128
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, align 8
  store %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %10, align 8
  %11 = load %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %10, align 8
  %12 = bitcast %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #11
  %13 = load i32, i32* @x.127
  %14 = load i32, i32* @y.128
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, align 8
  store %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %21, align 8
  %22 = load %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %21, align 8
  %23 = bitcast %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #11
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D0Ev(%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*) unnamed_addr #1 comdat($_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D5Ev) align 2 {
  %2 = alloca %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, align 8
  store %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %2, align 8
  %3 = load %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %2, align 8
  call void @_ZN15PolynomialSpaceILi2EE21ExcDimensionMismatch2D1Ev(%"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %3) #11
  %4 = bitcast %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi2EE21ExcDimensionMismatch29PrintInfoERSo(%"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.131
  %4 = load i32, i32* @y.132
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, align 8
  %12 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %11, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %12, align 8
  %13 = load %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %11, align 8
  %14 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %15 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0))
  %16 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %13, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %15, i32 %17)
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0))
  %20 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %13, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %19, i32 %21)
  %23 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %22, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0))
  %24 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %13, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %23, i32 %25)
  %27 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %26, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %28 = load i32, i32* @x.131
  %29 = load i32, i32* @y.132
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %36 = alloca %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, align 8
  %37 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %36, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %37, align 8
  %38 = load %"class.PolynomialSpace<2>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<2>::ExcDimensionMismatch2"** %36, align 8
  %39 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %37, align 8
  %40 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0))
  %41 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %40, i32 %42)
  %44 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0))
  %45 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %38, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %44, i32 %46)
  %48 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0))
  %49 = getelementptr inbounds %"class.PolynomialSpace<2>::ExcDimensionMismatch2", %"class.PolynomialSpace<2>::ExcDimensionMismatch2"* %38, i32 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %48, i32 %50)
  %52 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %51, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZN15PolynomialSpaceILi2EE14compute_n_polsEj(i32) #1 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  store i32 %5, i32* %3, align 4
  store i32 1, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %51, %1
  %7 = load i32, i32* @x.133
  %8 = load i32, i32* @y.134
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = load i32, i32* %4, align 4
  %16 = icmp ult i32 %15, 2
  %17 = load i32, i32* @x.133
  %18 = load i32, i32* @y.134
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %54

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.133
  %27 = load i32, i32* @y.134
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = load i32, i32* %2, align 4
  %35 = load i32, i32* %4, align 4
  %36 = add i32 %34, %35
  %37 = load i32, i32* %3, align 4
  %38 = mul i32 %37, %36
  store i32 %38, i32* %3, align 4
  %39 = load i32, i32* %4, align 4
  %40 = add i32 %39, 1
  %41 = load i32, i32* %3, align 4
  %42 = udiv i32 %41, %40
  store i32 %42, i32* %3, align 4
  %43 = load i32, i32* @x.133
  %44 = load i32, i32* @y.134
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  br label %51

; <label>:51:                                     ; preds = %originalBBpart213
  %52 = load i32, i32* %4, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %4, align 4
  br label %6

; <label>:54:                                     ; preds = %originalBBpart2
  %55 = load i32, i32* @x.133
  %56 = load i32, i32* @y.134
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %54, %originalBB15alteredBB
  %63 = load i32, i32* %3, align 4
  %64 = load i32, i32* @x.133
  %65 = load i32, i32* @y.134
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  ret i32 %63

originalBBalteredBB:                              ; preds = %originalBB, %6
  %72 = load i32, i32* %4, align 4
  %73 = icmp ult i32 %72, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %74 = load i32, i32* %2, align 4
  %75 = load i32, i32* %4, align 4
  %_ = sub i32 %74, %75
  %gen = mul i32 %_, %75
  %76 = add i32 %74, %75
  %77 = load i32, i32* %3, align 4
  %_2 = shl i32 %77, %76
  %_3 = sub i32 0, %77
  %gen4 = add i32 %_3, %76
  %_5 = shl i32 %77, %76
  %_6 = sub i32 %77, %76
  %gen7 = mul i32 %_6, %76
  %_8 = sub i32 %77, %76
  %gen9 = mul i32 %_8, %76
  %78 = mul i32 %77, %76
  store i32 %78, i32* %3, align 4
  %79 = load i32, i32* %4, align 4
  %_10 = shl i32 %79, 1
  %80 = add i32 %79, 1
  %81 = load i32, i32* %3, align 4
  %_11 = shl i32 %81, %80
  %82 = udiv i32 %81, %80
  store i32 %82, i32* %3, align 4
  br label %originalBB1

originalBB15alteredBB:                            ; preds = %originalBB15, %54
  %83 = load i32, i32* %3, align 4
  br label %originalBB15
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi3EE14output_indicesERSo(%class.PolynomialSpace.11*, %"class.std::basic_ostream"* dereferenceable(272)) #0 comdat align 2 {
  %3 = alloca %class.PolynomialSpace.11*, align 8
  %4 = alloca %"class.std::basic_ostream"*, align 8
  %5 = alloca [3 x i32], align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %3, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %4, align 8
  %8 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %3, align 8
  store i32 0, i32* %6, align 4
  br label %9

; <label>:9:                                      ; preds = %85, %2
  %10 = load i32, i32* %6, align 4
  %11 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %8, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %14, label %88

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi3EE13compute_indexEjRA3_j(%class.PolynomialSpace.11* %8, i32 %15, [3 x i32]* dereferenceable(12) %5)
  %16 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %17 = load i32, i32* %6, align 4
  %18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %16, i32 %17)
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  store i32 0, i32* %7, align 4
  br label %20

; <label>:20:                                     ; preds = %originalBBpart211, %14
  %21 = load i32, i32* %7, align 4
  %22 = icmp ult i32 %21, 3
  br i1 %22, label %23, label %66

; <label>:23:                                     ; preds = %20
  %24 = load i32, i32* @x.135
  %25 = load i32, i32* @y.136
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %33 = load i32, i32* %7, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %32, i32 %36)
  %38 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  %39 = load i32, i32* @x.135
  %40 = load i32, i32* @y.136
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %47

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = load i32, i32* @x.135
  %49 = load i32, i32* @y.136
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = load i32, i32* %7, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %7, align 4
  %58 = load i32, i32* @x.135
  %59 = load i32, i32* @y.136
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br label %20

; <label>:66:                                     ; preds = %20
  %67 = load i32, i32* @x.135
  %68 = load i32, i32* @y.136
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %66, %originalBB13alteredBB
  %75 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %76 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %75, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %77 = load i32, i32* @x.135
  %78 = load i32, i32* @y.136
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %85

; <label>:85:                                     ; preds = %originalBBpart215
  %86 = load i32, i32* %6, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %6, align 4
  br label %9

; <label>:88:                                     ; preds = %9
  %89 = load i32, i32* @x.135
  %90 = load i32, i32* @y.136
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %88, %originalBB17alteredBB
  %97 = load i32, i32* @x.135
  %98 = load i32, i32* @y.136
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %23
  %105 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %106 = load i32, i32* %7, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEj(%"class.std::basic_ostream"* %105, i32 %109)
  %111 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %110, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %112 = load i32, i32* %7, align 4
  %_ = sub i32 0, %112
  %gen = add i32 %_, 1
  %_2 = shl i32 %112, 1
  %_3 = sub i32 0, %112
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 %112, 1
  %gen6 = mul i32 %_5, 1
  %_7 = shl i32 %112, 1
  %_8 = sub i32 0, %112
  %gen9 = add i32 %_8, 1
  %113 = add i32 %112, 1
  store i32 %113, i32* %7, align 4
  br label %originalBB1

originalBB13alteredBB:                            ; preds = %originalBB13, %66
  %114 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %115 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %114, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %88
  br label %originalBB17
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15PolynomialSpaceILi3EE13set_numberingERKSt6vectorIjSaIjEE(%class.PolynomialSpace.11*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.137
  %4 = load i32, i32* @y.138
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.PolynomialSpace.11*, align 8
  %12 = alloca %"class.std::vector.5"*, align 8
  %13 = alloca i32, align 4
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %11, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %12, align 8
  %14 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %11, align 8
  %15 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %16 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %14, i32 0, i32 2
  %17 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIjSaIjEEaSERKS1_(%"class.std::vector.5"* %16, %"class.std::vector.5"* dereferenceable(24) %15)
  store i32 0, i32* %13, align 4
  %18 = load i32, i32* @x.137
  %19 = load i32, i32* @y.138
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %58, %originalBBpart2
  %27 = load i32, i32* %13, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %14, i32 0, i32 2
  %30 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %29)
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %32, label %61

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* @x.137
  %34 = load i32, i32* @y.138
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* %13, align 4
  %42 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %14, i32 0, i32 3
  %43 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %14, i32 0, i32 2
  %44 = load i32, i32* %13, align 4
  %45 = zext i32 %44 to i64
  %46 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %43, i64 %45)
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %42, i64 %48)
  store i32 %41, i32* %49, align 4
  %50 = load i32, i32* @x.137
  %51 = load i32, i32* @y.138
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* %13, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %13, align 4
  br label %26

; <label>:61:                                     ; preds = %26
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %62 = alloca %class.PolynomialSpace.11*, align 8
  %63 = alloca %"class.std::vector.5"*, align 8
  %64 = alloca i32, align 4
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %62, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %63, align 8
  %65 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %62, align 8
  %66 = load %"class.std::vector.5"*, %"class.std::vector.5"** %63, align 8
  %67 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %65, i32 0, i32 2
  %68 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIjSaIjEEaSERKS1_(%"class.std::vector.5"* %67, %"class.std::vector.5"* dereferenceable(24) %66)
  store i32 0, i32* %64, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %69 = load i32, i32* %13, align 4
  %70 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %14, i32 0, i32 3
  %71 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %14, i32 0, i32 2
  %72 = load i32, i32* %13, align 4
  %73 = zext i32 %72 to i64
  %74 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %71, i64 %73)
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %70, i64 %76)
  store i32 %69, i32* %77, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi3EE7computeERK5PointILi3EERSt6vectorIdSaIdEERS5_I6TensorILi1ELi3EESaISA_EERS5_IS9_ILi2ELi3EESaISE_EE(%class.PolynomialSpace.11*, %class.Point.36* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.38"* dereferenceable(24), %"class.std::vector.43"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.PolynomialSpace.11*, align 8
  %7 = alloca %class.Point.36*, align 8
  %8 = alloca %"class.std::vector.0"*, align 8
  %9 = alloca %"class.std::vector.38"*, align 8
  %10 = alloca %"class.std::vector.43"*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca %class.Table, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*
  %19 = alloca i32
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %26 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %27 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %35 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %36 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %48 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %49 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %6, align 8
  store %class.Point.36* %1, %class.Point.36** %7, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.38"* %3, %"class.std::vector.38"** %9, align 8
  store %"class.std::vector.43"* %4, %"class.std::vector.43"** %10, align 8
  %50 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %6, align 8
  %51 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %50, i32 0, i32 0
  %52 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %51)
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i8 0, i8* %13, align 1
  store i8 0, i8* %14, align 1
  store i8 0, i8* %15, align 1
  %54 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %55 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %54)
  %56 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %50, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %59 = icmp eq i64 %55, %58
  br i1 %59, label %60, label %61

; <label>:60:                                     ; preds = %5
  store i8 1, i8* %13, align 1
  store i32 1, i32* %12, align 4
  br label %61

; <label>:61:                                     ; preds = %60, %5
  %62 = load %"class.std::vector.38"*, %"class.std::vector.38"** %9, align 8
  %63 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.38"* %62)
  %64 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %50, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = zext i32 %65 to i64
  %67 = icmp eq i64 %63, %66
  br i1 %67, label %68, label %85

; <label>:68:                                     ; preds = %61
  %69 = load i32, i32* @x.139
  %70 = load i32, i32* @y.140
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %68, %originalBBalteredBB
  store i8 1, i8* %14, align 1
  store i32 2, i32* %12, align 4
  %77 = load i32, i32* @x.139
  %78 = load i32, i32* @y.140
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %85

; <label>:85:                                     ; preds = %originalBBpart2, %61
  %86 = load %"class.std::vector.43"*, %"class.std::vector.43"** %10, align 8
  %87 = call i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.43"* %86)
  %88 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %50, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = zext i32 %89 to i64
  %91 = icmp eq i64 %87, %90
  br i1 %91, label %92, label %93

; <label>:92:                                     ; preds = %85
  store i8 1, i8* %15, align 1
  store i32 3, i32* %12, align 4
  br label %93

; <label>:93:                                     ; preds = %92, %85
  %94 = load i32, i32* %11, align 4
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEEC2Ejj(%class.Table* %16, i32 3, i32 %94)
  store i32 0, i32* %17, align 4
  br label %95

; <label>:95:                                     ; preds = %288, %93
  %96 = load i32, i32* %17, align 4
  %97 = bitcast %class.Table* %16 to %class.TableBase*
  %98 = invoke dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE4sizeEv(%class.TableBase* %97)
          to label %99 unwind label %267

; <label>:99:                                     ; preds = %95
  %100 = load i32, i32* @x.139
  %101 = load i32, i32* @y.140
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %99, %originalBB1alteredBB
  %108 = bitcast %class.TableIndices* %98 to %class.TableIndicesBase*
  %109 = load i32, i32* @x.139
  %110 = load i32, i32* @y.140
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %117 = invoke i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %108, i32 0)
          to label %118 unwind label %267

; <label>:118:                                    ; preds = %originalBBpart24
  %119 = load i32, i32* @x.139
  %120 = load i32, i32* @y.140
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %118, %originalBB6alteredBB
  %127 = icmp ult i32 %96, %117
  %128 = load i32, i32* @x.139
  %129 = load i32, i32* @y.140
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %127, label %136, label %291

; <label>:136:                                    ; preds = %originalBBpart28
  %137 = load i32, i32* @x.139
  %138 = load i32, i32* @y.140
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %136, %originalBB10alteredBB
  store i32 0, i32* %20, align 4
  %145 = load i32, i32* @x.139
  %146 = load i32, i32* @y.140
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %153

; <label>:153:                                    ; preds = %originalBBpart242, %originalBBpart212
  %154 = load i32, i32* %20, align 4
  %155 = bitcast %class.Table* %16 to %class.TableBase*
  %156 = invoke dereferenceable(8) %class.TableIndices* @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE4sizeEv(%class.TableBase* %155)
          to label %157 unwind label %267

; <label>:157:                                    ; preds = %153
  %158 = bitcast %class.TableIndices* %156 to %class.TableIndicesBase*
  %159 = invoke i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %158, i32 1)
          to label %160 unwind label %267

; <label>:160:                                    ; preds = %157
  %161 = load i32, i32* @x.139
  %162 = load i32, i32* @y.140
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %160, %originalBB14alteredBB
  %169 = icmp ult i32 %154, %159
  %170 = load i32, i32* @x.139
  %171 = load i32, i32* @y.140
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %169, label %178, label %287

; <label>:178:                                    ; preds = %originalBBpart216
  %179 = load i32, i32* %17, align 4
  %180 = load i32, i32* %20, align 4
  %181 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZN5TableILi2ESt6vectorIdSaIdEEEclEjj(%class.Table* %16, i32 %179, i32 %180)
          to label %182 unwind label %267

; <label>:182:                                    ; preds = %178
  %183 = load i32, i32* %12, align 4
  %184 = zext i32 %183 to i64
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEmd(%"class.std::vector.0"* %181, i64 %184, double 0.000000e+00)
          to label %185 unwind label %267

; <label>:185:                                    ; preds = %182
  %186 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %50, i32 0, i32 0
  %187 = load i32, i32* %20, align 4
  %188 = zext i32 %187 to i64
  %189 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %186, i64 %188)
          to label %190 unwind label %267

; <label>:190:                                    ; preds = %185
  %191 = load i32, i32* @x.139
  %192 = load i32, i32* @y.140
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %190, %originalBB18alteredBB
  %199 = load %class.Point.36*, %class.Point.36** %7, align 8
  %200 = load i32, i32* %17, align 4
  %201 = load i32, i32* @x.139
  %202 = load i32, i32* @y.140
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %209 = invoke double @_ZNK5PointILi3EEclEj(%class.Point.36* %199, i32 %200)
          to label %210 unwind label %267

; <label>:210:                                    ; preds = %originalBBpart220
  %211 = load i32, i32* %17, align 4
  %212 = load i32, i32* %20, align 4
  %213 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZN5TableILi2ESt6vectorIdSaIdEEEclEjj(%class.Table* %16, i32 %211, i32 %212)
          to label %214 unwind label %267

; <label>:214:                                    ; preds = %210
  %215 = load i32, i32* @x.139
  %216 = load i32, i32* @y.140
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %214, %originalBB22alteredBB
  %223 = load i32, i32* @x.139
  %224 = load i32, i32* @y.140
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %189, double %209, %"class.std::vector.0"* dereferenceable(24) %213)
          to label %231 unwind label %267

; <label>:231:                                    ; preds = %originalBBpart224
  %232 = load i32, i32* @x.139
  %233 = load i32, i32* @y.140
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %231, %originalBB26alteredBB
  %240 = load i32, i32* @x.139
  %241 = load i32, i32* @y.140
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %248

; <label>:248:                                    ; preds = %originalBBpart228
  %249 = load i32, i32* @x.139
  %250 = load i32, i32* @y.140
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %248, %originalBB30alteredBB
  %257 = load i32, i32* %20, align 4
  %258 = add i32 %257, 1
  store i32 %258, i32* %20, align 4
  %259 = load i32, i32* @x.139
  %260 = load i32, i32* @y.140
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart242, label %originalBB30alteredBB

originalBBpart242:                                ; preds = %originalBB30
  br label %153

; <label>:267:                                    ; preds = %970, %967, %960, %originalBBpart2179, %originalBBpart2175, %originalBBpart2171, %898, %895, %893, %889, %originalBBpart2159, %848, %833, %originalBBpart2120, %670, %664, %661, %658, %originalBBpart2116, %633, %originalBBpart2112, %609, %606, %originalBBpart2108, %546, %originalBBpart272, %384, %382, %379, %originalBBpart268, %358, %originalBBpart254, %337, %335, %332, %331, %originalBBpart224, %210, %originalBBpart220, %185, %182, %178, %157, %153, %originalBBpart24, %95
  %268 = load i32, i32* @x.139
  %269 = load i32, i32* @y.140
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %267, %originalBB44alteredBB
  %276 = landingpad { i8*, i32 }
          cleanup
  %277 = extractvalue { i8*, i32 } %276, 0
  store i8* %277, i8** %18, align 8
  %278 = extractvalue { i8*, i32 } %276, 1
  store i32 %278, i32* %19, align 4
  %279 = load i32, i32* @x.139
  %280 = load i32, i32* @y.140
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %16)
          to label %1043 unwind label %1049

; <label>:287:                                    ; preds = %originalBBpart216
  br label %288

; <label>:288:                                    ; preds = %287
  %289 = load i32, i32* %17, align 4
  %290 = add i32 %289, 1
  store i32 %290, i32* %17, align 4
  br label %95

; <label>:291:                                    ; preds = %originalBBpart28
  %292 = load i8, i8* %13, align 1
  %293 = trunc i8 %292 to i1
  br i1 %293, label %294, label %458

; <label>:294:                                    ; preds = %291
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  br label %295

; <label>:295:                                    ; preds = %454, %294
  %296 = load i32, i32* @x.139
  %297 = load i32, i32* @y.140
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %295, %originalBB48alteredBB
  %304 = load i32, i32* %22, align 4
  %305 = load i32, i32* %11, align 4
  %306 = icmp ult i32 %304, %305
  %307 = load i32, i32* @x.139
  %308 = load i32, i32* @y.140
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br i1 %306, label %315, label %457

; <label>:315:                                    ; preds = %originalBBpart250
  store i32 0, i32* %23, align 4
  br label %316

; <label>:316:                                    ; preds = %450, %315
  %317 = load i32, i32* %23, align 4
  %318 = load i32, i32* %11, align 4
  %319 = load i32, i32* %22, align 4
  %320 = sub i32 %318, %319
  %321 = icmp ult i32 %317, %320
  br i1 %321, label %322, label %453

; <label>:322:                                    ; preds = %316
  store i32 0, i32* %24, align 4
  br label %323

; <label>:323:                                    ; preds = %430, %322
  %324 = load i32, i32* %24, align 4
  %325 = load i32, i32* %11, align 4
  %326 = load i32, i32* %23, align 4
  %327 = sub i32 %325, %326
  %328 = load i32, i32* %22, align 4
  %329 = sub i32 %327, %328
  %330 = icmp ult i32 %324, %329
  br i1 %330, label %331, label %433

; <label>:331:                                    ; preds = %323
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %25, %class.Table* %16, i32 0)
          to label %332 unwind label %267

; <label>:332:                                    ; preds = %331
  %333 = load i32, i32* %24, align 4
  %334 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %25, i32 %333)
          to label %335 unwind label %267

; <label>:335:                                    ; preds = %332
  %336 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %334, i64 0)
          to label %337 unwind label %267

; <label>:337:                                    ; preds = %335
  %338 = load double, double* %336, align 8
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %26, %class.Table* %16, i32 1)
          to label %339 unwind label %267

; <label>:339:                                    ; preds = %337
  %340 = load i32, i32* @x.139
  %341 = load i32, i32* @y.140
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %339, %originalBB52alteredBB
  %348 = load i32, i32* %23, align 4
  %349 = load i32, i32* @x.139
  %350 = load i32, i32* @y.140
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  %357 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %26, i32 %348)
          to label %358 unwind label %267

; <label>:358:                                    ; preds = %originalBBpart254
  %359 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %357, i64 0)
          to label %360 unwind label %267

; <label>:360:                                    ; preds = %358
  %361 = load i32, i32* @x.139
  %362 = load i32, i32* @y.140
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %360, %originalBB56alteredBB
  %369 = load double, double* %359, align 8
  %370 = fmul double %338, %369
  %371 = load i32, i32* @x.139
  %372 = load i32, i32* @y.140
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBBpart268, label %originalBB56alteredBB

originalBBpart268:                                ; preds = %originalBB56
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %27, %class.Table* %16, i32 2)
          to label %379 unwind label %267

; <label>:379:                                    ; preds = %originalBBpart268
  %380 = load i32, i32* %22, align 4
  %381 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %27, i32 %380)
          to label %382 unwind label %267

; <label>:382:                                    ; preds = %379
  %383 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %381, i64 0)
          to label %384 unwind label %267

; <label>:384:                                    ; preds = %382
  %385 = load double, double* %383, align 8
  %386 = fmul double %370, %385
  %387 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %388 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %50, i32 0, i32 3
  %389 = load i32, i32* %21, align 4
  %390 = add i32 %389, 1
  store i32 %390, i32* %21, align 4
  %391 = zext i32 %389 to i64
  %392 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %388, i64 %391)
          to label %393 unwind label %267

; <label>:393:                                    ; preds = %384
  %394 = load i32, i32* @x.139
  %395 = load i32, i32* @y.140
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %393, %originalBB70alteredBB
  %402 = load i32, i32* %392, align 4
  %403 = zext i32 %402 to i64
  %404 = load i32, i32* @x.139
  %405 = load i32, i32* @y.140
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  %412 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %387, i64 %403)
          to label %413 unwind label %267

; <label>:413:                                    ; preds = %originalBBpart272
  %414 = load i32, i32* @x.139
  %415 = load i32, i32* @y.140
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %413, %originalBB74alteredBB
  store double %386, double* %412, align 8
  %422 = load i32, i32* @x.139
  %423 = load i32, i32* @y.140
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %430

; <label>:430:                                    ; preds = %originalBBpart276
  %431 = load i32, i32* %24, align 4
  %432 = add i32 %431, 1
  store i32 %432, i32* %24, align 4
  br label %323

; <label>:433:                                    ; preds = %323
  %434 = load i32, i32* @x.139
  %435 = load i32, i32* @y.140
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %433, %originalBB78alteredBB
  %442 = load i32, i32* @x.139
  %443 = load i32, i32* @y.140
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %450

; <label>:450:                                    ; preds = %originalBBpart280
  %451 = load i32, i32* %23, align 4
  %452 = add i32 %451, 1
  store i32 %452, i32* %23, align 4
  br label %316

; <label>:453:                                    ; preds = %316
  br label %454

; <label>:454:                                    ; preds = %453
  %455 = load i32, i32* %22, align 4
  %456 = add i32 %455, 1
  store i32 %456, i32* %22, align 4
  br label %295

; <label>:457:                                    ; preds = %originalBBpart250
  br label %458

; <label>:458:                                    ; preds = %457, %291
  %459 = load i32, i32* @x.139
  %460 = load i32, i32* @y.140
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %458, %originalBB82alteredBB
  %467 = load i8, i8* %14, align 1
  %468 = trunc i8 %467 to i1
  %469 = load i32, i32* @x.139
  %470 = load i32, i32* @y.140
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %468, label %477, label %761

; <label>:477:                                    ; preds = %originalBBpart284
  %478 = load i32, i32* @x.139
  %479 = load i32, i32* @y.140
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %477, %originalBB86alteredBB
  store i32 0, i32* %28, align 4
  store i32 0, i32* %29, align 4
  %486 = load i32, i32* @x.139
  %487 = load i32, i32* @y.140
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %494

; <label>:494:                                    ; preds = %741, %originalBBpart288
  %495 = load i32, i32* @x.139
  %496 = load i32, i32* @y.140
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %494, %originalBB90alteredBB
  %503 = load i32, i32* %29, align 4
  %504 = load i32, i32* %11, align 4
  %505 = icmp ult i32 %503, %504
  %506 = load i32, i32* @x.139
  %507 = load i32, i32* @y.140
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %505, label %514, label %744

; <label>:514:                                    ; preds = %originalBBpart292
  store i32 0, i32* %30, align 4
  br label %515

; <label>:515:                                    ; preds = %737, %514
  %516 = load i32, i32* %30, align 4
  %517 = load i32, i32* %11, align 4
  %518 = load i32, i32* %29, align 4
  %519 = sub i32 %517, %518
  %520 = icmp ult i32 %516, %519
  br i1 %520, label %521, label %740

; <label>:521:                                    ; preds = %515
  %522 = load i32, i32* @x.139
  %523 = load i32, i32* @y.140
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %521, %originalBB94alteredBB
  store i32 0, i32* %31, align 4
  %530 = load i32, i32* @x.139
  %531 = load i32, i32* @y.140
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %538

; <label>:538:                                    ; preds = %733, %originalBBpart296
  %539 = load i32, i32* %31, align 4
  %540 = load i32, i32* %11, align 4
  %541 = load i32, i32* %30, align 4
  %542 = sub i32 %540, %541
  %543 = load i32, i32* %29, align 4
  %544 = sub i32 %542, %543
  %545 = icmp ult i32 %539, %544
  br i1 %545, label %546, label %736

; <label>:546:                                    ; preds = %538
  %547 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %50, i32 0, i32 3
  %548 = load i32, i32* %28, align 4
  %549 = add i32 %548, 1
  store i32 %549, i32* %28, align 4
  %550 = zext i32 %548 to i64
  %551 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %547, i64 %550)
          to label %552 unwind label %267

; <label>:552:                                    ; preds = %546
  %553 = load i32, i32* @x.139
  %554 = load i32, i32* @y.140
  %555 = sub i32 %553, 1
  %556 = mul i32 %553, %555
  %557 = urem i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %554, 10
  %560 = or i1 %558, %559
  br i1 %560, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %552, %originalBB98alteredBB
  %561 = load i32, i32* %551, align 4
  store i32 %561, i32* %32, align 4
  store i32 0, i32* %33, align 4
  %562 = load i32, i32* @x.139
  %563 = load i32, i32* @y.140
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %570

; <label>:570:                                    ; preds = %originalBBpart2134, %originalBBpart2100
  %571 = load i32, i32* @x.139
  %572 = load i32, i32* @y.140
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %570, %originalBB102alteredBB
  %579 = load i32, i32* %33, align 4
  %580 = icmp ult i32 %579, 3
  %581 = load i32, i32* @x.139
  %582 = load i32, i32* @y.140
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %580, label %589, label %732

; <label>:589:                                    ; preds = %originalBBpart2104
  %590 = load i32, i32* @x.139
  %591 = load i32, i32* @y.140
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %589, %originalBB106alteredBB
  %598 = load i32, i32* @x.139
  %599 = load i32, i32* @y.140
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %34, %class.Table* %16, i32 0)
          to label %606 unwind label %267

; <label>:606:                                    ; preds = %originalBBpart2108
  %607 = load i32, i32* %31, align 4
  %608 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %34, i32 %607)
          to label %609 unwind label %267

; <label>:609:                                    ; preds = %606
  %610 = load i32, i32* %33, align 4
  %611 = icmp eq i32 %610, 0
  %612 = select i1 %611, i32 1, i32 0
  %613 = sext i32 %612 to i64
  %614 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %608, i64 %613)
          to label %615 unwind label %267

; <label>:615:                                    ; preds = %609
  %616 = load i32, i32* @x.139
  %617 = load i32, i32* @y.140
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %615, %originalBB110alteredBB
  %624 = load double, double* %614, align 8
  %625 = load i32, i32* @x.139
  %626 = load i32, i32* @y.140
  %627 = sub i32 %625, 1
  %628 = mul i32 %625, %627
  %629 = urem i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = icmp slt i32 %626, 10
  %632 = or i1 %630, %631
  br i1 %632, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %35, %class.Table* %16, i32 1)
          to label %633 unwind label %267

; <label>:633:                                    ; preds = %originalBBpart2112
  %634 = load i32, i32* %30, align 4
  %635 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %35, i32 %634)
          to label %636 unwind label %267

; <label>:636:                                    ; preds = %633
  %637 = load i32, i32* @x.139
  %638 = load i32, i32* @y.140
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %636, %originalBB114alteredBB
  %645 = load i32, i32* %33, align 4
  %646 = icmp eq i32 %645, 1
  %647 = select i1 %646, i32 1, i32 0
  %648 = sext i32 %647 to i64
  %649 = load i32, i32* @x.139
  %650 = load i32, i32* @y.140
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  %657 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %635, i64 %648)
          to label %658 unwind label %267

; <label>:658:                                    ; preds = %originalBBpart2116
  %659 = load double, double* %657, align 8
  %660 = fmul double %624, %659
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %36, %class.Table* %16, i32 2)
          to label %661 unwind label %267

; <label>:661:                                    ; preds = %658
  %662 = load i32, i32* %29, align 4
  %663 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %36, i32 %662)
          to label %664 unwind label %267

; <label>:664:                                    ; preds = %661
  %665 = load i32, i32* %33, align 4
  %666 = icmp eq i32 %665, 2
  %667 = select i1 %666, i32 1, i32 0
  %668 = sext i32 %667 to i64
  %669 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %663, i64 %668)
          to label %670 unwind label %267

; <label>:670:                                    ; preds = %664
  %671 = load double, double* %669, align 8
  %672 = fmul double %660, %671
  %673 = load %"class.std::vector.38"*, %"class.std::vector.38"** %9, align 8
  %674 = load i32, i32* %32, align 4
  %675 = zext i32 %674 to i64
  %676 = invoke dereferenceable(24) %class.Tensor.37* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.38"* %673, i64 %675)
          to label %677 unwind label %267

; <label>:677:                                    ; preds = %670
  %678 = load i32, i32* @x.139
  %679 = load i32, i32* @y.140
  %680 = sub i32 %678, 1
  %681 = mul i32 %678, %680
  %682 = urem i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %679, 10
  %685 = or i1 %683, %684
  br i1 %685, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %677, %originalBB118alteredBB
  %686 = load i32, i32* %33, align 4
  %687 = load i32, i32* @x.139
  %688 = load i32, i32* @y.140
  %689 = sub i32 %687, 1
  %690 = mul i32 %687, %689
  %691 = urem i32 %690, 2
  %692 = icmp eq i32 %691, 0
  %693 = icmp slt i32 %688, 10
  %694 = or i1 %692, %693
  br i1 %694, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  %695 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %676, i32 %686)
          to label %696 unwind label %267

; <label>:696:                                    ; preds = %originalBBpart2120
  %697 = load i32, i32* @x.139
  %698 = load i32, i32* @y.140
  %699 = sub i32 %697, 1
  %700 = mul i32 %697, %699
  %701 = urem i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = icmp slt i32 %698, 10
  %704 = or i1 %702, %703
  br i1 %704, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %696, %originalBB122alteredBB
  store double %672, double* %695, align 8
  %705 = load i32, i32* @x.139
  %706 = load i32, i32* @y.140
  %707 = sub i32 %705, 1
  %708 = mul i32 %705, %707
  %709 = urem i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = icmp slt i32 %706, 10
  %712 = or i1 %710, %711
  br i1 %712, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %713

; <label>:713:                                    ; preds = %originalBBpart2124
  %714 = load i32, i32* @x.139
  %715 = load i32, i32* @y.140
  %716 = sub i32 %714, 1
  %717 = mul i32 %714, %716
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %715, 10
  %721 = or i1 %719, %720
  br i1 %721, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %713, %originalBB126alteredBB
  %722 = load i32, i32* %33, align 4
  %723 = add i32 %722, 1
  store i32 %723, i32* %33, align 4
  %724 = load i32, i32* @x.139
  %725 = load i32, i32* @y.140
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBBpart2134, label %originalBB126alteredBB

originalBBpart2134:                               ; preds = %originalBB126
  br label %570

; <label>:732:                                    ; preds = %originalBBpart2104
  br label %733

; <label>:733:                                    ; preds = %732
  %734 = load i32, i32* %31, align 4
  %735 = add i32 %734, 1
  store i32 %735, i32* %31, align 4
  br label %538

; <label>:736:                                    ; preds = %538
  br label %737

; <label>:737:                                    ; preds = %736
  %738 = load i32, i32* %30, align 4
  %739 = add i32 %738, 1
  store i32 %739, i32* %30, align 4
  br label %515

; <label>:740:                                    ; preds = %515
  br label %741

; <label>:741:                                    ; preds = %740
  %742 = load i32, i32* %29, align 4
  %743 = add i32 %742, 1
  store i32 %743, i32* %29, align 4
  br label %494

; <label>:744:                                    ; preds = %originalBBpart292
  %745 = load i32, i32* @x.139
  %746 = load i32, i32* @y.140
  %747 = sub i32 %745, 1
  %748 = mul i32 %745, %747
  %749 = urem i32 %748, 2
  %750 = icmp eq i32 %749, 0
  %751 = icmp slt i32 %746, 10
  %752 = or i1 %750, %751
  br i1 %752, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %744, %originalBB136alteredBB
  %753 = load i32, i32* @x.139
  %754 = load i32, i32* @y.140
  %755 = sub i32 %753, 1
  %756 = mul i32 %753, %755
  %757 = urem i32 %756, 2
  %758 = icmp eq i32 %757, 0
  %759 = icmp slt i32 %754, 10
  %760 = or i1 %758, %759
  br i1 %760, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br label %761

; <label>:761:                                    ; preds = %originalBBpart2138, %originalBBpart284
  %762 = load i32, i32* @x.139
  %763 = load i32, i32* @y.140
  %764 = sub i32 %762, 1
  %765 = mul i32 %762, %764
  %766 = urem i32 %765, 2
  %767 = icmp eq i32 %766, 0
  %768 = icmp slt i32 %763, 10
  %769 = or i1 %767, %768
  br i1 %769, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %761, %originalBB140alteredBB
  %770 = load i8, i8* %15, align 1
  %771 = trunc i8 %770 to i1
  %772 = load i32, i32* @x.139
  %773 = load i32, i32* @y.140
  %774 = sub i32 %772, 1
  %775 = mul i32 %772, %774
  %776 = urem i32 %775, 2
  %777 = icmp eq i32 %776, 0
  %778 = icmp slt i32 %773, 10
  %779 = or i1 %777, %778
  br i1 %779, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br i1 %771, label %780, label %1026

; <label>:780:                                    ; preds = %originalBBpart2142
  store i32 0, i32* %37, align 4
  store i32 0, i32* %38, align 4
  br label %781

; <label>:781:                                    ; preds = %1022, %780
  %782 = load i32, i32* %38, align 4
  %783 = load i32, i32* %11, align 4
  %784 = icmp ult i32 %782, %783
  br i1 %784, label %785, label %1025

; <label>:785:                                    ; preds = %781
  store i32 0, i32* %39, align 4
  br label %786

; <label>:786:                                    ; preds = %1002, %785
  %787 = load i32, i32* @x.139
  %788 = load i32, i32* @y.140
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %786, %originalBB144alteredBB
  %795 = load i32, i32* %39, align 4
  %796 = load i32, i32* %11, align 4
  %797 = load i32, i32* %38, align 4
  %798 = sub i32 %796, %797
  %799 = icmp ult i32 %795, %798
  %800 = load i32, i32* @x.139
  %801 = load i32, i32* @y.140
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBBpart2151, label %originalBB144alteredBB

originalBBpart2151:                               ; preds = %originalBB144
  br i1 %799, label %808, label %1005

; <label>:808:                                    ; preds = %originalBBpart2151
  %809 = load i32, i32* @x.139
  %810 = load i32, i32* @y.140
  %811 = sub i32 %809, 1
  %812 = mul i32 %809, %811
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %810, 10
  %816 = or i1 %814, %815
  br i1 %816, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %808, %originalBB153alteredBB
  store i32 0, i32* %40, align 4
  %817 = load i32, i32* @x.139
  %818 = load i32, i32* @y.140
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %825

; <label>:825:                                    ; preds = %998, %originalBBpart2155
  %826 = load i32, i32* %40, align 4
  %827 = load i32, i32* %11, align 4
  %828 = load i32, i32* %39, align 4
  %829 = sub i32 %827, %828
  %830 = load i32, i32* %38, align 4
  %831 = sub i32 %829, %830
  %832 = icmp ult i32 %826, %831
  br i1 %832, label %833, label %1001

; <label>:833:                                    ; preds = %825
  %834 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %50, i32 0, i32 3
  %835 = load i32, i32* %37, align 4
  %836 = add i32 %835, 1
  store i32 %836, i32* %37, align 4
  %837 = zext i32 %835 to i64
  %838 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %834, i64 %837)
          to label %839 unwind label %267

; <label>:839:                                    ; preds = %833
  %840 = load i32, i32* %838, align 4
  store i32 %840, i32* %41, align 4
  store i32 0, i32* %42, align 4
  br label %841

; <label>:841:                                    ; preds = %994, %839
  %842 = load i32, i32* %42, align 4
  %843 = icmp ult i32 %842, 3
  br i1 %843, label %844, label %997

; <label>:844:                                    ; preds = %841
  store i32 0, i32* %43, align 4
  br label %845

; <label>:845:                                    ; preds = %originalBBpart2189, %844
  %846 = load i32, i32* %43, align 4
  %847 = icmp ult i32 %846, 3
  br i1 %847, label %848, label %993

; <label>:848:                                    ; preds = %845
  %849 = load i32, i32* %42, align 4
  %850 = icmp eq i32 %849, 0
  %851 = select i1 %850, i32 1, i32 0
  %852 = load i32, i32* %43, align 4
  %853 = icmp eq i32 %852, 0
  %854 = select i1 %853, i32 1, i32 0
  %855 = add nsw i32 %851, %854
  store i32 %855, i32* %44, align 4
  %856 = load i32, i32* %42, align 4
  %857 = icmp eq i32 %856, 1
  %858 = select i1 %857, i32 1, i32 0
  %859 = load i32, i32* %43, align 4
  %860 = icmp eq i32 %859, 1
  %861 = select i1 %860, i32 1, i32 0
  %862 = add nsw i32 %858, %861
  store i32 %862, i32* %45, align 4
  %863 = load i32, i32* %42, align 4
  %864 = icmp eq i32 %863, 2
  %865 = select i1 %864, i32 1, i32 0
  %866 = load i32, i32* %43, align 4
  %867 = icmp eq i32 %866, 2
  %868 = select i1 %867, i32 1, i32 0
  %869 = add nsw i32 %865, %868
  store i32 %869, i32* %46, align 4
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %47, %class.Table* %16, i32 0)
          to label %870 unwind label %267

; <label>:870:                                    ; preds = %848
  %871 = load i32, i32* @x.139
  %872 = load i32, i32* @y.140
  %873 = sub i32 %871, 1
  %874 = mul i32 %871, %873
  %875 = urem i32 %874, 2
  %876 = icmp eq i32 %875, 0
  %877 = icmp slt i32 %872, 10
  %878 = or i1 %876, %877
  br i1 %878, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %870, %originalBB157alteredBB
  %879 = load i32, i32* %40, align 4
  %880 = load i32, i32* @x.139
  %881 = load i32, i32* @y.140
  %882 = sub i32 %880, 1
  %883 = mul i32 %880, %882
  %884 = urem i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = icmp slt i32 %881, 10
  %887 = or i1 %885, %886
  br i1 %887, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  %888 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %47, i32 %879)
          to label %889 unwind label %267

; <label>:889:                                    ; preds = %originalBBpart2159
  %890 = load i32, i32* %44, align 4
  %891 = zext i32 %890 to i64
  %892 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %888, i64 %891)
          to label %893 unwind label %267

; <label>:893:                                    ; preds = %889
  %894 = load double, double* %892, align 8
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %48, %class.Table* %16, i32 1)
          to label %895 unwind label %267

; <label>:895:                                    ; preds = %893
  %896 = load i32, i32* %39, align 4
  %897 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %48, i32 %896)
          to label %898 unwind label %267

; <label>:898:                                    ; preds = %895
  %899 = load i32, i32* %45, align 4
  %900 = zext i32 %899 to i64
  %901 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %897, i64 %900)
          to label %902 unwind label %267

; <label>:902:                                    ; preds = %898
  %903 = load i32, i32* @x.139
  %904 = load i32, i32* @y.140
  %905 = sub i32 %903, 1
  %906 = mul i32 %903, %905
  %907 = urem i32 %906, 2
  %908 = icmp eq i32 %907, 0
  %909 = icmp slt i32 %904, 10
  %910 = or i1 %908, %909
  br i1 %910, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %902, %originalBB161alteredBB
  %911 = load double, double* %901, align 8
  %912 = fmul double %894, %911
  %913 = load i32, i32* @x.139
  %914 = load i32, i32* @y.140
  %915 = sub i32 %913, 1
  %916 = mul i32 %913, %915
  %917 = urem i32 %916, 2
  %918 = icmp eq i32 %917, 0
  %919 = icmp slt i32 %914, 10
  %920 = or i1 %918, %919
  br i1 %920, label %originalBBpart2171, label %originalBB161alteredBB

originalBBpart2171:                               ; preds = %originalBB161
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %49, %class.Table* %16, i32 2)
          to label %921 unwind label %267

; <label>:921:                                    ; preds = %originalBBpart2171
  %922 = load i32, i32* @x.139
  %923 = load i32, i32* @y.140
  %924 = sub i32 %922, 1
  %925 = mul i32 %922, %924
  %926 = urem i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = icmp slt i32 %923, 10
  %929 = or i1 %927, %928
  br i1 %929, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %921, %originalBB173alteredBB
  %930 = load i32, i32* %38, align 4
  %931 = load i32, i32* @x.139
  %932 = load i32, i32* @y.140
  %933 = sub i32 %931, 1
  %934 = mul i32 %931, %933
  %935 = urem i32 %934, 2
  %936 = icmp eq i32 %935, 0
  %937 = icmp slt i32 %932, 10
  %938 = or i1 %936, %937
  br i1 %938, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  %939 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNK8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %49, i32 %930)
          to label %940 unwind label %267

; <label>:940:                                    ; preds = %originalBBpart2175
  %941 = load i32, i32* @x.139
  %942 = load i32, i32* @y.140
  %943 = sub i32 %941, 1
  %944 = mul i32 %941, %943
  %945 = urem i32 %944, 2
  %946 = icmp eq i32 %945, 0
  %947 = icmp slt i32 %942, 10
  %948 = or i1 %946, %947
  br i1 %948, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %940, %originalBB177alteredBB
  %949 = load i32, i32* %46, align 4
  %950 = zext i32 %949 to i64
  %951 = load i32, i32* @x.139
  %952 = load i32, i32* @y.140
  %953 = sub i32 %951, 1
  %954 = mul i32 %951, %953
  %955 = urem i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = icmp slt i32 %952, 10
  %958 = or i1 %956, %957
  br i1 %958, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  %959 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %939, i64 %950)
          to label %960 unwind label %267

; <label>:960:                                    ; preds = %originalBBpart2179
  %961 = load double, double* %959, align 8
  %962 = fmul double %912, %961
  %963 = load %"class.std::vector.43"*, %"class.std::vector.43"** %10, align 8
  %964 = load i32, i32* %41, align 4
  %965 = zext i32 %964 to i64
  %966 = invoke dereferenceable(72) %class.Tensor.48* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.43"* %963, i64 %965)
          to label %967 unwind label %267

; <label>:967:                                    ; preds = %960
  %968 = load i32, i32* %42, align 4
  %969 = invoke dereferenceable(24) %class.Tensor.37* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.48* %966, i32 %968)
          to label %970 unwind label %267

; <label>:970:                                    ; preds = %967
  %971 = load i32, i32* %43, align 4
  %972 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %969, i32 %971)
          to label %973 unwind label %267

; <label>:973:                                    ; preds = %970
  store double %962, double* %972, align 8
  br label %974

; <label>:974:                                    ; preds = %973
  %975 = load i32, i32* @x.139
  %976 = load i32, i32* @y.140
  %977 = sub i32 %975, 1
  %978 = mul i32 %975, %977
  %979 = urem i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = icmp slt i32 %976, 10
  %982 = or i1 %980, %981
  br i1 %982, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %974, %originalBB181alteredBB
  %983 = load i32, i32* %43, align 4
  %984 = add i32 %983, 1
  store i32 %984, i32* %43, align 4
  %985 = load i32, i32* @x.139
  %986 = load i32, i32* @y.140
  %987 = sub i32 %985, 1
  %988 = mul i32 %985, %987
  %989 = urem i32 %988, 2
  %990 = icmp eq i32 %989, 0
  %991 = icmp slt i32 %986, 10
  %992 = or i1 %990, %991
  br i1 %992, label %originalBBpart2189, label %originalBB181alteredBB

originalBBpart2189:                               ; preds = %originalBB181
  br label %845

; <label>:993:                                    ; preds = %845
  br label %994

; <label>:994:                                    ; preds = %993
  %995 = load i32, i32* %42, align 4
  %996 = add i32 %995, 1
  store i32 %996, i32* %42, align 4
  br label %841

; <label>:997:                                    ; preds = %841
  br label %998

; <label>:998:                                    ; preds = %997
  %999 = load i32, i32* %40, align 4
  %1000 = add i32 %999, 1
  store i32 %1000, i32* %40, align 4
  br label %825

; <label>:1001:                                   ; preds = %825
  br label %1002

; <label>:1002:                                   ; preds = %1001
  %1003 = load i32, i32* %39, align 4
  %1004 = add i32 %1003, 1
  store i32 %1004, i32* %39, align 4
  br label %786

; <label>:1005:                                   ; preds = %originalBBpart2151
  %1006 = load i32, i32* @x.139
  %1007 = load i32, i32* @y.140
  %1008 = sub i32 %1006, 1
  %1009 = mul i32 %1006, %1008
  %1010 = urem i32 %1009, 2
  %1011 = icmp eq i32 %1010, 0
  %1012 = icmp slt i32 %1007, 10
  %1013 = or i1 %1011, %1012
  br i1 %1013, label %originalBB191, label %originalBB191alteredBB

originalBB191:                                    ; preds = %1005, %originalBB191alteredBB
  %1014 = load i32, i32* @x.139
  %1015 = load i32, i32* @y.140
  %1016 = sub i32 %1014, 1
  %1017 = mul i32 %1014, %1016
  %1018 = urem i32 %1017, 2
  %1019 = icmp eq i32 %1018, 0
  %1020 = icmp slt i32 %1015, 10
  %1021 = or i1 %1019, %1020
  br i1 %1021, label %originalBBpart2193, label %originalBB191alteredBB

originalBBpart2193:                               ; preds = %originalBB191
  br label %1022

; <label>:1022:                                   ; preds = %originalBBpart2193
  %1023 = load i32, i32* %38, align 4
  %1024 = add i32 %1023, 1
  store i32 %1024, i32* %38, align 4
  br label %781

; <label>:1025:                                   ; preds = %781
  br label %1026

; <label>:1026:                                   ; preds = %1025, %originalBBpart2142
  %1027 = load i32, i32* @x.139
  %1028 = load i32, i32* @y.140
  %1029 = sub i32 %1027, 1
  %1030 = mul i32 %1027, %1029
  %1031 = urem i32 %1030, 2
  %1032 = icmp eq i32 %1031, 0
  %1033 = icmp slt i32 %1028, 10
  %1034 = or i1 %1032, %1033
  br i1 %1034, label %originalBB195, label %originalBB195alteredBB

originalBB195:                                    ; preds = %1026, %originalBB195alteredBB
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %16)
  %1035 = load i32, i32* @x.139
  %1036 = load i32, i32* @y.140
  %1037 = sub i32 %1035, 1
  %1038 = mul i32 %1035, %1037
  %1039 = urem i32 %1038, 2
  %1040 = icmp eq i32 %1039, 0
  %1041 = icmp slt i32 %1036, 10
  %1042 = or i1 %1040, %1041
  br i1 %1042, label %originalBBpart2197, label %originalBB195alteredBB

originalBBpart2197:                               ; preds = %originalBB195
  ret void

; <label>:1043:                                   ; preds = %originalBBpart246
  br label %1044

; <label>:1044:                                   ; preds = %1043
  %1045 = load i8*, i8** %18, align 8
  %1046 = load i32, i32* %19, align 4
  %1047 = insertvalue { i8*, i32 } undef, i8* %1045, 0
  %1048 = insertvalue { i8*, i32 } %1047, i32 %1046, 1
  resume { i8*, i32 } %1048

; <label>:1049:                                   ; preds = %originalBBpart246
  %1050 = landingpad { i8*, i32 }
          catch i8* null
  %1051 = extractvalue { i8*, i32 } %1050, 0
  call void @__clang_call_terminate(i8* %1051) #7
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %68
  store i8 1, i8* %14, align 1
  store i32 2, i32* %12, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %99
  %1052 = bitcast %class.TableIndices* %98 to %class.TableIndicesBase*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %118
  %1053 = icmp ult i32 %96, %117
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %136
  store i32 0, i32* %20, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %160
  %1054 = icmp ult i32 %154, %159
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %190
  %1055 = load %class.Point.36*, %class.Point.36** %7, align 8
  %1056 = load i32, i32* %17, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %214
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %231
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %248
  %1057 = load i32, i32* %20, align 4
  %_ = shl i32 %1057, 1
  %_31 = shl i32 %1057, 1
  %_32 = shl i32 %1057, 1
  %_33 = sub i32 %1057, 1
  %gen = mul i32 %_33, 1
  %_34 = sub i32 0, %1057
  %gen35 = add i32 %_34, 1
  %_36 = sub i32 0, %1057
  %gen37 = add i32 %_36, 1
  %_38 = sub i32 %1057, 1
  %gen39 = mul i32 %_38, 1
  %_40 = shl i32 %1057, 1
  %1058 = add i32 %1057, 1
  store i32 %1058, i32* %20, align 4
  br label %originalBB30

originalBB44alteredBB:                            ; preds = %originalBB44, %267
  %1059 = landingpad { i8*, i32 }
          cleanup
  %1060 = extractvalue { i8*, i32 } %1059, 0
  store i8* %1060, i8** %18, align 8
  %1061 = extractvalue { i8*, i32 } %1059, 1
  store i32 %1061, i32* %19, align 4
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %295
  %1062 = load i32, i32* %22, align 4
  %1063 = load i32, i32* %11, align 4
  %1064 = icmp ult i32 %1062, %1063
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %339
  %1065 = load i32, i32* %23, align 4
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %360
  %1066 = load double, double* %359, align 8
  %_57 = fsub double -0.000000e+00, %338
  %gen58 = fadd double %_57, %1066
  %_59 = fsub double -0.000000e+00, %338
  %gen60 = fadd double %_59, %1066
  %_61 = fsub double -0.000000e+00, %338
  %gen62 = fadd double %_61, %1066
  %_63 = fsub double %338, %1066
  %gen64 = fmul double %_63, %1066
  %_65 = fsub double -0.000000e+00, %338
  %gen66 = fadd double %_65, %1066
  %1067 = fmul double %338, %1066
  br label %originalBB56

originalBB70alteredBB:                            ; preds = %originalBB70, %393
  %1068 = load i32, i32* %392, align 4
  %1069 = zext i32 %1068 to i64
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %413
  store double %386, double* %412, align 8
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %433
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %458
  %1070 = load i8, i8* %14, align 1
  %1071 = trunc i8 %1070 to i1
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %477
  store i32 0, i32* %28, align 4
  store i32 0, i32* %29, align 4
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %494
  %1072 = load i32, i32* %29, align 4
  %1073 = load i32, i32* %11, align 4
  %1074 = icmp ult i32 %1072, %1073
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %521
  store i32 0, i32* %31, align 4
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %552
  %1075 = load i32, i32* %551, align 4
  store i32 %1075, i32* %32, align 4
  store i32 0, i32* %33, align 4
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %570
  %1076 = load i32, i32* %33, align 4
  %1077 = icmp ult i32 %1076, 3
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %589
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %615
  %1078 = load double, double* %614, align 8
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %636
  %1079 = load i32, i32* %33, align 4
  %1080 = icmp eq i32 %1079, 1
  %1081 = select i1 %1080, i32 1, i32 0
  %1082 = sext i32 %1081 to i64
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %677
  %1083 = load i32, i32* %33, align 4
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %696
  store double %672, double* %695, align 8
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %713
  %1084 = load i32, i32* %33, align 4
  %_127 = shl i32 %1084, 1
  %_128 = sub i32 %1084, 1
  %gen129 = mul i32 %_128, 1
  %_130 = sub i32 %1084, 1
  %gen131 = mul i32 %_130, 1
  %_132 = shl i32 %1084, 1
  %1085 = add i32 %1084, 1
  store i32 %1085, i32* %33, align 4
  br label %originalBB126

originalBB136alteredBB:                           ; preds = %originalBB136, %744
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %761
  %1086 = load i8, i8* %15, align 1
  %1087 = trunc i8 %1086 to i1
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %786
  %1088 = load i32, i32* %39, align 4
  %1089 = load i32, i32* %11, align 4
  %1090 = load i32, i32* %38, align 4
  %_145 = shl i32 %1089, %1090
  %_146 = shl i32 %1089, %1090
  %_147 = sub i32 0, %1089
  %gen148 = add i32 %_147, %1090
  %_149 = shl i32 %1089, %1090
  %1091 = sub i32 %1089, %1090
  %1092 = icmp ult i32 %1088, %1091
  br label %originalBB144

originalBB153alteredBB:                           ; preds = %originalBB153, %808
  store i32 0, i32* %40, align 4
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %870
  %1093 = load i32, i32* %40, align 4
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %902
  %1094 = load double, double* %901, align 8
  %_162 = fsub double -0.000000e+00, %894
  %gen163 = fadd double %_162, %1094
  %_164 = fsub double %894, %1094
  %gen165 = fmul double %_164, %1094
  %_166 = fsub double %894, %1094
  %gen167 = fmul double %_166, %1094
  %_168 = fsub double %894, %1094
  %gen169 = fmul double %_168, %1094
  %1095 = fmul double %894, %1094
  br label %originalBB161

originalBB173alteredBB:                           ; preds = %originalBB173, %921
  %1096 = load i32, i32* %38, align 4
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %940
  %1097 = load i32, i32* %46, align 4
  %1098 = zext i32 %1097 to i64
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %974
  %1099 = load i32, i32* %43, align 4
  %_182 = sub i32 0, %1099
  %gen183 = add i32 %_182, 1
  %_184 = shl i32 %1099, 1
  %_185 = sub i32 %1099, 1
  %gen186 = mul i32 %_185, 1
  %_187 = shl i32 %1099, 1
  %1100 = add i32 %1099, 1
  store i32 %1100, i32* %43, align 4
  br label %originalBB181

originalBB191alteredBB:                           ; preds = %originalBB191, %1005
  br label %originalBB191

originalBB195alteredBB:                           ; preds = %originalBB195, %1026
  call void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %16)
  br label %originalBB195
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.38"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.38"*, align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %2, align 8
  %3 = load %"class.std::vector.38"*, %"class.std::vector.38"** %2, align 8
  %4 = bitcast %"class.std::vector.38"* %3 to %"struct.std::_Vector_base.39"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Tensor.37*, %class.Tensor.37** %7, align 8
  %9 = bitcast %"class.std::vector.38"* %3 to %"struct.std::_Vector_base.39"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Tensor.37*, %class.Tensor.37** %12, align 8
  %14 = ptrtoint %class.Tensor.37* %8 to i64
  %15 = ptrtoint %class.Tensor.37* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE4sizeEv(%"class.std::vector.43"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.143
  %3 = load i32, i32* @y.144
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.43"*, align 8
  store %"class.std::vector.43"* %0, %"class.std::vector.43"** %10, align 8
  %11 = load %"class.std::vector.43"*, %"class.std::vector.43"** %10, align 8
  %12 = bitcast %"class.std::vector.43"* %11 to %"struct.std::_Vector_base.44"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load %class.Tensor.48*, %class.Tensor.48** %15, align 8
  %17 = bitcast %"class.std::vector.43"* %11 to %"struct.std::_Vector_base.44"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Tensor.48*, %class.Tensor.48** %20, align 8
  %22 = ptrtoint %class.Tensor.48* %16 to i64
  %23 = ptrtoint %class.Tensor.48* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 72
  %26 = load i32, i32* @x.143
  %27 = load i32, i32* @y.144
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.43"*, align 8
  store %"class.std::vector.43"* %0, %"class.std::vector.43"** %34, align 8
  %35 = load %"class.std::vector.43"*, %"class.std::vector.43"** %34, align 8
  %36 = bitcast %"class.std::vector.43"* %35 to %"struct.std::_Vector_base.44"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %class.Tensor.48*, %class.Tensor.48** %39, align 8
  %41 = bitcast %"class.std::vector.43"* %35 to %"struct.std::_Vector_base.44"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %class.Tensor.48*, %class.Tensor.48** %44, align 8
  %46 = ptrtoint %class.Tensor.48* %40 to i64
  %47 = ptrtoint %class.Tensor.48* %45 to i64
  %_ = sub i64 %46, %47
  %gen = mul i64 %_, %47
  %_1 = sub i64 0, %46
  %gen2 = add i64 %_1, %47
  %_3 = sub i64 0, %46
  %gen4 = add i64 %_3, %47
  %48 = sub i64 %46, %47
  %_5 = sub i64 0, %48
  %gen6 = add i64 %_5, 72
  %_7 = shl i64 %48, 72
  %_8 = sub i64 %48, 72
  %gen9 = mul i64 %_8, 72
  %_10 = sub i64 0, %48
  %gen11 = add i64 %_10, 72
  %49 = sdiv exact i64 %48, 72
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZNK5PointILi3EEclEj(%class.Point.36*, i32) #1 comdat align 2 {
  %3 = alloca %class.Point.36*, align 8
  %4 = alloca i32, align 4
  store %class.Point.36* %0, %class.Point.36** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Point.36*, %class.Point.36** %3, align 8
  %6 = bitcast %class.Point.36* %5 to %class.Tensor.37*
  %7 = getelementptr inbounds %class.Tensor.37, %class.Tensor.37* %6, i32 0, i32 0
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 %9
  %11 = load double, double* %10, align 8
  ret double %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor.37* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.38"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.147
  %4 = load i32, i32* @y.148
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.38"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.38"*, %"class.std::vector.38"** %11, align 8
  %14 = bitcast %"class.std::vector.38"* %13 to %"struct.std::_Vector_base.39"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.Tensor.37*, %class.Tensor.37** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %class.Tensor.37, %class.Tensor.37* %18, i64 %19
  %21 = load i32, i32* @x.147
  %22 = load i32, i32* @y.148
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.37* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.38"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.38"* %0, %"class.std::vector.38"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.38"*, %"class.std::vector.38"** %29, align 8
  %32 = bitcast %"class.std::vector.38"* %31 to %"struct.std::_Vector_base.39"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.39", %"struct.std::_Vector_base.39"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %class.Tensor.37*, %class.Tensor.37** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %class.Tensor.37, %class.Tensor.37* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor.37*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor.37* %0, %class.Tensor.37** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor.37*, %class.Tensor.37** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.37, %class.Tensor.37* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [3 x double], [3 x double]* %6, i64 0, i64 %8
  ret double* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %class.Tensor.48* @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEixEm(%"class.std::vector.43"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.43"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.43"* %0, %"class.std::vector.43"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.43"*, %"class.std::vector.43"** %3, align 8
  %6 = bitcast %"class.std::vector.43"* %5 to %"struct.std::_Vector_base.44"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor.48*, %class.Tensor.48** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Tensor.48, %class.Tensor.48* %10, i64 %11
  ret %class.Tensor.48* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor.37* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.48*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor.48*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor.48* %0, %class.Tensor.48** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor.48*, %class.Tensor.48** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.48, %class.Tensor.48* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [3 x %class.Tensor.37], [3 x %class.Tensor.37]* %6, i64 0, i64 %8
  ret %class.Tensor.37* %9
}

; Function Attrs: noinline uwtable
define weak_odr double @_ZNK15PolynomialSpaceILi3EE13compute_valueEjRK5PointILi3EE(%class.PolynomialSpace.11*, i32, %class.Point.36* dereferenceable(24)) #0 comdat align 2 {
  %4 = load i32, i32* @x.155
  %5 = load i32, i32* @y.156
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.PolynomialSpace.11*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %class.Point.36*, align 8
  %15 = alloca [3 x i32], align 4
  %16 = alloca double, align 8
  %17 = alloca i32, align 4
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %12, align 8
  store i32 %1, i32* %13, align 4
  store %class.Point.36* %2, %class.Point.36** %14, align 8
  %18 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %12, align 8
  %19 = load i32, i32* %13, align 4
  call void @_ZNK15PolynomialSpaceILi3EE13compute_indexEjRA3_j(%class.PolynomialSpace.11* %18, i32 %19, [3 x i32]* dereferenceable(12) %15)
  store double 1.000000e+00, double* %16, align 8
  store i32 0, i32* %17, align 4
  %20 = load i32, i32* @x.155
  %21 = load i32, i32* @y.156
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %originalBBpart220, %originalBBpart2
  %29 = load i32, i32* %17, align 4
  %30 = icmp ult i32 %29, 3
  br i1 %30, label %31, label %80

; <label>:31:                                     ; preds = %28
  %32 = load i32, i32* @x.155
  %33 = load i32, i32* @y.156
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %18, i32 0, i32 0
  %41 = load i32, i32* %17, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [3 x i32], [3 x i32]* %15, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = call dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %40, i64 %45)
  %47 = load %class.Point.36*, %class.Point.36** %14, align 8
  %48 = load i32, i32* %17, align 4
  %49 = call double @_ZNK5PointILi3EEclEj(%class.Point.36* %47, i32 %48)
  %50 = call double @_ZNK11Polynomials10PolynomialIdE5valueEd(%"class.Polynomials::Polynomial"* %46, double %49)
  %51 = load double, double* %16, align 8
  %52 = fmul double %51, %50
  store double %52, double* %16, align 8
  %53 = load i32, i32* @x.155
  %54 = load i32, i32* @y.156
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br label %61

; <label>:61:                                     ; preds = %originalBBpart211
  %62 = load i32, i32* @x.155
  %63 = load i32, i32* @y.156
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %61, %originalBB13alteredBB
  %70 = load i32, i32* %17, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %17, align 4
  %72 = load i32, i32* @x.155
  %73 = load i32, i32* @y.156
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart220, label %originalBB13alteredBB

originalBBpart220:                                ; preds = %originalBB13
  br label %28

; <label>:80:                                     ; preds = %28
  %81 = load double, double* %16, align 8
  ret double %81

originalBBalteredBB:                              ; preds = %originalBB, %3
  %82 = alloca %class.PolynomialSpace.11*, align 8
  %83 = alloca i32, align 4
  %84 = alloca %class.Point.36*, align 8
  %85 = alloca [3 x i32], align 4
  %86 = alloca double, align 8
  %87 = alloca i32, align 4
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %82, align 8
  store i32 %1, i32* %83, align 4
  store %class.Point.36* %2, %class.Point.36** %84, align 8
  %88 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %82, align 8
  %89 = load i32, i32* %83, align 4
  call void @_ZNK15PolynomialSpaceILi3EE13compute_indexEjRA3_j(%class.PolynomialSpace.11* %88, i32 %89, [3 x i32]* dereferenceable(12) %85)
  store double 1.000000e+00, double* %86, align 8
  store i32 0, i32* %87, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %90 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %18, i32 0, i32 0
  %91 = load i32, i32* %17, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds [3 x i32], [3 x i32]* %15, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = call dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %90, i64 %95)
  %97 = load %class.Point.36*, %class.Point.36** %14, align 8
  %98 = load i32, i32* %17, align 4
  %99 = call double @_ZNK5PointILi3EEclEj(%class.Point.36* %97, i32 %98)
  %100 = call double @_ZNK11Polynomials10PolynomialIdE5valueEd(%"class.Polynomials::Polynomial"* %96, double %99)
  %101 = load double, double* %16, align 8
  %_ = fsub double -0.000000e+00, %101
  %gen = fadd double %_, %100
  %_2 = fsub double -0.000000e+00, %101
  %gen3 = fadd double %_2, %100
  %_4 = fsub double %101, %100
  %gen5 = fmul double %_4, %100
  %_6 = fsub double %101, %100
  %gen7 = fmul double %_6, %100
  %_8 = fsub double -0.000000e+00, %101
  %gen9 = fadd double %_8, %100
  %102 = fmul double %101, %100
  store double %102, double* %16, align 8
  br label %originalBB1

originalBB13alteredBB:                            ; preds = %originalBB13, %61
  %103 = load i32, i32* %17, align 4
  %_14 = sub i32 0, %103
  %gen15 = add i32 %_14, 1
  %_16 = sub i32 %103, 1
  %gen17 = mul i32 %_16, 1
  %_18 = shl i32 %103, 1
  %104 = add i32 %103, 1
  store i32 %104, i32* %17, align 4
  br label %originalBB13
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi3EE12compute_gradEjRK5PointILi3EE(%class.Tensor.37* noalias sret, %class.PolynomialSpace.11*, i32, %class.Point.36* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.PolynomialSpace.11*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.Point.36*, align 8
  %8 = alloca [3 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.0", align 8
  %11 = alloca double, align 8
  %12 = alloca %"class.std::allocator.2", align 1
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %class.PolynomialSpace.11* %1, %class.PolynomialSpace.11** %5, align 8
  store i32 %2, i32* %6, align 4
  store %class.Point.36* %3, %class.Point.36** %7, align 8
  %17 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %5, align 8
  %18 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi3EE13compute_indexEjRA3_j(%class.PolynomialSpace.11* %17, i32 %18, [3 x i32]* dereferenceable(12) %8)
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor.37* %0, i1 zeroext true)
  store i32 0, i32* %9, align 4
  br label %19

; <label>:19:                                     ; preds = %41, %4
  %20 = load i32, i32* %9, align 4
  %21 = icmp ult i32 %20, 3
  br i1 %21, label %22, label %44

; <label>:22:                                     ; preds = %19
  %23 = load i32, i32* @x.157
  %24 = load i32, i32* @y.158
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = load i32, i32* %9, align 4
  %32 = call dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %0, i32 %31)
  store double 1.000000e+00, double* %32, align 8
  %33 = load i32, i32* @x.157
  %34 = load i32, i32* @y.158
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i32, i32* %9, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %9, align 4
  br label %19

; <label>:44:                                     ; preds = %19
  %45 = load i32, i32* @x.157
  %46 = load i32, i32* @y.158
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  store double 0.000000e+00, double* %11, align 8
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %12) #11
  %53 = load i32, i32* @x.157
  %54 = load i32, i32* @y.158
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKdRKS0_(%"class.std::vector.0"* %10, i64 2, double* dereferenceable(8) %11, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %61 unwind label %151

; <label>:61:                                     ; preds = %originalBBpart24
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  store i32 0, i32* %15, align 4
  br label %62

; <label>:62:                                     ; preds = %originalBBpart244, %61
  %63 = load i32, i32* %15, align 4
  %64 = icmp ult i32 %63, 3
  br i1 %64, label %65, label %199

; <label>:65:                                     ; preds = %62
  %66 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %17, i32 0, i32 0
  %67 = load i32, i32* %15, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %66, i64 %71)
          to label %73 unwind label %155

; <label>:73:                                     ; preds = %65
  %74 = load %class.Point.36*, %class.Point.36** %7, align 8
  %75 = load i32, i32* %15, align 4
  %76 = invoke double @_ZNK5PointILi3EEclEj(%class.Point.36* %74, i32 %75)
          to label %77 unwind label %155

; <label>:77:                                     ; preds = %73
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %72, double %76, %"class.std::vector.0"* dereferenceable(24) %10)
          to label %78 unwind label %155

; <label>:78:                                     ; preds = %77
  %79 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %10, i64 1)
          to label %80 unwind label %155

; <label>:80:                                     ; preds = %78
  %81 = load double, double* %79, align 8
  %82 = load i32, i32* %15, align 4
  %83 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %0, i32 %82)
          to label %84 unwind label %155

; <label>:84:                                     ; preds = %80
  %85 = load double, double* %83, align 8
  %86 = fmul double %85, %81
  store double %86, double* %83, align 8
  store i32 0, i32* %16, align 4
  br label %87

; <label>:87:                                     ; preds = %176, %84
  %88 = load i32, i32* @x.157
  %89 = load i32, i32* @y.158
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %87, %originalBB6alteredBB
  %96 = load i32, i32* %16, align 4
  %97 = icmp ult i32 %96, 3
  %98 = load i32, i32* @x.157
  %99 = load i32, i32* @y.158
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %97, label %106, label %179

; <label>:106:                                    ; preds = %originalBBpart28
  %107 = load i32, i32* %16, align 4
  %108 = load i32, i32* %15, align 4
  %109 = icmp ne i32 %107, %108
  br i1 %109, label %110, label %175

; <label>:110:                                    ; preds = %106
  %111 = load i32, i32* @x.157
  %112 = load i32, i32* @y.158
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %110, %originalBB10alteredBB
  %119 = load i32, i32* @x.157
  %120 = load i32, i32* @y.158
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %127 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %10, i64 0)
          to label %128 unwind label %155

; <label>:128:                                    ; preds = %originalBBpart212
  %129 = load double, double* %127, align 8
  %130 = load i32, i32* %16, align 4
  %131 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %0, i32 %130)
          to label %132 unwind label %155

; <label>:132:                                    ; preds = %128
  %133 = load i32, i32* @x.157
  %134 = load i32, i32* @y.158
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %132, %originalBB14alteredBB
  %141 = load double, double* %131, align 8
  %142 = fmul double %141, %129
  store double %142, double* %131, align 8
  %143 = load i32, i32* @x.157
  %144 = load i32, i32* @y.158
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart227, label %originalBB14alteredBB

originalBBpart227:                                ; preds = %originalBB14
  br label %175

; <label>:151:                                    ; preds = %originalBBpart24
  %152 = landingpad { i8*, i32 }
          cleanup
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %13, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %14, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  br label %201

; <label>:155:                                    ; preds = %128, %originalBBpart212, %80, %78, %77, %73, %65
  %156 = load i32, i32* @x.157
  %157 = load i32, i32* @y.158
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %155, %originalBB29alteredBB
  %164 = landingpad { i8*, i32 }
          cleanup
  %165 = extractvalue { i8*, i32 } %164, 0
  store i8* %165, i8** %13, align 8
  %166 = extractvalue { i8*, i32 } %164, 1
  store i32 %166, i32* %14, align 4
  %167 = load i32, i32* @x.157
  %168 = load i32, i32* @y.158
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %10)
          to label %200 unwind label %222

; <label>:175:                                    ; preds = %originalBBpart227, %106
  br label %176

; <label>:176:                                    ; preds = %175
  %177 = load i32, i32* %16, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %16, align 4
  br label %87

; <label>:179:                                    ; preds = %originalBBpart28
  br label %180

; <label>:180:                                    ; preds = %179
  %181 = load i32, i32* @x.157
  %182 = load i32, i32* @y.158
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %180, %originalBB33alteredBB
  %189 = load i32, i32* %15, align 4
  %190 = add i32 %189, 1
  store i32 %190, i32* %15, align 4
  %191 = load i32, i32* @x.157
  %192 = load i32, i32* @y.158
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart244, label %originalBB33alteredBB

originalBBpart244:                                ; preds = %originalBB33
  br label %62

; <label>:199:                                    ; preds = %62
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %10)
  ret void

; <label>:200:                                    ; preds = %originalBBpart231
  br label %201

; <label>:201:                                    ; preds = %200, %151
  %202 = load i32, i32* @x.157
  %203 = load i32, i32* @y.158
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %201, %originalBB46alteredBB
  %210 = load i8*, i8** %13, align 8
  %211 = load i32, i32* %14, align 4
  %212 = insertvalue { i8*, i32 } undef, i8* %210, 0
  %213 = insertvalue { i8*, i32 } %212, i32 %211, 1
  %214 = load i32, i32* @x.157
  %215 = load i32, i32* @y.158
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  resume { i8*, i32 } %213

; <label>:222:                                    ; preds = %originalBBpart231
  %223 = landingpad { i8*, i32 }
          catch i8* null
  %224 = extractvalue { i8*, i32 } %223, 0
  call void @__clang_call_terminate(i8* %224) #7
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %22
  %225 = load i32, i32* %9, align 4
  %226 = call dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %0, i32 %225)
  store double 1.000000e+00, double* %226, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  store double 0.000000e+00, double* %11, align 8
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %12) #11
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %87
  %227 = load i32, i32* %16, align 4
  %228 = icmp ult i32 %227, 3
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %110
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  %229 = load double, double* %131, align 8
  %_ = fsub double %229, %129
  %gen = fmul double %_, %129
  %_15 = fsub double %229, %129
  %gen16 = fmul double %_15, %129
  %_17 = fsub double -0.000000e+00, %229
  %gen18 = fadd double %_17, %129
  %_19 = fsub double %229, %129
  %gen20 = fmul double %_19, %129
  %_21 = fsub double %229, %129
  %gen22 = fmul double %_21, %129
  %_23 = fsub double -0.000000e+00, %229
  %gen24 = fadd double %_23, %129
  %230 = fmul double %229, %129
  store double %230, double* %131, align 8
  br label %originalBB14

originalBB29alteredBB:                            ; preds = %originalBB29, %155
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %13, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %14, align 4
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %180
  %234 = load i32, i32* %15, align 4
  %_34 = shl i32 %234, 1
  %_35 = sub i32 %234, 1
  %gen36 = mul i32 %_35, 1
  %_37 = shl i32 %234, 1
  %_38 = sub i32 %234, 1
  %gen39 = mul i32 %_38, 1
  %_40 = sub i32 %234, 1
  %gen41 = mul i32 %_40, 1
  %_42 = shl i32 %234, 1
  %235 = add i32 %234, 1
  store i32 %235, i32* %15, align 4
  br label %originalBB33

originalBB46alteredBB:                            ; preds = %originalBB46, %201
  %236 = load i8*, i8** %13, align 8
  %237 = load i32, i32* %14, align 4
  %238 = insertvalue { i8*, i32 } undef, i8* %236, 0
  %239 = insertvalue { i8*, i32 } %238, i32 %237, 1
  br label %originalBB46
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor.37*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.159
  %4 = load i32, i32* @y.160
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor.37*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  store %class.Tensor.37* %0, %class.Tensor.37** %11, align 8
  %14 = zext i1 %1 to i8
  store i8 %14, i8* %12, align 1
  %15 = load %class.Tensor.37*, %class.Tensor.37** %11, align 8
  %16 = load i8, i8* %12, align 1
  %17 = trunc i8 %16 to i1
  %18 = load i32, i32* @x.159
  %19 = load i32, i32* @y.160
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %55

; <label>:26:                                     ; preds = %originalBBpart2
  store i32 0, i32* %13, align 4
  br label %27

; <label>:27:                                     ; preds = %51, %26
  %28 = load i32, i32* @x.159
  %29 = load i32, i32* @y.160
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* %13, align 4
  %37 = icmp ne i32 %36, 3
  %38 = load i32, i32* @x.159
  %39 = load i32, i32* @y.160
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %37, label %46, label %54

; <label>:46:                                     ; preds = %originalBBpart24
  %47 = getelementptr inbounds %class.Tensor.37, %class.Tensor.37* %15, i32 0, i32 0
  %48 = load i32, i32* %13, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [3 x double], [3 x double]* %47, i64 0, i64 %49
  store double 0.000000e+00, double* %50, align 8
  br label %51

; <label>:51:                                     ; preds = %46
  %52 = load i32, i32* %13, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %13, align 4
  br label %27

; <label>:54:                                     ; preds = %originalBBpart24
  br label %55

; <label>:55:                                     ; preds = %54, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %56 = alloca %class.Tensor.37*, align 8
  %57 = alloca i8, align 1
  %58 = alloca i32, align 4
  store %class.Tensor.37* %0, %class.Tensor.37** %56, align 8
  %59 = zext i1 %1 to i8
  store i8 %59, i8* %57, align 1
  %60 = load %class.Tensor.37*, %class.Tensor.37** %56, align 8
  %61 = load i8, i8* %57, align 1
  %62 = trunc i8 %61 to i1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %63 = load i32, i32* %13, align 4
  %64 = icmp ne i32 %63, 3
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi3EE17compute_grad_gradEjRK5PointILi3EE(%class.Tensor.48* noalias sret, %class.PolynomialSpace.11*, i32, %class.Point.36* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.PolynomialSpace.11*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.Point.36*, align 8
  %8 = alloca [3 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::vector.0", align 8
  %12 = alloca double, align 8
  %13 = alloca %"class.std::allocator.2", align 1
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %class.PolynomialSpace.11* %1, %class.PolynomialSpace.11** %5, align 8
  store i32 %2, i32* %6, align 4
  store %class.Point.36* %3, %class.Point.36** %7, align 8
  %19 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %5, align 8
  %20 = load i32, i32* %6, align 4
  call void @_ZNK15PolynomialSpaceILi3EE13compute_indexEjRA3_j(%class.PolynomialSpace.11* %19, i32 %20, [3 x i32]* dereferenceable(12) %8)
  call void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.48* %0)
  store i32 0, i32* %9, align 4
  br label %21

; <label>:21:                                     ; preds = %originalBBpart214, %4
  %22 = load i32, i32* %9, align 4
  %23 = icmp ult i32 %22, 3
  br i1 %23, label %24, label %72

; <label>:24:                                     ; preds = %21
  store i32 0, i32* %10, align 4
  br label %25

; <label>:25:                                     ; preds = %originalBBpart2, %24
  %26 = load i32, i32* %10, align 4
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %28, label %52

; <label>:28:                                     ; preds = %25
  %29 = load i32, i32* %9, align 4
  %30 = call dereferenceable(24) %class.Tensor.37* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.48* %0, i32 %29)
  %31 = load i32, i32* %10, align 4
  %32 = call dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %30, i32 %31)
  store double 1.000000e+00, double* %32, align 8
  br label %33

; <label>:33:                                     ; preds = %28
  %34 = load i32, i32* @x.161
  %35 = load i32, i32* @y.162
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %33, %originalBBalteredBB
  %42 = load i32, i32* %10, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %10, align 4
  %44 = load i32, i32* @x.161
  %45 = load i32, i32* @y.162
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %25

; <label>:52:                                     ; preds = %25
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* @x.161
  %55 = load i32, i32* @y.162
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %53, %originalBB5alteredBB
  %62 = load i32, i32* %9, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %9, align 4
  %64 = load i32, i32* @x.161
  %65 = load i32, i32* @y.162
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart214, label %originalBB5alteredBB

originalBBpart214:                                ; preds = %originalBB5
  br label %21

; <label>:72:                                     ; preds = %21
  store double 0.000000e+00, double* %12, align 8
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %13) #11
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKdRKS0_(%"class.std::vector.0"* %11, i64 3, double* dereferenceable(8) %12, %"class.std::allocator.2"* dereferenceable(1) %13)
          to label %73 unwind label %359

; <label>:73:                                     ; preds = %72
  %74 = load i32, i32* @x.161
  %75 = load i32, i32* @y.162
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %73, %originalBB16alteredBB
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  store i32 0, i32* %16, align 4
  %82 = load i32, i32* @x.161
  %83 = load i32, i32* @y.162
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %90

; <label>:90:                                     ; preds = %393, %originalBBpart218
  %91 = load i32, i32* @x.161
  %92 = load i32, i32* @y.162
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %90, %originalBB20alteredBB
  %99 = load i32, i32* %16, align 4
  %100 = icmp ult i32 %99, 3
  %101 = load i32, i32* @x.161
  %102 = load i32, i32* @y.162
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %100, label %109, label %396

; <label>:109:                                    ; preds = %originalBBpart222
  %110 = load i32, i32* @x.161
  %111 = load i32, i32* @y.162
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %109, %originalBB24alteredBB
  %118 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %19, i32 0, i32 0
  %119 = load i32, i32* %16, align 4
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = load i32, i32* @x.161
  %125 = load i32, i32* @y.162
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  %132 = invoke dereferenceable(48) %"class.Polynomials::Polynomial"* @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEixEm(%"class.std::vector"* %118, i64 %123)
          to label %133 unwind label %363

; <label>:133:                                    ; preds = %originalBBpart226
  %134 = load %class.Point.36*, %class.Point.36** %7, align 8
  %135 = load i32, i32* %16, align 4
  %136 = invoke double @_ZNK5PointILi3EEclEj(%class.Point.36* %134, i32 %135)
          to label %137 unwind label %363

; <label>:137:                                    ; preds = %133
  invoke void @_ZNK11Polynomials10PolynomialIdE5valueEdRSt6vectorIdSaIdEE(%"class.Polynomials::Polynomial"* %132, double %136, %"class.std::vector.0"* dereferenceable(24) %11)
          to label %138 unwind label %363

; <label>:138:                                    ; preds = %137
  %139 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 2)
          to label %140 unwind label %363

; <label>:140:                                    ; preds = %138
  %141 = load i32, i32* @x.161
  %142 = load i32, i32* @y.162
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %140, %originalBB28alteredBB
  %149 = load double, double* %139, align 8
  %150 = load i32, i32* %16, align 4
  %151 = load i32, i32* @x.161
  %152 = load i32, i32* @y.162
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  %159 = invoke dereferenceable(24) %class.Tensor.37* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.48* %0, i32 %150)
          to label %160 unwind label %363

; <label>:160:                                    ; preds = %originalBBpart230
  %161 = load i32, i32* @x.161
  %162 = load i32, i32* @y.162
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %160, %originalBB32alteredBB
  %169 = load i32, i32* %16, align 4
  %170 = load i32, i32* @x.161
  %171 = load i32, i32* @y.162
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  %178 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %159, i32 %169)
          to label %179 unwind label %363

; <label>:179:                                    ; preds = %originalBBpart234
  %180 = load i32, i32* @x.161
  %181 = load i32, i32* @y.162
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %179, %originalBB36alteredBB
  %188 = load double, double* %178, align 8
  %189 = fmul double %188, %149
  store double %189, double* %178, align 8
  store i32 0, i32* %17, align 4
  %190 = load i32, i32* @x.161
  %191 = load i32, i32* @y.162
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart244, label %originalBB36alteredBB

originalBBpart244:                                ; preds = %originalBB36
  br label %198

; <label>:198:                                    ; preds = %originalBBpart298, %originalBBpart244
  %199 = load i32, i32* @x.161
  %200 = load i32, i32* @y.162
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %198, %originalBB46alteredBB
  %207 = load i32, i32* %17, align 4
  %208 = icmp ult i32 %207, 3
  %209 = load i32, i32* @x.161
  %210 = load i32, i32* @y.162
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %208, label %217, label %392

; <label>:217:                                    ; preds = %originalBBpart248
  %218 = load i32, i32* %17, align 4
  %219 = load i32, i32* %16, align 4
  %220 = icmp ne i32 %218, %219
  br i1 %220, label %221, label %372

; <label>:221:                                    ; preds = %217
  %222 = load i32, i32* @x.161
  %223 = load i32, i32* @y.162
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %221, %originalBB50alteredBB
  %230 = load i32, i32* @x.161
  %231 = load i32, i32* @y.162
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  %238 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 1)
          to label %239 unwind label %363

; <label>:239:                                    ; preds = %originalBBpart252
  %240 = load i32, i32* @x.161
  %241 = load i32, i32* @y.162
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %239, %originalBB54alteredBB
  %248 = load double, double* %238, align 8
  %249 = load i32, i32* %16, align 4
  %250 = load i32, i32* @x.161
  %251 = load i32, i32* @y.162
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  %258 = invoke dereferenceable(24) %class.Tensor.37* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.48* %0, i32 %249)
          to label %259 unwind label %363

; <label>:259:                                    ; preds = %originalBBpart256
  %260 = load i32, i32* %17, align 4
  %261 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %258, i32 %260)
          to label %262 unwind label %363

; <label>:262:                                    ; preds = %259
  %263 = load double, double* %261, align 8
  %264 = fmul double %263, %248
  store double %264, double* %261, align 8
  %265 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 1)
          to label %266 unwind label %363

; <label>:266:                                    ; preds = %262
  %267 = load double, double* %265, align 8
  %268 = load i32, i32* %17, align 4
  %269 = invoke dereferenceable(24) %class.Tensor.37* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.48* %0, i32 %268)
          to label %270 unwind label %363

; <label>:270:                                    ; preds = %266
  %271 = load i32, i32* %16, align 4
  %272 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %269, i32 %271)
          to label %273 unwind label %363

; <label>:273:                                    ; preds = %270
  %274 = load double, double* %272, align 8
  %275 = fmul double %274, %267
  store double %275, double* %272, align 8
  store i32 0, i32* %18, align 4
  br label %276

; <label>:276:                                    ; preds = %368, %273
  %277 = load i32, i32* %18, align 4
  %278 = icmp ult i32 %277, 3
  br i1 %278, label %279, label %371

; <label>:279:                                    ; preds = %276
  %280 = load i32, i32* %18, align 4
  %281 = load i32, i32* %16, align 4
  %282 = icmp ne i32 %280, %281
  br i1 %282, label %283, label %367

; <label>:283:                                    ; preds = %279
  %284 = load i32, i32* @x.161
  %285 = load i32, i32* @y.162
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %283, %originalBB58alteredBB
  %292 = load i32, i32* @x.161
  %293 = load i32, i32* @y.162
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  %300 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %11, i64 0)
          to label %301 unwind label %363

; <label>:301:                                    ; preds = %originalBBpart260
  %302 = load i32, i32* @x.161
  %303 = load i32, i32* @y.162
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %301, %originalBB62alteredBB
  %310 = load double, double* %300, align 8
  %311 = load i32, i32* %17, align 4
  %312 = load i32, i32* @x.161
  %313 = load i32, i32* @y.162
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  %320 = invoke dereferenceable(24) %class.Tensor.37* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.48* %0, i32 %311)
          to label %321 unwind label %363

; <label>:321:                                    ; preds = %originalBBpart264
  %322 = load i32, i32* @x.161
  %323 = load i32, i32* @y.162
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %321, %originalBB66alteredBB
  %330 = load i32, i32* %18, align 4
  %331 = load i32, i32* @x.161
  %332 = load i32, i32* @y.162
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  %339 = invoke dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor.37* %320, i32 %330)
          to label %340 unwind label %363

; <label>:340:                                    ; preds = %originalBBpart268
  %341 = load i32, i32* @x.161
  %342 = load i32, i32* @y.162
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %340, %originalBB70alteredBB
  %349 = load double, double* %339, align 8
  %350 = fmul double %349, %310
  store double %350, double* %339, align 8
  %351 = load i32, i32* @x.161
  %352 = load i32, i32* @y.162
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart282, label %originalBB70alteredBB

originalBBpart282:                                ; preds = %originalBB70
  br label %367

; <label>:359:                                    ; preds = %72
  %360 = landingpad { i8*, i32 }
          cleanup
  %361 = extractvalue { i8*, i32 } %360, 0
  store i8* %361, i8** %14, align 8
  %362 = extractvalue { i8*, i32 } %360, 1
  store i32 %362, i32* %15, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  br label %430

; <label>:363:                                    ; preds = %originalBBpart268, %originalBBpart264, %originalBBpart260, %270, %266, %262, %259, %originalBBpart256, %originalBBpart252, %originalBBpart234, %originalBBpart230, %138, %137, %133, %originalBBpart226
  %364 = landingpad { i8*, i32 }
          cleanup
  %365 = extractvalue { i8*, i32 } %364, 0
  store i8* %365, i8** %14, align 8
  %366 = extractvalue { i8*, i32 } %364, 1
  store i32 %366, i32* %15, align 4
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
          to label %413 unwind label %435

; <label>:367:                                    ; preds = %originalBBpart282, %279
  br label %368

; <label>:368:                                    ; preds = %367
  %369 = load i32, i32* %18, align 4
  %370 = add i32 %369, 1
  store i32 %370, i32* %18, align 4
  br label %276

; <label>:371:                                    ; preds = %276
  br label %372

; <label>:372:                                    ; preds = %371, %217
  br label %373

; <label>:373:                                    ; preds = %372
  %374 = load i32, i32* @x.161
  %375 = load i32, i32* @y.162
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %373, %originalBB84alteredBB
  %382 = load i32, i32* %17, align 4
  %383 = add i32 %382, 1
  store i32 %383, i32* %17, align 4
  %384 = load i32, i32* @x.161
  %385 = load i32, i32* @y.162
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBBpart298, label %originalBB84alteredBB

originalBBpart298:                                ; preds = %originalBB84
  br label %198

; <label>:392:                                    ; preds = %originalBBpart248
  br label %393

; <label>:393:                                    ; preds = %392
  %394 = load i32, i32* %16, align 4
  %395 = add i32 %394, 1
  store i32 %395, i32* %16, align 4
  br label %90

; <label>:396:                                    ; preds = %originalBBpart222
  %397 = load i32, i32* @x.161
  %398 = load i32, i32* @y.162
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %396, %originalBB100alteredBB
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
  %405 = load i32, i32* @x.161
  %406 = load i32, i32* @y.162
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  ret void

; <label>:413:                                    ; preds = %363
  %414 = load i32, i32* @x.161
  %415 = load i32, i32* @y.162
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %413, %originalBB104alteredBB
  %422 = load i32, i32* @x.161
  %423 = load i32, i32* @y.162
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %430

; <label>:430:                                    ; preds = %originalBBpart2106, %359
  %431 = load i8*, i8** %14, align 8
  %432 = load i32, i32* %15, align 4
  %433 = insertvalue { i8*, i32 } undef, i8* %431, 0
  %434 = insertvalue { i8*, i32 } %433, i32 %432, 1
  resume { i8*, i32 } %434

; <label>:435:                                    ; preds = %363
  %436 = landingpad { i8*, i32 }
          catch i8* null
  %437 = extractvalue { i8*, i32 } %436, 0
  call void @__clang_call_terminate(i8* %437) #7
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %33
  %438 = load i32, i32* %10, align 4
  %_ = sub i32 0, %438
  %gen = add i32 %_, 1
  %_1 = sub i32 %438, 1
  %gen2 = mul i32 %_1, 1
  %_3 = sub i32 0, %438
  %gen4 = add i32 %_3, 1
  %439 = add i32 %438, 1
  store i32 %439, i32* %10, align 4
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %53
  %440 = load i32, i32* %9, align 4
  %_6 = shl i32 %440, 1
  %_7 = shl i32 %440, 1
  %_8 = sub i32 %440, 1
  %gen9 = mul i32 %_8, 1
  %_10 = shl i32 %440, 1
  %_11 = shl i32 %440, 1
  %_12 = shl i32 %440, 1
  %441 = add i32 %440, 1
  store i32 %441, i32* %9, align 4
  br label %originalBB5

originalBB16alteredBB:                            ; preds = %originalBB16, %73
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  store i32 0, i32* %16, align 4
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %90
  %442 = load i32, i32* %16, align 4
  %443 = icmp ult i32 %442, 3
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %109
  %444 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %19, i32 0, i32 0
  %445 = load i32, i32* %16, align 4
  %446 = zext i32 %445 to i64
  %447 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 %446
  %448 = load i32, i32* %447, align 4
  %449 = zext i32 %448 to i64
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %140
  %450 = load double, double* %139, align 8
  %451 = load i32, i32* %16, align 4
  br label %originalBB28

originalBB32alteredBB:                            ; preds = %originalBB32, %160
  %452 = load i32, i32* %16, align 4
  br label %originalBB32

originalBB36alteredBB:                            ; preds = %originalBB36, %179
  %453 = load double, double* %178, align 8
  %_37 = fsub double -0.000000e+00, %453
  %gen38 = fadd double %_37, %149
  %_39 = fsub double -0.000000e+00, %453
  %gen40 = fadd double %_39, %149
  %_41 = fsub double %453, %149
  %gen42 = fmul double %_41, %149
  %454 = fmul double %453, %149
  store double %454, double* %178, align 8
  store i32 0, i32* %17, align 4
  br label %originalBB36

originalBB46alteredBB:                            ; preds = %originalBB46, %198
  %455 = load i32, i32* %17, align 4
  %456 = icmp ult i32 %455, 3
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %221
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %239
  %457 = load double, double* %238, align 8
  %458 = load i32, i32* %16, align 4
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %283
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %301
  %459 = load double, double* %300, align 8
  %460 = load i32, i32* %17, align 4
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %321
  %461 = load i32, i32* %18, align 4
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %340
  %462 = load double, double* %339, align 8
  %_71 = fsub double -0.000000e+00, %462
  %gen72 = fadd double %_71, %310
  %_73 = fsub double %462, %310
  %gen74 = fmul double %_73, %310
  %_75 = fsub double %462, %310
  %gen76 = fmul double %_75, %310
  %_77 = fsub double %462, %310
  %gen78 = fmul double %_77, %310
  %_79 = fsub double %462, %310
  %gen80 = fmul double %_79, %310
  %463 = fmul double %462, %310
  store double %463, double* %339, align 8
  br label %originalBB70

originalBB84alteredBB:                            ; preds = %originalBB84, %373
  %464 = load i32, i32* %17, align 4
  %_85 = shl i32 %464, 1
  %_86 = shl i32 %464, 1
  %_87 = sub i32 %464, 1
  %gen88 = mul i32 %_87, 1
  %_89 = shl i32 %464, 1
  %_90 = sub i32 0, %464
  %gen91 = add i32 %_90, 1
  %_92 = shl i32 %464, 1
  %_93 = sub i32 0, %464
  %gen94 = add i32 %_93, 1
  %_95 = sub i32 0, %464
  %gen96 = add i32 %_95, 1
  %465 = add i32 %464, 1
  store i32 %465, i32* %17, align 4
  br label %originalBB84

originalBB100alteredBB:                           ; preds = %originalBB100, %396
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %413
  br label %originalBB104
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6TensorILi2ELi3EEC2Ev(%class.Tensor.48*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.163
  %3 = load i32, i32* @y.164
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Tensor.48*, align 8
  store %class.Tensor.48* %0, %class.Tensor.48** %10, align 8
  %11 = load %class.Tensor.48*, %class.Tensor.48** %10, align 8
  %12 = getelementptr inbounds %class.Tensor.48, %class.Tensor.48* %11, i32 0, i32 0
  %13 = getelementptr inbounds [3 x %class.Tensor.37], [3 x %class.Tensor.37]* %12, i32 0, i32 0
  %14 = getelementptr inbounds %class.Tensor.37, %class.Tensor.37* %13, i64 3
  %15 = load i32, i32* @x.163
  %16 = load i32, i32* @y.164
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23

; <label>:23:                                     ; preds = %23, %originalBBpart2
  %24 = phi %class.Tensor.37* [ %13, %originalBBpart2 ], [ %25, %23 ]
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor.37* %24, i1 zeroext true)
  %25 = getelementptr inbounds %class.Tensor.37, %class.Tensor.37* %24, i64 1
  %26 = icmp eq %class.Tensor.37* %25, %14
  br i1 %26, label %27, label %23

; <label>:27:                                     ; preds = %23
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %28 = alloca %class.Tensor.48*, align 8
  store %class.Tensor.48* %0, %class.Tensor.48** %28, align 8
  %29 = load %class.Tensor.48*, %class.Tensor.48** %28, align 8
  %30 = getelementptr inbounds %class.Tensor.48, %class.Tensor.48* %29, i32 0, i32 0
  %31 = getelementptr inbounds [3 x %class.Tensor.37], [3 x %class.Tensor.37]* %30, i32 0, i32 0
  %32 = getelementptr inbounds %class.Tensor.37, %class.Tensor.37* %31, i64 3
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK15PolynomialSpaceILi3EE1nEv(%class.PolynomialSpace.11*) #1 comdat align 2 {
  %2 = alloca %class.PolynomialSpace.11*, align 8
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %2, align 8
  %3 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %2, align 8
  %4 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK15PolynomialSpaceILi3EE6degreeEv(%class.PolynomialSpace.11*) #0 comdat align 2 {
  %2 = load i32, i32* @x.167
  %3 = load i32, i32* @y.168
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.PolynomialSpace.11*, align 8
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %10, align 8
  %11 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %10, align 8
  %12 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %11, i32 0, i32 0
  %13 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %12)
  %14 = trunc i64 %13 to i32
  %15 = load i32, i32* @x.167
  %16 = load i32, i32* @y.168
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %class.PolynomialSpace.11*, align 8
  store %class.PolynomialSpace.11* %0, %class.PolynomialSpace.11** %23, align 8
  %24 = load %class.PolynomialSpace.11*, %class.PolynomialSpace.11** %23, align 8
  %25 = getelementptr inbounds %class.PolynomialSpace.11, %class.PolynomialSpace.11* %24, i32 0, i32 0
  %26 = call i64 @_ZNKSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE4sizeEv(%"class.std::vector"* %25)
  %27 = trunc i64 %26 to i32
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2C2Eiii(%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, i32, i32, i32) unnamed_addr #0 comdat($_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2C5Eiii) align 2 {
  %5 = alloca %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %5, align 8
  %10 = bitcast %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %9 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %10)
  %11 = bitcast %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN15PolynomialSpaceILi3EE21ExcDimensionMismatch2E, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %9, i32 0, i32 1
  %13 = load i32, i32* %6, align 4
  store i32 %13, i32* %12, align 8
  %14 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %9, i32 0, i32 2
  %15 = load i32, i32* %7, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %9, i32 0, i32 3
  %17 = load i32, i32* %8, align 4
  store i32 %17, i32* %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D2Ev(%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*) unnamed_addr #1 comdat($_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D5Ev) align 2 {
  %2 = load i32, i32* @x.171
  %3 = load i32, i32* @y.172
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, align 8
  store %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %10, align 8
  %11 = load %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %10, align 8
  %12 = bitcast %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %11 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %12) #11
  %13 = load i32, i32* @x.171
  %14 = load i32, i32* @y.172
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, align 8
  store %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %21, align 8
  %22 = load %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %21, align 8
  %23 = bitcast %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %22 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %23) #11
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D0Ev(%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*) unnamed_addr #1 comdat($_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D5Ev) align 2 {
  %2 = alloca %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, align 8
  store %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %2, align 8
  %3 = load %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %2, align 8
  call void @_ZN15PolynomialSpaceILi3EE21ExcDimensionMismatch2D1Ev(%"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %3) #11
  %4 = bitcast %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %3 to i8*
  call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK15PolynomialSpaceILi3EE21ExcDimensionMismatch29PrintInfoERSo(%"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.175
  %4 = load i32, i32* @y.176
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, align 8
  %12 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %11, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %12, align 8
  %13 = load %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %11, align 8
  %14 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %12, align 8
  %15 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0))
  %16 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %13, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %15, i32 %17)
  %19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0))
  %20 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %13, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %19, i32 %21)
  %23 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %22, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0))
  %24 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %13, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %23, i32 %25)
  %27 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %26, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %28 = load i32, i32* @x.175
  %29 = load i32, i32* @y.176
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %36 = alloca %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, align 8
  %37 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %0, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %36, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %37, align 8
  %38 = load %"class.PolynomialSpace<3>::ExcDimensionMismatch2"*, %"class.PolynomialSpace<3>::ExcDimensionMismatch2"** %36, align 8
  %39 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %37, align 8
  %40 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0))
  %41 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %40, i32 %42)
  %44 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0))
  %45 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %38, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %44, i32 %46)
  %48 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0))
  %49 = getelementptr inbounds %"class.PolynomialSpace<3>::ExcDimensionMismatch2", %"class.PolynomialSpace<3>::ExcDimensionMismatch2"* %38, i32 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %48, i32 %50)
  %52 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %51, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZN15PolynomialSpaceILi3EE14compute_n_polsEj(i32) #1 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  store i32 %5, i32* %3, align 4
  store i32 1, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %originalBBpart237, %1
  %7 = load i32, i32* @x.177
  %8 = load i32, i32* @y.178
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = load i32, i32* %4, align 4
  %16 = icmp ult i32 %15, 3
  %17 = load i32, i32* @x.177
  %18 = load i32, i32* @y.178
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %70

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.177
  %27 = load i32, i32* @y.178
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = load i32, i32* %2, align 4
  %35 = load i32, i32* %4, align 4
  %36 = add i32 %34, %35
  %37 = load i32, i32* %3, align 4
  %38 = mul i32 %37, %36
  store i32 %38, i32* %3, align 4
  %39 = load i32, i32* %4, align 4
  %40 = add i32 %39, 1
  %41 = load i32, i32* %3, align 4
  %42 = udiv i32 %41, %40
  store i32 %42, i32* %3, align 4
  %43 = load i32, i32* @x.177
  %44 = load i32, i32* @y.178
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart218, label %originalBB1alteredBB

originalBBpart218:                                ; preds = %originalBB1
  br label %51

; <label>:51:                                     ; preds = %originalBBpart218
  %52 = load i32, i32* @x.177
  %53 = load i32, i32* @y.178
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %51, %originalBB20alteredBB
  %60 = load i32, i32* %4, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %4, align 4
  %62 = load i32, i32* @x.177
  %63 = load i32, i32* @y.178
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart237, label %originalBB20alteredBB

originalBBpart237:                                ; preds = %originalBB20
  br label %6

; <label>:70:                                     ; preds = %originalBBpart2
  %71 = load i32, i32* %3, align 4
  ret i32 %71

originalBBalteredBB:                              ; preds = %originalBB, %6
  %72 = load i32, i32* %4, align 4
  %73 = icmp ult i32 %72, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %74 = load i32, i32* %2, align 4
  %75 = load i32, i32* %4, align 4
  %_ = shl i32 %74, %75
  %_2 = sub i32 %74, %75
  %gen = mul i32 %_2, %75
  %_3 = sub i32 %74, %75
  %gen4 = mul i32 %_3, %75
  %_5 = shl i32 %74, %75
  %_6 = shl i32 %74, %75
  %76 = add i32 %74, %75
  %77 = load i32, i32* %3, align 4
  %78 = mul i32 %77, %76
  store i32 %78, i32* %3, align 4
  %79 = load i32, i32* %4, align 4
  %_7 = shl i32 %79, 1
  %_8 = shl i32 %79, 1
  %80 = add i32 %79, 1
  %81 = load i32, i32* %3, align 4
  %_9 = sub i32 %81, %80
  %gen10 = mul i32 %_9, %80
  %_11 = sub i32 %81, %80
  %gen12 = mul i32 %_11, %80
  %_13 = sub i32 0, %81
  %gen14 = add i32 %_13, %80
  %_15 = sub i32 %81, %80
  %gen16 = mul i32 %_15, %80
  %82 = udiv i32 %81, %80
  store i32 %82, i32* %3, align 4
  br label %originalBB1

originalBB20alteredBB:                            ; preds = %originalBB20, %51
  %83 = load i32, i32* %4, align 4
  %_21 = shl i32 %83, 1
  %_22 = sub i32 %83, 1
  %gen23 = mul i32 %_22, 1
  %_24 = sub i32 0, %83
  %gen25 = add i32 %_24, 1
  %_26 = sub i32 0, %83
  %gen27 = add i32 %_26, 1
  %_28 = sub i32 0, %83
  %gen29 = add i32 %_28, 1
  %_30 = sub i32 %83, 1
  %gen31 = mul i32 %_30, 1
  %_32 = shl i32 %83, 1
  %_33 = shl i32 %83, 1
  %_34 = sub i32 0, %83
  %gen35 = add i32 %_34, 1
  %84 = add i32 %83, 1
  store i32 %84, i32* %4, align 4
  br label %originalBB20
}

; Function Attrs: nounwind
declare i8* @_ZNK13ExceptionBase4whatEv(%class.ExceptionBase*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #5

declare void @_ZN11SubscriptorD2Ev(%class.Subscriptor*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEED2Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.179
  %3 = load i32, i32* @y.180
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %10, align 8
  %13 = load %class.TableBase*, %class.TableBase** %10, align 8
  %14 = bitcast %class.TableBase* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2ESt6vectorIdSaIdEEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %class.TableBase, %class.TableBase* %13, i32 0, i32 1
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %15, align 8
  %17 = icmp ne %"class.std::vector.0"* %16, null
  %18 = load i32, i32* @x.179
  %19 = load i32, i32* @y.180
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %88

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %class.TableBase, %class.TableBase* %13, i32 0, i32 1
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %29 = icmp eq %"class.std::vector.0"* %28, null
  br i1 %29, label %59, label %30

; <label>:30:                                     ; preds = %26
  %31 = bitcast %"class.std::vector.0"* %28 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 -8
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %28, i64 %34
  %36 = icmp eq %"class.std::vector.0"* %28, %35
  br i1 %36, label %42, label %37

; <label>:37:                                     ; preds = %40, %30
  %38 = phi %"class.std::vector.0"* [ %35, %30 ], [ %39, %40 ]
  %39 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %38, i64 -1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %39)
          to label %40 unwind label %60

; <label>:40:                                     ; preds = %37
  %41 = icmp eq %"class.std::vector.0"* %39, %28
  br i1 %41, label %42, label %37

; <label>:42:                                     ; preds = %40, %30
  %43 = load i32, i32* @x.179
  %44 = load i32, i32* @y.180
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  call void @_ZdaPv(i8* %32) #12
  %51 = load i32, i32* @x.179
  %52 = load i32, i32* @y.180
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %59

; <label>:59:                                     ; preds = %originalBBpart24, %26
  br label %88

; <label>:60:                                     ; preds = %37
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %11, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %12, align 4
  %64 = icmp eq %"class.std::vector.0"* %28, %39
  br i1 %64, label %86, label %65

; <label>:65:                                     ; preds = %84, %60
  %66 = phi %"class.std::vector.0"* [ %39, %60 ], [ %75, %84 ]
  %67 = load i32, i32* @x.179
  %68 = load i32, i32* @y.180
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %75 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %66, i64 -1
  %76 = load i32, i32* @x.179
  %77 = load i32, i32* @y.180
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %75)
          to label %84 unwind label %112

; <label>:84:                                     ; preds = %originalBBpart28
  %85 = icmp eq %"class.std::vector.0"* %75, %28
  br i1 %85, label %86, label %65

; <label>:86:                                     ; preds = %84, %60
  call void @_ZdaPv(i8* %32) #12
  %87 = bitcast %class.TableBase* %13 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %87)
          to label %90 unwind label %112

; <label>:88:                                     ; preds = %59, %originalBBpart2
  %89 = bitcast %class.TableBase* %13 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %89)
  ret void

; <label>:90:                                     ; preds = %86
  br label %91

; <label>:91:                                     ; preds = %90
  %92 = load i32, i32* @x.179
  %93 = load i32, i32* @y.180
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = load i8*, i8** %11, align 8
  %101 = load i32, i32* %12, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  %104 = load i32, i32* @x.179
  %105 = load i32, i32* @y.180
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %103

; <label>:112:                                    ; preds = %86, %originalBBpart28
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  call void @__clang_call_terminate(i8* %114) #7
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %115 = alloca %class.TableBase*, align 8
  %116 = alloca i8*
  %117 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %115, align 8
  %118 = load %class.TableBase*, %class.TableBase** %115, align 8
  %119 = bitcast %class.TableBase* %118 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2ESt6vectorIdSaIdEEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = getelementptr inbounds %class.TableBase, %class.TableBase* %118, i32 0, i32 1
  %121 = load %"class.std::vector.0"*, %"class.std::vector.0"** %120, align 8
  %122 = icmp ne %"class.std::vector.0"* %121, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  call void @_ZdaPv(i8* %32) #12
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %123 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %66, i64 -1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %124 = load i8*, i8** %11, align 8
  %125 = load i32, i32* %12, align 4
  %126 = insertvalue { i8*, i32 } undef, i8* %124, 0
  %127 = insertvalue { i8*, i32 } %126, i32 %125, 1
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEED0Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.181
  %3 = load i32, i32* @y.182
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %10, align 8
  %13 = load %class.TableBase*, %class.TableBase** %10, align 8
  %14 = load i32, i32* @x.181
  %15 = load i32, i32* @y.182
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEED2Ev(%class.TableBase* %13)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = bitcast %class.TableBase* %13 to i8*
  call void @_ZdlPv(i8* %23) #12
  ret void

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %11, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %12, align 4
  %28 = bitcast %class.TableBase* %13 to i8*
  call void @_ZdlPv(i8* %28) #12
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %11, align 8
  %31 = load i32, i32* %12, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %class.TableBase*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %34, align 8
  %37 = load %class.TableBase*, %class.TableBase** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.185
  %3 = load i32, i32* @y.186
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %10, align 8
  %12 = load i32, i32* @x.185
  %13 = load i32, i32* @y.186
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE8capacityEv(%"class.std::vector.5"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %6, i32 0, i32 2
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = ptrtoint i32* %8 to i64
  %15 = ptrtoint i32* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 4
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKjS1_EEEEPjmT_S9_(%"class.std::vector.5"*, i64, i32*, i32*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i32* %2, i32** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store i32* %3, i32** %15, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %17 = bitcast %"class.std::vector.5"* %16 to %"struct.std::_Vector_base.6"*
  %18 = load i64, i64* %8, align 8
  %19 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %17, i64 %18)
  store i32* %19, i32** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load i32*, i32** %9, align 8
  %25 = bitcast %"class.std::vector.5"* %16 to %"struct.std::_Vector_base.6"*
  %26 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %25)
          to label %27 unwind label %51

; <label>:27:                                     ; preds = %4
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = invoke i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E(i32* %29, i32* %31, i32* %24, %"class.std::allocator.7"* dereferenceable(1) %26)
          to label %33 unwind label %51

; <label>:33:                                     ; preds = %27
  %34 = load i32, i32* @x.189
  %35 = load i32, i32* @y.190
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %33, %originalBBalteredBB
  %42 = load i32*, i32** %9, align 8
  %43 = load i32, i32* @x.189
  %44 = load i32, i32* @y.190
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %42

; <label>:51:                                     ; preds = %27, %4
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %12, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %13, align 4
  br label %55

; <label>:55:                                     ; preds = %51
  %56 = load i8*, i8** %12, align 8
  %57 = call i8* @__cxa_begin_catch(i8* %56) #11
  %58 = bitcast %"class.std::vector.5"* %16 to %"struct.std::_Vector_base.6"*
  %59 = load i32*, i32** %9, align 8
  %60 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.6"* %58, i32* %59, i64 %60)
          to label %61 unwind label %62

; <label>:61:                                     ; preds = %55
  invoke void @__cxa_rethrow() #13
          to label %108 unwind label %62

; <label>:62:                                     ; preds = %61, %55
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %12, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %66 unwind label %89

; <label>:66:                                     ; preds = %62
  %67 = load i32, i32* @x.189
  %68 = load i32, i32* @y.190
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %66, %originalBB1alteredBB
  %75 = load i32, i32* @x.189
  %76 = load i32, i32* @y.190
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %84
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:84:                                     ; preds = %originalBBpart24
  %85 = load i8*, i8** %12, align 8
  %86 = load i32, i32* %13, align 4
  %87 = insertvalue { i8*, i32 } undef, i8* %85, 0
  %88 = insertvalue { i8*, i32 } %87, i32 %86, 1
  resume { i8*, i32 } %88

; <label>:89:                                     ; preds = %62
  %90 = load i32, i32* @x.189
  %91 = load i32, i32* @y.190
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %89, %originalBB6alteredBB
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  call void @__clang_call_terminate(i8* %99) #7
  %100 = load i32, i32* @x.189
  %101 = load i32, i32* @y.190
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

; <label>:108:                                    ; preds = %61
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %33
  %109 = load i32*, i32** %9, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %66
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %89
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  call void @__clang_call_terminate(i8* %111) #7
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNKSt6vectorIjSaIjEE5beginEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, i32** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNKSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, i32** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = load i32, i32* @x.195
  %5 = load i32, i32* @y.196
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = load i32*, i32** %13, align 8
  call void @_ZSt8_DestroyIPjEvT_S1_(i32* %15, i32* %16)
  %17 = load i32, i32* @x.195
  %18 = load i32, i32* @y.196
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca i32*, align 8
  %26 = alloca i32*, align 8
  %27 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %25, align 8
  store i32* %1, i32** %26, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %27, align 8
  %28 = load i32*, i32** %25, align 8
  %29 = load i32*, i32** %26, align 8
  call void @_ZSt8_DestroyIPjEvT_S1_(i32* %28, i32* %29)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.197
  %3 = load i32, i32* @y.198
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %10, align 8
  %11 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"class.std::allocator.7"*
  %14 = load i32, i32* @x.197
  %15 = load i32, i32* @y.198
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.7"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %22, align 8
  %23 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %24 to %"class.std::allocator.7"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.6"*, i32*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.199
  %5 = load i32, i32* @y.200
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.6"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %12, align 8
  %16 = load i32*, i32** %13, align 8
  %17 = icmp ne i32* %16, null
  %18 = load i32, i32* @x.199
  %19 = load i32, i32* @y.200
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %47

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load i32, i32* @x.199
  %28 = load i32, i32* @y.200
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %35 to %"class.std::allocator.7"*
  %37 = load i32*, i32** %13, align 8
  %38 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.7"* dereferenceable(1) %36, i32* %37, i64 %38)
  %39 = load i32, i32* @x.199
  %40 = load i32, i32* @y.200
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %48 = alloca %"struct.std::_Vector_base.6"*, align 8
  %49 = alloca i32*, align 8
  %50 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %48, align 8
  store i32* %1, i32** %49, align 8
  store i64 %2, i64* %50, align 8
  %51 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %48, align 8
  %52 = load i32*, i32** %49, align 8
  %53 = icmp ne i32* %52, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %54 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %54 to %"class.std::allocator.7"*
  %56 = load i32*, i32** %13, align 8
  %57 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.7"* dereferenceable(1) %55, i32* %56, i64 %57)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEjEvT_S7_RSaIT0_E(i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %7, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEvT_S7_(i32* %16, i32* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEENS1_IPjS6_EEET0_T_SB_SA_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i32* %0, i32** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store i32* %1, i32** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %7, i32 0, i32 0
  store i32* %2, i32** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store i32* %20, i32** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store i32* %26, i32** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %12, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEENS1_IPjS6_EEET1_T0_SB_SA_(i32* %31, i32* %33, i32* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %4, i32 0, i32 0
  store i32* %36, i32** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %4, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  ret i32* %39
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.205
  %3 = load i32, i32* @y.206
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %11 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %11, align 8
  %12 = load %"class.std::vector.5"*, %"class.std::vector.5"** %11, align 8
  %13 = bitcast %"class.std::vector.5"* %12 to %"struct.std::_Vector_base.6"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.49"* %10, i32** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %10, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* @x.205
  %20 = load i32, i32* @y.206
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %30 = bitcast %"class.std::vector.5"* %29 to %"struct.std::_Vector_base.6"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.49"* %27, i32** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %27, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.49"* %2, i32** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32* %9, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %9 to %"class.std::allocator.7"*
  %11 = load i64, i64* %4, align 8
  %12 = call i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.7"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi i32* [ %12, %8 ], [ null, %13 ]
  ret i32* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.219
  %5 = load i32, i32* @y.220
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %15) #11
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.219
  %20 = load i32, i32* @y.220
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %28

; <label>:27:                                     ; preds = %originalBBpart2
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.219
  %30 = load i32, i32* @y.220
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i64, i64* %13, align 8
  %38 = mul i64 %37, 4
  %39 = call i8* @_Znwm(i64 %38)
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* @x.219
  %42 = load i32, i32* @y.220
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart216, label %originalBB1alteredBB

originalBBpart216:                                ; preds = %originalBB1
  ret i32* %40

originalBBalteredBB:                              ; preds = %originalBB, %3
  %49 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %50 = alloca i64, align 8
  %51 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %49, align 8
  store i64 %1, i64* %50, align 8
  store i8* %2, i8** %51, align 8
  %52 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %49, align 8
  %53 = load i64, i64* %50, align 8
  %54 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %52) #11
  %55 = icmp ugt i64 %53, %54
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %56 = load i64, i64* %13, align 8
  %_ = sub i64 0, %56
  %gen = add i64 %_, 4
  %_2 = sub i64 0, %56
  %gen3 = add i64 %_2, 4
  %_4 = shl i64 %56, 4
  %_5 = sub i64 %56, 4
  %gen6 = mul i64 %_5, 4
  %_7 = sub i64 0, %56
  %gen8 = add i64 %_7, 4
  %_9 = sub i64 %56, 4
  %gen10 = mul i64 %_9, 4
  %_11 = sub i64 0, %56
  %gen12 = add i64 %_11, 4
  %_13 = sub i64 0, %56
  %gen14 = add i64 %_13, 4
  %57 = mul i64 %56, 4
  %58 = call i8* @_Znwm(i64 %57)
  %59 = bitcast i8* %58 to i32*
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = load i32, i32* @x.225
  %5 = load i32, i32* @y.226
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store i32* %0, i32** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %1, i32** %18, align 8
  store i32* %2, i32** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = load i32*, i32** %14, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %25, i32* %27, i32* %23)
  %29 = load i32, i32* @x.225
  %30 = load i32, i32* @y.226
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %28

originalBBalteredBB:                              ; preds = %originalBB, %3
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca i32*, align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  store i32* %0, i32** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %39, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = load i32*, i32** %39, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %50, i32* %52, i32* %48)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.227
  %5 = load i32, i32* @y.228
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store i32* %0, i32** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %1, i32** %20, align 8
  store i32* %2, i32** %14, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %24)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store i32* %25, i32** %26, align 8
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %30)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store i32* %31, i32** %32, align 8
  %33 = load i32*, i32** %14, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_(i32* %35, i32* %37, i32* %33)
  %39 = load i32, i32* @x.227
  %40 = load i32, i32* @y.228
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %38

originalBBalteredBB:                              ; preds = %originalBB, %3
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %49 = alloca i32*, align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %47, i32 0, i32 0
  store i32* %0, i32** %54, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %48, i32 0, i32 0
  store i32* %1, i32** %55, align 8
  store i32* %2, i32** %49, align 8
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator"* %51 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %51, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %59)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  store i32* %60, i32** %61, align 8
  %62 = bitcast %"class.__gnu_cxx::__normal_iterator"* %53 to i8*
  %63 = bitcast %"class.__gnu_cxx::__normal_iterator"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 8, i1 false)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %65)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  store i32* %66, i32** %67, align 8
  %68 = load i32*, i32** %49, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_(i32* %70, i32* %72, i32* %68)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.229
  %5 = load i32, i32* @y.230
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store i32* %0, i32** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %1, i32** %18, align 8
  store i32* %2, i32** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %22)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %27)
  %29 = load i32*, i32** %14, align 8
  %30 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %29)
  %31 = call i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32* %23, i32* %28, i32* %30)
  %32 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %14, i32* %31)
  %33 = load i32, i32* @x.229
  %34 = load i32, i32* @y.230
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca i32*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store i32* %0, i32** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  store i32* %1, i32** %47, align 8
  store i32* %2, i32** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %45, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %56)
  %58 = load i32*, i32** %43, align 8
  %59 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %58)
  %60 = call i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32* %52, i32* %57, i32* %59)
  %61 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %43, i32* %60)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32*) #1 comdat {
  %2 = load i32, i32* @x.231
  %3 = load i32, i32* @y.232
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store i32* %0, i32** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = load i32, i32* @x.231
  %18 = load i32, i32* @y.232
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  store i32* %0, i32** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %25 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8), i32*) #1 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2)
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPjET_S1_(i32*) #1 comdat {
  %2 = load i32, i32* @x.239
  %3 = load i32, i32* @y.240
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* @x.239
  %13 = load i32, i32* @y.240
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i32*, align 8
  store i32* %0, i32** %20, align 8
  %21 = load i32*, i32** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #1 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = ptrtoint i32* %8 to i64
  %11 = ptrtoint i32* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %3
  %17 = load i32*, i32** %6, align 8
  %18 = bitcast i32* %17 to i8*
  %19 = load i32*, i32** %4, align 8
  %20 = bitcast i32* %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 4, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %22, i32 4, i1 false)
  br label %23

; <label>:23:                                     ; preds = %16, %3
  %24 = load i32*, i32** %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"*, i32** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32*, i32*) #1 comdat align 2 {
  %3 = load i32, i32* @x.249
  %4 = load i32, i32* @y.250
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store i32* %0, i32** %11, align 8
  store i32* %1, i32** %12, align 8
  %13 = load i32, i32* @x.249
  %14 = load i32, i32* @y.250
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  store i32* %0, i32** %21, align 8
  store i32* %1, i32** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.7"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.8"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.8"*, i32*, i64) #1 comdat align 2 {
  %4 = load i32, i32* @x.253
  %5 = load i32, i32* @y.254
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %12, align 8
  %16 = load i32*, i32** %13, align 8
  %17 = bitcast i32* %16 to i8*
  call void @_ZdlPv(i8* %17) #11
  %18 = load i32, i32* @x.253
  %19 = load i32, i32* @y.254
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %27 = alloca i32*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %26, align 8
  store i32* %1, i32** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %26, align 8
  %30 = load i32*, i32** %27, align 8
  %31 = bitcast i32* %30 to i8*
  call void @_ZdlPv(i8* %31) #11
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEvT_S7_(i32*, i32*) #0 comdat {
  %3 = load i32, i32* @x.255
  %4 = load i32, i32* @y.256
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %11, i32 0, i32 0
  store i32* %0, i32** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %12, i32 0, i32 0
  store i32* %1, i32** %16, align 8
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %13 to i8*
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 8, i1 false)
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %14 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %13, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %14, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_S9_(i32* %22, i32* %24)
  %25 = load i32, i32* @x.255
  %26 = load i32, i32* @y.256
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %33, i32 0, i32 0
  store i32* %0, i32** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %34, i32 0, i32 0
  store i32* %1, i32** %38, align 8
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %35 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %36 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %35, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %36, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_S9_(i32* %44, i32* %46)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_S9_(i32*, i32*) #1 comdat align 2 {
  %3 = load i32, i32* @x.257
  %4 = load i32, i32* @y.258
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %11, i32 0, i32 0
  store i32* %0, i32** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %12, i32 0, i32 0
  store i32* %1, i32** %14, align 8
  %15 = load i32, i32* @x.257
  %16 = load i32, i32* @y.258
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %23, i32 0, i32 0
  store i32* %0, i32** %25, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %24, i32 0, i32 0
  store i32* %1, i32** %26, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEENS1_IPjS6_EEET1_T0_SB_SA_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.259
  %5 = load i32, i32* @y.260
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store i32* %0, i32** %20, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store i32* %1, i32** %21, align 8
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %15, i32 0, i32 0
  store i32* %2, i32** %22, align 8
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %16 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %28)
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %33)
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %19 to i8*
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %19, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = call i32* @_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(i32* %38)
  %40 = call i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32* %29, i32* %34, i32* %39)
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %16, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = call i32* @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEES2_ET_S7_T0_(i32* %42, i32* %40)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %12, i32 0, i32 0
  store i32* %43, i32** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %12, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i32, i32* @x.259
  %48 = load i32, i32* @y.260
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %46

originalBBalteredBB:                              ; preds = %originalBB, %3
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %60 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %61 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %56, i32 0, i32 0
  store i32* %0, i32** %63, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %57, i32 0, i32 0
  store i32* %1, i32** %64, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %58, i32 0, i32 0
  store i32* %2, i32** %65, align 8
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %59 to i8*
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %60 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %60, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %71)
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator"* %61 to i8*
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %61, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %76)
  %78 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %62 to i8*
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 8, i1 false)
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %62, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = call i32* @_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(i32* %81)
  %83 = call i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32* %72, i32* %77, i32* %82)
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %59, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = call i32* @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEES2_ET_S7_T0_(i32* %85, i32* %83)
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %55, i32 0, i32 0
  store i32* %86, i32** %87, align 8
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %55, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEES2_ET_S7_T0_(i32*, i32*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %4, i32 0, i32 0
  store i32* %0, i32** %7, align 8
  store i32* %1, i32** %5, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %6 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.49"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %6, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = call i32* @_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(i32* %12)
  %14 = ptrtoint i32* %8 to i64
  %15 = ptrtoint i32* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 4
  %18 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEplEl(%"class.__gnu_cxx::__normal_iterator.49"* %4, i64 %17)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %3, i32 0, i32 0
  store i32* %18, i32** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %3, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(i32*) #0 comdat {
  %2 = load i32, i32* @x.263
  %3 = load i32, i32* @y.264
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %10, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.49"* %10)
  %13 = load i32*, i32** %12, align 8
  %14 = load i32, i32* @x.263
  %15 = load i32, i32* @y.264
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %22, i32 0, i32 0
  store i32* %0, i32** %23, align 8
  %24 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.49"* %22)
  %25 = load i32*, i32** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEplEl(%"class.__gnu_cxx::__normal_iterator.49"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.49", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.49"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::__normal_iterator.49"* %0, %"class.__gnu_cxx::__normal_iterator.49"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.49"*, %"class.__gnu_cxx::__normal_iterator.49"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  store i32* %11, i32** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.49"* %3, i32** dereferenceable(8) %6)
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %3, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  ret i32* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.49"*, i32** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.49"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.49"* %0, %"class.__gnu_cxx::__normal_iterator.49"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.49"*, %"class.__gnu_cxx::__normal_iterator.49"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.49"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.269
  %3 = load i32, i32* @y.270
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.49"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.49"* %0, %"class.__gnu_cxx::__normal_iterator.49"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.49"*, %"class.__gnu_cxx::__normal_iterator.49"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.269
  %14 = load i32, i32* @y.270
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.49"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.49"* %0, %"class.__gnu_cxx::__normal_iterator.49"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator.49"*, %"class.__gnu_cxx::__normal_iterator.49"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.49", %"class.__gnu_cxx::__normal_iterator.49"* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  %14 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %6, i32* %13)
  ret i32* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIPjET_S1_(i32*) #1 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #1 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.277
  %5 = load i32, i32* @y.278
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8, align 1
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load i32*, i32** %12, align 8
  %17 = load i32*, i32** %13, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32* %16, i32* %17, i32* %18)
  %20 = load i32, i32* @x.277
  %21 = load i32, i32* @y.278
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i8, align 1
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  store i32* %2, i32** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load i32*, i32** %28, align 8
  %33 = load i32*, i32** %29, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32* %32, i32* %33, i32* %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32* %7, i32* %8, i32* %9)
  ret i32* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices*, i32, i32) unnamed_addr #1 comdat align 2 {
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.TableIndices* %0, %class.TableIndices** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %8 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %9 = load i32, i32* %5, align 4
  %10 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %11 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %10, i32 0, i32 0
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %11, i64 0, i64 0
  store i32 %9, i32* %12, align 4
  %13 = load i32, i32* %6, align 4
  %14 = bitcast %class.TableIndices* %7 to %class.TableIndicesBase*
  %15 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %14, i32 0, i32 0
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  store i32 %13, i32* %16, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEEC2ERK12TableIndicesILi2EE(%class.TableBase*, %class.TableIndices* dereferenceable(8)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %7 = load %class.TableBase*, %class.TableBase** %3, align 8
  %8 = bitcast %class.TableBase* %7 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %8)
  %9 = bitcast %class.TableBase* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2ESt6vectorIdSaIdEEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %10, align 8
  %11 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %12)
          to label %13 unwind label %32

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.283
  %15 = load i32, i32* @y.284
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %23 = load i32, i32* @x.283
  %24 = load i32, i32* @y.284
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEE6reinitERK12TableIndicesILi2EE(%class.TableBase* %7, %class.TableIndices* dereferenceable(8) %22)
          to label %31 unwind label %32

; <label>:31:                                     ; preds = %originalBBpart2
  ret void

; <label>:32:                                     ; preds = %originalBBpart2, %2
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %5, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %6, align 4
  %36 = bitcast %class.TableBase* %7 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %36)
          to label %37 unwind label %75

; <label>:37:                                     ; preds = %32
  %38 = load i32, i32* @x.283
  %39 = load i32, i32* @y.284
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i32, i32* @x.283
  %47 = load i32, i32* @y.284
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %54

; <label>:54:                                     ; preds = %originalBBpart24
  %55 = load i32, i32* @x.283
  %56 = load i32, i32* @y.284
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = load i8*, i8** %5, align 8
  %64 = load i32, i32* %6, align 4
  %65 = insertvalue { i8*, i32 } undef, i8* %63, 0
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1
  %67 = load i32, i32* @x.283
  %68 = load i32, i32* @y.284
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %66

; <label>:75:                                     ; preds = %32
  %76 = load i32, i32* @x.283
  %77 = load i32, i32* @y.284
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  call void @__clang_call_terminate(i8* %85) #7
  %86 = load i32, i32* @x.283
  %87 = load i32, i32* @y.284
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %13
  %94 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %95 = load i8*, i8** %5, align 8
  %96 = load i32, i32* %6, align 4
  %97 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %99 = landingpad { i8*, i32 }
          catch i8* null
  %100 = extractvalue { i8*, i32 } %99, 0
  call void @__clang_call_terminate(i8* %100) #7
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2ESt6vectorIdSaIdEEED0Ev(%class.Table*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Table*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.Table* %0, %class.Table** %2, align 8
  %5 = load %class.Table*, %class.Table** %2, align 8
  invoke void @_ZN5TableILi2ESt6vectorIdSaIdEEED2Ev(%class.Table* %5)
          to label %6 unwind label %24

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.285
  %8 = load i32, i32* @y.286
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = bitcast %class.Table* %5 to i8*
  call void @_ZdlPv(i8* %15) #12
  %16 = load i32, i32* @x.285
  %17 = load i32, i32* @y.286
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = bitcast %class.Table* %5 to i8*
  call void @_ZdlPv(i8* %28) #12
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %6
  %34 = bitcast %class.Table* %5 to i8*
  call void @_ZdlPv(i8* %34) #12
  br label %originalBB
}

declare void @_ZN11SubscriptorC2Ev(%class.Subscriptor*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %2, align 8
  %3 = load %class.TableIndices*, %class.TableIndices** %2, align 8
  %4 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %5 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %6 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %5, i32 0, i32 0
  %7 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  store i32 0, i32* %7, align 4
  %8 = bitcast %class.TableIndices* %3 to %class.TableIndicesBase*
  %9 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %8, i32 0, i32 0
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  store i32 0, i32* %10, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEE6reinitERK12TableIndicesILi2EE(%class.TableBase*, %class.TableIndices* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %class.TableIndices, align 4
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %9 = load %class.TableBase*, %class.TableBase** %3, align 8
  %10 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %11 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 3
  %12 = bitcast %class.TableIndices* %11 to i8*
  %13 = bitcast %class.TableIndices* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false)
  %14 = call i32 @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE10n_elementsEv(%class.TableBase* %9)
  store i32 %14, i32* %5, align 4
  %15 = load i32, i32* %5, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %120

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %20 = icmp ne %"class.std::vector.0"* %19, null
  br i1 %20, label %21, label %114

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %24 = icmp eq %"class.std::vector.0"* %23, null
  br i1 %24, label %70, label %25

; <label>:25:                                     ; preds = %21
  %26 = load i32, i32* @x.289
  %27 = load i32, i32* @y.290
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = bitcast %"class.std::vector.0"* %23 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 -8
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %23, i64 %37
  %39 = icmp eq %"class.std::vector.0"* %23, %38
  %40 = load i32, i32* @x.289
  %41 = load i32, i32* @y.290
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %39, label %69, label %48

; <label>:48:                                     ; preds = %67, %originalBBpart2
  %49 = phi %"class.std::vector.0"* [ %38, %originalBBpart2 ], [ %58, %67 ]
  %50 = load i32, i32* @x.289
  %51 = load i32, i32* @y.290
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %58 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %49, i64 -1
  %59 = load i32, i32* @x.289
  %60 = load i32, i32* @y.290
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %58)
          to label %67 unwind label %71

; <label>:67:                                     ; preds = %originalBBpart24
  %68 = icmp eq %"class.std::vector.0"* %58, %23
  br i1 %68, label %69, label %48

; <label>:69:                                     ; preds = %67, %originalBBpart2
  call void @_ZdaPv(i8* %35) #12
  br label %70

; <label>:70:                                     ; preds = %69, %21
  br label %114

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = load i32, i32* @x.289
  %73 = load i32, i32* @y.290
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %71, %originalBB6alteredBB
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %6, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %7, align 4
  %83 = icmp eq %"class.std::vector.0"* %23, %58
  %84 = load i32, i32* @x.289
  %85 = load i32, i32* @y.290
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %83, label %97, label %92

; <label>:92:                                     ; preds = %95, %originalBBpart28
  %93 = phi %"class.std::vector.0"* [ %58, %originalBBpart28 ], [ %94, %95 ]
  %94 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %93, i64 -1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %94)
          to label %95 unwind label %252

; <label>:95:                                     ; preds = %92
  %96 = icmp eq %"class.std::vector.0"* %94, %23
  br i1 %96, label %97, label %92

; <label>:97:                                     ; preds = %95, %originalBBpart28
  %98 = load i32, i32* @x.289
  %99 = load i32, i32* @y.290
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %97, %originalBB10alteredBB
  call void @_ZdaPv(i8* %35) #12
  %106 = load i32, i32* @x.289
  %107 = load i32, i32* @y.290
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %247

; <label>:114:                                    ; preds = %70, %17
  %115 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %115, align 8
  %116 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  store i32 0, i32* %116, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %8)
  %117 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 3
  %118 = bitcast %class.TableIndices* %117 to i8*
  %119 = bitcast %class.TableIndices* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 4, i1 false)
  br label %246

; <label>:120:                                    ; preds = %2
  %121 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = load i32, i32* %5, align 4
  %124 = icmp ult i32 %122, %123
  br i1 %124, label %125, label %245

; <label>:125:                                    ; preds = %120
  %126 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %127 = load %"class.std::vector.0"*, %"class.std::vector.0"** %126, align 8
  %128 = icmp ne %"class.std::vector.0"* %127, null
  br i1 %128, label %129, label %190

; <label>:129:                                    ; preds = %125
  %130 = load i32, i32* @x.289
  %131 = load i32, i32* @y.290
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %129, %originalBB14alteredBB
  %138 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %139 = load %"class.std::vector.0"*, %"class.std::vector.0"** %138, align 8
  %140 = icmp eq %"class.std::vector.0"* %139, null
  %141 = load i32, i32* @x.289
  %142 = load i32, i32* @y.290
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %140, label %178, label %149

; <label>:149:                                    ; preds = %originalBBpart216
  %150 = bitcast %"class.std::vector.0"* %139 to i8*
  %151 = getelementptr inbounds i8, i8* %150, i64 -8
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %139, i64 %153
  %155 = icmp eq %"class.std::vector.0"* %139, %154
  br i1 %155, label %161, label %156

; <label>:156:                                    ; preds = %159, %149
  %157 = phi %"class.std::vector.0"* [ %154, %149 ], [ %158, %159 ]
  %158 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %157, i64 -1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %158)
          to label %159 unwind label %179

; <label>:159:                                    ; preds = %156
  %160 = icmp eq %"class.std::vector.0"* %158, %139
  br i1 %160, label %161, label %156

; <label>:161:                                    ; preds = %159, %149
  %162 = load i32, i32* @x.289
  %163 = load i32, i32* @y.290
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %161, %originalBB18alteredBB
  call void @_ZdaPv(i8* %151) #12
  %170 = load i32, i32* @x.289
  %171 = load i32, i32* @y.290
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %178

; <label>:178:                                    ; preds = %originalBBpart220, %originalBBpart216
  br label %190

; <label>:179:                                    ; preds = %156
  %180 = landingpad { i8*, i32 }
          cleanup
  %181 = extractvalue { i8*, i32 } %180, 0
  store i8* %181, i8** %6, align 8
  %182 = extractvalue { i8*, i32 } %180, 1
  store i32 %182, i32* %7, align 4
  %183 = icmp eq %"class.std::vector.0"* %139, %158
  br i1 %183, label %189, label %184

; <label>:184:                                    ; preds = %187, %179
  %185 = phi %"class.std::vector.0"* [ %158, %179 ], [ %186, %187 ]
  %186 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %185, i64 -1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %186)
          to label %187 unwind label %252

; <label>:187:                                    ; preds = %184
  %188 = icmp eq %"class.std::vector.0"* %186, %139
  br i1 %188, label %189, label %184

; <label>:189:                                    ; preds = %187, %179
  call void @_ZdaPv(i8* %151) #12
  br label %247

; <label>:190:                                    ; preds = %178, %125
  %191 = load i32, i32* %5, align 4
  %192 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  store i32 %191, i32* %192, align 8
  %193 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 2
  %194 = load i32, i32* %193, align 8
  %195 = zext i32 %194 to i64
  %196 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %195, i64 24)
  %197 = extractvalue { i64, i1 } %196, 1
  %198 = extractvalue { i64, i1 } %196, 0
  %199 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %198, i64 8)
  %200 = extractvalue { i64, i1 } %199, 1
  %201 = or i1 %197, %200
  %202 = extractvalue { i64, i1 } %199, 0
  %203 = select i1 %201, i64 -1, i64 %202
  %204 = call i8* @_Znam(i64 %203) #14
  %205 = bitcast i8* %204 to i64*
  store i64 %195, i64* %205, align 16
  %206 = getelementptr inbounds i8, i8* %204, i64 8
  %207 = bitcast i8* %206 to %"class.std::vector.0"*
  %208 = icmp eq i64 %195, 0
  br i1 %208, label %232, label %209

; <label>:209:                                    ; preds = %190
  %210 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %207, i64 %195
  br label %211

; <label>:211:                                    ; preds = %229, %209
  %212 = phi %"class.std::vector.0"* [ %207, %209 ], [ %230, %229 ]
  %213 = load i32, i32* @x.289
  %214 = load i32, i32* @y.290
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %211, %originalBB22alteredBB
  %221 = load i32, i32* @x.289
  %222 = load i32, i32* @y.290
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.0"* %212)
          to label %229 unwind label %234

; <label>:229:                                    ; preds = %originalBBpart224
  %230 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %212, i64 1
  %231 = icmp eq %"class.std::vector.0"* %230, %210
  br i1 %231, label %232, label %211

; <label>:232:                                    ; preds = %229, %190
  %233 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  store %"class.std::vector.0"* %207, %"class.std::vector.0"** %233, align 8
  br label %245

; <label>:234:                                    ; preds = %originalBBpart224
  %235 = landingpad { i8*, i32 }
          cleanup
  %236 = extractvalue { i8*, i32 } %235, 0
  store i8* %236, i8** %6, align 8
  %237 = extractvalue { i8*, i32 } %235, 1
  store i32 %237, i32* %7, align 4
  %238 = icmp eq %"class.std::vector.0"* %207, %212
  br i1 %238, label %244, label %239

; <label>:239:                                    ; preds = %242, %234
  %240 = phi %"class.std::vector.0"* [ %212, %234 ], [ %241, %242 ]
  %241 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %240, i64 -1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %241)
          to label %242 unwind label %252

; <label>:242:                                    ; preds = %239
  %243 = icmp eq %"class.std::vector.0"* %241, %207
  br i1 %243, label %244, label %239

; <label>:244:                                    ; preds = %242, %234
  call void @_ZdaPv(i8* %204) #12
  br label %247

; <label>:245:                                    ; preds = %232, %120
  call void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEE12reset_valuesEv(%class.TableBase* %9)
  br label %246

; <label>:246:                                    ; preds = %245, %114
  ret void

; <label>:247:                                    ; preds = %244, %189, %originalBBpart212
  %248 = load i8*, i8** %6, align 8
  %249 = load i32, i32* %7, align 4
  %250 = insertvalue { i8*, i32 } undef, i8* %248, 0
  %251 = insertvalue { i8*, i32 } %250, i32 %249, 1
  resume { i8*, i32 } %251

; <label>:252:                                    ; preds = %239, %184, %92
  %253 = load i32, i32* @x.289
  %254 = load i32, i32* @y.290
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %252, %originalBB26alteredBB
  %261 = landingpad { i8*, i32 }
          catch i8* null
  %262 = extractvalue { i8*, i32 } %261, 0
  call void @__clang_call_terminate(i8* %262) #7
  %263 = load i32, i32* @x.289
  %264 = load i32, i32* @y.290
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %25
  %271 = bitcast %"class.std::vector.0"* %23 to i8*
  %272 = getelementptr inbounds i8, i8* %271, i64 -8
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %23, i64 %274
  %276 = icmp eq %"class.std::vector.0"* %23, %275
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %277 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %49, i64 -1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %6, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %7, align 4
  %281 = icmp eq %"class.std::vector.0"* %23, %58
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %97
  call void @_ZdaPv(i8* %35) #12
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %129
  %282 = getelementptr inbounds %class.TableBase, %class.TableBase* %9, i32 0, i32 1
  %283 = load %"class.std::vector.0"*, %"class.std::vector.0"** %282, align 8
  %284 = icmp eq %"class.std::vector.0"* %283, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %161
  call void @_ZdaPv(i8* %151) #12
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %211
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %252
  %285 = landingpad { i8*, i32 }
          catch i8* null
  %286 = extractvalue { i8*, i32 } %285, 0
  call void @__clang_call_terminate(i8* %286) #7
  br label %originalBB26
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE10n_elementsEv(%class.TableBase*) #0 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %originalBBpart2, %1
  %7 = load i32, i32* %4, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %35

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 3
  %11 = bitcast %class.TableIndices* %10 to %class.TableIndicesBase*
  %12 = load i32, i32* %4, align 4
  %13 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %11, i32 %12)
  %14 = load i32, i32* %3, align 4
  %15 = mul i32 %14, %13
  store i32 %15, i32* %3, align 4
  br label %16

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.291
  %18 = load i32, i32* @y.292
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32, i32* %4, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %4, align 4
  %27 = load i32, i32* @x.291
  %28 = load i32, i32* @y.292
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %6

; <label>:35:                                     ; preds = %6
  %36 = load i32, i32* %3, align 4
  ret i32 %36

originalBBalteredBB:                              ; preds = %originalBB, %16
  %37 = load i32, i32* %4, align 4
  %_ = shl i32 %37, 1
  %_1 = shl i32 %37, 1
  %_2 = sub i32 0, %37
  %gen = add i32 %_2, 1
  %_3 = sub i32 0, %37
  %gen4 = add i32 %_3, 1
  %_5 = shl i32 %37, 1
  %_6 = sub i32 0, %37
  %gen7 = add i32 %_6, 1
  %_8 = sub i32 0, %37
  %gen9 = add i32 %_8, 1
  %38 = add i32 %37, 1
  store i32 %38, i32* %4, align 4
  br label %originalBB
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #10

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.0"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.293
  %3 = load i32, i32* @y.294
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.1"* %12)
  %13 = load i32, i32* @x.293
  %14 = load i32, i32* @y.294
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %21, align 8
  %22 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %23 = bitcast %"class.std::vector.0"* %22 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.1"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2ESt6vectorIdSaIdEEE12reset_valuesEv(%class.TableBase*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.295
  %3 = load i32, i32* @y.296
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase*, align 8
  %11 = alloca %"class.std::vector.0", align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %10, align 8
  %14 = load %class.TableBase*, %class.TableBase** %10, align 8
  %15 = call i32 @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE10n_elementsEv(%class.TableBase* %14)
  %16 = icmp ne i32 %15, 0
  %17 = load i32, i32* @x.295
  %18 = load i32, i32* @y.296
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %68

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = getelementptr inbounds %class.TableBase, %class.TableBase* %14, i32 0, i32 1
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %26, align 8
  %28 = call i32 @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE10n_elementsEv(%class.TableBase* %14)
  call void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.0"* %11)
  %29 = invoke %"class.std::vector.0"* @_ZSt6fill_nIPSt6vectorIdSaIdEEjS2_ET_S4_T0_RKT1_(%"class.std::vector.0"* %27, i32 %28, %"class.std::vector.0"* dereferenceable(24) %11)
          to label %30 unwind label %31

; <label>:30:                                     ; preds = %25
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
  br label %68

; <label>:31:                                     ; preds = %25
  %32 = load i32, i32* @x.295
  %33 = load i32, i32* @y.296
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %12, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %13, align 4
  %43 = load i32, i32* @x.295
  %44 = load i32, i32* @y.296
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %11)
          to label %51 unwind label %106

; <label>:51:                                     ; preds = %originalBBpart24
  %52 = load i32, i32* @x.295
  %53 = load i32, i32* @y.296
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* @x.295
  %61 = load i32, i32* @y.296
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85

; <label>:68:                                     ; preds = %30, %originalBBpart2
  %69 = load i32, i32* @x.295
  %70 = load i32, i32* @y.296
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i32, i32* @x.295
  %78 = load i32, i32* @y.296
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

; <label>:85:                                     ; preds = %originalBBpart28
  %86 = load i32, i32* @x.295
  %87 = load i32, i32* @y.296
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = load i8*, i8** %12, align 8
  %95 = load i32, i32* %13, align 4
  %96 = insertvalue { i8*, i32 } undef, i8* %94, 0
  %97 = insertvalue { i8*, i32 } %96, i32 %95, 1
  %98 = load i32, i32* @x.295
  %99 = load i32, i32* @y.296
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  resume { i8*, i32 } %97

; <label>:106:                                    ; preds = %originalBBpart24
  %107 = load i32, i32* @x.295
  %108 = load i32, i32* @y.296
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %106, %originalBB18alteredBB
  %115 = landingpad { i8*, i32 }
          catch i8* null
  %116 = extractvalue { i8*, i32 } %115, 0
  call void @__clang_call_terminate(i8* %116) #7
  %117 = load i32, i32* @x.295
  %118 = load i32, i32* @y.296
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %125 = alloca %class.TableBase*, align 8
  %126 = alloca %"class.std::vector.0", align 8
  %127 = alloca i8*
  %128 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %125, align 8
  %129 = load %class.TableBase*, %class.TableBase** %125, align 8
  %130 = call i32 @_ZNK9TableBaseILi2ESt6vectorIdSaIdEEE10n_elementsEv(%class.TableBase* %129)
  %131 = icmp ne i32 %130, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %12, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %13, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %135 = load i8*, i8** %12, align 8
  %136 = load i32, i32* %13, align 4
  %137 = insertvalue { i8*, i32 } undef, i8* %135, 0
  %138 = insertvalue { i8*, i32 } %137, i32 %136, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %106
  %139 = landingpad { i8*, i32 }
          catch i8* null
  %140 = extractvalue { i8*, i32 } %139, 0
  call void @__clang_call_terminate(i8* %140) #7
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.297
  %3 = load i32, i32* @y.298
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %10, align 8
  %11 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %12)
  %13 = load i32, i32* @x.297
  %14 = load i32, i32* @y.298
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %21, align 8
  %22 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %22, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %23)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %6) #11
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %7)
          to label %8 unwind label %25

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.299
  %10 = load i32, i32* @y.300
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i32, i32* @x.299
  %18 = load i32, i32* @y.300
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:25:                                     ; preds = %1
  %26 = load i32, i32* @x.299
  %27 = load i32, i32* @y.300
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %37) #11
  %38 = load i32, i32* @x.299
  %39 = load i32, i32* @y.300
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24
  %47 = load i8*, i8** %3, align 8
  %48 = load i32, i32* %4, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

originalBBalteredBB:                              ; preds = %originalBB, %8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %54) #11
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 0
  store double* null, double** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 1
  store double* null, double** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 2
  store double* null, double** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt6fill_nIPSt6vectorIdSaIdEEjS2_ET_S4_T0_RKT1_(%"class.std::vector.0"*, i32, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i32 %1, i32* %5, align 4
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = call %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorIdSaIdEEET_S4_(%"class.std::vector.0"* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %11 = call %"class.std::vector.0"* @_ZSt10__fill_n_aIPSt6vectorIdSaIdEEjS2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES7_T0_RKS6_(%"class.std::vector.0"* %8, i32 %9, %"class.std::vector.0"* dereferenceable(24) %10)
  %12 = call %"class.std::vector.0"* @_ZSt12__niter_wrapIPSt6vectorIdSaIdEEET_RKS4_S4_(%"class.std::vector.0"** dereferenceable(8) %4, %"class.std::vector.0"* %11)
  ret %"class.std::vector.0"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_wrapIPSt6vectorIdSaIdEEET_RKS4_S4_(%"class.std::vector.0"** dereferenceable(8), %"class.std::vector.0"*) #1 comdat {
  %3 = alloca %"class.std::vector.0"**, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %0, %"class.std::vector.0"*** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt10__fill_n_aIPSt6vectorIdSaIdEEjS2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES7_T0_RKS6_(%"class.std::vector.0"*, i32, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i32, align 4
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i32 %1, i32* %5, align 4
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %8 = load i32, i32* %5, align 4
  store i32 %8, i32* %7, align 4
  br label %9

; <label>:9:                                      ; preds = %originalBBpart28, %3
  %10 = load i32, i32* @x.307
  %11 = load i32, i32* @y.308
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = load i32, i32* %7, align 4
  %19 = icmp ugt i32 %18, 0
  %20 = load i32, i32* @x.307
  %21 = load i32, i32* @y.308
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %69

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.307
  %30 = load i32, i32* @y.308
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %39 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIdSaIdEEaSERKS1_(%"class.std::vector.0"* %38, %"class.std::vector.0"* dereferenceable(24) %37)
  %40 = load i32, i32* @x.307
  %41 = load i32, i32* @y.308
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48

; <label>:48:                                     ; preds = %originalBBpart24
  %49 = load i32, i32* @x.307
  %50 = load i32, i32* @y.308
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32, i32* %7, align 4
  %58 = add i32 %57, -1
  store i32 %58, i32* %7, align 4
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %60 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %59, i32 1
  store %"class.std::vector.0"* %60, %"class.std::vector.0"** %4, align 8
  %61 = load i32, i32* @x.307
  %62 = load i32, i32* @y.308
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %9

; <label>:69:                                     ; preds = %originalBBpart2
  %70 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %70

originalBBalteredBB:                              ; preds = %originalBB, %9
  %71 = load i32, i32* %7, align 4
  %72 = icmp ugt i32 %71, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %74 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %75 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIdSaIdEEaSERKS1_(%"class.std::vector.0"* %74, %"class.std::vector.0"* dereferenceable(24) %73)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %76 = load i32, i32* %7, align 4
  %77 = add i32 %76, -1
  store i32 %77, i32* %7, align 4
  %78 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %79 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %78, i32 1
  store %"class.std::vector.0"* %79, %"class.std::vector.0"** %4, align 8
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorIdSaIdEEET_S4_(%"class.std::vector.0"*) #1 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIdSaIdEEaSERKS1_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %15 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %16 = icmp ne %"class.std::vector.0"* %15, %14
  br i1 %16, label %17, label %217

; <label>:17:                                     ; preds = %2
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %19 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %18)
  store i64 %19, i64* %5, align 8
  %20 = load i64, i64* %5, align 8
  %21 = call i64 @_ZNKSt6vectorIdSaIdEE8capacityEv(%"class.std::vector.0"* %14)
  %22 = icmp ugt i64 %20, %21
  br i1 %22, label %23, label %84

; <label>:23:                                     ; preds = %17
  %24 = load i64, i64* %5, align 8
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %26 = call double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %7, i32 0, i32 0
  store double* %26, double** %27, align 8
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %29 = call double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %28)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %8, i32 0, i32 0
  store double* %29, double** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %7, i32 0, i32 0
  %32 = load double*, double** %31, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %8, i32 0, i32 0
  %34 = load double*, double** %33, align 8
  %35 = call double* @_ZNSt6vectorIdSaIdEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKdS1_EEEEPdmT_S9_(%"class.std::vector.0"* %14, i64 %24, double* %32, double* %34)
  store double* %35, double** %6, align 8
  %36 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %37 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %38, i32 0, i32 0
  %40 = load double*, double** %39, align 8
  %41 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %43, i32 0, i32 1
  %45 = load double*, double** %44, align 8
  %46 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %47 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %46)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %40, double* %45, %"class.std::allocator.2"* dereferenceable(1) %47)
  %48 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %49 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %50 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %51, i32 0, i32 0
  %53 = load double*, double** %52, align 8
  %54 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %54, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %55 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %56, i32 0, i32 2
  %58 = load double*, double** %57, align 8
  %59 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %60 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %61, i32 0, i32 0
  %63 = load double*, double** %62, align 8
  %64 = ptrtoint double* %58 to i64
  %65 = ptrtoint double* %63 to i64
  %66 = sub i64 %64, %65
  %67 = sdiv exact i64 %66, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %48, double* %53, i64 %67)
  %68 = load double*, double** %6, align 8
  %69 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %70 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %71, i32 0, i32 0
  store double* %68, double** %72, align 8
  %73 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %74 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %75, i32 0, i32 0
  %77 = load double*, double** %76, align 8
  %78 = load i64, i64* %5, align 8
  %79 = getelementptr inbounds double, double* %77, i64 %78
  %80 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %80, i32 0, i32 0
  %82 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %81 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %82, i32 0, i32 2
  store double* %79, double** %83, align 8
  br label %189

; <label>:84:                                     ; preds = %17
  %85 = load i32, i32* @x.311
  %86 = load i32, i32* @y.312
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %84, %originalBBalteredBB
  %93 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %14)
  %94 = load i64, i64* %5, align 8
  %95 = icmp uge i64 %93, %94
  %96 = load i32, i32* @x.311
  %97 = load i32, i32* @y.312
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %95, label %104, label %145

; <label>:104:                                    ; preds = %originalBBpart2
  %105 = load i32, i32* @x.311
  %106 = load i32, i32* @y.312
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %104, %originalBB1alteredBB
  %113 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %114 = call double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %113)
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  store double* %114, double** %115, align 8
  %116 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %117 = call double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %116)
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %11, i32 0, i32 0
  store double* %117, double** %118, align 8
  %119 = call double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %14)
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  store double* %119, double** %120, align 8
  %121 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  %122 = load double*, double** %121, align 8
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %11, i32 0, i32 0
  %124 = load double*, double** %123, align 8
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  %126 = load double*, double** %125, align 8
  %127 = call double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEENS1_IPdS6_EEET0_T_SB_SA_(double* %122, double* %124, double* %126)
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %9, i32 0, i32 0
  store double* %127, double** %128, align 8
  %129 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %14)
  %130 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %13, i32 0, i32 0
  store double* %129, double** %130, align 8
  %131 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %132 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %131)
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %9, i32 0, i32 0
  %134 = load double*, double** %133, align 8
  %135 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %13, i32 0, i32 0
  %136 = load double*, double** %135, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEdEvT_S7_RSaIT0_E(double* %134, double* %136, %"class.std::allocator.2"* dereferenceable(1) %132)
  %137 = load i32, i32* @x.311
  %138 = load i32, i32* @y.312
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %188

; <label>:145:                                    ; preds = %originalBBpart2
  %146 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %147 = bitcast %"class.std::vector.0"* %146 to %"struct.std::_Vector_base.1"*
  %148 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %147, i32 0, i32 0
  %149 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %148 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %149, i32 0, i32 0
  %151 = load double*, double** %150, align 8
  %152 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %153 = bitcast %"class.std::vector.0"* %152 to %"struct.std::_Vector_base.1"*
  %154 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %153, i32 0, i32 0
  %155 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %154 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %156 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %155, i32 0, i32 0
  %157 = load double*, double** %156, align 8
  %158 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %14)
  %159 = getelementptr inbounds double, double* %157, i64 %158
  %160 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %160, i32 0, i32 0
  %162 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %161 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %163 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %162, i32 0, i32 0
  %164 = load double*, double** %163, align 8
  %165 = call double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double* %151, double* %159, double* %164)
  %166 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %167 = bitcast %"class.std::vector.0"* %166 to %"struct.std::_Vector_base.1"*
  %168 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %167, i32 0, i32 0
  %169 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %168 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %170 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %169, i32 0, i32 0
  %171 = load double*, double** %170, align 8
  %172 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %14)
  %173 = getelementptr inbounds double, double* %171, i64 %172
  %174 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %175 = bitcast %"class.std::vector.0"* %174 to %"struct.std::_Vector_base.1"*
  %176 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %175, i32 0, i32 0
  %177 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %176 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %178 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %177, i32 0, i32 1
  %179 = load double*, double** %178, align 8
  %180 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %181 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %180, i32 0, i32 0
  %182 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %181 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %182, i32 0, i32 1
  %184 = load double*, double** %183, align 8
  %185 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %186 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %185)
  %187 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %173, double* %179, double* %184, %"class.std::allocator.2"* dereferenceable(1) %186)
  br label %188

; <label>:188:                                    ; preds = %145, %originalBBpart24
  br label %189

; <label>:189:                                    ; preds = %188, %23
  %190 = load i32, i32* @x.311
  %191 = load i32, i32* @y.312
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %189, %originalBB6alteredBB
  %198 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %199 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %198, i32 0, i32 0
  %200 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %199 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %200, i32 0, i32 0
  %202 = load double*, double** %201, align 8
  %203 = load i64, i64* %5, align 8
  %204 = getelementptr inbounds double, double* %202, i64 %203
  %205 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %205, i32 0, i32 0
  %207 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %206 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %208 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %207, i32 0, i32 1
  store double* %204, double** %208, align 8
  %209 = load i32, i32* @x.311
  %210 = load i32, i32* @y.312
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %217

; <label>:217:                                    ; preds = %originalBBpart28, %2
  ret %"class.std::vector.0"* %14

originalBBalteredBB:                              ; preds = %originalBB, %84
  %218 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %14)
  %219 = load i64, i64* %5, align 8
  %220 = icmp uge i64 %218, %219
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %104
  %221 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %222 = call double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %221)
  %223 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  store double* %222, double** %223, align 8
  %224 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %225 = call double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %224)
  %226 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %11, i32 0, i32 0
  store double* %225, double** %226, align 8
  %227 = call double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %14)
  %228 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  store double* %227, double** %228, align 8
  %229 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  %230 = load double*, double** %229, align 8
  %231 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %11, i32 0, i32 0
  %232 = load double*, double** %231, align 8
  %233 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  %234 = load double*, double** %233, align 8
  %235 = call double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEENS1_IPdS6_EEET0_T_SB_SA_(double* %230, double* %232, double* %234)
  %236 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %9, i32 0, i32 0
  store double* %235, double** %236, align 8
  %237 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %14)
  %238 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %13, i32 0, i32 0
  store double* %237, double** %238, align 8
  %239 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %240 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %239)
  %241 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %9, i32 0, i32 0
  %242 = load double*, double** %241, align 8
  %243 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %13, i32 0, i32 0
  %244 = load double*, double** %243, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEdEvT_S7_RSaIT0_E(double* %242, double* %244, %"class.std::allocator.2"* dereferenceable(1) %240)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %189
  %245 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %246 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %245, i32 0, i32 0
  %247 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %246 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %247, i32 0, i32 0
  %249 = load double*, double** %248, align 8
  %250 = load i64, i64* %5, align 8
  %251 = getelementptr inbounds double, double* %249, i64 %250
  %252 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %252, i32 0, i32 0
  %254 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %253 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %255 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %254, i32 0, i32 1
  store double* %251, double** %255, align 8
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE8capacityEv(%"class.std::vector.0"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.313
  %3 = load i32, i32* @y.314
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %14, i32 0, i32 2
  %16 = load double*, double** %15, align 8
  %17 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = ptrtoint double* %16 to i64
  %23 = ptrtoint double* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 8
  %26 = load i32, i32* @x.313
  %27 = load i32, i32* @y.314
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %34, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %36 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %37 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %38, i32 0, i32 2
  %40 = load double*, double** %39, align 8
  %41 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load double*, double** %44, align 8
  %46 = ptrtoint double* %40 to i64
  %47 = ptrtoint double* %45 to i64
  %_ = sub i64 %46, %47
  %gen = mul i64 %_, %47
  %_1 = sub i64 0, %46
  %gen2 = add i64 %_1, %47
  %_3 = shl i64 %46, %47
  %_4 = shl i64 %46, %47
  %_5 = sub i64 %46, %47
  %gen6 = mul i64 %_5, %47
  %_7 = shl i64 %46, %47
  %48 = sub i64 %46, %47
  %_8 = shl i64 %48, 8
  %_9 = sub i64 0, %48
  %gen10 = add i64 %_9, 8
  %_11 = shl i64 %48, 8
  %_12 = shl i64 %48, 8
  %_13 = sub i64 0, %48
  %gen14 = add i64 %_13, 8
  %_15 = shl i64 %48, 8
  %_16 = shl i64 %48, 8
  %_17 = sub i64 %48, 8
  %gen18 = mul i64 %_17, 8
  %49 = sdiv exact i64 %48, 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt6vectorIdSaIdEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKdS1_EEEEPdmT_S9_(%"class.std::vector.0"*, i64, double*, double*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca double*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %5, i32 0, i32 0
  store double* %2, double** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %6, i32 0, i32 0
  store double* %3, double** %15, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %17 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %18 = load i64, i64* %8, align 8
  %19 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %17, i64 %18)
  store double* %19, double** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load double*, double** %9, align 8
  %25 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %26 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %25)
          to label %27 unwind label %35

; <label>:27:                                     ; preds = %4
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %11, i32 0, i32 0
  %31 = load double*, double** %30, align 8
  %32 = invoke double* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E(double* %29, double* %31, double* %24, %"class.std::allocator.2"* dereferenceable(1) %26)
          to label %33 unwind label %35

; <label>:33:                                     ; preds = %27
  %34 = load double*, double** %9, align 8
  ret double* %34

; <label>:35:                                     ; preds = %27, %4
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %12, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %13, align 4
  br label %39

; <label>:39:                                     ; preds = %35
  %40 = load i8*, i8** %12, align 8
  %41 = call i8* @__cxa_begin_catch(i8* %40) #11
  %42 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %43 = load double*, double** %9, align 8
  %44 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %42, double* %43, i64 %44)
          to label %45 unwind label %46

; <label>:45:                                     ; preds = %39
  invoke void @__cxa_rethrow() #13
          to label %92 unwind label %46

; <label>:46:                                     ; preds = %45, %39
  %47 = load i32, i32* @x.315
  %48 = load i32, i32* @y.316
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %46, %originalBBalteredBB
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %12, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %13, align 4
  %58 = load i32, i32* @x.315
  %59 = load i32, i32* @y.316
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @__cxa_end_catch()
          to label %66 unwind label %89

; <label>:66:                                     ; preds = %originalBBpart2
  br label %84
                                                  ; No predecessors!
  %68 = load i32, i32* @x.315
  %69 = load i32, i32* @y.316
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %67, %originalBB1alteredBB
  call void @llvm.trap()
  %76 = load i32, i32* @x.315
  %77 = load i32, i32* @y.316
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

; <label>:84:                                     ; preds = %66
  %85 = load i8*, i8** %12, align 8
  %86 = load i32, i32* %13, align 4
  %87 = insertvalue { i8*, i32 } undef, i8* %85, 0
  %88 = insertvalue { i8*, i32 } %87, i32 %86, 1
  resume { i8*, i32 } %88

; <label>:89:                                     ; preds = %originalBBpart2
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  call void @__clang_call_terminate(i8* %91) #7
  unreachable

; <label>:92:                                     ; preds = %45
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %46
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %12, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %13, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  call void @llvm.trap()
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load double*, double** %9, align 8
  store double* %10, double** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.50"* %2, double** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %2, i32 0, i32 0
  %12 = load double*, double** %11, align 8
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.319
  %3 = load i32, i32* @y.320
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %11 = alloca %"class.std::vector.0"*, align 8
  %12 = alloca double*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %14 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 1
  %18 = load double*, double** %17, align 8
  store double* %18, double** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.50"* %10, double** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = load i32, i32* @x.319
  %22 = load i32, i32* @y.320
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca double*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %33 = bitcast %"class.std::vector.0"* %32 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %34 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %35, i32 0, i32 1
  %37 = load double*, double** %36, align 8
  store double* %37, double** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.50"* %29, double** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %29, i32 0, i32 0
  %39 = load double*, double** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load double*, double** %5, align 8
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %7, double* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"*, double*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.325
  %5 = load i32, i32* @y.326
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.1"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %12, align 8
  store double* %1, double** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %12, align 8
  %16 = load double*, double** %13, align 8
  %17 = icmp ne double* %16, null
  %18 = load i32, i32* @x.325
  %19 = load i32, i32* @y.326
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %31

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %27 to %"class.std::allocator.2"*
  %29 = load double*, double** %13, align 8
  %30 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.2"* dereferenceable(1) %28, double* %29, i64 %30)
  br label %31

; <label>:31:                                     ; preds = %26, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca %"struct.std::_Vector_base.1"*, align 8
  %33 = alloca double*, align 8
  %34 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %32, align 8
  store double* %1, double** %33, align 8
  store i64 %2, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %32, align 8
  %36 = load double*, double** %33, align 8
  %37 = icmp ne double* %36, null
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEdEvT_S7_RSaIT0_E(double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  %16 = load double*, double** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %8, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEEvT_S7_(double* %16, double* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEENS1_IPdS6_EEET0_T_SB_SA_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %5, i32 0, i32 0
  store double* %0, double** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %6, i32 0, i32 0
  store double* %1, double** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %7, i32 0, i32 0
  store double* %2, double** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %9, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %8, i32 0, i32 0
  store double* %20, double** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %11, i32 0, i32 0
  %25 = load double*, double** %24, align 8
  %26 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  store double* %26, double** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %8, i32 0, i32 0
  %31 = load double*, double** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  %33 = load double*, double** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  %35 = load double*, double** %34, align 8
  %36 = call double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEENS1_IPdS6_EEET1_T0_SB_SA_(double* %31, double* %33, double* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store double* %36, double** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  %39 = load double*, double** %38, align 8
  ret double* %39
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.331
  %3 = load i32, i32* @y.332
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %11 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %13 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.51"* %10, double** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %10, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = load i32, i32* @x.331
  %20 = load i32, i32* @y.332
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %30 = bitcast %"class.std::vector.0"* %29 to %"struct.std::_Vector_base.1"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.51"* %27, double** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %27, i32 0, i32 0
  %35 = load double*, double** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.333
  %3 = load i32, i32* @y.334
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %11 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %13 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.51"* %10, double** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %10, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = load i32, i32* @x.333
  %20 = load i32, i32* @y.334
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %30 = bitcast %"class.std::vector.0"* %29 to %"struct.std::_Vector_base.1"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.51"* %27, double** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %27, i32 0, i32 0
  %35 = load double*, double** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.335
  %5 = load i32, i32* @y.336
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %15)
  %17 = load double*, double** %13, align 8
  %18 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %17)
  %19 = load double*, double** %14, align 8
  %20 = call double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %16, double* %18, double* %19)
  %21 = load i32, i32* @x.335
  %22 = load i32, i32* @y.336
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  store double* %0, double** %29, align 8
  store double* %1, double** %30, align 8
  store double* %2, double** %31, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %32)
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %34)
  %36 = load double*, double** %31, align 8
  %37 = call double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %33, double* %35, double* %36)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double*, double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.337
  %6 = load i32, i32* @y.338
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  %16 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %13, align 8
  store double* %1, double** %14, align 8
  store double* %2, double** %15, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %16, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = load double*, double** %15, align 8
  %20 = call double* @_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_(double* %17, double* %18, double* %19)
  %21 = load i32, i32* @x.337
  %22 = load i32, i32* @y.338
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  %32 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %29, align 8
  store double* %1, double** %30, align 8
  store double* %2, double** %31, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %32, align 8
  %33 = load double*, double** %29, align 8
  %34 = load double*, double** %30, align 8
  %35 = load double*, double** %31, align 8
  %36 = call double* @_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_(double* %33, double* %34, double* %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.339
  %4 = load i32, i32* @y.340
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.1"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.339
  %17 = load i32, i32* @y.340
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %29

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %13, i32 0, i32 0
  %26 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %25 to %"class.std::allocator.2"*
  %27 = load i64, i64* %12, align 8
  %28 = call double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1) %26, i64 %27)
  br label %30

; <label>:29:                                     ; preds = %originalBBpart2
  br label %30

; <label>:30:                                     ; preds = %29, %24
  %31 = phi double* [ %28, %24 ], [ null, %29 ]
  ret double* %31

originalBBalteredBB:                              ; preds = %originalBB, %2
  %32 = alloca %"struct.std::_Vector_base.1"*, align 8
  %33 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %32, align 8
  store i64 %1, i64* %33, align 8
  %34 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %32, align 8
  %35 = load i64, i64* %33, align 8
  %36 = icmp ne i64 %35, 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E(double*, double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %5, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %6, i32 0, i32 0
  store double* %1, double** %12, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load double*, double** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %9, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %10, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = call double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %19, double* %21, double* %17)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret double* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %7) #11
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.345
  %14 = load i32, i32* @y.346
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 8
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to double*
  %25 = load i32, i32* @x.345
  %26 = load i32, i32* @y.346
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = shl i64 %33, 8
  %_1 = sub i64 %33, 8
  %gen = mul i64 %_1, 8
  %34 = mul i64 %33, 8
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to double*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.349
  %5 = load i32, i32* @y.350
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %14 = alloca double*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %12, i32 0, i32 0
  store double* %0, double** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %13, i32 0, i32 0
  store double* %1, double** %19, align 8
  store double* %2, double** %14, align 8
  store i8 1, i8* %15, align 1
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %16 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %17 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load double*, double** %14, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %16, i32 0, i32 0
  %26 = load double*, double** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %17, i32 0, i32 0
  %28 = load double*, double** %27, align 8
  %29 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double* %26, double* %28, double* %24)
  %30 = load i32, i32* @x.349
  %31 = load i32, i32* @y.350
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %29

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %40 = alloca double*, align 8
  %41 = alloca i8, align 1
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %38, i32 0, i32 0
  store double* %0, double** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %39, i32 0, i32 0
  store double* %1, double** %45, align 8
  store double* %2, double** %40, align 8
  store i8 1, i8* %41, align 1
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %42 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %43 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = load double*, double** %40, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %42, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %43, i32 0, i32 0
  %54 = load double*, double** %53, align 8
  %55 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double* %52, double* %54, double* %50)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double*, double*, double*) #0 comdat align 2 {
  %4 = load i32, i32* @x.351
  %5 = load i32, i32* @y.352
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %14 = alloca double*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %12, i32 0, i32 0
  store double* %0, double** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %13, i32 0, i32 0
  store double* %1, double** %18, align 8
  store double* %2, double** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %16 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = load double*, double** %14, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %15, i32 0, i32 0
  %25 = load double*, double** %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %16, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = call double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %25, double* %27, double* %23)
  %29 = load i32, i32* @x.351
  %30 = load i32, i32* @y.352
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %28

originalBBalteredBB:                              ; preds = %originalBB, %3
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %39 = alloca double*, align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %37, i32 0, i32 0
  store double* %0, double** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %38, i32 0, i32 0
  store double* %1, double** %43, align 8
  store double* %2, double** %39, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %40 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %41 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = load double*, double** %39, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %40, i32 0, i32 0
  %50 = load double*, double** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %41, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = call double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %50, double* %52, double* %48)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.353
  %5 = load i32, i32* @y.354
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %14 = alloca double*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %12, i32 0, i32 0
  store double* %0, double** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %13, i32 0, i32 0
  store double* %1, double** %20, align 8
  store double* %2, double** %14, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %16 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %16, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %24)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %15, i32 0, i32 0
  store double* %25, double** %26, align 8
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %18 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %18, i32 0, i32 0
  %30 = load double*, double** %29, align 8
  %31 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %30)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %17, i32 0, i32 0
  store double* %31, double** %32, align 8
  %33 = load double*, double** %14, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %15, i32 0, i32 0
  %35 = load double*, double** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %17, i32 0, i32 0
  %37 = load double*, double** %36, align 8
  %38 = call double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double* %35, double* %37, double* %33)
  %39 = load i32, i32* @x.353
  %40 = load i32, i32* @y.354
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %38

originalBBalteredBB:                              ; preds = %originalBB, %3
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %49 = alloca double*, align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %47, i32 0, i32 0
  store double* %0, double** %54, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %48, i32 0, i32 0
  store double* %1, double** %55, align 8
  store double* %2, double** %49, align 8
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %51 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %51, i32 0, i32 0
  %59 = load double*, double** %58, align 8
  %60 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %59)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %50, i32 0, i32 0
  store double* %60, double** %61, align 8
  %62 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %53 to i8*
  %63 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 8, i1 false)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %53, i32 0, i32 0
  %65 = load double*, double** %64, align 8
  %66 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %65)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %52, i32 0, i32 0
  store double* %66, double** %67, align 8
  %68 = load double*, double** %49, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %50, i32 0, i32 0
  %70 = load double*, double** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %52, i32 0, i32 0
  %72 = load double*, double** %71, align 8
  %73 = call double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double* %70, double* %72, double* %68)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %7, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %19)
  %21 = load double*, double** %6, align 8
  %22 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %21)
  %23 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %15, double* %20, double* %22)
  %24 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %23)
  ret double* %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double*) #1 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %3, i32 0, i32 0
  store double* %0, double** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %2, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  ret double* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8), double*) #1 comdat {
  %3 = alloca double**, align 8
  %4 = alloca double*, align 8
  store double** %0, double*** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %2, i32 0, i32 0
  store double* %0, double** %3, align 8
  %4 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.50"* %2)
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdET_S1_(double*) #1 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #1 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double*, double** %4, align 8
  %10 = ptrtoint double* %8 to i64
  %11 = ptrtoint double* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %39

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.367
  %18 = load i32, i32* @y.368
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load double*, double** %6, align 8
  %26 = bitcast double* %25 to i8*
  %27 = load double*, double** %4, align 8
  %28 = bitcast double* %27 to i8*
  %29 = load i64, i64* %7, align 8
  %30 = mul i64 8, %29
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %26, i8* %28, i64 %30, i32 8, i1 false)
  %31 = load i32, i32* @x.367
  %32 = load i32, i32* @y.368
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %3
  %40 = load i32, i32* @x.367
  %41 = load i32, i32* @y.368
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load double*, double** %6, align 8
  %49 = load i64, i64* %7, align 8
  %50 = getelementptr inbounds double, double* %48, i64 %49
  %51 = load i32, i32* @x.367
  %52 = load i32, i32* @y.368
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret double* %50

originalBBalteredBB:                              ; preds = %originalBB, %16
  %59 = load double*, double** %6, align 8
  %60 = bitcast double* %59 to i8*
  %61 = load double*, double** %4, align 8
  %62 = bitcast double* %61 to i8*
  %63 = load i64, i64* %7, align 8
  %_ = shl i64 8, %63
  %64 = mul i64 8, %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %60, i8* %62, i64 %64, i32 8, i1 false)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %65 = load double*, double** %6, align 8
  %66 = load i64, i64* %7, align 8
  %67 = getelementptr inbounds double, double* %65, i64 %66
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.50"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.50"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.50"* %0, %"class.__gnu_cxx::__normal_iterator.50"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.50"*, %"class.__gnu_cxx::__normal_iterator.50"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %3, i32 0, i32 0
  ret double** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.50"*, double** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.50"*, align 8
  %4 = alloca double**, align 8
  store %"class.__gnu_cxx::__normal_iterator.50"* %0, %"class.__gnu_cxx::__normal_iterator.50"** %3, align 8
  store double** %1, double*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.50"*, %"class.__gnu_cxx::__normal_iterator.50"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %5, i32 0, i32 0
  %7 = load double**, double*** %4, align 8
  %8 = load double*, double** %7, align 8
  store double* %8, double** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPdEvT_S1_(double*, double*) #0 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %3, align 8
  %6 = load double*, double** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %5, double* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double*, double*) #1 comdat align 2 {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.2"* dereferenceable(1), double*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.377
  %5 = load i32, i32* @y.378
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.2"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %12, align 8
  store double* %1, double** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %12, align 8
  %16 = bitcast %"class.std::allocator.2"* %15 to %"class.__gnu_cxx::new_allocator.3"*
  %17 = load double*, double** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.3"* %16, double* %17, i64 %18)
  %19 = load i32, i32* @x.377
  %20 = load i32, i32* @y.378
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.2"*, align 8
  %28 = alloca double*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %27, align 8
  store double* %1, double** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %27, align 8
  %31 = bitcast %"class.std::allocator.2"* %30 to %"class.__gnu_cxx::new_allocator.3"*
  %32 = load double*, double** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.3"* %31, double* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.3"*, double*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEEvT_S7_(double*, double*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  store double* %0, double** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store double* %1, double** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %6, i32 0, i32 0
  %16 = load double*, double** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEEEvT_S9_(double* %14, double* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEEEvT_S9_(double*, double*) #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  store double* %0, double** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store double* %1, double** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEENS1_IPdS6_EEET1_T0_SB_SA_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.385
  %5 = load i32, i32* @y.386
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %13, i32 0, i32 0
  store double* %0, double** %20, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %14, i32 0, i32 0
  store double* %1, double** %21, align 8
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %15, i32 0, i32 0
  store double* %2, double** %22, align 8
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %16 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %17 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %17, i32 0, i32 0
  %28 = load double*, double** %27, align 8
  %29 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %28)
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %18 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %18, i32 0, i32 0
  %33 = load double*, double** %32, align 8
  %34 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %33)
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %19 to i8*
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %19, i32 0, i32 0
  %38 = load double*, double** %37, align 8
  %39 = call double* @_ZSt12__niter_baseIPdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(double* %38)
  %40 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %29, double* %34, double* %39)
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %16, i32 0, i32 0
  %42 = load double*, double** %41, align 8
  %43 = call double* @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEES2_ET_S7_T0_(double* %42, double* %40)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  store double* %43, double** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %12, i32 0, i32 0
  %46 = load double*, double** %45, align 8
  %47 = load i32, i32* @x.385
  %48 = load i32, i32* @y.386
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %46

originalBBalteredBB:                              ; preds = %originalBB, %3
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.50", align 8
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %56, i32 0, i32 0
  store double* %0, double** %63, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %57, i32 0, i32 0
  store double* %1, double** %64, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %58, i32 0, i32 0
  store double* %2, double** %65, align 8
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %59 to i8*
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %60 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %60, i32 0, i32 0
  %71 = load double*, double** %70, align 8
  %72 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %71)
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %61 to i8*
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.50"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.50", %"class.__gnu_cxx::__normal_iterator.50"* %61, i32 0, i32 0
  %76 = load double*, double** %75, align 8
  %77 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %76)
  %78 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %62 to i8*
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 8, i1 false)
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %62, i32 0, i32 0
  %81 = load double*, double** %80, align 8
  %82 = call double* @_ZSt12__niter_baseIPdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(double* %81)
  %83 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %72, double* %77, double* %82)
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %59, i32 0, i32 0
  %85 = load double*, double** %84, align 8
  %86 = call double* @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEES2_ET_S7_T0_(double* %85, double* %83)
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %55, i32 0, i32 0
  store double* %86, double** %87, align 8
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %55, i32 0, i32 0
  %89 = load double*, double** %88, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEES2_ET_S7_T0_(double*, double*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %5 = alloca double*, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %4, i32 0, i32 0
  store double* %0, double** %7, align 8
  store double* %1, double** %5, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %6 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.51"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %6, i32 0, i32 0
  %12 = load double*, double** %11, align 8
  %13 = call double* @_ZSt12__niter_baseIPdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(double* %12)
  %14 = ptrtoint double* %8 to i64
  %15 = ptrtoint double* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  %18 = call double* @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEplEl(%"class.__gnu_cxx::__normal_iterator.51"* %4, i64 %17)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  store double* %18, double** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  ret double* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(double*) #0 comdat {
  %2 = load i32, i32* @x.389
  %3 = load i32, i32* @y.390
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %10, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %10)
  %13 = load double*, double** %12, align 8
  %14 = load i32, i32* @x.389
  %15 = load i32, i32* @y.390
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %22, i32 0, i32 0
  store double* %0, double** %23, align 8
  %24 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %22)
  %25 = load double*, double** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEplEl(%"class.__gnu_cxx::__normal_iterator.51"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.391
  %4 = load i32, i32* @y.392
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca double*, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %12, align 8
  store i64 %1, i64* %13, align 8
  %15 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %12, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %15, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = load i64, i64* %13, align 8
  %19 = getelementptr inbounds double, double* %17, i64 %18
  store double* %19, double** %14, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.51"* %11, double** dereferenceable(8) %14)
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %11, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = load i32, i32* @x.391
  %23 = load i32, i32* @y.392
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %21

originalBBalteredBB:                              ; preds = %originalBB, %2
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca double*, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %31, align 8
  store i64 %1, i64* %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %31, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %34, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = load i64, i64* %32, align 8
  %38 = getelementptr inbounds double, double* %36, i64 %37
  store double* %38, double** %33, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.51"* %30, double** dereferenceable(8) %33)
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %30, i32 0, i32 0
  %40 = load double*, double** %39, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.51"*, double** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  %4 = alloca double**, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %3, align 8
  store double** %1, double*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  %7 = load double**, double*** %4, align 8
  %8 = load double*, double** %7, align 8
  store double* %8, double** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %3, i32 0, i32 0
  ret double** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %11)
  %13 = call double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %12)
  %14 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %13)
  ret double* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIPdET_S1_(double*) #1 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #1 comdat {
  %4 = load i32, i32* @x.401
  %5 = load i32, i32* @y.402
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i8, align 1
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load double*, double** %12, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %16, double* %17, double* %18)
  %20 = load i32, i32* @x.401
  %21 = load i32, i32* @y.402
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca double*, align 8
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca i8, align 1
  store double* %0, double** %28, align 8
  store double* %1, double** %29, align 8
  store double* %2, double** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load double*, double** %28, align 8
  %33 = load double*, double** %29, align 8
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %32, double* %33, double* %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_(double*, double*, double*) #0 comdat align 2 {
  %4 = load i32, i32* @x.405
  %5 = load i32, i32* @y.406
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = load double*, double** %13, align 8
  %17 = load double*, double** %14, align 8
  %18 = call double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double* %15, double* %16, double* %17)
  %19 = load i32, i32* @x.405
  %20 = load i32, i32* @y.406
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca double*, align 8
  %28 = alloca double*, align 8
  %29 = alloca double*, align 8
  store double* %0, double** %27, align 8
  store double* %1, double** %28, align 8
  store double* %2, double** %29, align 8
  %30 = load double*, double** %27, align 8
  %31 = load double*, double** %28, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double* %30, double* %31, double* %32)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(%"class.std::vector.0"*, double*, i64, double* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca double*, align 8
  %9 = alloca double, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %12 = alloca double*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.51", align 8
  %16 = alloca double*, align 8
  %17 = alloca double*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %5, i32 0, i32 0
  store double* %1, double** %20, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %6, align 8
  store i64 %2, i64* %7, align 8
  store double* %3, double** %8, align 8
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %453

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load double*, double** %28, align 8
  %30 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load double*, double** %33, align 8
  %35 = ptrtoint double* %29 to i64
  %36 = ptrtoint double* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 8
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %152

; <label>:41:                                     ; preds = %24
  %42 = load double*, double** %8, align 8
  %43 = load double, double* %42, align 8
  store double %43, double* %9, align 8
  %44 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %21)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %11, i32 0, i32 0
  store double* %44, double** %45, align 8
  %46 = call i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.51"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.51"* dereferenceable(8) %5)
  store i64 %46, i64* %10, align 8
  %47 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %49, i32 0, i32 1
  %51 = load double*, double** %50, align 8
  store double* %51, double** %12, align 8
  %52 = load i64, i64* %10, align 8
  %53 = load i64, i64* %7, align 8
  %54 = icmp ugt i64 %52, %53
  br i1 %54, label %55, label %114

; <label>:55:                                     ; preds = %41
  %56 = load i32, i32* @x.407
  %57 = load i32, i32* @y.408
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %55, %originalBBalteredBB
  %64 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %65 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %66, i32 0, i32 1
  %68 = load double*, double** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = sub i64 0, %69
  %71 = getelementptr inbounds double, double* %68, i64 %70
  %72 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %72, i32 0, i32 0
  %74 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %73 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %74, i32 0, i32 1
  %76 = load double*, double** %75, align 8
  %77 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %78 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %79, i32 0, i32 1
  %81 = load double*, double** %80, align 8
  %82 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %83 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %82)
  %84 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %71, double* %76, double* %81, %"class.std::allocator.2"* dereferenceable(1) %83)
  %85 = load i64, i64* %7, align 8
  %86 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %87 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %88, i32 0, i32 1
  %90 = load double*, double** %89, align 8
  %91 = getelementptr inbounds double, double* %90, i64 %85
  store double* %91, double** %89, align 8
  %92 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %93 = load double*, double** %92, align 8
  %94 = load double*, double** %12, align 8
  %95 = load i64, i64* %7, align 8
  %96 = sub i64 0, %95
  %97 = getelementptr inbounds double, double* %94, i64 %96
  %98 = load double*, double** %12, align 8
  %99 = call double* @_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_(double* %93, double* %97, double* %98)
  %100 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %101 = load double*, double** %100, align 8
  %102 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %103 = load double*, double** %102, align 8
  %104 = load i64, i64* %7, align 8
  %105 = getelementptr inbounds double, double* %103, i64 %104
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %101, double* %105, double* dereferenceable(8) %9)
  %106 = load i32, i32* @x.407
  %107 = load i32, i32* @y.408
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %151

; <label>:114:                                    ; preds = %41
  %115 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %115, i32 0, i32 0
  %117 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %116 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %117, i32 0, i32 1
  %119 = load double*, double** %118, align 8
  %120 = load i64, i64* %7, align 8
  %121 = load i64, i64* %10, align 8
  %122 = sub i64 %120, %121
  %123 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %124 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %123)
  %125 = call double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %119, i64 %122, double* dereferenceable(8) %9, %"class.std::allocator.2"* dereferenceable(1) %124)
  %126 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %126, i32 0, i32 0
  %128 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %127 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %128, i32 0, i32 1
  store double* %125, double** %129, align 8
  %130 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %131 = load double*, double** %130, align 8
  %132 = load double*, double** %12, align 8
  %133 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %133, i32 0, i32 0
  %135 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %134 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %135, i32 0, i32 1
  %137 = load double*, double** %136, align 8
  %138 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %139 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %138)
  %140 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %131, double* %132, double* %137, %"class.std::allocator.2"* dereferenceable(1) %139)
  %141 = load i64, i64* %10, align 8
  %142 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %142, i32 0, i32 0
  %144 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %143 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %145 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %144, i32 0, i32 1
  %146 = load double*, double** %145, align 8
  %147 = getelementptr inbounds double, double* %146, i64 %141
  store double* %147, double** %145, align 8
  %148 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %149 = load double*, double** %148, align 8
  %150 = load double*, double** %12, align 8
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %149, double* %150, double* dereferenceable(8) %9)
  br label %151

; <label>:151:                                    ; preds = %114, %originalBBpart2
  br label %452

; <label>:152:                                    ; preds = %24
  %153 = load i32, i32* @x.407
  %154 = load i32, i32* @y.408
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %152, %originalBB11alteredBB
  %161 = load i64, i64* %7, align 8
  %162 = call i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.0"* %21, i64 %161, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0))
  store i64 %162, i64* %13, align 8
  %163 = call double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %21)
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %15, i32 0, i32 0
  store double* %163, double** %164, align 8
  %165 = call i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.51"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.51"* dereferenceable(8) %15)
  store i64 %165, i64* %14, align 8
  %166 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %167 = load i64, i64* %13, align 8
  %168 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %166, i64 %167)
  store double* %168, double** %16, align 8
  %169 = load double*, double** %16, align 8
  store double* %169, double** %17, align 8
  %170 = load double*, double** %16, align 8
  %171 = load i64, i64* %14, align 8
  %172 = getelementptr inbounds double, double* %170, i64 %171
  %173 = load i64, i64* %7, align 8
  %174 = load double*, double** %8, align 8
  %175 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %176 = load i32, i32* @x.407
  %177 = load i32, i32* @y.408
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  %184 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %175)
          to label %185 unwind label %251

; <label>:185:                                    ; preds = %originalBBpart213
  %186 = invoke double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %172, i64 %173, double* dereferenceable(8) %174, %"class.std::allocator.2"* dereferenceable(1) %184)
          to label %187 unwind label %251

; <label>:187:                                    ; preds = %185
  store double* null, double** %17, align 8
  %188 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %189 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %188, i32 0, i32 0
  %190 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %189 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %191 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %190, i32 0, i32 0
  %192 = load double*, double** %191, align 8
  %193 = invoke dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
          to label %194 unwind label %251

; <label>:194:                                    ; preds = %187
  %195 = load i32, i32* @x.407
  %196 = load i32, i32* @y.408
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %194, %originalBB15alteredBB
  %203 = load double*, double** %193, align 8
  %204 = load double*, double** %16, align 8
  %205 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %206 = load i32, i32* @x.407
  %207 = load i32, i32* @y.408
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  %214 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %205)
          to label %215 unwind label %251

; <label>:215:                                    ; preds = %originalBBpart217
  %216 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %192, double* %203, double* %204, %"class.std::allocator.2"* dereferenceable(1) %214)
          to label %217 unwind label %251

; <label>:217:                                    ; preds = %215
  store double* %216, double** %17, align 8
  %218 = load i64, i64* %7, align 8
  %219 = load double*, double** %17, align 8
  %220 = getelementptr inbounds double, double* %219, i64 %218
  store double* %220, double** %17, align 8
  %221 = invoke dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
          to label %222 unwind label %251

; <label>:222:                                    ; preds = %217
  %223 = load double*, double** %221, align 8
  %224 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %225 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %224, i32 0, i32 0
  %226 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %225 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %227 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %226, i32 0, i32 1
  %228 = load double*, double** %227, align 8
  %229 = load double*, double** %17, align 8
  %230 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %231 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %230)
          to label %232 unwind label %251

; <label>:232:                                    ; preds = %222
  %233 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %223, double* %228, double* %229, %"class.std::allocator.2"* dereferenceable(1) %231)
          to label %234 unwind label %251

; <label>:234:                                    ; preds = %232
  %235 = load i32, i32* @x.407
  %236 = load i32, i32* @y.408
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %234, %originalBB19alteredBB
  store double* %233, double** %17, align 8
  %243 = load i32, i32* @x.407
  %244 = load i32, i32* @y.408
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %386

; <label>:251:                                    ; preds = %232, %222, %217, %215, %originalBBpart217, %187, %185, %originalBBpart213
  %252 = load i32, i32* @x.407
  %253 = load i32, i32* @y.408
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %251, %originalBB23alteredBB
  %260 = landingpad { i8*, i32 }
          catch i8* null
  %261 = extractvalue { i8*, i32 } %260, 0
  store i8* %261, i8** %18, align 8
  %262 = extractvalue { i8*, i32 } %260, 1
  store i32 %262, i32* %19, align 4
  %263 = load i32, i32* @x.407
  %264 = load i32, i32* @y.408
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %271

; <label>:271:                                    ; preds = %originalBBpart225
  %272 = load i32, i32* @x.407
  %273 = load i32, i32* @y.408
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %271, %originalBB27alteredBB
  %280 = load i8*, i8** %18, align 8
  %281 = call i8* @__cxa_begin_catch(i8* %280) #11
  %282 = load double*, double** %17, align 8
  %283 = icmp ne double* %282, null
  %284 = load i32, i32* @x.407
  %285 = load i32, i32* @y.408
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br i1 %283, label %325, label %292

; <label>:292:                                    ; preds = %originalBBpart229
  %293 = load double*, double** %16, align 8
  %294 = load i64, i64* %14, align 8
  %295 = getelementptr inbounds double, double* %293, i64 %294
  %296 = load double*, double** %16, align 8
  %297 = load i64, i64* %14, align 8
  %298 = getelementptr inbounds double, double* %296, i64 %297
  %299 = load i64, i64* %7, align 8
  %300 = getelementptr inbounds double, double* %298, i64 %299
  %301 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %302 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %301)
          to label %303 unwind label %321

; <label>:303:                                    ; preds = %292
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %295, double* %300, %"class.std::allocator.2"* dereferenceable(1) %302)
          to label %304 unwind label %321

; <label>:304:                                    ; preds = %303
  %305 = load i32, i32* @x.407
  %306 = load i32, i32* @y.408
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %304, %originalBB31alteredBB
  %313 = load i32, i32* @x.407
  %314 = load i32, i32* @y.408
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %364

; <label>:321:                                    ; preds = %384, %originalBBpart245, %originalBBpart241, %originalBBpart237, %303, %292
  %322 = landingpad { i8*, i32 }
          cleanup
  %323 = extractvalue { i8*, i32 } %322, 0
  store i8* %323, i8** %18, align 8
  %324 = extractvalue { i8*, i32 } %322, 1
  store i32 %324, i32* %19, align 4
  invoke void @__cxa_end_catch()
          to label %385 unwind label %475

; <label>:325:                                    ; preds = %originalBBpart229
  %326 = load i32, i32* @x.407
  %327 = load i32, i32* @y.408
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %325, %originalBB35alteredBB
  %334 = load double*, double** %16, align 8
  %335 = load double*, double** %17, align 8
  %336 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %337 = load i32, i32* @x.407
  %338 = load i32, i32* @y.408
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  %345 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %336)
          to label %346 unwind label %321

; <label>:346:                                    ; preds = %originalBBpart237
  %347 = load i32, i32* @x.407
  %348 = load i32, i32* @y.408
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %346, %originalBB39alteredBB
  %355 = load i32, i32* @x.407
  %356 = load i32, i32* @y.408
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %334, double* %335, %"class.std::allocator.2"* dereferenceable(1) %345)
          to label %363 unwind label %321

; <label>:363:                                    ; preds = %originalBBpart241
  br label %364

; <label>:364:                                    ; preds = %363, %originalBBpart233
  %365 = load i32, i32* @x.407
  %366 = load i32, i32* @y.408
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %364, %originalBB43alteredBB
  %373 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %374 = load double*, double** %16, align 8
  %375 = load i64, i64* %13, align 8
  %376 = load i32, i32* @x.407
  %377 = load i32, i32* @y.408
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %373, double* %374, i64 %375)
          to label %384 unwind label %321

; <label>:384:                                    ; preds = %originalBBpart245
  invoke void @__cxa_rethrow() #13
          to label %494 unwind label %321

; <label>:385:                                    ; preds = %321
  br label %470

; <label>:386:                                    ; preds = %originalBBpart221
  %387 = load i32, i32* @x.407
  %388 = load i32, i32* @y.408
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %386, %originalBB47alteredBB
  %395 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %395, i32 0, i32 0
  %397 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %396 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %398 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %397, i32 0, i32 0
  %399 = load double*, double** %398, align 8
  %400 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %401 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %400, i32 0, i32 0
  %402 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %401 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %403 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %402, i32 0, i32 1
  %404 = load double*, double** %403, align 8
  %405 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %406 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %405)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %399, double* %404, %"class.std::allocator.2"* dereferenceable(1) %406)
  %407 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %408 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %409 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %408, i32 0, i32 0
  %410 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %409 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %411 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %410, i32 0, i32 0
  %412 = load double*, double** %411, align 8
  %413 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %414 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %413, i32 0, i32 0
  %415 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %414 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %416 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %415, i32 0, i32 2
  %417 = load double*, double** %416, align 8
  %418 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %419 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %418, i32 0, i32 0
  %420 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %419 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %421 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %420, i32 0, i32 0
  %422 = load double*, double** %421, align 8
  %423 = ptrtoint double* %417 to i64
  %424 = ptrtoint double* %422 to i64
  %425 = sub i64 %423, %424
  %426 = sdiv exact i64 %425, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %407, double* %412, i64 %426)
  %427 = load double*, double** %16, align 8
  %428 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %429 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %428, i32 0, i32 0
  %430 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %429 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %431 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %430, i32 0, i32 0
  store double* %427, double** %431, align 8
  %432 = load double*, double** %17, align 8
  %433 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %434 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %433, i32 0, i32 0
  %435 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %434 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %436 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %435, i32 0, i32 1
  store double* %432, double** %436, align 8
  %437 = load double*, double** %16, align 8
  %438 = load i64, i64* %13, align 8
  %439 = getelementptr inbounds double, double* %437, i64 %438
  %440 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %441 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %440, i32 0, i32 0
  %442 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %441 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %443 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %442, i32 0, i32 2
  store double* %439, double** %443, align 8
  %444 = load i32, i32* @x.407
  %445 = load i32, i32* @y.408
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBBpart252, label %originalBB47alteredBB

originalBBpart252:                                ; preds = %originalBB47
  br label %452

; <label>:452:                                    ; preds = %originalBBpart252, %151
  br label %453

; <label>:453:                                    ; preds = %452, %4
  %454 = load i32, i32* @x.407
  %455 = load i32, i32* @y.408
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %453, %originalBB54alteredBB
  %462 = load i32, i32* @x.407
  %463 = load i32, i32* @y.408
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  ret void

; <label>:470:                                    ; preds = %385
  %471 = load i8*, i8** %18, align 8
  %472 = load i32, i32* %19, align 4
  %473 = insertvalue { i8*, i32 } undef, i8* %471, 0
  %474 = insertvalue { i8*, i32 } %473, i32 %472, 1
  resume { i8*, i32 } %474

; <label>:475:                                    ; preds = %321
  %476 = load i32, i32* @x.407
  %477 = load i32, i32* @y.408
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %475, %originalBB58alteredBB
  %484 = landingpad { i8*, i32 }
          catch i8* null
  %485 = extractvalue { i8*, i32 } %484, 0
  call void @__clang_call_terminate(i8* %485) #7
  %486 = load i32, i32* @x.407
  %487 = load i32, i32* @y.408
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  unreachable

; <label>:494:                                    ; preds = %384
  %495 = load i32, i32* @x.407
  %496 = load i32, i32* @y.408
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %494, %originalBB62alteredBB
  %503 = load i32, i32* @x.407
  %504 = load i32, i32* @y.408
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %55
  %511 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %512 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %511, i32 0, i32 0
  %513 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %512 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %514 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %513, i32 0, i32 1
  %515 = load double*, double** %514, align 8
  %516 = load i64, i64* %7, align 8
  %_ = shl i64 0, %516
  %_1 = sub i64 0, 0
  %gen = add i64 %_1, %516
  %_2 = sub i64 0, 0
  %gen3 = add i64 %_2, %516
  %517 = sub i64 0, %516
  %518 = getelementptr inbounds double, double* %515, i64 %517
  %519 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %520 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %519, i32 0, i32 0
  %521 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %520 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %522 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %521, i32 0, i32 1
  %523 = load double*, double** %522, align 8
  %524 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %525 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %524, i32 0, i32 0
  %526 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %525 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %527 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %526, i32 0, i32 1
  %528 = load double*, double** %527, align 8
  %529 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %530 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %529)
  %531 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %518, double* %523, double* %528, %"class.std::allocator.2"* dereferenceable(1) %530)
  %532 = load i64, i64* %7, align 8
  %533 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %534 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %533, i32 0, i32 0
  %535 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %534 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %536 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %535, i32 0, i32 1
  %537 = load double*, double** %536, align 8
  %538 = getelementptr inbounds double, double* %537, i64 %532
  store double* %538, double** %536, align 8
  %539 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %540 = load double*, double** %539, align 8
  %541 = load double*, double** %12, align 8
  %542 = load i64, i64* %7, align 8
  %_4 = shl i64 0, %542
  %_5 = shl i64 0, %542
  %_6 = sub i64 0, %542
  %gen7 = mul i64 %_6, %542
  %_8 = shl i64 0, %542
  %_9 = shl i64 0, %542
  %_10 = shl i64 0, %542
  %543 = sub i64 0, %542
  %544 = getelementptr inbounds double, double* %541, i64 %543
  %545 = load double*, double** %12, align 8
  %546 = call double* @_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_(double* %540, double* %544, double* %545)
  %547 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %548 = load double*, double** %547, align 8
  %549 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %550 = load double*, double** %549, align 8
  %551 = load i64, i64* %7, align 8
  %552 = getelementptr inbounds double, double* %550, i64 %551
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %548, double* %552, double* dereferenceable(8) %9)
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %152
  %553 = load i64, i64* %7, align 8
  %554 = call i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.0"* %21, i64 %553, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0))
  store i64 %554, i64* %13, align 8
  %555 = call double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %21)
  %556 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.51", %"class.__gnu_cxx::__normal_iterator.51"* %15, i32 0, i32 0
  store double* %555, double** %556, align 8
  %557 = call i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.51"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.51"* dereferenceable(8) %15)
  store i64 %557, i64* %14, align 8
  %558 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %559 = load i64, i64* %13, align 8
  %560 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %558, i64 %559)
  store double* %560, double** %16, align 8
  %561 = load double*, double** %16, align 8
  store double* %561, double** %17, align 8
  %562 = load double*, double** %16, align 8
  %563 = load i64, i64* %14, align 8
  %564 = getelementptr inbounds double, double* %562, i64 %563
  %565 = load i64, i64* %7, align 8
  %566 = load double*, double** %8, align 8
  %567 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %194
  %568 = load double*, double** %193, align 8
  %569 = load double*, double** %16, align 8
  %570 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %234
  store double* %233, double** %17, align 8
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %251
  %571 = landingpad { i8*, i32 }
          catch i8* null
  %572 = extractvalue { i8*, i32 } %571, 0
  store i8* %572, i8** %18, align 8
  %573 = extractvalue { i8*, i32 } %571, 1
  store i32 %573, i32* %19, align 4
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %271
  %574 = load i8*, i8** %18, align 8
  %575 = call i8* @__cxa_begin_catch(i8* %574) #11
  %576 = load double*, double** %17, align 8
  %577 = icmp ne double* %576, null
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %304
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %325
  %578 = load double*, double** %16, align 8
  %579 = load double*, double** %17, align 8
  %580 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %346
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %364
  %581 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %582 = load double*, double** %16, align 8
  %583 = load i64, i64* %13, align 8
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %386
  %584 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %585 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %584, i32 0, i32 0
  %586 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %585 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %587 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %586, i32 0, i32 0
  %588 = load double*, double** %587, align 8
  %589 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %590 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %589, i32 0, i32 0
  %591 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %590 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %592 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %591, i32 0, i32 1
  %593 = load double*, double** %592, align 8
  %594 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %595 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %594)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %588, double* %593, %"class.std::allocator.2"* dereferenceable(1) %595)
  %596 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %597 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %598 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %597, i32 0, i32 0
  %599 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %598 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %600 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %599, i32 0, i32 0
  %601 = load double*, double** %600, align 8
  %602 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %603 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %602, i32 0, i32 0
  %604 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %603 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %605 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %604, i32 0, i32 2
  %606 = load double*, double** %605, align 8
  %607 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %608 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %607, i32 0, i32 0
  %609 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %608 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %610 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %609, i32 0, i32 0
  %611 = load double*, double** %610, align 8
  %612 = ptrtoint double* %606 to i64
  %613 = ptrtoint double* %611 to i64
  %_48 = sub i64 %612, %613
  %gen49 = mul i64 %_48, %613
  %614 = sub i64 %612, %613
  %_50 = shl i64 %614, 8
  %615 = sdiv exact i64 %614, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %596, double* %601, i64 %615)
  %616 = load double*, double** %16, align 8
  %617 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %618 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %617, i32 0, i32 0
  %619 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %618 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %620 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %619, i32 0, i32 0
  store double* %616, double** %620, align 8
  %621 = load double*, double** %17, align 8
  %622 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %623 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %622, i32 0, i32 0
  %624 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %623 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %625 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %624, i32 0, i32 1
  store double* %621, double** %625, align 8
  %626 = load double*, double** %16, align 8
  %627 = load i64, i64* %13, align 8
  %628 = getelementptr inbounds double, double* %626, i64 %627
  %629 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %630 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %629, i32 0, i32 0
  %631 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %630 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %632 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %631, i32 0, i32 2
  store double* %628, double** %632, align 8
  br label %originalBB47

originalBB54alteredBB:                            ; preds = %originalBB54, %453
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %475
  %633 = landingpad { i8*, i32 }
          catch i8* null
  %634 = extractvalue { i8*, i32 } %633, 0
  call void @__clang_call_terminate(i8* %634) #7
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %494
  br label %originalBB62
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(%"class.std::vector.0"*, double*) #0 comdat align 2 {
  %3 = load i32, i32* @x.409
  %4 = load i32, i32* @y.410
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.0"*, align 8
  %12 = alloca double*, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  store double* %1, double** %12, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %16 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %17, i32 0, i32 1
  %19 = load double*, double** %18, align 8
  %20 = load double*, double** %12, align 8
  %21 = ptrtoint double* %19 to i64
  %22 = ptrtoint double* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 8
  store i64 %24, i64* %13, align 8
  %25 = load i64, i64* %13, align 8
  %26 = icmp ne i64 %25, 0
  %27 = load i32, i32* @x.409
  %28 = load i32, i32* @y.410
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %49

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load double*, double** %12, align 8
  %37 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %38 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %39, i32 0, i32 1
  %41 = load double*, double** %40, align 8
  %42 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %43 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %42)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %36, double* %41, %"class.std::allocator.2"* dereferenceable(1) %43)
  %44 = load double*, double** %12, align 8
  %45 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %45, i32 0, i32 0
  %47 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %46 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %47, i32 0, i32 1
  store double* %44, double** %48, align 8
  br label %49

; <label>:49:                                     ; preds = %35, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %50 = alloca %"class.std::vector.0"*, align 8
  %51 = alloca double*, align 8
  %52 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %50, align 8
  store double* %1, double** %51, align 8
  %53 = load %"class.std::vector.0"*, %"class.std::vector.0"** %50, align 8
  %54 = bitcast %"class.std::vector.0"* %53 to %"struct.std::_Vector_base.1"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %54, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %55 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %56, i32 0, i32 1
  %58 = load double*, double** %57, align 8
  %59 = load double*, double** %51, align 8
  %60 = ptrtoint double* %58 to i64
  %61 = ptrtoint double* %59 to i64
  %_ = sub i64 0, %60
  %gen = add i64 %_, %61
  %_1 = shl i64 %60, %61
  %_2 = sub i64 0, %60
  %gen3 = add i64 %_2, %61
  %_4 = shl i64 %60, %61
  %_5 = shl i64 %60, %61
  %_6 = sub i64 0, %60
  %gen7 = add i64 %_6, %61
  %_8 = shl i64 %60, %61
  %62 = sub i64 %60, %61
  %_9 = shl i64 %62, 8
  %_10 = shl i64 %62, 8
  %_11 = shl i64 %62, 8
  %_12 = shl i64 %62, 8
  %_13 = sub i64 0, %62
  %gen14 = add i64 %_13, 8
  %_15 = sub i64 0, %62
  %gen16 = add i64 %_15, 8
  %_17 = sub i64 0, %62
  %gen18 = add i64 %_17, 8
  %63 = sdiv exact i64 %62, 8
  store i64 %63, i64* %52, align 8
  %64 = load i64, i64* %52, align 8
  %65 = icmp ne i64 %64, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.51"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.51"* dereferenceable(8)) #1 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.51"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %0, %"class.__gnu_cxx::__normal_iterator.51"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.51"* %1, %"class.__gnu_cxx::__normal_iterator.51"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %3, align 8
  %6 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %5)
  %7 = load double*, double** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.51"*, %"class.__gnu_cxx::__normal_iterator.51"** %4, align 8
  %9 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.51"* %8)
  %10 = load double*, double** %9, align 8
  %11 = ptrtoint double* %7 to i64
  %12 = ptrtoint double* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = load double*, double** %7, align 8
  %12 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  %13 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %9, double* %10, double* %11, %"class.std::allocator.2"* dereferenceable(1) %12)
  ret double* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPddEvT_S1_RKT0_(double*, double*, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  call void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double* %8, double* %10, double* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double*, i64, double* dereferenceable(8), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.419
  %6 = load i32, i32* @y.420
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  %15 = alloca double*, align 8
  %16 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %13, align 8
  store i64 %1, i64* %14, align 8
  store double* %2, double** %15, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %16, align 8
  %17 = load double*, double** %13, align 8
  %18 = load i64, i64* %14, align 8
  %19 = load double*, double** %15, align 8
  %20 = call double* @_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_(double* %17, i64 %18, double* dereferenceable(8) %19)
  %21 = load i32, i32* @x.419
  %22 = load i32, i32* @y.420
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca double*, align 8
  %30 = alloca i64, align 8
  %31 = alloca double*, align 8
  %32 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %29, align 8
  store i64 %1, i64* %30, align 8
  store double* %2, double** %31, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %32, align 8
  %33 = load double*, double** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load double*, double** %31, align 8
  %36 = call double* @_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_(double* %33, i64 %34, double* dereferenceable(8) %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %9)
  %11 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #13
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %9)
  %19 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %9)
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %9)
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

; <label>:26:                                     ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %9)
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %48

; <label>:30:                                     ; preds = %26, %17
  %31 = load i32, i32* @x.421
  %32 = load i32, i32* @y.422
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %30, %originalBBalteredBB
  %39 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %9)
  %40 = load i32, i32* @x.421
  %41 = load i32, i32* @y.422
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66

; <label>:48:                                     ; preds = %26
  %49 = load i32, i32* @x.421
  %50 = load i32, i32* @y.422
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i64, i64* %7, align 8
  %58 = load i32, i32* @x.421
  %59 = load i32, i32* @y.422
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %66

; <label>:66:                                     ; preds = %originalBBpart24, %originalBBpart2
  %67 = phi i64 [ %39, %originalBBpart2 ], [ %57, %originalBBpart24 ]
  ret i64 %67

originalBBalteredBB:                              ; preds = %originalBB, %30
  %68 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %9)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %69 = load i64, i64* %7, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.423
  %6 = load i32, i32* @y.424
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  %16 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %13, align 8
  store double* %1, double** %14, align 8
  store double* %2, double** %15, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %16, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = load double*, double** %15, align 8
  %20 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %16, align 8
  %21 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %17, double* %18, double* %19, %"class.std::allocator.2"* dereferenceable(1) %20)
  %22 = load i32, i32* @x.423
  %23 = load i32, i32* @y.424
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %21

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  %32 = alloca double*, align 8
  %33 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %30, align 8
  store double* %1, double** %31, align 8
  store double* %2, double** %32, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %33, align 8
  %34 = load double*, double** %30, align 8
  %35 = load double*, double** %31, align 8
  %36 = load double*, double** %32, align 8
  %37 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %33, align 8
  %38 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %34, double* %35, double* %36, %"class.std::allocator.2"* dereferenceable(1) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.425
  %5 = load i32, i32* @y.426
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %15)
  %17 = load double*, double** %13, align 8
  %18 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %17)
  %19 = load double*, double** %14, align 8
  %20 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %19)
  %21 = call double* @_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_(double* %16, double* %18, double* %20)
  %22 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %14, double* %21)
  %23 = load i32, i32* @x.425
  %24 = load i32, i32* @y.426
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %22

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca double*, align 8
  %32 = alloca double*, align 8
  %33 = alloca double*, align 8
  store double* %0, double** %31, align 8
  store double* %1, double** %32, align 8
  store double* %2, double** %33, align 8
  %34 = load double*, double** %31, align 8
  %35 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %34)
  %36 = load double*, double** %32, align 8
  %37 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %36)
  %38 = load double*, double** %33, align 8
  %39 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %38)
  %40 = call double* @_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_(double* %35, double* %37, double* %39)
  %41 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %33, double* %40)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_(double*, double*, double*) #1 comdat align 2 {
  %4 = load i32, i32* @x.429
  %5 = load i32, i32* @y.430
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i64, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %16 = load double*, double** %13, align 8
  %17 = load double*, double** %12, align 8
  %18 = ptrtoint double* %16 to i64
  %19 = ptrtoint double* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  store i64 %21, i64* %15, align 8
  %22 = load i64, i64* %15, align 8
  %23 = icmp ne i64 %22, 0
  %24 = load i32, i32* @x.429
  %25 = load i32, i32* @y.430
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %58

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* @x.429
  %34 = load i32, i32* @y.430
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %32, %originalBB21alteredBB
  %41 = load double*, double** %14, align 8
  %42 = load i64, i64* %15, align 8
  %43 = sub i64 0, %42
  %44 = getelementptr inbounds double, double* %41, i64 %43
  %45 = bitcast double* %44 to i8*
  %46 = load double*, double** %12, align 8
  %47 = bitcast double* %46 to i8*
  %48 = load i64, i64* %15, align 8
  %49 = mul i64 8, %48
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %45, i8* %47, i64 %49, i32 8, i1 false)
  %50 = load i32, i32* @x.429
  %51 = load i32, i32* @y.430
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart244, label %originalBB21alteredBB

originalBBpart244:                                ; preds = %originalBB21
  br label %58

; <label>:58:                                     ; preds = %originalBBpart244, %originalBBpart2
  %59 = load double*, double** %14, align 8
  %60 = load i64, i64* %15, align 8
  %61 = sub i64 0, %60
  %62 = getelementptr inbounds double, double* %59, i64 %61
  ret double* %62

originalBBalteredBB:                              ; preds = %originalBB, %3
  %63 = alloca double*, align 8
  %64 = alloca double*, align 8
  %65 = alloca double*, align 8
  %66 = alloca i64, align 8
  store double* %0, double** %63, align 8
  store double* %1, double** %64, align 8
  store double* %2, double** %65, align 8
  %67 = load double*, double** %64, align 8
  %68 = load double*, double** %63, align 8
  %69 = ptrtoint double* %67 to i64
  %70 = ptrtoint double* %68 to i64
  %_ = sub i64 0, %69
  %gen = add i64 %_, %70
  %_1 = shl i64 %69, %70
  %_2 = shl i64 %69, %70
  %_3 = sub i64 %69, %70
  %gen4 = mul i64 %_3, %70
  %_5 = shl i64 %69, %70
  %71 = sub i64 %69, %70
  %_6 = sub i64 %71, 8
  %gen7 = mul i64 %_6, 8
  %_8 = shl i64 %71, 8
  %_9 = sub i64 0, %71
  %gen10 = add i64 %_9, 8
  %_11 = sub i64 0, %71
  %gen12 = add i64 %_11, 8
  %_13 = shl i64 %71, 8
  %_14 = sub i64 0, %71
  %gen15 = add i64 %_14, 8
  %_16 = sub i64 %71, 8
  %gen17 = mul i64 %_16, 8
  %_18 = sub i64 %71, 8
  %gen19 = mul i64 %_18, 8
  %_20 = shl i64 %71, 8
  %72 = sdiv exact i64 %71, 8
  store i64 %72, i64* %66, align 8
  %73 = load i64, i64* %66, align 8
  %74 = icmp ne i64 %73, 0
  br label %originalBB

originalBB21alteredBB:                            ; preds = %originalBB21, %32
  %75 = load double*, double** %14, align 8
  %76 = load i64, i64* %15, align 8
  %_22 = shl i64 0, %76
  %_23 = sub i64 0, 0
  %gen24 = add i64 %_23, %76
  %_25 = sub i64 0, %76
  %gen26 = mul i64 %_25, %76
  %_27 = sub i64 0, 0
  %gen28 = add i64 %_27, %76
  %_29 = sub i64 0, 0
  %gen30 = add i64 %_29, %76
  %77 = sub i64 0, %76
  %78 = getelementptr inbounds double, double* %75, i64 %77
  %79 = bitcast double* %78 to i8*
  %80 = load double*, double** %12, align 8
  %81 = bitcast double* %80 to i8*
  %82 = load i64, i64* %15, align 8
  %_31 = shl i64 8, %82
  %_32 = shl i64 8, %82
  %_33 = sub i64 0, 8
  %gen34 = add i64 %_33, %82
  %_35 = sub i64 8, %82
  %gen36 = mul i64 %_35, %82
  %_37 = sub i64 0, 8
  %gen38 = add i64 %_37, %82
  %_39 = sub i64 8, %82
  %gen40 = mul i64 %_39, %82
  %_41 = sub i64 0, 8
  %gen42 = add i64 %_41, %82
  %83 = mul i64 8, %82
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %79, i8* %81, i64 %83, i32 8, i1 false)
  br label %originalBB21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double*, double*, double* dereferenceable(8)) #1 comdat {
  %4 = load i32, i32* @x.431
  %5 = load i32, i32* @y.432
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %16 = load double*, double** %14, align 8
  %17 = load double, double* %16, align 8
  store double %17, double* %15, align 8
  %18 = load i32, i32* @x.431
  %19 = load i32, i32* @y.432
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %originalBBpart28, %originalBBpart2
  %27 = load i32, i32* @x.431
  %28 = load i32, i32* @y.432
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load double*, double** %12, align 8
  %36 = load double*, double** %13, align 8
  %37 = icmp ne double* %35, %36
  %38 = load i32, i32* @x.431
  %39 = load i32, i32* @y.432
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %37, label %46, label %68

; <label>:46:                                     ; preds = %originalBBpart24
  %47 = load double, double* %15, align 8
  %48 = load double*, double** %12, align 8
  store double %47, double* %48, align 8
  br label %49

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* @x.431
  %51 = load i32, i32* @y.432
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load double*, double** %12, align 8
  %59 = getelementptr inbounds double, double* %58, i32 1
  store double* %59, double** %12, align 8
  %60 = load i32, i32* @x.431
  %61 = load i32, i32* @y.432
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %26

; <label>:68:                                     ; preds = %originalBBpart24
  %69 = load i32, i32* @x.431
  %70 = load i32, i32* @y.432
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i32, i32* @x.431
  %78 = load i32, i32* @y.432
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %85 = alloca double*, align 8
  %86 = alloca double*, align 8
  %87 = alloca double*, align 8
  %88 = alloca double, align 8
  store double* %0, double** %85, align 8
  store double* %1, double** %86, align 8
  store double* %2, double** %87, align 8
  %89 = load double*, double** %87, align 8
  %90 = load double, double* %89, align 8
  store double %90, double* %88, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %91 = load double*, double** %12, align 8
  %92 = load double*, double** %13, align 8
  %93 = icmp ne double* %91, %92
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %94 = load double*, double** %12, align 8
  %95 = getelementptr inbounds double, double* %94, i32 1
  store double* %95, double** %12, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_(double*, i64, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_(double* %8, i64 %9, double* dereferenceable(8) %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_(double*, i64, double* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load double*, double** %6, align 8
  %10 = call double* @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(double* %7, i64 %8, double* dereferenceable(8) %9)
  ret double* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(double*, i64, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %8, i64 %9, double* dereferenceable(8) %10)
  %12 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %4, double* %11)
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double*, i64, double* dereferenceable(8)) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca double, align 8
  %8 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  %9 = load double*, double** %6, align 8
  %10 = load double, double* %9, align 8
  store double %10, double* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  br label %12

; <label>:12:                                     ; preds = %originalBBpart2, %3
  %13 = load i64, i64* %8, align 8
  %14 = icmp ugt i64 %13, 0
  br i1 %14, label %15, label %39

; <label>:15:                                     ; preds = %12
  %16 = load double, double* %7, align 8
  %17 = load double*, double** %4, align 8
  store double %16, double* %17, align 8
  br label %18

; <label>:18:                                     ; preds = %15
  %19 = load i32, i32* @x.439
  %20 = load i32, i32* @y.440
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i64, i64* %8, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %8, align 8
  %29 = load double*, double** %4, align 8
  %30 = getelementptr inbounds double, double* %29, i32 1
  store double* %30, double** %4, align 8
  %31 = load i32, i32* @x.439
  %32 = load i32, i32* @y.440
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %12

; <label>:39:                                     ; preds = %12
  %40 = load double*, double** %4, align 8
  ret double* %40

originalBBalteredBB:                              ; preds = %originalBB, %18
  %41 = load i64, i64* %8, align 8
  %_ = sub i64 0, %41
  %gen = add i64 %_, -1
  %_1 = sub i64 0, %41
  %gen2 = add i64 %_1, -1
  %_3 = sub i64 %41, -1
  %gen4 = mul i64 %_3, -1
  %_5 = sub i64 0, %41
  %gen6 = add i64 %_5, -1
  %42 = add i64 %41, -1
  store i64 %42, i64* %8, align 8
  %43 = load double*, double** %4, align 8
  %44 = getelementptr inbounds double, double* %43, i32 1
  store double* %44, double** %4, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4)
  %6 = call i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %29

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.443
  %13 = load i32, i32* @y.444
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i64*, i64** %5, align 8
  store i64* %20, i64** %3, align 8
  %21 = load i32, i32* @x.443
  %22 = load i32, i32* @y.444
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:29:                                     ; preds = %2
  %30 = load i64*, i64** %4, align 8
  store i64* %30, i64** %3, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %originalBBpart2
  %32 = load i64*, i64** %3, align 8
  ret i64* %32

originalBBalteredBB:                              ; preds = %originalBB, %11
  %33 = load i64*, i64** %5, align 8
  store i64* %33, i64** %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  store i64 1152921504606846975, i64* %3, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %4) #11
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %15

; <label>:13:                                     ; preds = %2
  %14 = load i64*, i64** %4, align 8
  store i64* %14, i64** %3, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %11
  %16 = load i64*, i64** %3, align 8
  ret i64* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2ESt6vectorIdSaIdEEE6n_colsEv(%class.Table*) #1 comdat align 2 {
  %2 = load i32, i32* @x.453
  %3 = load i32, i32* @y.454
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %10, align 8
  %11 = load %class.Table*, %class.Table** %10, align 8
  %12 = bitcast %class.Table* %11 to %class.TableBase*
  %13 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = load i32, i32* @x.453
  %17 = load i32, i32* @y.454
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %15

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %24, align 8
  %25 = load %class.Table*, %class.Table** %24, align 8
  %26 = bitcast %class.Table* %25 to %class.TableBase*
  %27 = getelementptr inbounds %class.TableBase, %class.TableBase* %26, i32 0, i32 3
  %28 = bitcast %class.TableIndices* %27 to %class.TableIndicesBase*
  %29 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %28, i32 1)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2ESt6vectorIdSaIdEELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_(%"class.internal::TableBaseAccessors::Accessor"*, %class.TableBase* dereferenceable(48), %"class.std::vector.0"*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %5 = alloca %class.TableBase*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %4, align 8
  store %class.TableBase* %1, %class.TableBase** %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %4, align 8
  %8 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %7, i32 0, i32 0
  %9 = load %class.TableBase*, %class.TableBase** %5, align 8
  store %class.TableBase* %9, %class.TableBase** %8, align 8
  %10 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %7, i32 0, i32 1
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %11, %"class.std::vector.0"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_(i64, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.457
  %4 = load i32, i32* @y.458
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::allocator.2"*, align 8
  %13 = alloca %"class.std::allocator.2", align 1
  %14 = alloca i8*
  %15 = alloca i32
  store i64 %0, i64* %11, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %12, align 8
  %16 = load i64, i64* %11, align 8
  %17 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %12, align 8
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.2"* %13, %"class.std::allocator.2"* dereferenceable(1) %17) #11
  %18 = load i32, i32* @x.457
  %19 = load i32, i32* @y.458
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %26 = invoke i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1) %13)
          to label %27 unwind label %46

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.457
  %29 = load i32, i32* @y.458
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = icmp ugt i64 %16, %26
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  %37 = load i32, i32* @x.457
  %38 = load i32, i32* @y.458
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %36, label %45, label %50

; <label>:45:                                     ; preds = %originalBBpart24
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i32 0, i32 0)) #13
  unreachable

; <label>:46:                                     ; preds = %originalBBpart2
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  store i8* %48, i8** %14, align 8
  %49 = extractvalue { i8*, i32 } %47, 1
  store i32 %49, i32* %15, align 4
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  br label %52

; <label>:50:                                     ; preds = %originalBBpart24
  %51 = load i64, i64* %11, align 8
  ret i64 %51

; <label>:52:                                     ; preds = %46
  %53 = load i8*, i8** %14, align 8
  %54 = load i32, i32* %15, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

originalBBalteredBB:                              ; preds = %originalBB, %2
  %57 = alloca i64, align 8
  %58 = alloca %"class.std::allocator.2"*, align 8
  %59 = alloca %"class.std::allocator.2", align 1
  %60 = alloca i8*
  %61 = alloca i32
  store i64 %0, i64* %57, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %58, align 8
  %62 = load i64, i64* %57, align 8
  %63 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %58, align 8
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.2"* %59, %"class.std::allocator.2"* dereferenceable(1) %63) #11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %64 = icmp ugt i64 %16, %26
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #11
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10) #11
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE18_M_fill_initializeEmRKd(%"class.std::vector.0"*, i64, double* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %9 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %10, i32 0, i32 0
  %12 = load double*, double** %11, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load double*, double** %6, align 8
  %15 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %16 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %15)
  %17 = call double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %12, i64 %13, double* dereferenceable(8) %14, %"class.std::allocator.2"* dereferenceable(1) %16)
  %18 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %19 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %20, i32 0, i32 1
  store double* %17, double** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load double*, double** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = ptrtoint double* %13 to i64
  %19 = ptrtoint double* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %5, double* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %23) #11
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.463
  %26 = load i32, i32* @y.464
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %36) #11
  %37 = load i32, i32* @x.463
  %38 = load i32, i32* @y.464
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %24
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %53) #11
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2ERKS_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.467
  %4 = load i32, i32* @y.468
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %12 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %11, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %11, align 8
  %14 = load i32, i32* @x.467
  %15 = load i32, i32* @y.468
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %23 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %22, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %7 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"class.std::allocator.2"*
  %9 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.2"* %8, %"class.std::allocator.2"* dereferenceable(1) %9) #11
  %10 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %16) #11
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %9, i32 0, i32 0
  store double* %7, double** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %11 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 1
  store double* %14, double** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds double, double* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %24 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %25, i32 0, i32 2
  store double* %23, double** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.473
  %3 = load i32, i32* @y.474
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %10, align 8
  %11 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %10, align 8
  %12 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %11 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %12) #11
  %13 = load i32, i32* @x.473
  %14 = load i32, i32* @y.474
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %21, align 8
  %22 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %21, align 8
  %23 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %22 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %23) #11
  br label %originalBB
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noreturn nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn }
attributes #14 = { builtin }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
