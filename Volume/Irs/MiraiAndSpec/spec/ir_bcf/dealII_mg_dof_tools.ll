; ModuleID = '/home/ml4code/host/experimento_malware/spec_cpu_2006_range/bytecodes_llvm_4/dealII_mg_dof_tools.ll'
source_filename = "mg_dof_tools.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%class.MGDoFHandler = type { %class.DoFHandler, %"class.std::vector.80", %"class.std::vector.87", %"class.std::vector.12" }
%class.DoFHandler = type { %class.Subscriptor, %class.SmartPointer, %class.SmartPointer.54, %"class.std::vector.80", i32, %"class.std::vector.12" }
%class.Subscriptor = type { i32 (...)**, i32, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SmartPointer = type { %class.Triangulation* }
%class.Triangulation = type { %class.Subscriptor, %"class.std::vector", %"class.std::vector.47", %"class.std::vector.3", [255 x %class.Boundary*], i32, %struct.TriaNumberCache }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data" = type { %class.TriangulationLevel**, %class.TriangulationLevel**, %class.TriangulationLevel** }
%class.TriangulationLevel = type { %class.TriangulationLevel.0, %"struct.TriangulationLevel<3>::HexesData" }
%class.TriangulationLevel.0 = type { %class.TriangulationLevel.1, %"struct.TriangulationLevel<2>::QuadsData" }
%class.TriangulationLevel.1 = type { %class.TriangulationLevel.2, %"struct.TriangulationLevel<1>::LinesData" }
%class.TriangulationLevel.2 = type { %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.7", %"class.std::vector.12" }
%"class.std::vector.7" = type { %"struct.std::_Vector_base.8" }
%"struct.std::_Vector_base.8" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type { i32, i32 }
%"struct.TriangulationLevel<1>::LinesData" = type { %"class.std::vector.17", %"class.std::vector.22", %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.27", %"class.std::vector.32" }
%"class.std::vector.17" = type { %"struct.std::_Vector_base.18" }
%"struct.std::_Vector_base.18" = type { %"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl" }
%"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl" = type { %"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl_data" = type { %class.Line*, %class.Line*, %class.Line* }
%class.Line = type { [2 x i32] }
%"class.std::vector.22" = type { %"struct.std::_Vector_base.23" }
%"struct.std::_Vector_base.23" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::vector.27" = type { %"struct.std::_Vector_base.28" }
%"struct.std::_Vector_base.28" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" = type { i8*, i8*, i8* }
%"class.std::vector.32" = type { %"struct.std::_Vector_base.33" }
%"struct.std::_Vector_base.33" = type { %"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl" }
%"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl" = type { %"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl_data" = type { i8**, i8**, i8** }
%"struct.TriangulationLevel<2>::QuadsData" = type { %"class.std::vector.37", %"class.std::vector.22", %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.27", %"class.std::vector.32" }
%"class.std::vector.37" = type { %"struct.std::_Vector_base.38" }
%"struct.std::_Vector_base.38" = type { %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl" }
%"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl" = type { %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data" = type { %class.Quad*, %class.Quad*, %class.Quad* }
%class.Quad = type { [4 x i32] }
%"struct.TriangulationLevel<3>::HexesData" = type { %"class.std::vector.42", %"class.std::vector.22", %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.27", %"class.std::vector.32", %"class.std::vector.3" }
%"class.std::vector.42" = type { %"struct.std::_Vector_base.43" }
%"struct.std::_Vector_base.43" = type { %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl" }
%"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl" = type { %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data" = type { %class.Hexahedron*, %class.Hexahedron*, %class.Hexahedron* }
%class.Hexahedron = type { [6 x i32] }
%"class.std::vector.47" = type { %"struct.std::_Vector_base.48" }
%"struct.std::_Vector_base.48" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" = type { %class.Point*, %class.Point*, %class.Point* }
%class.Point = type { %class.Tensor }
%class.Tensor = type { [3 x double] }
%"class.std::vector.3" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%class.Boundary = type opaque
%struct.TriaNumberCache = type { %struct.TriaNumberCache.52, i32, %"class.std::vector.12", i32, %"class.std::vector.12" }
%struct.TriaNumberCache.52 = type { %struct.TriaNumberCache.53, i32, %"class.std::vector.12", i32, %"class.std::vector.12" }
%struct.TriaNumberCache.53 = type { i32, %"class.std::vector.12", i32, %"class.std::vector.12" }
%class.SmartPointer.54 = type { %class.FiniteElement* }
%class.FiniteElement = type { %class.FiniteElementBase.base, [7 x i8] }
%class.FiniteElementBase.base = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector.55", %"class.std::vector.55", %"class.std::vector.61", %"class.std::vector.61", %"class.std::vector.55", %"class.std::vector.3", %"class.std::vector.47", %"class.std::vector.68", %"class.std::vector.75", %"class.std::vector.12", i8 }>
%class.FiniteElementData = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.FullMatrix = type { %class.Table.base, [4 x i8] }
%class.Table.base = type { %class.TableBase.base }
%class.TableBase.base = type <{ %class.Subscriptor, double*, i32, %class.TableIndices }>
%class.TableIndices = type { %class.TableIndicesBase }
%class.TableIndicesBase = type { [2 x i32] }
%"class.std::vector.61" = type { %"struct.std::_Vector_base.62" }
%"struct.std::_Vector_base.62" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair.66"*, %"struct.std::pair.66"*, %"struct.std::pair.66"* }
%"struct.std::pair.66" = type { %"struct.std::pair.60", i32 }
%"struct.std::pair.60" = type { i32, i32 }
%"class.std::vector.55" = type { %"struct.std::_Vector_base.56" }
%"struct.std::_Vector_base.56" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair.60"*, %"struct.std::pair.60"*, %"struct.std::pair.60"* }
%"class.std::vector.68" = type { %"struct.std::_Vector_base.69" }
%"struct.std::_Vector_base.69" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" = type { %class.Point.73*, %class.Point.73*, %class.Point.73* }
%class.Point.73 = type { %class.Tensor.74 }
%class.Tensor.74 = type { [2 x double] }
%"class.std::vector.75" = type { %"struct.std::_Vector_base.76" }
%"struct.std::_Vector_base.76" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" = type { %"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"* }
%"class.std::vector.80" = type { %"struct.std::_Vector_base.81" }
%"struct.std::_Vector_base.81" = type { %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data" = type { %class.DoFLevel**, %class.DoFLevel**, %class.DoFLevel** }
%class.DoFLevel = type { %class.DoFLevel.85, %"class.std::vector.12" }
%class.DoFLevel.85 = type { %class.DoFLevel.86, %"class.std::vector.12" }
%class.DoFLevel.86 = type { %"class.std::vector.12" }
%"class.std::vector.87" = type { %"struct.std::_Vector_base.88" }
%"struct.std::_Vector_base.88" = type { %"struct.std::_Vector_base<MGDoFHandler<3>::MGVertexDoFs, std::allocator<MGDoFHandler<3>::MGVertexDoFs> >::_Vector_impl" }
%"struct.std::_Vector_base<MGDoFHandler<3>::MGVertexDoFs, std::allocator<MGDoFHandler<3>::MGVertexDoFs> >::_Vector_impl" = type { %"struct.std::_Vector_base<MGDoFHandler<3>::MGVertexDoFs, std::allocator<MGDoFHandler<3>::MGVertexDoFs> >::_Vector_impl_data" }
%"struct.std::_Vector_base<MGDoFHandler<3>::MGVertexDoFs, std::allocator<MGDoFHandler<3>::MGVertexDoFs> >::_Vector_impl_data" = type { %"class.MGDoFHandler<3>::MGVertexDoFs"*, %"class.MGDoFHandler<3>::MGVertexDoFs"*, %"class.MGDoFHandler<3>::MGVertexDoFs"* }
%"class.MGDoFHandler<3>::MGVertexDoFs" = type opaque
%"class.std::vector.12" = type { %"struct.std::_Vector_base.13" }
%"struct.std::_Vector_base.13" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%class.SparsityPattern = type <{ %class.Subscriptor, i32, i32, i32, i32, i32, [4 x i8], i32*, i32*, i8, i8, [6 x i8] }>
%"class.std::allocator.14" = type { i8 }
%class.TriaIterator = type { %class.TriaRawIterator }
%class.TriaRawIterator = type { %class.MGDoFCellAccessor }
%class.MGDoFCellAccessor = type { %class.MGDoFObjectAccessor }
%class.MGDoFObjectAccessor = type { %class.MGDoFAccessor, %class.DoFCellAccessor }
%class.MGDoFAccessor = type { %class.MGDoFHandler* }
%class.DoFCellAccessor = type { %class.DoFObjectAccessor }
%class.DoFObjectAccessor = type { %class.DoFAccessor, %class.CellAccessor }
%class.DoFAccessor = type { %class.DoFHandler* }
%class.CellAccessor = type { %class.TriaObjectAccessor }
%class.TriaObjectAccessor = type { %class.TriaAccessor }
%class.TriaAccessor = type { i32, i32, %class.Triangulation* }
%"class.__gnu_cxx::new_allocator.15" = type { i8 }
%class.CompressedSparsityPattern = type { %class.Subscriptor, i32, i32, %"class.std::vector.93" }
%"class.std::vector.93" = type { %"struct.std::_Vector_base.94" }
%"struct.std::_Vector_base.94" = type { %"struct.std::_Vector_base<std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> >, std::allocator<std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> >, std::allocator<std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> >, std::allocator<std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> >, std::allocator<std::set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int> > > >::_Vector_impl_data" = type { %"class.std::set"*, %"class.std::set"*, %"class.std::set"* }
%"class.std::set" = type opaque
%class.BlockSparsityPattern = type { %class.BlockSparsityPatternBase }
%class.BlockSparsityPatternBase = type { %class.Subscriptor, i32, i32, %class.Table.98, %class.BlockIndices, %class.BlockIndices }
%class.Table.98 = type { %class.TableBase.base.101, [4 x i8] }
%class.TableBase.base.101 = type <{ %class.Subscriptor, %class.SmartPointer.100*, i32, %class.TableIndices }>
%class.SmartPointer.100 = type { %class.SparsityPattern* }
%class.BlockIndices = type { i32, %"class.std::vector.12" }
%"class.internal::TableBaseAccessors::Accessor" = type { %class.TableBase.99*, %class.SmartPointer.100* }
%class.TableBase.99 = type <{ %class.Subscriptor, %class.SmartPointer.100*, i32, %class.TableIndices, [4 x i8] }>
%class.CompressedBlockSparsityPattern = type { %class.BlockSparsityPatternBase.103 }
%class.BlockSparsityPatternBase.103 = type { %class.Subscriptor, i32, i32, %class.Table.104, %class.BlockIndices, %class.BlockIndices }
%class.Table.104 = type { %class.TableBase.base.107, [4 x i8] }
%class.TableBase.base.107 = type <{ %class.Subscriptor, %class.SmartPointer.106*, i32, %class.TableIndices }>
%class.SmartPointer.106 = type { %class.CompressedSparsityPattern* }
%"class.internal::TableBaseAccessors::Accessor.169" = type { %class.TableBase.105*, %class.SmartPointer.106* }
%class.TableBase.105 = type <{ %class.Subscriptor, %class.SmartPointer.106*, i32, %class.TableIndices, [4 x i8] }>
%"class.std::allocator.109" = type { i8 }
%"class.std::allocator.77" = type { i8 }
%"struct.std::_Bit_reference" = type { i64*, i64 }
%class.TriaIterator.112 = type { %class.TriaRawIterator.113 }
%class.TriaRawIterator.113 = type { %class.MGDoFObjectAccessor.115 }
%class.MGDoFObjectAccessor.115 = type { %class.MGDoFAccessor, %class.DoFObjectAccessor.116 }
%class.DoFObjectAccessor.116 = type { %class.DoFAccessor, %class.TriaObjectAccessor.117 }
%class.TriaObjectAccessor.117 = type { %class.TriaAccessor }
%class.FiniteElementBase = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector.55", %"class.std::vector.55", %"class.std::vector.61", %"class.std::vector.61", %"class.std::vector.55", %"class.std::vector.3", %"class.std::vector.47", %"class.std::vector.68", %"class.std::vector.75", %"class.std::vector.12", i8, [7 x i8] }>
%class.Table = type { %class.TableBase.base, [4 x i8] }
%"class.__gnu_cxx::new_allocator.110" = type { i8 }
%"class.__gnu_cxx::new_allocator.78" = type { i8 }
%class.TableBase = type <{ %class.Subscriptor, double*, i32, %class.TableIndices, [4 x i8] }>
%"struct.std::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%class.MGLevelObject = type { %class.Subscriptor, i32, %"class.std::vector.118" }
%"class.std::vector.118" = type { %"struct.std::_Vector_base.119" }
%"struct.std::_Vector_base.119" = type { %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data" = type { %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"* }
%"class.boost::shared_ptr" = type { %class.Vector*, %"class.boost::detail::shared_count" }
%class.Vector = type { i32 (...)**, i32, i32, double* }
%"class.boost::detail::shared_count" = type { %"class.boost::detail::sp_counted_base"* }
%"class.boost::detail::sp_counted_base" = type { i32 (...)**, i64, i64 }
%class.MGLevelObject.123 = type { %class.Subscriptor, i32, %"class.std::vector.124" }
%"class.std::vector.124" = type { %"struct.std::_Vector_base.125" }
%"struct.std::_Vector_base.125" = type { %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data" = type { %"class.boost::shared_ptr.129"*, %"class.boost::shared_ptr.129"*, %"class.boost::shared_ptr.129"* }
%"class.boost::shared_ptr.129" = type { %class.Vector.130*, %"class.boost::detail::shared_count" }
%class.Vector.130 = type { i32 (...)**, i32, i32, float* }
%class.MGLevelObject.131 = type { %class.Subscriptor, i32, %"class.std::vector.132" }
%"class.std::vector.132" = type { %"struct.std::_Vector_base.133" }
%"struct.std::_Vector_base.133" = type { %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data" = type { %"class.boost::shared_ptr.137"*, %"class.boost::shared_ptr.137"*, %"class.boost::shared_ptr.137"* }
%"class.boost::shared_ptr.137" = type { %class.BlockVector*, %"class.boost::detail::shared_count" }
%class.BlockVector = type <{ %"class.std::vector.143", %class.BlockIndices, i32, [4 x i8] }>
%"class.std::vector.143" = type { %"struct.std::_Vector_base.144" }
%"struct.std::_Vector_base.144" = type { %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data" = type { %class.Vector*, %class.Vector*, %class.Vector* }
%"class.std::vector.138" = type { %"struct.std::_Vector_base.139" }
%"struct.std::_Vector_base.139" = type { %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data" = type { %"class.std::vector.12"*, %"class.std::vector.12"*, %"class.std::vector.12"* }
%"class.std::allocator.140" = type { i8 }
%"struct.std::_Bit_const_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"class.std::allocator.4" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.170" = type { i32* }
%"class.__gnu_cxx::__normal_iterator" = type { i32* }
%"class.__gnu_cxx::new_allocator.141" = type { i8 }
%"class.Threads::ThreadGroup" = type { %"class.std::__cxx11::list" }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl" }
%"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"struct.std::__detail::_List_node_header" = type { %"struct.std::__detail::_List_node_base", i64 }
%"struct.std::__detail::_List_node_base" = type { %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"* }
%"class.Threads::Thread" = type { %"struct.Threads::internal::return_value" }
%"struct.Threads::internal::return_value" = type { i8 }
%"class.Threads::internal::fun_forwarder" = type { void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* }
%class.MGLevelObject.148 = type { %class.Subscriptor, i32, %"class.std::vector.149" }
%"class.std::vector.149" = type { %"struct.std::_Vector_base.150" }
%"struct.std::_Vector_base.150" = type { %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data" = type { %"class.boost::shared_ptr.154"*, %"class.boost::shared_ptr.154"*, %"class.boost::shared_ptr.154"* }
%"class.boost::shared_ptr.154" = type { %class.BlockVector.155*, %"class.boost::detail::shared_count" }
%class.BlockVector.155 = type <{ %"class.std::vector.156", %class.BlockIndices, i32, [4 x i8] }>
%"class.std::vector.156" = type { %"struct.std::_Vector_base.157" }
%"struct.std::_Vector_base.157" = type { %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl" }
%"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data" = type { %class.Vector.130*, %class.Vector.130*, %class.Vector.130* }
%"class.boost::tuples::tuple" = type { %"struct.boost::tuples::cons" }
%"struct.boost::tuples::cons" = type { i32*, %"struct.boost::tuples::cons.171" }
%"struct.boost::tuples::cons.171" = type { %class.MGDoFHandler*, %"struct.boost::tuples::cons.172" }
%"struct.boost::tuples::cons.172" = type { %"class.std::vector.3"*, %"struct.boost::tuples::cons.173" }
%"struct.boost::tuples::cons.173" = type { %"class.std::vector.3"* }
%"struct.std::_List_const_iterator" = type { %"struct.std::__detail::_List_node_base"* }
%"struct.__gnu_cxx::__ops::_Iter_equals_val" = type { i8* }
%"class.std::allocator.162" = type { i8 }
%"class.__gnu_cxx::new_allocator.163" = type { i8 }
%"struct.std::_List_node" = type <{ %"struct.std::__detail::_List_node_base", %"class.Threads::Thread", [7 x i8] }>
%"class.std::allocator.166" = type { i8 }
%"class.__gnu_cxx::new_allocator.167" = type { i8 }
%"struct.std::iterator.92" = type { i8 }
%"class.std::__pair_base" = type { i8 }
%"class.__gnu_cxx::new_allocator.5" = type { i8 }
%"struct.std::iterator" = type { i8 }
%"struct.boost::tuples::null_type" = type { i8 }
%"struct.Threads::internal::int2type" = type { i8 }
%"struct.std::_List_iterator" = type { %"struct.std::__detail::_List_node_base"* }

$_ZN7MGTools21make_sparsity_patternILi3E15SparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZNK10DoFHandlerILi3EE6get_feEv = comdat any

$_ZNSaIjEC2Ev = comdat any

$_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_ = comdat any

$_ZNSaIjED2Ev = comdat any

$_ZNK12MGDoFHandlerILi3EE3endEj = comdat any

$_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_ = comdat any

$_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv = comdat any

$_ZNSt6vectorIjSaIjEEixEm = comdat any

$_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv = comdat any

$_ZNSt6vectorIjSaIjEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN7MGTools26make_flux_sparsity_patternILi3E15SparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZNK12CellAccessorILi3EE14neighbor_levelEj = comdat any

$_ZN7MGTools31make_flux_sparsity_pattern_edgeILi3E15SparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN7MGTools21make_sparsity_patternILi3E25CompressedSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN7MGTools26make_flux_sparsity_patternILi3E25CompressedSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN7MGTools31make_flux_sparsity_pattern_edgeILi3E25CompressedSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN7MGTools21make_sparsity_patternILi3E20BlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj = comdat any

$_ZN7MGTools26make_flux_sparsity_patternILi3E20BlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN7MGTools31make_flux_sparsity_pattern_edgeILi3E20BlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN7MGTools21make_sparsity_patternILi3E30CompressedBlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj = comdat any

$_ZN7MGTools26make_flux_sparsity_patternILi3E30CompressedBlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN7MGTools31make_flux_sparsity_pattern_edgeILi3E30CompressedBlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j = comdat any

$_ZN7MGTools26make_flux_sparsity_patternILi3E15SparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_jRK10FullMatrixIdESB_ = comdat any

$_ZNK17FiniteElementDataILi3EE12n_componentsEv = comdat any

$_ZNSaIbEC2Ev = comdat any

$_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_ = comdat any

$_ZNSaISt6vectorIbSaIbEEEC2Ev = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIbSaIbEEED2Ev = comdat any

$_ZNSt6vectorIbSaIbEED2Ev = comdat any

$_ZNSaIbED2Ev = comdat any

$_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj = comdat any

$_ZNK5TableILi2EdEclEjj = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIbSaIbEEixEm = comdat any

$_ZNSt14_Bit_referenceaSEb = comdat any

$_ZNSt6vectorIbSaIbEEC2Ev = comdat any

$_ZNKSt14_Bit_referencecvbEv = comdat any

$_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv = comdat any

$_ZNK18TriaObjectAccessorILi2ELi3EE13user_flag_setEv = comdat any

$_ZNK12TriaAccessorILi3EE5levelEv = comdat any

$_ZNK18TriaObjectAccessorILi2ELi3EE13set_user_flagEv = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev = comdat any

$_ZN7MGTools26make_flux_sparsity_patternILi3E25CompressedSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_jRK10FullMatrixIdESB_ = comdat any

$_ZN7MGTools26make_flux_sparsity_patternILi3E20BlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_jRK10FullMatrixIdESB_ = comdat any

$_ZN7MGTools26make_flux_sparsity_patternILi3E30CompressedBlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_jRK10FullMatrixIdESB_ = comdat any

$_ZN7MGTools13reinit_vectorILi3EdEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI6VectorIT0_EE = comdat any

$_ZNK13MGLevelObjectI6VectorIdEE12get_minlevelEv = comdat any

$_ZNK13MGLevelObjectI6VectorIdEE12get_maxlevelEv = comdat any

$_ZN13MGLevelObjectI6VectorIdEEixEj = comdat any

$_ZN6VectorIdE6reinitEjb = comdat any

$_ZN7MGTools13reinit_vectorILi3EfEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI6VectorIT0_EE = comdat any

$_ZNK13MGLevelObjectI6VectorIfEE12get_minlevelEv = comdat any

$_ZNK13MGLevelObjectI6VectorIfEE12get_maxlevelEv = comdat any

$_ZN13MGLevelObjectI6VectorIfEEixEj = comdat any

$_ZN6VectorIfE6reinitEjb = comdat any

$_ZN7MGTools13reinit_vectorILi3EdEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI11BlockVectorIT0_EERKSt6vectorIbSaIbEERKSB_IjSaIjEE = comdat any

$_ZNSt6vectorIbSaIbEEC2ERKS1_ = comdat any

$_ZNSt6vectorIjSaIjEEC2ERKS1_ = comdat any

$_ZNKSt6vectorIjSaIjEE4sizeEv = comdat any

$_ZNSt6vectorIjSaIjEE6resizeEmj = comdat any

$_ZNKSt6vectorIbSaIbEE4sizeEv = comdat any

$_ZNSt6vectorIbSaIbEE6resizeEmb = comdat any

$_ZSt6fill_nISt13_Bit_iteratorjbET_S1_T0_RKT1_ = comdat any

$_ZNSt6vectorIbSaIbEE5beginEv = comdat any

$_ZSt10accumulateISt13_Bit_iteratorjET0_T_S2_S1_ = comdat any

$_ZNSt6vectorIbSaIbEE3endEv = comdat any

$_ZNSaISt6vectorIjSaIjEEEC2Ev = comdat any

$_ZNSt6vectorIS_IjSaIjEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIjSaIjEEED2Ev = comdat any

$_ZN7MGTools24count_dofs_per_componentILi3EEEvRK12MGDoFHandlerIXT_EERSt6vectorIS5_IjSaIjEESaIS7_EES7_ = comdat any

$_ZNK13MGLevelObjectI11BlockVectorIdEE12get_minlevelEv = comdat any

$_ZNK13MGLevelObjectI11BlockVectorIdEE12get_maxlevelEv = comdat any

$_ZN13MGLevelObjectI11BlockVectorIdEEixEj = comdat any

$_ZNK11BlockVectorIdE8n_blocksEv = comdat any

$_ZN11BlockVectorIdE5blockEj = comdat any

$_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev = comdat any

$_ZN7MGTools13reinit_vectorILi3EfEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI11BlockVectorIT0_EERKSt6vectorIbSaIbEERKSB_IjSaIjEE = comdat any

$_ZNK13MGLevelObjectI11BlockVectorIfEE12get_minlevelEv = comdat any

$_ZNK13MGLevelObjectI11BlockVectorIfEE12get_maxlevelEv = comdat any

$_ZN13MGLevelObjectI11BlockVectorIfEEixEj = comdat any

$_ZNK11BlockVectorIfE8n_blocksEv = comdat any

$_ZN11BlockVectorIfE5blockEj = comdat any

$_ZN7MGTools13reinit_vectorILi3EdEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI6VectorIT0_EERKSt6vectorIbSaIbEERKSB_IjSaIjEE = comdat any

$_ZNKSt6vectorIbSaIbEEixEm = comdat any

$_ZN7MGTools13reinit_vectorILi3EfEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI6VectorIT0_EERKSt6vectorIbSaIbEERKSB_IjSaIjEE = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEjEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIjSaIjEE5beginEv = comdat any

$_ZNSt6vectorIjSaIjEE3endEv = comdat any

$_ZN7Threads11ThreadGroupIvEC2Ev = comdat any

$_ZN7Threads5spawnIvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS7_EENS_8internal13fun_forwarderIT_N5boost6tuples5tupleIT0_T1_T2_T3_NSF_9null_typeESL_SL_SL_SL_SL_EEXsr5boost6tuples6lengthISM_EE5valueEEEPFSD_SH_SI_SJ_SK_E = comdat any

$_ZN7Threads8internal13fun_forwarderIvN5boost6tuples5tupleIjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSB_NS3_9null_typeESF_SF_SF_SF_SF_EELi4EEclEjS8_SD_SE_ = comdat any

$_ZN7Threads11ThreadGroupIvEpLERKNS_6ThreadIvEE = comdat any

$_ZNK7Threads11ThreadGroupIvE8join_allEv = comdat any

$_ZSt5countISt13_Bit_iteratorbENSt15iterator_traitsIT_E15difference_typeES2_S2_RKT0_ = comdat any

$_ZN7Threads11ThreadGroupIvED2Ev = comdat any

$_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EEC2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EEC2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE10_List_implC2Ev = comdat any

$_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEEC2Ev = comdat any

$_ZNSt8__detail17_List_node_headerC2Ev = comdat any

$_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEEC2Ev = comdat any

$_ZNSt8__detail17_List_node_header7_M_initEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEED2Ev = comdat any

$_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EED2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EED2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE8_M_clearEv = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE10_List_implD2Ev = comdat any

$_ZNSt10_List_nodeIN7Threads6ThreadIvEEE9_M_valptrEv = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSaIN7Threads6ThreadIvEEEC2ISt10_List_nodeIS1_EEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEE7destroyEPS3_ = comdat any

$_ZNSaIN7Threads6ThreadIvEEED2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_put_nodeEPSt10_List_nodeIS3_E = comdat any

$_ZSt11__addressofIN7Threads6ThreadIvEEEPT_RS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEED2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt10_List_nodeIN7Threads6ThreadIvEEEES5_E10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE10deallocateEPS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIjED2Ev = comdat any

$_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj = comdat any

$_ZNSt12_Vector_baseIjSaIjEED2Ev = comdat any

$_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_ = comdat any

$_ZNSaIjEC2ERKS_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPjET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPjET_S1_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm = comdat any

$_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPjEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_ = comdat any

$_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj = comdat any

$_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj = comdat any

$_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv = comdat any

$_ZSt4fillIPjjEvT_S1_RKT0_ = comdat any

$_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_ = comdat any

$_ZSt4copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPjET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZNKSt6vectorIjSaIjEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIbEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIbED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev = comdat any

$_ZNK12SmartPointerIK13FiniteElementILi3EEEdeEv = comdat any

$_ZNKSt6vectorIP8DoFLevelILi3EESaIS2_EE4sizeEv = comdat any

$_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEC2ERK15TriaRawIteratorILi3ES1_E = comdat any

$_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEC2ERKS2_ = comdat any

$_ZNK12TriaAccessorILi3EEneERKS0_ = comdat any

$_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEppEv = comdat any

$_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEE5stateEv = comdat any

$_ZNK18TriaObjectAccessorILi3ELi3EE4usedEv = comdat any

$_ZN18TriaObjectAccessorILi3ELi3EEppEv = comdat any

$_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm = comdat any

$_ZNKSt6vectorI10HexahedronSaIS0_EE4sizeEv = comdat any

$_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EE4sizeEv = comdat any

$_ZNK12TriaAccessorILi3EE5stateEv = comdat any

$_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEdeEv = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EEixEm = comdat any

$_ZNK12BlockIndices15global_to_localEj = comdat any

$_ZN5TableILi2E12SmartPointerI15SparsityPatternEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI15SparsityPatternELb0ELj1EEixEj = comdat any

$_ZNK12SmartPointerI15SparsityPatternEptEv = comdat any

$_ZNKSt6vectorIjSaIjEEixEm = comdat any

$_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_ = comdat any

$_ZNSt4pairIjjEC2ERKjS2_ = comdat any

$_ZNK5TableILi2E12SmartPointerI15SparsityPatternEE6n_colsEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI15SparsityPatternELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_ = comdat any

$_ZNK16TableIndicesBaseILi2EEixEj = comdat any

$_ZN5TableILi2E12SmartPointerI25CompressedSparsityPatternEEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI25CompressedSparsityPatternELb0ELj1EEixEj = comdat any

$_ZNK12SmartPointerI25CompressedSparsityPatternEptEv = comdat any

$_ZNK5TableILi2E12SmartPointerI25CompressedSparsityPatternEE6n_colsEv = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI25CompressedSparsityPatternELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_ = comdat any

$_ZNSt13_Bvector_baseISaIbEEC2ERKS0_ = comdat any

$_ZNSt6vectorIbSaIbEE13_M_initializeEm = comdat any

$_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb = comdat any

$_ZNSt13_Bvector_baseISaIbEED2Ev = comdat any

$_ZNSaImEC2IbEERKSaIT_E = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE = comdat any

$_ZNSaImED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2Ev = comdat any

$_ZNSaImEC2ERKS_ = comdat any

$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ = comdat any

$_ZNSt13_Bit_iteratorC2Ev = comdat any

$_ZNSt18_Bit_iterator_baseC2EPmj = comdat any

$_ZN9__gnu_cxx13new_allocatorImED2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm = comdat any

$_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm = comdat any

$_ZSt11__addressofImEPT_RS0_ = comdat any

$_ZNSt13_Bit_iteratorC2EPmj = comdat any

$_ZNKSt13_Bit_iteratorplEl = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv = comdat any

$_ZNSt13_Bit_iteratorpLEl = comdat any

$_ZNSt18_Bit_iterator_base7_M_incrEl = comdat any

$_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm = comdat any

$_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv = comdat any

$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNSaISt6vectorIbSaIbEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_ = comdat any

$_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNKSt6vectorISt4pairIjjESaIS1_EEixEm = comdat any

$_ZNKSt13_Bit_iteratordeEv = comdat any

$_ZNSt14_Bit_referenceC2EPmm = comdat any

$_ZNSt13_Bvector_baseISaIbEEC2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev = comdat any

$_ZNSaImEC2Ev = comdat any

$_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEdeEv = comdat any

$_ZNKSt6vectorIN5boost10shared_ptrI6VectorIdEEESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIN5boost10shared_ptrI6VectorIdEEESaIS4_EEixEm = comdat any

$_ZNK5boost10shared_ptrI6VectorIdEEdeEv = comdat any

$_ZN6VectorIdEaSEd = comdat any

$_ZSt4fillIPddEvT_S1_RKT0_ = comdat any

$_ZN6VectorIdE5beginEv = comdat any

$_ZN6VectorIdE3endEv = comdat any

$_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZNKSt6vectorIN5boost10shared_ptrI6VectorIfEEESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIN5boost10shared_ptrI6VectorIfEEESaIS4_EEixEm = comdat any

$_ZNK5boost10shared_ptrI6VectorIfEEdeEv = comdat any

$_ZN6VectorIfEaSEf = comdat any

$_ZSt4fillIPffEvT_S1_RKT0_ = comdat any

$_ZN6VectorIfE5beginEv = comdat any

$_ZN6VectorIfE3endEv = comdat any

$_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPfET_S1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv = comdat any

$_ZNSaIbEC2ImEERKSaIT_E = comdat any

$_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator = comdat any

$_ZNKSt6vectorIbSaIbEE5beginEv = comdat any

$_ZNKSt6vectorIbSaIbEE3endEv = comdat any

$_ZSt4copyIPmS0_ET0_T_S2_S1_ = comdat any

$_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_ = comdat any

$_ZNSt19_Bit_const_iteratorC2EPmj = comdat any

$_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPmET_S1_ = comdat any

$_ZSt12__niter_wrapIPmET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPmET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_ = comdat any

$_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_ = comdat any

$_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_ = comdat any

$_ZSt12__niter_baseISt13_Bit_iteratorET_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_ = comdat any

$_ZStmiRKSt18_Bit_iterator_baseS1_ = comdat any

$_ZNKSt19_Bit_const_iteratordeEv = comdat any

$_ZNSt19_Bit_const_iteratorppEv = comdat any

$_ZNSt13_Bit_iteratorppEv = comdat any

$_ZNSt18_Bit_iterator_base10_M_bump_upEv = comdat any

$_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE17_S_select_on_copyERKS1_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIjSaIjEE5beginEv = comdat any

$_ZNKSt6vectorIjSaIjEE3endEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_ = comdat any

$_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_ = comdat any

$_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator = comdat any

$_ZNSt6vectorIbSaIbEE6insertESt13_Bit_iteratormRKb = comdat any

$_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb = comdat any

$_ZNKSt6vectorIbSaIbEE8capacityEv = comdat any

$_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_ = comdat any

$_ZSt4fillSt13_Bit_iteratorS_RKb = comdat any

$_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc = comdat any

$_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13_Bit_iteratorET_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_ = comdat any

$_ZNSt13_Bit_iteratormmEv = comdat any

$_ZNSt14_Bit_referenceaSERKS_ = comdat any

$_ZNSt18_Bit_iterator_base12_M_bump_downEv = comdat any

$_ZSt14__fill_bvectorPmjjb = comdat any

$_ZNKSt6vectorIbSaIbEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEmE8max_sizeERKS1_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_ = comdat any

$_ZSt10__fill_n_aISt13_Bit_iteratorjbEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNKSt18_Bit_iterator_baseneERKS_ = comdat any

$_ZNKSt18_Bit_iterator_baseeqERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEED2Ev = comdat any

$_ZNSt6vectorIS_IjSaIjEESaIS1_EE17_S_check_init_lenEmRKS2_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IjSaIjEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIS_IjSaIjEESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNSaISt6vectorIjSaIjEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E8max_sizeERKS4_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIjSaIjEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIjSaIjEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIjSaIjEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIjSaIjEES2_EvPT_RKT0_ = comdat any

$_ZSt11__addressofISt6vectorIjSaIjEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIjSaIjEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIjSaIjEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIjSaIjEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIjSaIjEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNKSt6vectorIN5boost10shared_ptrI11BlockVectorIdEEESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIN5boost10shared_ptrI11BlockVectorIdEEESaIS4_EEixEm = comdat any

$_ZNK5boost10shared_ptrI11BlockVectorIdEEdeEv = comdat any

$_ZNSt6vectorI6VectorIdESaIS1_EEixEm = comdat any

$_ZNKSt6vectorIN5boost10shared_ptrI11BlockVectorIfEEESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIN5boost10shared_ptrI11BlockVectorIfEEESaIS4_EEixEm = comdat any

$_ZNK5boost10shared_ptrI11BlockVectorIfEEdeEv = comdat any

$_ZNSt6vectorI6VectorIfESaIS1_EEixEm = comdat any

$_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_ = comdat any

$_ZN7Threads8internal13fun_forwarderIvN5boost6tuples5tupleIjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSB_NS3_9null_typeESF_SF_SF_SF_SF_EELi4EEC2EPFvjS8_SD_SE_E = comdat any

$_ZN5boost6tuples3tieIjK12MGDoFHandlerILi3EEKSt6vectorIbSaIbEES7_EENS0_5tupleIRT_RT0_RT1_RT2_NS0_9null_typeESI_SI_SI_SI_SI_EESB_SD_SF_SH_ = comdat any

$_ZN7Threads6ThreadIvEC2IPFvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS9_EN5boost6tuples5tupleIRjS6_SB_SC_NSG_9null_typeESJ_SJ_SJ_SJ_SJ_EEEET_T0_ = comdat any

$_ZN5boost6tuples5tupleIRjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS9_NS0_9null_typeESD_SD_SD_SD_SD_EC2ES2_S6_SB_SC_ = comdat any

$_ZN5boost6tuples6detail5cnullEv = comdat any

$_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEEC2IjS5_SA_S9_KSD_SJ_SJ_SJ_SJ_SJ_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_ = comdat any

$_ZN5boost6tuples4consIRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS8_NS0_9null_typeEEEEEEC2IS4_S9_S8_KSC_SH_SH_SH_SH_SH_SH_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_ = comdat any

$_ZN5boost6tuples4consIRKSt6vectorIbSaIbEENS1_IRS4_NS0_9null_typeEEEEC2IS5_S4_KS8_SC_SC_SC_SC_SC_SC_SC_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_ = comdat any

$_ZN5boost6tuples4consIRSt6vectorIbSaIbEENS0_9null_typeEEC2IS4_EERT_RKS6_SC_SC_SC_SC_SC_SC_SC_SC_ = comdat any

$_ZN7Threads8internal6CallerIvE7do_callIPFvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSA_EN5boost6tuples5tupleIRjS7_SC_SD_NSH_9null_typeESK_SK_SK_SK_SK_EEEEvT_RT0_RNS0_12return_valueIvEERKNS0_8int2typeILi4EEE = comdat any

$_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi0EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv = comdat any

$_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi1EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv = comdat any

$_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi2EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv = comdat any

$_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi3EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv = comdat any

$_ZN5boost6tuples3getILi0ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_ = comdat any

$_ZN5boost6tuples6detail9get_classILi0EE3getIRjS5_NS0_4consIRK12MGDoFHandlerILi3EENS6_IRKSt6vectorIbSaIbEENS6_IRSD_NS0_9null_typeEEEEEEEEET_RNS6_IT0_T1_EE = comdat any

$_ZN5boost6tuples3getILi1ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_ = comdat any

$_ZN5boost6tuples6detail9get_classILi1EE3getIRK12MGDoFHandlerILi3EERjNS0_4consIS8_NSA_IRKSt6vectorIbSaIbEENSA_IRSD_NS0_9null_typeEEEEEEEEET_RNSA_IT0_T1_EE = comdat any

$_ZN5boost6tuples6detail9get_classILi0EE3getIRK12MGDoFHandlerILi3EES8_NS0_4consIRKSt6vectorIbSaIbEENS9_IRSC_NS0_9null_typeEEEEEEET_RNS9_IT0_T1_EE = comdat any

$_ZN5boost6tuples3getILi2ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_ = comdat any

$_ZN5boost6tuples6detail9get_classILi2EE3getIRKSt6vectorIbSaIbEERjNS0_4consIRK12MGDoFHandlerILi3EENSB_IS9_NSB_IRS7_NS0_9null_typeEEEEEEEEET_RNSB_IT0_T1_EE = comdat any

$_ZN5boost6tuples6detail9get_classILi1EE3getIRKSt6vectorIbSaIbEERK12MGDoFHandlerILi3EENS0_4consIS9_NSE_IRS7_NS0_9null_typeEEEEEEET_RNSE_IT0_T1_EE = comdat any

$_ZN5boost6tuples6detail9get_classILi0EE3getIRKSt6vectorIbSaIbEES9_NS0_4consIRS7_NS0_9null_typeEEEEET_RNSA_IT0_T1_EE = comdat any

$_ZN5boost6tuples3getILi3ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_ = comdat any

$_ZN5boost6tuples6detail9get_classILi3EE3getIRSt6vectorIbSaIbEERjNS0_4consIRK12MGDoFHandlerILi3EENSA_IRKS7_NSA_IS8_NS0_9null_typeEEEEEEEEET_RNSA_IT0_T1_EE = comdat any

$_ZN5boost6tuples6detail9get_classILi2EE3getIRSt6vectorIbSaIbEERK12MGDoFHandlerILi3EENS0_4consIRKS7_NSD_IS8_NS0_9null_typeEEEEEEET_RNSD_IT0_T1_EE = comdat any

$_ZN5boost6tuples6detail9get_classILi1EE3getIRSt6vectorIbSaIbEERKS7_NS0_4consIS8_NS0_9null_typeEEEEET_RNSB_IT0_T1_EE = comdat any

$_ZN5boost6tuples6detail9get_classILi0EE3getIRSt6vectorIbSaIbEES8_NS0_9null_typeEEET_RNS0_4consIT0_T1_EE = comdat any

$_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE9push_backERKS3_ = comdat any

$_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE9_M_insertESt14_List_iteratorIS3_ERKS3_ = comdat any

$_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE3endEv = comdat any

$_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE14_M_create_nodeERKS3_ = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_inc_sizeEm = comdat any

$_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_get_nodeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEE9constructEPS3_RKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt10_List_nodeIN7Threads6ThreadIvEEEES5_E8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE8max_sizeEv = comdat any

$_ZNSt14_List_iteratorIN7Threads6ThreadIvEEEC2EPNSt8__detail15_List_node_baseE = comdat any

$_ZNKSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE5beginEv = comdat any

$_ZStneRKSt20_List_const_iteratorIN7Threads6ThreadIvEEES5_ = comdat any

$_ZNKSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE3endEv = comdat any

$_ZNKSt20_List_const_iteratorIN7Threads6ThreadIvEEEptEv = comdat any

$_ZNK7Threads6ThreadIvE4joinEv = comdat any

$_ZNSt20_List_const_iteratorIN7Threads6ThreadIvEEEppEv = comdat any

$_ZNSt20_List_const_iteratorIN7Threads6ThreadIvEEEC2EPKNSt8__detail15_List_node_baseE = comdat any

$_ZNKSt10_List_nodeIN7Threads6ThreadIvEEE9_M_valptrEv = comdat any

$_ZSt11__addressofIKN7Threads6ThreadIvEEEPT_RS4_ = comdat any

$_ZSt10__count_ifISt13_Bit_iteratorN9__gnu_cxx5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeES7_S7_T0_ = comdat any

$_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_ = comdat any

$_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclISt13_Bit_iteratorEEbT_ = comdat any

$_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC2ERS2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"vector<bool>::_M_fill_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_mg_dof_tools.cc, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #2
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #2

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools21make_sparsity_patternILi3E15SparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.SparsityPattern* dereferenceable(72), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.SparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::vector.12", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.14", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %class.TriaIterator, align 8
  %15 = alloca %class.TriaIterator, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %18 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %19 = load i32, i32* %6, align 4
  %20 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %18, i32 %19)
  store i32 %20, i32* %7, align 4
  %21 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %22 = bitcast %class.MGDoFHandler* %21 to %class.DoFHandler*
  %23 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %22)
  %24 = bitcast %class.FiniteElement* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 24
  %26 = bitcast i8* %25 to %class.FiniteElementData*
  %27 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %26, i32 0, i32 10
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %8, align 4
  %29 = load i32, i32* %8, align 4
  %30 = zext i32 %29 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %11) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %9, i64 %30, i32* dereferenceable(4) %10, %"class.std::allocator.14"* dereferenceable(1) %11)
          to label %31 unwind label %154

; <label>:31:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  %32 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %33 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %14, %class.MGDoFHandler* %32, i32 %33)
          to label %34 unwind label %158

; <label>:34:                                     ; preds = %31
  %35 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %36 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %15, %class.MGDoFHandler* %35, i32 %36)
          to label %37 unwind label %158

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* @x.1
  %39 = load i32, i32* @y.2
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %37, %originalBBalteredBB
  %46 = load i32, i32* @x.1
  %47 = load i32, i32* @y.2
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %54

; <label>:54:                                     ; preds = %217, %originalBBpart2
  %55 = bitcast %class.TriaIterator* %14 to %class.TriaRawIterator*
  %56 = bitcast %class.TriaIterator* %15 to %class.TriaRawIterator*
  %57 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %55, %class.TriaRawIterator* dereferenceable(32) %56)
          to label %58 unwind label %158

; <label>:58:                                     ; preds = %54
  br i1 %57, label %59, label %218

; <label>:59:                                     ; preds = %58
  %60 = bitcast %class.TriaIterator* %14 to %class.TriaRawIterator*
  %61 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %60)
          to label %62 unwind label %158

; <label>:62:                                     ; preds = %59
  %63 = bitcast %class.MGDoFCellAccessor* %61 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %63, %"class.std::vector.12"* dereferenceable(24) %9)
          to label %64 unwind label %158

; <label>:64:                                     ; preds = %62
  %65 = load i32, i32* @x.1
  %66 = load i32, i32* @y.2
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %64, %originalBB1alteredBB
  store i32 0, i32* %16, align 4
  %73 = load i32, i32* @x.1
  %74 = load i32, i32* @y.2
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %81

; <label>:81:                                     ; preds = %195, %originalBBpart24
  %82 = load i32, i32* %16, align 4
  %83 = load i32, i32* %8, align 4
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %85, label %198

; <label>:85:                                     ; preds = %81
  store i32 0, i32* %17, align 4
  br label %86

; <label>:86:                                     ; preds = %151, %85
  %87 = load i32, i32* %17, align 4
  %88 = load i32, i32* %8, align 4
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %90, label %178

; <label>:90:                                     ; preds = %86
  %91 = load i32, i32* @x.1
  %92 = load i32, i32* @y.2
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %90, %originalBB6alteredBB
  %99 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %100 = load i32, i32* %16, align 4
  %101 = zext i32 %100 to i64
  %102 = load i32, i32* @x.1
  %103 = load i32, i32* @y.2
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %110 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %101)
          to label %111 unwind label %158

; <label>:111:                                    ; preds = %originalBBpart28
  %112 = load i32, i32* @x.1
  %113 = load i32, i32* @y.2
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %111, %originalBB10alteredBB
  %120 = load i32, i32* %110, align 4
  %121 = load i32, i32* %17, align 4
  %122 = zext i32 %121 to i64
  %123 = load i32, i32* @x.1
  %124 = load i32, i32* @y.2
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %131 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %122)
          to label %132 unwind label %158

; <label>:132:                                    ; preds = %originalBBpart212
  %133 = load i32, i32* @x.1
  %134 = load i32, i32* @y.2
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %132, %originalBB14alteredBB
  %141 = load i32, i32* %131, align 4
  %142 = load i32, i32* @x.1
  %143 = load i32, i32* @y.2
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %99, i32 %120, i32 %141)
          to label %150 unwind label %158

; <label>:150:                                    ; preds = %originalBBpart216
  br label %151

; <label>:151:                                    ; preds = %150
  %152 = load i32, i32* %17, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %17, align 4
  br label %86

; <label>:154:                                    ; preds = %3
  %155 = landingpad { i8*, i32 }
          cleanup
  %156 = extractvalue { i8*, i32 } %155, 0
  store i8* %156, i8** %12, align 8
  %157 = extractvalue { i8*, i32 } %155, 1
  store i32 %157, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  br label %220

; <label>:158:                                    ; preds = %215, %originalBBpart216, %originalBBpart212, %originalBBpart28, %62, %59, %54, %34, %31
  %159 = load i32, i32* @x.1
  %160 = load i32, i32* @y.2
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %158, %originalBB18alteredBB
  %167 = landingpad { i8*, i32 }
          cleanup
  %168 = extractvalue { i8*, i32 } %167, 0
  store i8* %168, i8** %12, align 8
  %169 = extractvalue { i8*, i32 } %167, 1
  store i32 %169, i32* %13, align 4
  %170 = load i32, i32* @x.1
  %171 = load i32, i32* @y.2
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
          to label %219 unwind label %241

; <label>:178:                                    ; preds = %86
  %179 = load i32, i32* @x.1
  %180 = load i32, i32* @y.2
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %178, %originalBB22alteredBB
  %187 = load i32, i32* @x.1
  %188 = load i32, i32* @y.2
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %195

; <label>:195:                                    ; preds = %originalBBpart224
  %196 = load i32, i32* %16, align 4
  %197 = add i32 %196, 1
  store i32 %197, i32* %16, align 4
  br label %81

; <label>:198:                                    ; preds = %81
  %199 = load i32, i32* @x.1
  %200 = load i32, i32* @y.2
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %198, %originalBB26alteredBB
  %207 = load i32, i32* @x.1
  %208 = load i32, i32* @y.2
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %215

; <label>:215:                                    ; preds = %originalBBpart228
  %216 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %14)
          to label %217 unwind label %158

; <label>:217:                                    ; preds = %215
  br label %54

; <label>:218:                                    ; preds = %58
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
  ret void

; <label>:219:                                    ; preds = %originalBBpart220
  br label %220

; <label>:220:                                    ; preds = %219, %154
  %221 = load i32, i32* @x.1
  %222 = load i32, i32* @y.2
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %220, %originalBB30alteredBB
  %229 = load i8*, i8** %12, align 8
  %230 = load i32, i32* %13, align 4
  %231 = insertvalue { i8*, i32 } undef, i8* %229, 0
  %232 = insertvalue { i8*, i32 } %231, i32 %230, 1
  %233 = load i32, i32* @x.1
  %234 = load i32, i32* @y.2
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  resume { i8*, i32 } %232

; <label>:241:                                    ; preds = %originalBBpart220
  %242 = load i32, i32* @x.1
  %243 = load i32, i32* @y.2
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %241, %originalBB34alteredBB
  %250 = landingpad { i8*, i32 }
          catch i8* null
  %251 = extractvalue { i8*, i32 } %250, 0
  call void @__clang_call_terminate(i8* %251) #9
  %252 = load i32, i32* @x.1
  %253 = load i32, i32* @y.2
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %37
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %64
  store i32 0, i32* %16, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %90
  %260 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %261 = load i32, i32* %16, align 4
  %262 = zext i32 %261 to i64
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %111
  %263 = load i32, i32* %110, align 4
  %264 = load i32, i32* %17, align 4
  %265 = zext i32 %264 to i64
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  %266 = load i32, i32* %131, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %158
  %267 = landingpad { i8*, i32 }
          cleanup
  %268 = extractvalue { i8*, i32 } %267, 0
  store i8* %268, i8** %12, align 8
  %269 = extractvalue { i8*, i32 } %267, 1
  store i32 %269, i32* %13, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %178
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %198
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %220
  %270 = load i8*, i8** %12, align 8
  %271 = load i32, i32* %13, align 4
  %272 = insertvalue { i8*, i32 } undef, i8* %270, 0
  %273 = insertvalue { i8*, i32 } %272, i32 %271, 1
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %241
  %274 = landingpad { i8*, i32 }
          catch i8* null
  %275 = extractvalue { i8*, i32 } %274, 0
  call void @__clang_call_terminate(i8* %275) #9
  br label %originalBB34
}

declare i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler*, i32) #1

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler*) #0 comdat align 2 {
  %2 = load i32, i32* @x.3
  %3 = load i32, i32* @y.4
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.DoFHandler*, align 8
  store %class.DoFHandler* %0, %class.DoFHandler** %10, align 8
  %11 = load %class.DoFHandler*, %class.DoFHandler** %10, align 8
  %12 = getelementptr inbounds %class.DoFHandler, %class.DoFHandler* %11, i32 0, i32 2
  %13 = call dereferenceable(1160) %class.FiniteElement* @_ZNK12SmartPointerIK13FiniteElementILi3EEEdeEv(%class.SmartPointer.54* %12)
  %14 = load i32, i32* @x.3
  %15 = load i32, i32* @y.4
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.FiniteElement* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.DoFHandler*, align 8
  store %class.DoFHandler* %0, %class.DoFHandler** %22, align 8
  %23 = load %class.DoFHandler*, %class.DoFHandler** %22, align 8
  %24 = getelementptr inbounds %class.DoFHandler, %class.DoFHandler* %23, i32 0, i32 2
  %25 = call dereferenceable(1160) %class.FiniteElement* @_ZNK12SmartPointerIK13FiniteElementILi3EEEdeEv(%class.SmartPointer.54* %24)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2Ev(%"class.std::allocator.14"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  %4 = bitcast %"class.std::allocator.14"* %3 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.15"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"*, i64, i32* dereferenceable(4), %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.7
  %6 = load i32, i32* @y.8
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.std::vector.12"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32*, align 8
  %16 = alloca %"class.std::allocator.14"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %13, align 8
  store i64 %1, i64* %14, align 8
  store i32* %2, i32** %15, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %16, align 8
  %19 = load %"class.std::vector.12"*, %"class.std::vector.12"** %13, align 8
  %20 = bitcast %"class.std::vector.12"* %19 to %"struct.std::_Vector_base.13"*
  %21 = load i64, i64* %14, align 8
  %22 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %16, align 8
  %23 = call i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64 %21, %"class.std::allocator.14"* dereferenceable(1) %22)
  %24 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %16, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.13"* %20, i64 %23, %"class.std::allocator.14"* dereferenceable(1) %24)
  %25 = load i64, i64* %14, align 8
  %26 = load i32*, i32** %15, align 8
  %27 = load i32, i32* @x.7
  %28 = load i32, i32* @y.8
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector.12"* %19, i64 %25, i32* dereferenceable(4) %26)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %originalBBpart2
  ret void

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %17, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %18, align 4
  %40 = bitcast %"class.std::vector.12"* %19 to %"struct.std::_Vector_base.13"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.13"* %40)
          to label %41 unwind label %47

; <label>:41:                                     ; preds = %36
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %17, align 8
  %44 = load i32, i32* %18, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %36
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %50 = alloca %"class.std::vector.12"*, align 8
  %51 = alloca i64, align 8
  %52 = alloca i32*, align 8
  %53 = alloca %"class.std::allocator.14"*, align 8
  %54 = alloca i8*
  %55 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %50, align 8
  store i64 %1, i64* %51, align 8
  store i32* %2, i32** %52, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %53, align 8
  %56 = load %"class.std::vector.12"*, %"class.std::vector.12"** %50, align 8
  %57 = bitcast %"class.std::vector.12"* %56 to %"struct.std::_Vector_base.13"*
  %58 = load i64, i64* %51, align 8
  %59 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %53, align 8
  %60 = call i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64 %58, %"class.std::allocator.14"* dereferenceable(1) %59)
  %61 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %53, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.13"* %57, i64 %60, %"class.std::allocator.14"* dereferenceable(1) %61)
  %62 = load i64, i64* %51, align 8
  %63 = load i32*, i32** %52, align 8
  br label %originalBB
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjED2Ev(%"class.std::allocator.14"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  %4 = bitcast %"class.std::allocator.14"* %3 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator.15"* %4) #2
  ret void
}

declare void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret, %class.MGDoFHandler*, i32) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* noalias sret, %class.MGDoFHandler*, i32) #0 comdat align 2 {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.TriaRawIterator, align 8
  store %class.MGDoFHandler* %1, %class.MGDoFHandler** %4, align 8
  store i32 %2, i32* %5, align 4
  %7 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.MGDoFHandler, %class.MGDoFHandler* %7, i32 0, i32 1
  %11 = call i64 @_ZNKSt6vectorIP8DoFLevelILi3EESaIS2_EE4sizeEv(%"class.std::vector.80"* %10)
  %12 = sub i64 %11, 1
  %13 = icmp eq i64 %9, %12
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %3
  call void @_ZNK12MGDoFHandlerILi3EE3endEv(%class.TriaRawIterator* sret %6, %class.MGDoFHandler* %7)
  call void @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEC2ERK15TriaRawIteratorILi3ES1_E(%class.TriaIterator* %0, %class.TriaRawIterator* dereferenceable(32) %6)
  br label %34

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.11
  %17 = load i32, i32* @y.12
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i32, i32* %5, align 4
  %25 = add i32 %24, 1
  call void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %0, %class.MGDoFHandler* %7, i32 %25)
  %26 = load i32, i32* @x.11
  %27 = load i32, i32* @y.12
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart2, %14
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %15
  %35 = load i32, i32* %5, align 4
  %_ = shl i32 %35, 1
  %_1 = sub i32 0, %35
  %gen = add i32 %_1, 1
  %36 = add i32 %35, 1
  call void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %0, %class.MGDoFHandler* %7, i32 %36)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator*, %class.TriaRawIterator* dereferenceable(32)) #0 comdat align 2 {
  %3 = load i32, i32* @x.13
  %4 = load i32, i32* @y.14
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TriaRawIterator*, align 8
  %12 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %11, align 8
  store %class.TriaRawIterator* %1, %class.TriaRawIterator** %12, align 8
  %13 = load %class.TriaRawIterator*, %class.TriaRawIterator** %11, align 8
  %14 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %13, i32 0, i32 0
  %15 = bitcast %class.MGDoFCellAccessor* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to %class.TriaAccessor*
  %18 = load %class.TriaRawIterator*, %class.TriaRawIterator** %12, align 8
  %19 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %18, i32 0, i32 0
  %20 = bitcast %class.MGDoFCellAccessor* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 16
  %22 = bitcast i8* %21 to %class.TriaAccessor*
  %23 = call zeroext i1 @_ZNK12TriaAccessorILi3EEneERKS0_(%class.TriaAccessor* %17, %class.TriaAccessor* dereferenceable(16) %22)
  %24 = load i32, i32* @x.13
  %25 = load i32, i32* @y.14
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %23

originalBBalteredBB:                              ; preds = %originalBB, %2
  %32 = alloca %class.TriaRawIterator*, align 8
  %33 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %32, align 8
  store %class.TriaRawIterator* %1, %class.TriaRawIterator** %33, align 8
  %34 = load %class.TriaRawIterator*, %class.TriaRawIterator** %32, align 8
  %35 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %34, i32 0, i32 0
  %36 = bitcast %class.MGDoFCellAccessor* %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 16
  %38 = bitcast i8* %37 to %class.TriaAccessor*
  %39 = load %class.TriaRawIterator*, %class.TriaRawIterator** %33, align 8
  %40 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %39, i32 0, i32 0
  %41 = bitcast %class.MGDoFCellAccessor* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to %class.TriaAccessor*
  %44 = call zeroext i1 @_ZNK12TriaAccessorILi3EEneERKS0_(%class.TriaAccessor* %38, %class.TriaAccessor* dereferenceable(16) %43)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator*) #0 comdat align 2 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %10, align 8
  %11 = load %class.TriaRawIterator*, %class.TriaRawIterator** %10, align 8
  %12 = call dereferenceable(32) %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEdeEv(%class.TriaRawIterator* %11)
  %13 = load i32, i32* @x.15
  %14 = load i32, i32* @y.16
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.MGDoFCellAccessor* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %21, align 8
  %22 = load %class.TriaRawIterator*, %class.TriaRawIterator** %21, align 8
  %23 = call dereferenceable(32) %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEdeEv(%class.TriaRawIterator* %22)
  br label %originalBB
}

declare void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor*, %"class.std::vector.12"* dereferenceable(24)) #1

declare void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %6 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator*) #0 comdat align 2 {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaIterator*, align 8
  %11 = alloca %class.TriaIterator*, align 8
  store %class.TriaIterator* %0, %class.TriaIterator** %11, align 8
  %12 = load %class.TriaIterator*, %class.TriaIterator** %11, align 8
  %13 = load i32, i32* @x.19
  %14 = load i32, i32* @y.20
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %21

; <label>:21:                                     ; preds = %37, %originalBBpart2
  %22 = bitcast %class.TriaIterator* %12 to %class.TriaRawIterator*
  %23 = call dereferenceable(32) %class.TriaRawIterator* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaRawIterator* %22)
  %24 = bitcast %class.TriaIterator* %12 to %class.TriaRawIterator*
  %25 = call i32 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEE5stateEv(%class.TriaRawIterator* %24)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %38

; <label>:27:                                     ; preds = %21
  %28 = bitcast %class.TriaIterator* %12 to %class.TriaRawIterator*
  %29 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %28, i32 0, i32 0
  %30 = bitcast %class.MGDoFCellAccessor* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 16
  %32 = bitcast i8* %31 to %class.TriaObjectAccessor*
  %33 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE4usedEv(%class.TriaObjectAccessor* %32)
  %34 = zext i1 %33 to i32
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %27
  store %class.TriaIterator* %12, %class.TriaIterator** %10, align 8
  br label %39

; <label>:37:                                     ; preds = %27
  br label %21

; <label>:38:                                     ; preds = %21
  store %class.TriaIterator* %12, %class.TriaIterator** %10, align 8
  br label %39

; <label>:39:                                     ; preds = %38, %36
  %40 = load %class.TriaIterator*, %class.TriaIterator** %10, align 8
  ret %class.TriaIterator* %40

originalBBalteredBB:                              ; preds = %originalBB, %1
  %41 = alloca %class.TriaIterator*, align 8
  %42 = alloca %class.TriaIterator*, align 8
  store %class.TriaIterator* %0, %class.TriaIterator** %42, align 8
  %43 = load %class.TriaIterator*, %class.TriaIterator** %42, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.12"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  %6 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %10, i32* %15, %"class.std::allocator.14"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  call void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.13"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = load i32, i32* @x.21
  %23 = load i32, i32* @y.22
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %3, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %4, align 4
  %33 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %34 = load i32, i32* @x.21
  %35 = load i32, i32* @y.22
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.13"* %33)
          to label %42 unwind label %48

; <label>:42:                                     ; preds = %originalBBpart2
  br label %43

; <label>:43:                                     ; preds = %42
  %44 = load i8*, i8** %3, align 8
  %45 = load i32, i32* %4, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #4 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #2
  call void @_ZSt9terminatev() #9
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools26make_flux_sparsity_patternILi3E15SparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.SparsityPattern* dereferenceable(72), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.SparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::vector.12", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.14", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %"class.std::vector.12", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::allocator.14", align 1
  %17 = alloca %class.TriaIterator, align 8
  %18 = alloca %class.TriaIterator, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %class.TriaIterator, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %25 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %25, i32 %26)
  store i32 %27, i32* %7, align 4
  %28 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %29 = bitcast %class.MGDoFHandler* %28 to %class.DoFHandler*
  %30 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %29)
  %31 = bitcast %class.FiniteElement* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 24
  %33 = bitcast i8* %32 to %class.FiniteElementData*
  %34 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %33, i32 0, i32 10
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %8, align 4
  %36 = load i32, i32* %8, align 4
  %37 = zext i32 %36 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %11) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %9, i64 %37, i32* dereferenceable(4) %10, %"class.std::allocator.14"* dereferenceable(1) %11)
          to label %38 unwind label %212

; <label>:38:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  %39 = load i32, i32* %8, align 4
  %40 = zext i32 %39 to i64
  store i32 0, i32* %15, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %16) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %14, i64 %40, i32* dereferenceable(4) %15, %"class.std::allocator.14"* dereferenceable(1) %16)
          to label %41 unwind label %232

; <label>:41:                                     ; preds = %38
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  %42 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %43 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %17, %class.MGDoFHandler* %42, i32 %43)
          to label %44 unwind label %236

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* @x.25
  %46 = load i32, i32* @y.26
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %44, %originalBBalteredBB
  %53 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %54 = load i32, i32* %6, align 4
  %55 = load i32, i32* @x.25
  %56 = load i32, i32* @y.26
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %18, %class.MGDoFHandler* %53, i32 %54)
          to label %63 unwind label %236

; <label>:63:                                     ; preds = %originalBBpart2
  br label %64

; <label>:64:                                     ; preds = %462, %63
  %65 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %66 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %67 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %65, %class.TriaRawIterator* dereferenceable(32) %66)
          to label %68 unwind label %236

; <label>:68:                                     ; preds = %64
  %69 = load i32, i32* @x.25
  %70 = load i32, i32* @y.26
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %68, %originalBB1alteredBB
  %77 = load i32, i32* @x.25
  %78 = load i32, i32* @y.26
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %67, label %85, label %463

; <label>:85:                                     ; preds = %originalBBpart24
  %86 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %87 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %86)
          to label %88 unwind label %236

; <label>:88:                                     ; preds = %85
  %89 = load i32, i32* @x.25
  %90 = load i32, i32* @y.26
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %88, %originalBB6alteredBB
  %97 = bitcast %class.MGDoFCellAccessor* %87 to %class.MGDoFObjectAccessor*
  %98 = load i32, i32* @x.25
  %99 = load i32, i32* @y.26
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %97, %"class.std::vector.12"* dereferenceable(24) %9)
          to label %106 unwind label %236

; <label>:106:                                    ; preds = %originalBBpart28
  store i32 0, i32* %19, align 4
  br label %107

; <label>:107:                                    ; preds = %originalBBpart240, %106
  %108 = load i32, i32* @x.25
  %109 = load i32, i32* @y.26
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %107, %originalBB10alteredBB
  %116 = load i32, i32* %19, align 4
  %117 = load i32, i32* %8, align 4
  %118 = icmp ult i32 %116, %117
  %119 = load i32, i32* @x.25
  %120 = load i32, i32* @y.26
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %118, label %127, label %276

; <label>:127:                                    ; preds = %originalBBpart212
  store i32 0, i32* %20, align 4
  br label %128

; <label>:128:                                    ; preds = %209, %127
  %129 = load i32, i32* %20, align 4
  %130 = load i32, i32* %8, align 4
  %131 = icmp ult i32 %129, %130
  br i1 %131, label %132, label %240

; <label>:132:                                    ; preds = %128
  %133 = load i32, i32* @x.25
  %134 = load i32, i32* @y.26
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %132, %originalBB14alteredBB
  %141 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %142 = load i32, i32* %19, align 4
  %143 = zext i32 %142 to i64
  %144 = load i32, i32* @x.25
  %145 = load i32, i32* @y.26
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %152 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %143)
          to label %153 unwind label %236

; <label>:153:                                    ; preds = %originalBBpart216
  %154 = load i32, i32* @x.25
  %155 = load i32, i32* @y.26
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %153, %originalBB18alteredBB
  %162 = load i32, i32* %152, align 4
  %163 = load i32, i32* %20, align 4
  %164 = zext i32 %163 to i64
  %165 = load i32, i32* @x.25
  %166 = load i32, i32* @y.26
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %173 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %164)
          to label %174 unwind label %236

; <label>:174:                                    ; preds = %originalBBpart220
  %175 = load i32, i32* @x.25
  %176 = load i32, i32* @y.26
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %174, %originalBB22alteredBB
  %183 = load i32, i32* %173, align 4
  %184 = load i32, i32* @x.25
  %185 = load i32, i32* @y.26
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %141, i32 %162, i32 %183)
          to label %192 unwind label %236

; <label>:192:                                    ; preds = %originalBBpart224
  %193 = load i32, i32* @x.25
  %194 = load i32, i32* @y.26
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %192, %originalBB26alteredBB
  %201 = load i32, i32* @x.25
  %202 = load i32, i32* @y.26
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %209

; <label>:209:                                    ; preds = %originalBBpart228
  %210 = load i32, i32* %20, align 4
  %211 = add i32 %210, 1
  store i32 %211, i32* %20, align 4
  br label %128

; <label>:212:                                    ; preds = %3
  %213 = load i32, i32* @x.25
  %214 = load i32, i32* @y.26
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %212, %originalBB30alteredBB
  %221 = landingpad { i8*, i32 }
          cleanup
  %222 = extractvalue { i8*, i32 } %221, 0
  store i8* %222, i8** %12, align 8
  %223 = extractvalue { i8*, i32 } %221, 1
  store i32 %223, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  %224 = load i32, i32* @x.25
  %225 = load i32, i32* @y.26
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %536

; <label>:232:                                    ; preds = %38
  %233 = landingpad { i8*, i32 }
          cleanup
  %234 = extractvalue { i8*, i32 } %233, 0
  store i8* %234, i8** %12, align 8
  %235 = extractvalue { i8*, i32 } %233, 1
  store i32 %235, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  br label %502

; <label>:236:                                    ; preds = %460, %396, %391, %386, %374, %371, %369, %366, %341, %338, %315, %originalBBpart248, %originalBBpart224, %originalBBpart220, %originalBBpart216, %originalBBpart28, %85, %64, %originalBBpart2, %41
  %237 = landingpad { i8*, i32 }
          cleanup
  %238 = extractvalue { i8*, i32 } %237, 0
  store i8* %238, i8** %12, align 8
  %239 = extractvalue { i8*, i32 } %237, 1
  store i32 %239, i32* %13, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
          to label %501 unwind label %541

; <label>:240:                                    ; preds = %128
  %241 = load i32, i32* @x.25
  %242 = load i32, i32* @y.26
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %240, %originalBB34alteredBB
  %249 = load i32, i32* @x.25
  %250 = load i32, i32* @y.26
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %257

; <label>:257:                                    ; preds = %originalBBpart236
  %258 = load i32, i32* @x.25
  %259 = load i32, i32* @y.26
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %257, %originalBB38alteredBB
  %266 = load i32, i32* %19, align 4
  %267 = add i32 %266, 1
  store i32 %267, i32* %19, align 4
  %268 = load i32, i32* @x.25
  %269 = load i32, i32* @y.26
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %107

; <label>:276:                                    ; preds = %originalBBpart212
  store i32 0, i32* %21, align 4
  br label %277

; <label>:277:                                    ; preds = %456, %276
  %278 = load i32, i32* @x.25
  %279 = load i32, i32* @y.26
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %277, %originalBB42alteredBB
  %286 = load i32, i32* %21, align 4
  %287 = icmp ult i32 %286, 6
  %288 = load i32, i32* @x.25
  %289 = load i32, i32* @y.26
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %287, label %296, label %459

; <label>:296:                                    ; preds = %originalBBpart244
  %297 = load i32, i32* @x.25
  %298 = load i32, i32* @y.26
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %296, %originalBB46alteredBB
  %305 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %306 = load i32, i32* @x.25
  %307 = load i32, i32* @y.26
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  %314 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %305)
          to label %315 unwind label %236

; <label>:315:                                    ; preds = %originalBBpart248
  %316 = bitcast %class.MGDoFCellAccessor* %314 to i8*
  %317 = getelementptr inbounds i8, i8* %316, i64 16
  %318 = bitcast i8* %317 to %class.CellAccessor*
  %319 = load i32, i32* %21, align 4
  %320 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %318, i32 %319)
          to label %321 unwind label %236

; <label>:321:                                    ; preds = %315
  %322 = load i32, i32* @x.25
  %323 = load i32, i32* @y.26
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %321, %originalBB50alteredBB
  %330 = load i32, i32* @x.25
  %331 = load i32, i32* @y.26
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %320, label %439, label %338

; <label>:338:                                    ; preds = %originalBBpart252
  %339 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %340 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %339)
          to label %341 unwind label %236

; <label>:341:                                    ; preds = %338
  %342 = bitcast %class.MGDoFCellAccessor* %340 to i8*
  %343 = getelementptr inbounds i8, i8* %342, i64 16
  %344 = bitcast i8* %343 to %class.CellAccessor*
  %345 = load i32, i32* %21, align 4
  %346 = invoke i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor* %344, i32 %345)
          to label %347 unwind label %236

; <label>:347:                                    ; preds = %341
  %348 = load i32, i32* @x.25
  %349 = load i32, i32* @y.26
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %347, %originalBB54alteredBB
  %356 = load i32, i32* %6, align 4
  %357 = icmp eq i32 %346, %356
  %358 = load i32, i32* @x.25
  %359 = load i32, i32* @y.26
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %357, label %366, label %439

; <label>:366:                                    ; preds = %originalBBpart256
  %367 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %368 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %367)
          to label %369 unwind label %236

; <label>:369:                                    ; preds = %366
  %370 = load i32, i32* %21, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %22, %class.MGDoFCellAccessor* %368, i32 %370)
          to label %371 unwind label %236

; <label>:371:                                    ; preds = %369
  %372 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %373 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %372)
          to label %374 unwind label %236

; <label>:374:                                    ; preds = %371
  %375 = bitcast %class.MGDoFCellAccessor* %373 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %375, %"class.std::vector.12"* dereferenceable(24) %14)
          to label %376 unwind label %236

; <label>:376:                                    ; preds = %374
  store i32 0, i32* %23, align 4
  br label %377

; <label>:377:                                    ; preds = %originalBBpart265, %376
  %378 = load i32, i32* %23, align 4
  %379 = load i32, i32* %8, align 4
  %380 = icmp ult i32 %378, %379
  br i1 %380, label %381, label %438

; <label>:381:                                    ; preds = %377
  store i32 0, i32* %24, align 4
  br label %382

; <label>:382:                                    ; preds = %399, %381
  %383 = load i32, i32* %24, align 4
  %384 = load i32, i32* %8, align 4
  %385 = icmp ult i32 %383, %384
  br i1 %385, label %386, label %402

; <label>:386:                                    ; preds = %382
  %387 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %388 = load i32, i32* %23, align 4
  %389 = zext i32 %388 to i64
  %390 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %389)
          to label %391 unwind label %236

; <label>:391:                                    ; preds = %386
  %392 = load i32, i32* %390, align 4
  %393 = load i32, i32* %24, align 4
  %394 = zext i32 %393 to i64
  %395 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %394)
          to label %396 unwind label %236

; <label>:396:                                    ; preds = %391
  %397 = load i32, i32* %395, align 4
  invoke void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %387, i32 %392, i32 %397)
          to label %398 unwind label %236

; <label>:398:                                    ; preds = %396
  br label %399

; <label>:399:                                    ; preds = %398
  %400 = load i32, i32* %24, align 4
  %401 = add i32 %400, 1
  store i32 %401, i32* %24, align 4
  br label %382

; <label>:402:                                    ; preds = %382
  %403 = load i32, i32* @x.25
  %404 = load i32, i32* @y.26
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %402, %originalBB58alteredBB
  %411 = load i32, i32* @x.25
  %412 = load i32, i32* @y.26
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %419

; <label>:419:                                    ; preds = %originalBBpart260
  %420 = load i32, i32* @x.25
  %421 = load i32, i32* @y.26
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %419, %originalBB62alteredBB
  %428 = load i32, i32* %23, align 4
  %429 = add i32 %428, 1
  store i32 %429, i32* %23, align 4
  %430 = load i32, i32* @x.25
  %431 = load i32, i32* @y.26
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBBpart265, label %originalBB62alteredBB

originalBBpart265:                                ; preds = %originalBB62
  br label %377

; <label>:438:                                    ; preds = %377
  br label %439

; <label>:439:                                    ; preds = %438, %originalBBpart256, %originalBBpart252
  %440 = load i32, i32* @x.25
  %441 = load i32, i32* @y.26
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %439, %originalBB67alteredBB
  %448 = load i32, i32* @x.25
  %449 = load i32, i32* @y.26
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %456

; <label>:456:                                    ; preds = %originalBBpart269
  %457 = load i32, i32* %21, align 4
  %458 = add i32 %457, 1
  store i32 %458, i32* %21, align 4
  br label %277

; <label>:459:                                    ; preds = %originalBBpart244
  br label %460

; <label>:460:                                    ; preds = %459
  %461 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %17)
          to label %462 unwind label %236

; <label>:462:                                    ; preds = %460
  br label %64

; <label>:463:                                    ; preds = %originalBBpart24
  %464 = load i32, i32* @x.25
  %465 = load i32, i32* @y.26
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %463, %originalBB71alteredBB
  %472 = load i32, i32* @x.25
  %473 = load i32, i32* @y.26
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
          to label %480 unwind label %497

; <label>:480:                                    ; preds = %originalBBpart273
  %481 = load i32, i32* @x.25
  %482 = load i32, i32* @y.26
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %480, %originalBB75alteredBB
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
  %489 = load i32, i32* @x.25
  %490 = load i32, i32* @y.26
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  ret void

; <label>:497:                                    ; preds = %originalBBpart273
  %498 = landingpad { i8*, i32 }
          cleanup
  %499 = extractvalue { i8*, i32 } %498, 0
  store i8* %499, i8** %12, align 8
  %500 = extractvalue { i8*, i32 } %498, 1
  store i32 %500, i32* %13, align 4
  br label %502

; <label>:501:                                    ; preds = %236
  br label %502

; <label>:502:                                    ; preds = %501, %497, %232
  %503 = load i32, i32* @x.25
  %504 = load i32, i32* @y.26
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %502, %originalBB79alteredBB
  %511 = load i32, i32* @x.25
  %512 = load i32, i32* @y.26
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
          to label %519 unwind label %541

; <label>:519:                                    ; preds = %originalBBpart281
  %520 = load i32, i32* @x.25
  %521 = load i32, i32* @y.26
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %519, %originalBB83alteredBB
  %528 = load i32, i32* @x.25
  %529 = load i32, i32* @y.26
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br label %536

; <label>:536:                                    ; preds = %originalBBpart285, %originalBBpart232
  %537 = load i8*, i8** %12, align 8
  %538 = load i32, i32* %13, align 4
  %539 = insertvalue { i8*, i32 } undef, i8* %537, 0
  %540 = insertvalue { i8*, i32 } %539, i32 %538, 1
  resume { i8*, i32 } %540

; <label>:541:                                    ; preds = %originalBBpart281, %236
  %542 = landingpad { i8*, i32 }
          catch i8* null
  %543 = extractvalue { i8*, i32 } %542, 0
  call void @__clang_call_terminate(i8* %543) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %44
  %544 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %545 = load i32, i32* %6, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  %546 = bitcast %class.MGDoFCellAccessor* %87 to %class.MGDoFObjectAccessor*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %107
  %547 = load i32, i32* %19, align 4
  %548 = load i32, i32* %8, align 4
  %549 = icmp ult i32 %547, %548
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  %550 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %551 = load i32, i32* %19, align 4
  %552 = zext i32 %551 to i64
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %153
  %553 = load i32, i32* %152, align 4
  %554 = load i32, i32* %20, align 4
  %555 = zext i32 %554 to i64
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %174
  %556 = load i32, i32* %173, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %192
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %212
  %557 = landingpad { i8*, i32 }
          cleanup
  %558 = extractvalue { i8*, i32 } %557, 0
  store i8* %558, i8** %12, align 8
  %559 = extractvalue { i8*, i32 } %557, 1
  store i32 %559, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %240
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %257
  %560 = load i32, i32* %19, align 4
  %_ = sub i32 0, %560
  %gen = add i32 %_, 1
  %561 = add i32 %560, 1
  store i32 %561, i32* %19, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %277
  %562 = load i32, i32* %21, align 4
  %563 = icmp ult i32 %562, 6
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %296
  %564 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %321
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %347
  %565 = load i32, i32* %6, align 4
  %566 = icmp eq i32 %346, %565
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %402
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %419
  %567 = load i32, i32* %23, align 4
  %_63 = shl i32 %567, 1
  %568 = add i32 %567, 1
  store i32 %568, i32* %23, align 4
  br label %originalBB62

originalBB67alteredBB:                            ; preds = %originalBB67, %439
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %463
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %480
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %502
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %519
  br label %originalBB83
}

declare zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor*, i32) #1

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor*, i32) #0 comdat align 2 {
  %3 = alloca %class.CellAccessor*, align 8
  %4 = alloca i32, align 4
  store %class.CellAccessor* %0, %class.CellAccessor** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.CellAccessor*, %class.CellAccessor** %3, align 8
  %6 = bitcast %class.CellAccessor* %5 to %class.TriaAccessor*
  %7 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %6, i32 0, i32 2
  %8 = load %class.Triangulation*, %class.Triangulation** %7, align 8
  %9 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %8, i32 0, i32 1
  %10 = bitcast %class.CellAccessor* %5 to %class.TriaAccessor*
  %11 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %9, i64 %13)
  %15 = load %class.TriangulationLevel*, %class.TriangulationLevel** %14, align 8
  %16 = bitcast %class.TriangulationLevel* %15 to %class.TriangulationLevel.2*
  %17 = getelementptr inbounds %class.TriangulationLevel.2, %class.TriangulationLevel.2* %16, i32 0, i32 2
  %18 = bitcast %class.CellAccessor* %5 to %class.TriaAccessor*
  %19 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = mul i32 %20, 6
  %22 = load i32, i32* %4, align 4
  %23 = add i32 %21, %22
  %24 = zext i32 %23 to i64
  %25 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt6vectorISt4pairIiiESaIS1_EEixEm(%"class.std::vector.7"* %17, i64 %24)
  %26 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  ret i32 %27
}

declare void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret, %class.MGDoFCellAccessor*, i32) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools31make_flux_sparsity_pattern_edgeILi3E15SparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.SparsityPattern* dereferenceable(72), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.SparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.12", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::allocator.14", align 1
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca %"class.std::vector.12", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::allocator.14", align 1
  %18 = alloca %class.TriaIterator, align 8
  %19 = alloca %class.TriaIterator, align 8
  %20 = alloca i32, align 4
  %21 = alloca %class.TriaIterator, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %24 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %25 = load i32, i32* %6, align 4
  %26 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %24, i32 %25)
  store i32 %26, i32* %7, align 4
  %27 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %28 = load i32, i32* %6, align 4
  %29 = sub i32 %28, 1
  %30 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %27, i32 %29)
  store i32 %30, i32* %8, align 4
  %31 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %32 = bitcast %class.MGDoFHandler* %31 to %class.DoFHandler*
  %33 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %32)
  %34 = bitcast %class.FiniteElement* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 24
  %36 = bitcast i8* %35 to %class.FiniteElementData*
  %37 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %36, i32 0, i32 10
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %9, align 4
  %39 = load i32, i32* %9, align 4
  %40 = zext i32 %39 to i64
  store i32 0, i32* %11, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %12) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %10, i64 %40, i32* dereferenceable(4) %11, %"class.std::allocator.14"* dereferenceable(1) %12)
          to label %41 unwind label %311

; <label>:41:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  %42 = load i32, i32* %9, align 4
  %43 = zext i32 %42 to i64
  store i32 0, i32* %16, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %17) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %15, i64 %43, i32* dereferenceable(4) %16, %"class.std::allocator.14"* dereferenceable(1) %17)
          to label %44 unwind label %315

; <label>:44:                                     ; preds = %41
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  %45 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %46 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %18, %class.MGDoFHandler* %45, i32 %46)
          to label %47 unwind label %319

; <label>:47:                                     ; preds = %44
  %48 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %49 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %19, %class.MGDoFHandler* %48, i32 %49)
          to label %50 unwind label %319

; <label>:50:                                     ; preds = %47
  br label %51

; <label>:51:                                     ; preds = %originalBBpart272, %50
  %52 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %53 = bitcast %class.TriaIterator* %19 to %class.TriaRawIterator*
  %54 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %52, %class.TriaRawIterator* dereferenceable(32) %53)
          to label %55 unwind label %319

; <label>:55:                                     ; preds = %51
  br i1 %54, label %56, label %400

; <label>:56:                                     ; preds = %55
  %57 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %58 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %57)
          to label %59 unwind label %319

; <label>:59:                                     ; preds = %56
  %60 = load i32, i32* @x.29
  %61 = load i32, i32* @y.30
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %59, %originalBBalteredBB
  %68 = bitcast %class.MGDoFCellAccessor* %58 to %class.MGDoFObjectAccessor*
  %69 = load i32, i32* @x.29
  %70 = load i32, i32* @y.30
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %68, %"class.std::vector.12"* dereferenceable(24) %10)
          to label %77 unwind label %319

; <label>:77:                                     ; preds = %originalBBpart2
  store i32 0, i32* %20, align 4
  br label %78

; <label>:78:                                     ; preds = %361, %77
  %79 = load i32, i32* %20, align 4
  %80 = icmp ult i32 %79, 6
  br i1 %80, label %81, label %364

; <label>:81:                                     ; preds = %78
  %82 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %83 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %82)
          to label %84 unwind label %319

; <label>:84:                                     ; preds = %81
  %85 = bitcast %class.MGDoFCellAccessor* %83 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8* %86 to %class.CellAccessor*
  %88 = load i32, i32* %20, align 4
  %89 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %87, i32 %88)
          to label %90 unwind label %319

; <label>:90:                                     ; preds = %84
  %91 = load i32, i32* @x.29
  %92 = load i32, i32* @y.30
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %90, %originalBB1alteredBB
  %99 = load i32, i32* @x.29
  %100 = load i32, i32* @y.30
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %89, label %360, label %107

; <label>:107:                                    ; preds = %originalBBpart24
  %108 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %109 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %108)
          to label %110 unwind label %319

; <label>:110:                                    ; preds = %107
  %111 = load i32, i32* @x.29
  %112 = load i32, i32* @y.30
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %110, %originalBB6alteredBB
  %119 = bitcast %class.MGDoFCellAccessor* %109 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 16
  %121 = bitcast i8* %120 to %class.CellAccessor*
  %122 = load i32, i32* %20, align 4
  %123 = load i32, i32* @x.29
  %124 = load i32, i32* @y.30
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %131 = invoke i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor* %121, i32 %122)
          to label %132 unwind label %319

; <label>:132:                                    ; preds = %originalBBpart28
  %133 = load i32, i32* %6, align 4
  %134 = icmp ne i32 %131, %133
  br i1 %134, label %135, label %360

; <label>:135:                                    ; preds = %132
  %136 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %137 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %136)
          to label %138 unwind label %319

; <label>:138:                                    ; preds = %135
  %139 = load i32, i32* @x.29
  %140 = load i32, i32* @y.30
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %138, %originalBB10alteredBB
  %147 = load i32, i32* %20, align 4
  %148 = load i32, i32* @x.29
  %149 = load i32, i32* @y.30
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %21, %class.MGDoFCellAccessor* %137, i32 %147)
          to label %156 unwind label %319

; <label>:156:                                    ; preds = %originalBBpart212
  %157 = bitcast %class.TriaIterator* %21 to %class.TriaRawIterator*
  %158 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %157)
          to label %159 unwind label %319

; <label>:159:                                    ; preds = %156
  %160 = load i32, i32* @x.29
  %161 = load i32, i32* @y.30
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %159, %originalBB14alteredBB
  %168 = bitcast %class.MGDoFCellAccessor* %158 to %class.MGDoFObjectAccessor*
  %169 = load i32, i32* @x.29
  %170 = load i32, i32* @y.30
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %168, %"class.std::vector.12"* dereferenceable(24) %15)
          to label %177 unwind label %319

; <label>:177:                                    ; preds = %originalBBpart216
  %178 = load i32, i32* @x.29
  %179 = load i32, i32* @y.30
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %177, %originalBB18alteredBB
  store i32 0, i32* %22, align 4
  %186 = load i32, i32* @x.29
  %187 = load i32, i32* @y.30
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %194

; <label>:194:                                    ; preds = %originalBBpart264, %originalBBpart220
  %195 = load i32, i32* %22, align 4
  %196 = load i32, i32* %9, align 4
  %197 = icmp ult i32 %195, %196
  br i1 %197, label %198, label %359

; <label>:198:                                    ; preds = %194
  store i32 0, i32* %23, align 4
  br label %199

; <label>:199:                                    ; preds = %originalBBpart248, %198
  %200 = load i32, i32* %23, align 4
  %201 = load i32, i32* %9, align 4
  %202 = icmp ult i32 %200, %201
  br i1 %202, label %203, label %323

; <label>:203:                                    ; preds = %199
  %204 = load i32, i32* @x.29
  %205 = load i32, i32* @y.30
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %203, %originalBB22alteredBB
  %212 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %213 = load i32, i32* %22, align 4
  %214 = zext i32 %213 to i64
  %215 = load i32, i32* @x.29
  %216 = load i32, i32* @y.30
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %223 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %15, i64 %214)
          to label %224 unwind label %319

; <label>:224:                                    ; preds = %originalBBpart224
  %225 = load i32, i32* %223, align 4
  %226 = load i32, i32* %23, align 4
  %227 = zext i32 %226 to i64
  %228 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %227)
          to label %229 unwind label %319

; <label>:229:                                    ; preds = %224
  %230 = load i32, i32* @x.29
  %231 = load i32, i32* @y.30
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %229, %originalBB26alteredBB
  %238 = load i32, i32* %228, align 4
  %239 = load i32, i32* @x.29
  %240 = load i32, i32* @y.30
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  invoke void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %212, i32 %225, i32 %238)
          to label %247 unwind label %319

; <label>:247:                                    ; preds = %originalBBpart228
  %248 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %249 = load i32, i32* %23, align 4
  %250 = zext i32 %249 to i64
  %251 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %15, i64 %250)
          to label %252 unwind label %319

; <label>:252:                                    ; preds = %247
  %253 = load i32, i32* %251, align 4
  %254 = load i32, i32* %22, align 4
  %255 = zext i32 %254 to i64
  %256 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %255)
          to label %257 unwind label %319

; <label>:257:                                    ; preds = %252
  %258 = load i32, i32* @x.29
  %259 = load i32, i32* @y.30
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %257, %originalBB30alteredBB
  %266 = load i32, i32* %256, align 4
  %267 = load i32, i32* @x.29
  %268 = load i32, i32* @y.30
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %248, i32 %253, i32 %266)
          to label %275 unwind label %319

; <label>:275:                                    ; preds = %originalBBpart232
  %276 = load i32, i32* @x.29
  %277 = load i32, i32* @y.30
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %275, %originalBB34alteredBB
  %284 = load i32, i32* @x.29
  %285 = load i32, i32* @y.30
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %292

; <label>:292:                                    ; preds = %originalBBpart236
  %293 = load i32, i32* @x.29
  %294 = load i32, i32* @y.30
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %292, %originalBB38alteredBB
  %301 = load i32, i32* %23, align 4
  %302 = add i32 %301, 1
  store i32 %302, i32* %23, align 4
  %303 = load i32, i32* @x.29
  %304 = load i32, i32* @y.30
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart248, label %originalBB38alteredBB

originalBBpart248:                                ; preds = %originalBB38
  br label %199

; <label>:311:                                    ; preds = %3
  %312 = landingpad { i8*, i32 }
          cleanup
  %313 = extractvalue { i8*, i32 } %312, 0
  store i8* %313, i8** %13, align 8
  %314 = extractvalue { i8*, i32 } %312, 1
  store i32 %314, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  br label %425

; <label>:315:                                    ; preds = %41
  %316 = landingpad { i8*, i32 }
          cleanup
  %317 = extractvalue { i8*, i32 } %316, 0
  store i8* %317, i8** %13, align 8
  %318 = extractvalue { i8*, i32 } %316, 1
  store i32 %318, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  br label %423

; <label>:319:                                    ; preds = %381, %originalBBpart232, %252, %247, %originalBBpart228, %224, %originalBBpart224, %originalBBpart216, %156, %originalBBpart212, %135, %originalBBpart28, %107, %84, %81, %originalBBpart2, %56, %51, %47, %44
  %320 = landingpad { i8*, i32 }
          cleanup
  %321 = extractvalue { i8*, i32 } %320, 0
  store i8* %321, i8** %13, align 8
  %322 = extractvalue { i8*, i32 } %320, 1
  store i32 %322, i32* %14, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %15)
          to label %422 unwind label %430

; <label>:323:                                    ; preds = %199
  %324 = load i32, i32* @x.29
  %325 = load i32, i32* @y.30
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %323, %originalBB50alteredBB
  %332 = load i32, i32* @x.29
  %333 = load i32, i32* @y.30
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %340

; <label>:340:                                    ; preds = %originalBBpart252
  %341 = load i32, i32* @x.29
  %342 = load i32, i32* @y.30
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %340, %originalBB54alteredBB
  %349 = load i32, i32* %22, align 4
  %350 = add i32 %349, 1
  store i32 %350, i32* %22, align 4
  %351 = load i32, i32* @x.29
  %352 = load i32, i32* @y.30
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart264, label %originalBB54alteredBB

originalBBpart264:                                ; preds = %originalBB54
  br label %194

; <label>:359:                                    ; preds = %194
  br label %360

; <label>:360:                                    ; preds = %359, %132, %originalBBpart24
  br label %361

; <label>:361:                                    ; preds = %360
  %362 = load i32, i32* %20, align 4
  %363 = add i32 %362, 1
  store i32 %363, i32* %20, align 4
  br label %78

; <label>:364:                                    ; preds = %78
  %365 = load i32, i32* @x.29
  %366 = load i32, i32* @y.30
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %364, %originalBB66alteredBB
  %373 = load i32, i32* @x.29
  %374 = load i32, i32* @y.30
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %381

; <label>:381:                                    ; preds = %originalBBpart268
  %382 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %18)
          to label %383 unwind label %319

; <label>:383:                                    ; preds = %381
  %384 = load i32, i32* @x.29
  %385 = load i32, i32* @y.30
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %383, %originalBB70alteredBB
  %392 = load i32, i32* @x.29
  %393 = load i32, i32* @y.30
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %51

; <label>:400:                                    ; preds = %55
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %15)
          to label %401 unwind label %418

; <label>:401:                                    ; preds = %400
  %402 = load i32, i32* @x.29
  %403 = load i32, i32* @y.30
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %401, %originalBB74alteredBB
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
  %410 = load i32, i32* @x.29
  %411 = load i32, i32* @y.30
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  ret void

; <label>:418:                                    ; preds = %400
  %419 = landingpad { i8*, i32 }
          cleanup
  %420 = extractvalue { i8*, i32 } %419, 0
  store i8* %420, i8** %13, align 8
  %421 = extractvalue { i8*, i32 } %419, 1
  store i32 %421, i32* %14, align 4
  br label %423

; <label>:422:                                    ; preds = %319
  br label %423

; <label>:423:                                    ; preds = %422, %418, %315
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
          to label %424 unwind label %430

; <label>:424:                                    ; preds = %423
  br label %425

; <label>:425:                                    ; preds = %424, %311
  %426 = load i8*, i8** %13, align 8
  %427 = load i32, i32* %14, align 4
  %428 = insertvalue { i8*, i32 } undef, i8* %426, 0
  %429 = insertvalue { i8*, i32 } %428, i32 %427, 1
  resume { i8*, i32 } %429

; <label>:430:                                    ; preds = %423, %319
  %431 = landingpad { i8*, i32 }
          catch i8* null
  %432 = extractvalue { i8*, i32 } %431, 0
  call void @__clang_call_terminate(i8* %432) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %59
  %433 = bitcast %class.MGDoFCellAccessor* %58 to %class.MGDoFObjectAccessor*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %90
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %110
  %434 = bitcast %class.MGDoFCellAccessor* %109 to i8*
  %435 = getelementptr inbounds i8, i8* %434, i64 16
  %436 = bitcast i8* %435 to %class.CellAccessor*
  %437 = load i32, i32* %20, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %138
  %438 = load i32, i32* %20, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %159
  %439 = bitcast %class.MGDoFCellAccessor* %158 to %class.MGDoFObjectAccessor*
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %177
  store i32 0, i32* %22, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %203
  %440 = load %class.SparsityPattern*, %class.SparsityPattern** %5, align 8
  %441 = load i32, i32* %22, align 4
  %442 = zext i32 %441 to i64
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %229
  %443 = load i32, i32* %228, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %257
  %444 = load i32, i32* %256, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %275
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %292
  %445 = load i32, i32* %23, align 4
  %_ = shl i32 %445, 1
  %_39 = sub i32 0, %445
  %gen = add i32 %_39, 1
  %_40 = sub i32 %445, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 %445, 1
  %gen43 = mul i32 %_42, 1
  %_44 = sub i32 0, %445
  %gen45 = add i32 %_44, 1
  %_46 = shl i32 %445, 1
  %446 = add i32 %445, 1
  store i32 %446, i32* %23, align 4
  br label %originalBB38

originalBB50alteredBB:                            ; preds = %originalBB50, %323
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %340
  %447 = load i32, i32* %22, align 4
  %_55 = sub i32 %447, 1
  %gen56 = mul i32 %_55, 1
  %_57 = sub i32 0, %447
  %gen58 = add i32 %_57, 1
  %_59 = sub i32 0, %447
  %gen60 = add i32 %_59, 1
  %_61 = sub i32 %447, 1
  %gen62 = mul i32 %_61, 1
  %448 = add i32 %447, 1
  store i32 %448, i32* %22, align 4
  br label %originalBB54

originalBB66alteredBB:                            ; preds = %originalBB66, %364
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %383
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %401
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
  br label %originalBB74
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools21make_sparsity_patternILi3E25CompressedSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.CompressedSparsityPattern* dereferenceable(56), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.31
  %5 = load i32, i32* @y.32
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.MGDoFHandler*, align 8
  %13 = alloca %class.CompressedSparsityPattern*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::vector.12", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::allocator.14", align 1
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca %class.TriaIterator, align 8
  %23 = alloca %class.TriaIterator, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %12, align 8
  store %class.CompressedSparsityPattern* %1, %class.CompressedSparsityPattern** %13, align 8
  store i32 %2, i32* %14, align 4
  %26 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %27 = load i32, i32* %14, align 4
  %28 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %26, i32 %27)
  store i32 %28, i32* %15, align 4
  %29 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %30 = bitcast %class.MGDoFHandler* %29 to %class.DoFHandler*
  %31 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %30)
  %32 = bitcast %class.FiniteElement* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 24
  %34 = bitcast i8* %33 to %class.FiniteElementData*
  %35 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %34, i32 0, i32 10
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %16, align 4
  %37 = load i32, i32* %16, align 4
  %38 = zext i32 %37 to i64
  store i32 0, i32* %18, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %19) #2
  %39 = load i32, i32* @x.31
  %40 = load i32, i32* @y.32
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %17, i64 %38, i32* dereferenceable(4) %18, %"class.std::allocator.14"* dereferenceable(1) %19)
          to label %47 unwind label %186

; <label>:47:                                     ; preds = %originalBBpart2
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %19) #2
  %48 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %49 = load i32, i32* %14, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %22, %class.MGDoFHandler* %48, i32 %49)
          to label %50 unwind label %206

; <label>:50:                                     ; preds = %47
  %51 = load i32, i32* @x.31
  %52 = load i32, i32* @y.32
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %59 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %60 = load i32, i32* %14, align 4
  %61 = load i32, i32* @x.31
  %62 = load i32, i32* @y.32
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %23, %class.MGDoFHandler* %59, i32 %60)
          to label %69 unwind label %206

; <label>:69:                                     ; preds = %originalBBpart24
  br label %70

; <label>:70:                                     ; preds = %249, %69
  %71 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %72 = bitcast %class.TriaIterator* %23 to %class.TriaRawIterator*
  %73 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %71, %class.TriaRawIterator* dereferenceable(32) %72)
          to label %74 unwind label %206

; <label>:74:                                     ; preds = %70
  %75 = load i32, i32* @x.31
  %76 = load i32, i32* @y.32
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %74, %originalBB6alteredBB
  %83 = load i32, i32* @x.31
  %84 = load i32, i32* @y.32
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %91, label %250

; <label>:91:                                     ; preds = %originalBBpart28
  %92 = load i32, i32* @x.31
  %93 = load i32, i32* @y.32
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %101 = load i32, i32* @x.31
  %102 = load i32, i32* @y.32
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %109 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %100)
          to label %110 unwind label %206

; <label>:110:                                    ; preds = %originalBBpart212
  %111 = bitcast %class.MGDoFCellAccessor* %109 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %111, %"class.std::vector.12"* dereferenceable(24) %17)
          to label %112 unwind label %206

; <label>:112:                                    ; preds = %110
  %113 = load i32, i32* @x.31
  %114 = load i32, i32* @y.32
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %112, %originalBB14alteredBB
  store i32 0, i32* %24, align 4
  %121 = load i32, i32* @x.31
  %122 = load i32, i32* @y.32
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %129

; <label>:129:                                    ; preds = %211, %originalBBpart216
  %130 = load i32, i32* @x.31
  %131 = load i32, i32* @y.32
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %129, %originalBB18alteredBB
  %138 = load i32, i32* %24, align 4
  %139 = load i32, i32* %16, align 4
  %140 = icmp ult i32 %138, %139
  %141 = load i32, i32* @x.31
  %142 = load i32, i32* @y.32
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %140, label %149, label %214

; <label>:149:                                    ; preds = %originalBBpart220
  store i32 0, i32* %25, align 4
  br label %150

; <label>:150:                                    ; preds = %183, %149
  %151 = load i32, i32* %25, align 4
  %152 = load i32, i32* %16, align 4
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %154, label %210

; <label>:154:                                    ; preds = %150
  %155 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %13, align 8
  %156 = load i32, i32* %24, align 4
  %157 = zext i32 %156 to i64
  %158 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %17, i64 %157)
          to label %159 unwind label %206

; <label>:159:                                    ; preds = %154
  %160 = load i32, i32* %158, align 4
  %161 = load i32, i32* %25, align 4
  %162 = zext i32 %161 to i64
  %163 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %17, i64 %162)
          to label %164 unwind label %206

; <label>:164:                                    ; preds = %159
  %165 = load i32, i32* @x.31
  %166 = load i32, i32* @y.32
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %164, %originalBB22alteredBB
  %173 = load i32, i32* %163, align 4
  %174 = load i32, i32* @x.31
  %175 = load i32, i32* @y.32
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %155, i32 %160, i32 %173)
          to label %182 unwind label %206

; <label>:182:                                    ; preds = %originalBBpart224
  br label %183

; <label>:183:                                    ; preds = %182
  %184 = load i32, i32* %25, align 4
  %185 = add i32 %184, 1
  store i32 %185, i32* %25, align 4
  br label %150

; <label>:186:                                    ; preds = %originalBBpart2
  %187 = load i32, i32* @x.31
  %188 = load i32, i32* @y.32
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %186, %originalBB26alteredBB
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %20, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %21, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %19) #2
  %198 = load i32, i32* @x.31
  %199 = load i32, i32* @y.32
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %252

; <label>:206:                                    ; preds = %originalBBpart236, %originalBBpart224, %159, %154, %110, %originalBBpart212, %70, %originalBBpart24, %47
  %207 = landingpad { i8*, i32 }
          cleanup
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %20, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %21, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
          to label %251 unwind label %273

; <label>:210:                                    ; preds = %150
  br label %211

; <label>:211:                                    ; preds = %210
  %212 = load i32, i32* %24, align 4
  %213 = add i32 %212, 1
  store i32 %213, i32* %24, align 4
  br label %129

; <label>:214:                                    ; preds = %originalBBpart220
  %215 = load i32, i32* @x.31
  %216 = load i32, i32* @y.32
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %214, %originalBB30alteredBB
  %223 = load i32, i32* @x.31
  %224 = load i32, i32* @y.32
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %231

; <label>:231:                                    ; preds = %originalBBpart232
  %232 = load i32, i32* @x.31
  %233 = load i32, i32* @y.32
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %231, %originalBB34alteredBB
  %240 = load i32, i32* @x.31
  %241 = load i32, i32* @y.32
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  %248 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %22)
          to label %249 unwind label %206

; <label>:249:                                    ; preds = %originalBBpart236
  br label %70

; <label>:250:                                    ; preds = %originalBBpart28
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
  ret void

; <label>:251:                                    ; preds = %206
  br label %252

; <label>:252:                                    ; preds = %251, %originalBBpart228
  %253 = load i32, i32* @x.31
  %254 = load i32, i32* @y.32
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %252, %originalBB38alteredBB
  %261 = load i8*, i8** %20, align 8
  %262 = load i32, i32* %21, align 4
  %263 = insertvalue { i8*, i32 } undef, i8* %261, 0
  %264 = insertvalue { i8*, i32 } %263, i32 %262, 1
  %265 = load i32, i32* @x.31
  %266 = load i32, i32* @y.32
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  resume { i8*, i32 } %264

; <label>:273:                                    ; preds = %206
  %274 = load i32, i32* @x.31
  %275 = load i32, i32* @y.32
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %273, %originalBB42alteredBB
  %282 = landingpad { i8*, i32 }
          catch i8* null
  %283 = extractvalue { i8*, i32 } %282, 0
  call void @__clang_call_terminate(i8* %283) #9
  %284 = load i32, i32* @x.31
  %285 = load i32, i32* @y.32
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %292 = alloca %class.MGDoFHandler*, align 8
  %293 = alloca %class.CompressedSparsityPattern*, align 8
  %294 = alloca i32, align 4
  %295 = alloca i32, align 4
  %296 = alloca i32, align 4
  %297 = alloca %"class.std::vector.12", align 8
  %298 = alloca i32, align 4
  %299 = alloca %"class.std::allocator.14", align 1
  %300 = alloca i8*
  %301 = alloca i32
  %302 = alloca %class.TriaIterator, align 8
  %303 = alloca %class.TriaIterator, align 8
  %304 = alloca i32, align 4
  %305 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %292, align 8
  store %class.CompressedSparsityPattern* %1, %class.CompressedSparsityPattern** %293, align 8
  store i32 %2, i32* %294, align 4
  %306 = load %class.MGDoFHandler*, %class.MGDoFHandler** %292, align 8
  %307 = load i32, i32* %294, align 4
  %308 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %306, i32 %307)
  store i32 %308, i32* %295, align 4
  %309 = load %class.MGDoFHandler*, %class.MGDoFHandler** %292, align 8
  %310 = bitcast %class.MGDoFHandler* %309 to %class.DoFHandler*
  %311 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %310)
  %312 = bitcast %class.FiniteElement* %311 to i8*
  %313 = getelementptr inbounds i8, i8* %312, i64 24
  %314 = bitcast i8* %313 to %class.FiniteElementData*
  %315 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %314, i32 0, i32 10
  %316 = load i32, i32* %315, align 8
  store i32 %316, i32* %296, align 4
  %317 = load i32, i32* %296, align 4
  %318 = zext i32 %317 to i64
  store i32 0, i32* %298, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %299) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  %319 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %320 = load i32, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %321 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %112
  store i32 0, i32* %24, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %129
  %322 = load i32, i32* %24, align 4
  %323 = load i32, i32* %16, align 4
  %324 = icmp ult i32 %322, %323
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %164
  %325 = load i32, i32* %163, align 4
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %186
  %326 = landingpad { i8*, i32 }
          cleanup
  %327 = extractvalue { i8*, i32 } %326, 0
  store i8* %327, i8** %20, align 8
  %328 = extractvalue { i8*, i32 } %326, 1
  store i32 %328, i32* %21, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %19) #2
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %214
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %231
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %252
  %329 = load i8*, i8** %20, align 8
  %330 = load i32, i32* %21, align 4
  %331 = insertvalue { i8*, i32 } undef, i8* %329, 0
  %332 = insertvalue { i8*, i32 } %331, i32 %330, 1
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %273
  %333 = landingpad { i8*, i32 }
          catch i8* null
  %334 = extractvalue { i8*, i32 } %333, 0
  call void @__clang_call_terminate(i8* %334) #9
  br label %originalBB42
}

declare void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern*, i32, i32) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools26make_flux_sparsity_patternILi3E25CompressedSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.CompressedSparsityPattern* dereferenceable(56), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.CompressedSparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::vector.12", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.14", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %"class.std::vector.12", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::allocator.14", align 1
  %17 = alloca %class.TriaIterator, align 8
  %18 = alloca %class.TriaIterator, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %class.TriaIterator, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.CompressedSparsityPattern* %1, %class.CompressedSparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %25 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %25, i32 %26)
  store i32 %27, i32* %7, align 4
  %28 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %29 = bitcast %class.MGDoFHandler* %28 to %class.DoFHandler*
  %30 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %29)
  %31 = bitcast %class.FiniteElement* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 24
  %33 = bitcast i8* %32 to %class.FiniteElementData*
  %34 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %33, i32 0, i32 10
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %8, align 4
  %36 = load i32, i32* %8, align 4
  %37 = zext i32 %36 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %11) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %9, i64 %37, i32* dereferenceable(4) %10, %"class.std::allocator.14"* dereferenceable(1) %11)
          to label %38 unwind label %260

; <label>:38:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  %39 = load i32, i32* %8, align 4
  %40 = zext i32 %39 to i64
  store i32 0, i32* %15, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %16) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %14, i64 %40, i32* dereferenceable(4) %15, %"class.std::allocator.14"* dereferenceable(1) %16)
          to label %41 unwind label %264

; <label>:41:                                     ; preds = %38
  %42 = load i32, i32* @x.33
  %43 = load i32, i32* @y.34
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %41, %originalBBalteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  %50 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* @x.33
  %53 = load i32, i32* @y.34
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %17, %class.MGDoFHandler* %50, i32 %51)
          to label %60 unwind label %268

; <label>:60:                                     ; preds = %originalBBpart2
  %61 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %62 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %18, %class.MGDoFHandler* %61, i32 %62)
          to label %63 unwind label %268

; <label>:63:                                     ; preds = %60
  br label %64

; <label>:64:                                     ; preds = %originalBBpart280, %63
  %65 = load i32, i32* @x.33
  %66 = load i32, i32* @y.34
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %64, %originalBB1alteredBB
  %73 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %74 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %75 = load i32, i32* @x.33
  %76 = load i32, i32* @y.34
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %83 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %73, %class.TriaRawIterator* dereferenceable(32) %74)
          to label %84 unwind label %268

; <label>:84:                                     ; preds = %originalBBpart24
  %85 = load i32, i32* @x.33
  %86 = load i32, i32* @y.34
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %84, %originalBB6alteredBB
  %93 = load i32, i32* @x.33
  %94 = load i32, i32* @y.34
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %83, label %101, label %479

; <label>:101:                                    ; preds = %originalBBpart28
  %102 = load i32, i32* @x.33
  %103 = load i32, i32* @y.34
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %101, %originalBB10alteredBB
  %110 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %111 = load i32, i32* @x.33
  %112 = load i32, i32* @y.34
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %119 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %110)
          to label %120 unwind label %268

; <label>:120:                                    ; preds = %originalBBpart212
  %121 = load i32, i32* @x.33
  %122 = load i32, i32* @y.34
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %120, %originalBB14alteredBB
  %129 = bitcast %class.MGDoFCellAccessor* %119 to %class.MGDoFObjectAccessor*
  %130 = load i32, i32* @x.33
  %131 = load i32, i32* @y.34
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %129, %"class.std::vector.12"* dereferenceable(24) %9)
          to label %138 unwind label %268

; <label>:138:                                    ; preds = %originalBBpart216
  %139 = load i32, i32* @x.33
  %140 = load i32, i32* @y.34
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %138, %originalBB18alteredBB
  store i32 0, i32* %19, align 4
  %147 = load i32, i32* @x.33
  %148 = load i32, i32* @y.34
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %155

; <label>:155:                                    ; preds = %273, %originalBBpart220
  %156 = load i32, i32* @x.33
  %157 = load i32, i32* @y.34
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %155, %originalBB22alteredBB
  %164 = load i32, i32* %19, align 4
  %165 = load i32, i32* %8, align 4
  %166 = icmp ult i32 %164, %165
  %167 = load i32, i32* @x.33
  %168 = load i32, i32* @y.34
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %166, label %175, label %276

; <label>:175:                                    ; preds = %originalBBpart224
  store i32 0, i32* %20, align 4
  br label %176

; <label>:176:                                    ; preds = %originalBBpart248, %175
  %177 = load i32, i32* @x.33
  %178 = load i32, i32* @y.34
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %176, %originalBB26alteredBB
  %185 = load i32, i32* %20, align 4
  %186 = load i32, i32* %8, align 4
  %187 = icmp ult i32 %185, %186
  %188 = load i32, i32* @x.33
  %189 = load i32, i32* @y.34
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %187, label %196, label %272

; <label>:196:                                    ; preds = %originalBBpart228
  %197 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %5, align 8
  %198 = load i32, i32* %19, align 4
  %199 = zext i32 %198 to i64
  %200 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %199)
          to label %201 unwind label %268

; <label>:201:                                    ; preds = %196
  %202 = load i32, i32* @x.33
  %203 = load i32, i32* @y.34
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %201, %originalBB30alteredBB
  %210 = load i32, i32* %200, align 4
  %211 = load i32, i32* %20, align 4
  %212 = zext i32 %211 to i64
  %213 = load i32, i32* @x.33
  %214 = load i32, i32* @y.34
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  %221 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %212)
          to label %222 unwind label %268

; <label>:222:                                    ; preds = %originalBBpart232
  %223 = load i32, i32* %221, align 4
  invoke void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %197, i32 %210, i32 %223)
          to label %224 unwind label %268

; <label>:224:                                    ; preds = %222
  %225 = load i32, i32* @x.33
  %226 = load i32, i32* @y.34
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %224, %originalBB34alteredBB
  %233 = load i32, i32* @x.33
  %234 = load i32, i32* @y.34
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %241

; <label>:241:                                    ; preds = %originalBBpart236
  %242 = load i32, i32* @x.33
  %243 = load i32, i32* @y.34
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %241, %originalBB38alteredBB
  %250 = load i32, i32* %20, align 4
  %251 = add i32 %250, 1
  store i32 %251, i32* %20, align 4
  %252 = load i32, i32* @x.33
  %253 = load i32, i32* @y.34
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart248, label %originalBB38alteredBB

originalBBpart248:                                ; preds = %originalBB38
  br label %176

; <label>:260:                                    ; preds = %3
  %261 = landingpad { i8*, i32 }
          cleanup
  %262 = extractvalue { i8*, i32 } %261, 0
  store i8* %262, i8** %12, align 8
  %263 = extractvalue { i8*, i32 } %261, 1
  store i32 %263, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  br label %552

; <label>:264:                                    ; preds = %38
  %265 = landingpad { i8*, i32 }
          cleanup
  %266 = extractvalue { i8*, i32 } %265, 0
  store i8* %266, i8** %12, align 8
  %267 = extractvalue { i8*, i32 } %265, 1
  store i32 %267, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  br label %518

; <label>:268:                                    ; preds = %460, %396, %391, %386, %originalBBpart264, %355, %353, %350, %325, %322, %299, %originalBBpart252, %222, %originalBBpart232, %196, %originalBBpart216, %originalBBpart212, %originalBBpart24, %60, %originalBBpart2
  %269 = landingpad { i8*, i32 }
          cleanup
  %270 = extractvalue { i8*, i32 } %269, 0
  store i8* %270, i8** %12, align 8
  %271 = extractvalue { i8*, i32 } %269, 1
  store i32 %271, i32* %13, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
          to label %517 unwind label %557

; <label>:272:                                    ; preds = %originalBBpart228
  br label %273

; <label>:273:                                    ; preds = %272
  %274 = load i32, i32* %19, align 4
  %275 = add i32 %274, 1
  store i32 %275, i32* %19, align 4
  br label %155

; <label>:276:                                    ; preds = %originalBBpart224
  store i32 0, i32* %21, align 4
  br label %277

; <label>:277:                                    ; preds = %originalBBpart272, %276
  %278 = load i32, i32* %21, align 4
  %279 = icmp ult i32 %278, 6
  br i1 %279, label %280, label %443

; <label>:280:                                    ; preds = %277
  %281 = load i32, i32* @x.33
  %282 = load i32, i32* @y.34
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %280, %originalBB50alteredBB
  %289 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %290 = load i32, i32* @x.33
  %291 = load i32, i32* @y.34
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  %298 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %289)
          to label %299 unwind label %268

; <label>:299:                                    ; preds = %originalBBpart252
  %300 = bitcast %class.MGDoFCellAccessor* %298 to i8*
  %301 = getelementptr inbounds i8, i8* %300, i64 16
  %302 = bitcast i8* %301 to %class.CellAccessor*
  %303 = load i32, i32* %21, align 4
  %304 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %302, i32 %303)
          to label %305 unwind label %268

; <label>:305:                                    ; preds = %299
  %306 = load i32, i32* @x.33
  %307 = load i32, i32* @y.34
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %305, %originalBB54alteredBB
  %314 = load i32, i32* @x.33
  %315 = load i32, i32* @y.34
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %304, label %423, label %322

; <label>:322:                                    ; preds = %originalBBpart256
  %323 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %324 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %323)
          to label %325 unwind label %268

; <label>:325:                                    ; preds = %322
  %326 = bitcast %class.MGDoFCellAccessor* %324 to i8*
  %327 = getelementptr inbounds i8, i8* %326, i64 16
  %328 = bitcast i8* %327 to %class.CellAccessor*
  %329 = load i32, i32* %21, align 4
  %330 = invoke i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor* %328, i32 %329)
          to label %331 unwind label %268

; <label>:331:                                    ; preds = %325
  %332 = load i32, i32* @x.33
  %333 = load i32, i32* @y.34
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %331, %originalBB58alteredBB
  %340 = load i32, i32* %6, align 4
  %341 = icmp eq i32 %330, %340
  %342 = load i32, i32* @x.33
  %343 = load i32, i32* @y.34
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %341, label %350, label %423

; <label>:350:                                    ; preds = %originalBBpart260
  %351 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %352 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %351)
          to label %353 unwind label %268

; <label>:353:                                    ; preds = %350
  %354 = load i32, i32* %21, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %22, %class.MGDoFCellAccessor* %352, i32 %354)
          to label %355 unwind label %268

; <label>:355:                                    ; preds = %353
  %356 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %357 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %356)
          to label %358 unwind label %268

; <label>:358:                                    ; preds = %355
  %359 = load i32, i32* @x.33
  %360 = load i32, i32* @y.34
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %358, %originalBB62alteredBB
  %367 = bitcast %class.MGDoFCellAccessor* %357 to %class.MGDoFObjectAccessor*
  %368 = load i32, i32* @x.33
  %369 = load i32, i32* @y.34
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %367, %"class.std::vector.12"* dereferenceable(24) %14)
          to label %376 unwind label %268

; <label>:376:                                    ; preds = %originalBBpart264
  store i32 0, i32* %23, align 4
  br label %377

; <label>:377:                                    ; preds = %419, %376
  %378 = load i32, i32* %23, align 4
  %379 = load i32, i32* %8, align 4
  %380 = icmp ult i32 %378, %379
  br i1 %380, label %381, label %422

; <label>:381:                                    ; preds = %377
  store i32 0, i32* %24, align 4
  br label %382

; <label>:382:                                    ; preds = %399, %381
  %383 = load i32, i32* %24, align 4
  %384 = load i32, i32* %8, align 4
  %385 = icmp ult i32 %383, %384
  br i1 %385, label %386, label %402

; <label>:386:                                    ; preds = %382
  %387 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %5, align 8
  %388 = load i32, i32* %23, align 4
  %389 = zext i32 %388 to i64
  %390 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %389)
          to label %391 unwind label %268

; <label>:391:                                    ; preds = %386
  %392 = load i32, i32* %390, align 4
  %393 = load i32, i32* %24, align 4
  %394 = zext i32 %393 to i64
  %395 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %394)
          to label %396 unwind label %268

; <label>:396:                                    ; preds = %391
  %397 = load i32, i32* %395, align 4
  invoke void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %387, i32 %392, i32 %397)
          to label %398 unwind label %268

; <label>:398:                                    ; preds = %396
  br label %399

; <label>:399:                                    ; preds = %398
  %400 = load i32, i32* %24, align 4
  %401 = add i32 %400, 1
  store i32 %401, i32* %24, align 4
  br label %382

; <label>:402:                                    ; preds = %382
  %403 = load i32, i32* @x.33
  %404 = load i32, i32* @y.34
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %402, %originalBB66alteredBB
  %411 = load i32, i32* @x.33
  %412 = load i32, i32* @y.34
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %419

; <label>:419:                                    ; preds = %originalBBpart268
  %420 = load i32, i32* %23, align 4
  %421 = add i32 %420, 1
  store i32 %421, i32* %23, align 4
  br label %377

; <label>:422:                                    ; preds = %377
  br label %423

; <label>:423:                                    ; preds = %422, %originalBBpart260, %originalBBpart256
  br label %424

; <label>:424:                                    ; preds = %423
  %425 = load i32, i32* @x.33
  %426 = load i32, i32* @y.34
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %424, %originalBB70alteredBB
  %433 = load i32, i32* %21, align 4
  %434 = add i32 %433, 1
  store i32 %434, i32* %21, align 4
  %435 = load i32, i32* @x.33
  %436 = load i32, i32* @y.34
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %277

; <label>:443:                                    ; preds = %277
  %444 = load i32, i32* @x.33
  %445 = load i32, i32* @y.34
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %443, %originalBB74alteredBB
  %452 = load i32, i32* @x.33
  %453 = load i32, i32* @y.34
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %460

; <label>:460:                                    ; preds = %originalBBpart276
  %461 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %17)
          to label %462 unwind label %268

; <label>:462:                                    ; preds = %460
  %463 = load i32, i32* @x.33
  %464 = load i32, i32* @y.34
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %462, %originalBB78alteredBB
  %471 = load i32, i32* @x.33
  %472 = load i32, i32* @y.34
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %64

; <label>:479:                                    ; preds = %originalBBpart28
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
          to label %480 unwind label %497

; <label>:480:                                    ; preds = %479
  %481 = load i32, i32* @x.33
  %482 = load i32, i32* @y.34
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %480, %originalBB82alteredBB
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
  %489 = load i32, i32* @x.33
  %490 = load i32, i32* @y.34
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  ret void

; <label>:497:                                    ; preds = %479
  %498 = load i32, i32* @x.33
  %499 = load i32, i32* @y.34
  %500 = sub i32 %498, 1
  %501 = mul i32 %498, %500
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %503, %504
  br i1 %505, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %497, %originalBB86alteredBB
  %506 = landingpad { i8*, i32 }
          cleanup
  %507 = extractvalue { i8*, i32 } %506, 0
  store i8* %507, i8** %12, align 8
  %508 = extractvalue { i8*, i32 } %506, 1
  store i32 %508, i32* %13, align 4
  %509 = load i32, i32* @x.33
  %510 = load i32, i32* @y.34
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br label %518

; <label>:517:                                    ; preds = %268
  br label %518

; <label>:518:                                    ; preds = %517, %originalBBpart288, %264
  %519 = load i32, i32* @x.33
  %520 = load i32, i32* @y.34
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %518, %originalBB90alteredBB
  %527 = load i32, i32* @x.33
  %528 = load i32, i32* @y.34
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
          to label %535 unwind label %557

; <label>:535:                                    ; preds = %originalBBpart292
  %536 = load i32, i32* @x.33
  %537 = load i32, i32* @y.34
  %538 = sub i32 %536, 1
  %539 = mul i32 %536, %538
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %537, 10
  %543 = or i1 %541, %542
  br i1 %543, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %535, %originalBB94alteredBB
  %544 = load i32, i32* @x.33
  %545 = load i32, i32* @y.34
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %552

; <label>:552:                                    ; preds = %originalBBpart296, %260
  %553 = load i8*, i8** %12, align 8
  %554 = load i32, i32* %13, align 4
  %555 = insertvalue { i8*, i32 } undef, i8* %553, 0
  %556 = insertvalue { i8*, i32 } %555, i32 %554, 1
  resume { i8*, i32 } %556

; <label>:557:                                    ; preds = %originalBBpart292, %268
  %558 = landingpad { i8*, i32 }
          catch i8* null
  %559 = extractvalue { i8*, i32 } %558, 0
  call void @__clang_call_terminate(i8* %559) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %41
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  %560 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %561 = load i32, i32* %6, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %64
  %562 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %563 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %84
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %101
  %564 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %120
  %565 = bitcast %class.MGDoFCellAccessor* %119 to %class.MGDoFObjectAccessor*
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %138
  store i32 0, i32* %19, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %155
  %566 = load i32, i32* %19, align 4
  %567 = load i32, i32* %8, align 4
  %568 = icmp ult i32 %566, %567
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %176
  %569 = load i32, i32* %20, align 4
  %570 = load i32, i32* %8, align 4
  %571 = icmp ult i32 %569, %570
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %201
  %572 = load i32, i32* %200, align 4
  %573 = load i32, i32* %20, align 4
  %574 = zext i32 %573 to i64
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %224
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %241
  %575 = load i32, i32* %20, align 4
  %_ = sub i32 %575, 1
  %gen = mul i32 %_, 1
  %_39 = sub i32 0, %575
  %gen40 = add i32 %_39, 1
  %_41 = shl i32 %575, 1
  %_42 = sub i32 0, %575
  %gen43 = add i32 %_42, 1
  %_44 = shl i32 %575, 1
  %_45 = sub i32 0, %575
  %gen46 = add i32 %_45, 1
  %576 = add i32 %575, 1
  store i32 %576, i32* %20, align 4
  br label %originalBB38

originalBB50alteredBB:                            ; preds = %originalBB50, %280
  %577 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %305
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %331
  %578 = load i32, i32* %6, align 4
  %579 = icmp eq i32 %330, %578
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %358
  %580 = bitcast %class.MGDoFCellAccessor* %357 to %class.MGDoFObjectAccessor*
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %402
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %424
  %581 = load i32, i32* %21, align 4
  %582 = add i32 %581, 1
  store i32 %582, i32* %21, align 4
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %443
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %462
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %480
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %497
  %583 = landingpad { i8*, i32 }
          cleanup
  %584 = extractvalue { i8*, i32 } %583, 0
  store i8* %584, i8** %12, align 8
  %585 = extractvalue { i8*, i32 } %583, 1
  store i32 %585, i32* %13, align 4
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %518
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %535
  br label %originalBB94
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools31make_flux_sparsity_pattern_edgeILi3E25CompressedSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.CompressedSparsityPattern* dereferenceable(56), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.CompressedSparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.12", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::allocator.14", align 1
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca %"class.std::vector.12", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::allocator.14", align 1
  %18 = alloca %class.TriaIterator, align 8
  %19 = alloca %class.TriaIterator, align 8
  %20 = alloca i32, align 4
  %21 = alloca %class.TriaIterator, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.CompressedSparsityPattern* %1, %class.CompressedSparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %24 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %25 = load i32, i32* %6, align 4
  %26 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %24, i32 %25)
  store i32 %26, i32* %7, align 4
  %27 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %28 = load i32, i32* %6, align 4
  %29 = sub i32 %28, 1
  %30 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %27, i32 %29)
  store i32 %30, i32* %8, align 4
  %31 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %32 = bitcast %class.MGDoFHandler* %31 to %class.DoFHandler*
  %33 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %32)
  %34 = bitcast %class.FiniteElement* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 24
  %36 = bitcast i8* %35 to %class.FiniteElementData*
  %37 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %36, i32 0, i32 10
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %9, align 4
  %39 = load i32, i32* %9, align 4
  %40 = zext i32 %39 to i64
  store i32 0, i32* %11, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %12) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %10, i64 %40, i32* dereferenceable(4) %11, %"class.std::allocator.14"* dereferenceable(1) %12)
          to label %41 unwind label %295

; <label>:41:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  %42 = load i32, i32* %9, align 4
  %43 = zext i32 %42 to i64
  store i32 0, i32* %16, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %17) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %15, i64 %43, i32* dereferenceable(4) %16, %"class.std::allocator.14"* dereferenceable(1) %17)
          to label %44 unwind label %299

; <label>:44:                                     ; preds = %41
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  %45 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %46 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %18, %class.MGDoFHandler* %45, i32 %46)
          to label %47 unwind label %303

; <label>:47:                                     ; preds = %44
  %48 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %49 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %19, %class.MGDoFHandler* %48, i32 %49)
          to label %50 unwind label %303

; <label>:50:                                     ; preds = %47
  %51 = load i32, i32* @x.35
  %52 = load i32, i32* @y.36
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %50, %originalBBalteredBB
  %59 = load i32, i32* @x.35
  %60 = load i32, i32* @y.36
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %67

; <label>:67:                                     ; preds = %351, %originalBBpart2
  %68 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %69 = bitcast %class.TriaIterator* %19 to %class.TriaRawIterator*
  %70 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %68, %class.TriaRawIterator* dereferenceable(32) %69)
          to label %71 unwind label %303

; <label>:71:                                     ; preds = %67
  br i1 %70, label %72, label %352

; <label>:72:                                     ; preds = %71
  %73 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %74 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %73)
          to label %75 unwind label %303

; <label>:75:                                     ; preds = %72
  %76 = load i32, i32* @x.35
  %77 = load i32, i32* @y.36
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %75, %originalBB1alteredBB
  %84 = bitcast %class.MGDoFCellAccessor* %74 to %class.MGDoFObjectAccessor*
  %85 = load i32, i32* @x.35
  %86 = load i32, i32* @y.36
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %84, %"class.std::vector.12"* dereferenceable(24) %10)
          to label %93 unwind label %303

; <label>:93:                                     ; preds = %originalBBpart24
  store i32 0, i32* %20, align 4
  br label %94

; <label>:94:                                     ; preds = %345, %93
  %95 = load i32, i32* %20, align 4
  %96 = icmp ult i32 %95, 6
  br i1 %96, label %97, label %348

; <label>:97:                                     ; preds = %94
  %98 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %99 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %98)
          to label %100 unwind label %303

; <label>:100:                                    ; preds = %97
  %101 = bitcast %class.MGDoFCellAccessor* %99 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 16
  %103 = bitcast i8* %102 to %class.CellAccessor*
  %104 = load i32, i32* %20, align 4
  %105 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %103, i32 %104)
          to label %106 unwind label %303

; <label>:106:                                    ; preds = %100
  br i1 %105, label %344, label %107

; <label>:107:                                    ; preds = %106
  %108 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %109 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %108)
          to label %110 unwind label %303

; <label>:110:                                    ; preds = %107
  %111 = load i32, i32* @x.35
  %112 = load i32, i32* @y.36
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %110, %originalBB6alteredBB
  %119 = bitcast %class.MGDoFCellAccessor* %109 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 16
  %121 = bitcast i8* %120 to %class.CellAccessor*
  %122 = load i32, i32* %20, align 4
  %123 = load i32, i32* @x.35
  %124 = load i32, i32* @y.36
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %131 = invoke i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor* %121, i32 %122)
          to label %132 unwind label %303

; <label>:132:                                    ; preds = %originalBBpart28
  %133 = load i32, i32* @x.35
  %134 = load i32, i32* @y.36
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %132, %originalBB10alteredBB
  %141 = load i32, i32* %6, align 4
  %142 = icmp ne i32 %131, %141
  %143 = load i32, i32* @x.35
  %144 = load i32, i32* @y.36
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %142, label %151, label %344

; <label>:151:                                    ; preds = %originalBBpart212
  %152 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %153 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %152)
          to label %154 unwind label %303

; <label>:154:                                    ; preds = %151
  %155 = load i32, i32* @x.35
  %156 = load i32, i32* @y.36
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %154, %originalBB14alteredBB
  %163 = load i32, i32* %20, align 4
  %164 = load i32, i32* @x.35
  %165 = load i32, i32* @y.36
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %21, %class.MGDoFCellAccessor* %153, i32 %163)
          to label %172 unwind label %303

; <label>:172:                                    ; preds = %originalBBpart216
  %173 = bitcast %class.TriaIterator* %21 to %class.TriaRawIterator*
  %174 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %173)
          to label %175 unwind label %303

; <label>:175:                                    ; preds = %172
  %176 = load i32, i32* @x.35
  %177 = load i32, i32* @y.36
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %175, %originalBB18alteredBB
  %184 = bitcast %class.MGDoFCellAccessor* %174 to %class.MGDoFObjectAccessor*
  %185 = load i32, i32* @x.35
  %186 = load i32, i32* @y.36
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %184, %"class.std::vector.12"* dereferenceable(24) %15)
          to label %193 unwind label %303

; <label>:193:                                    ; preds = %originalBBpart220
  store i32 0, i32* %22, align 4
  br label %194

; <label>:194:                                    ; preds = %originalBBpart252, %193
  %195 = load i32, i32* @x.35
  %196 = load i32, i32* @y.36
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %194, %originalBB22alteredBB
  %203 = load i32, i32* %22, align 4
  %204 = load i32, i32* %9, align 4
  %205 = icmp ult i32 %203, %204
  %206 = load i32, i32* @x.35
  %207 = load i32, i32* @y.36
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %205, label %214, label %327

; <label>:214:                                    ; preds = %originalBBpart224
  store i32 0, i32* %23, align 4
  br label %215

; <label>:215:                                    ; preds = %292, %214
  %216 = load i32, i32* %23, align 4
  %217 = load i32, i32* %9, align 4
  %218 = icmp ult i32 %216, %217
  br i1 %218, label %219, label %307

; <label>:219:                                    ; preds = %215
  %220 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %5, align 8
  %221 = load i32, i32* %22, align 4
  %222 = zext i32 %221 to i64
  %223 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %15, i64 %222)
          to label %224 unwind label %303

; <label>:224:                                    ; preds = %219
  %225 = load i32, i32* @x.35
  %226 = load i32, i32* @y.36
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %224, %originalBB26alteredBB
  %233 = load i32, i32* %223, align 4
  %234 = load i32, i32* %23, align 4
  %235 = zext i32 %234 to i64
  %236 = load i32, i32* @x.35
  %237 = load i32, i32* @y.36
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %244 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %235)
          to label %245 unwind label %303

; <label>:245:                                    ; preds = %originalBBpart228
  %246 = load i32, i32* %244, align 4
  invoke void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %220, i32 %233, i32 %246)
          to label %247 unwind label %303

; <label>:247:                                    ; preds = %245
  %248 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %5, align 8
  %249 = load i32, i32* %23, align 4
  %250 = zext i32 %249 to i64
  %251 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %15, i64 %250)
          to label %252 unwind label %303

; <label>:252:                                    ; preds = %247
  %253 = load i32, i32* @x.35
  %254 = load i32, i32* @y.36
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %252, %originalBB30alteredBB
  %261 = load i32, i32* %251, align 4
  %262 = load i32, i32* %22, align 4
  %263 = zext i32 %262 to i64
  %264 = load i32, i32* @x.35
  %265 = load i32, i32* @y.36
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  %272 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %263)
          to label %273 unwind label %303

; <label>:273:                                    ; preds = %originalBBpart232
  %274 = load i32, i32* %272, align 4
  invoke void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %248, i32 %261, i32 %274)
          to label %275 unwind label %303

; <label>:275:                                    ; preds = %273
  %276 = load i32, i32* @x.35
  %277 = load i32, i32* @y.36
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %275, %originalBB34alteredBB
  %284 = load i32, i32* @x.35
  %285 = load i32, i32* @y.36
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %292

; <label>:292:                                    ; preds = %originalBBpart236
  %293 = load i32, i32* %23, align 4
  %294 = add i32 %293, 1
  store i32 %294, i32* %23, align 4
  br label %215

; <label>:295:                                    ; preds = %3
  %296 = landingpad { i8*, i32 }
          cleanup
  %297 = extractvalue { i8*, i32 } %296, 0
  store i8* %297, i8** %13, align 8
  %298 = extractvalue { i8*, i32 } %296, 1
  store i32 %298, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  br label %377

; <label>:299:                                    ; preds = %41
  %300 = landingpad { i8*, i32 }
          cleanup
  %301 = extractvalue { i8*, i32 } %300, 0
  store i8* %301, i8** %13, align 8
  %302 = extractvalue { i8*, i32 } %300, 1
  store i32 %302, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  br label %359

; <label>:303:                                    ; preds = %349, %273, %originalBBpart232, %247, %245, %originalBBpart228, %219, %originalBBpart220, %172, %originalBBpart216, %151, %originalBBpart28, %107, %100, %97, %originalBBpart24, %72, %67, %47, %44
  %304 = landingpad { i8*, i32 }
          cleanup
  %305 = extractvalue { i8*, i32 } %304, 0
  store i8* %305, i8** %13, align 8
  %306 = extractvalue { i8*, i32 } %304, 1
  store i32 %306, i32* %14, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %15)
          to label %358 unwind label %382

; <label>:307:                                    ; preds = %215
  br label %308

; <label>:308:                                    ; preds = %307
  %309 = load i32, i32* @x.35
  %310 = load i32, i32* @y.36
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %308, %originalBB38alteredBB
  %317 = load i32, i32* %22, align 4
  %318 = add i32 %317, 1
  store i32 %318, i32* %22, align 4
  %319 = load i32, i32* @x.35
  %320 = load i32, i32* @y.36
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart252, label %originalBB38alteredBB

originalBBpart252:                                ; preds = %originalBB38
  br label %194

; <label>:327:                                    ; preds = %originalBBpart224
  %328 = load i32, i32* @x.35
  %329 = load i32, i32* @y.36
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %327, %originalBB54alteredBB
  %336 = load i32, i32* @x.35
  %337 = load i32, i32* @y.36
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %344

; <label>:344:                                    ; preds = %originalBBpart256, %originalBBpart212, %106
  br label %345

; <label>:345:                                    ; preds = %344
  %346 = load i32, i32* %20, align 4
  %347 = add i32 %346, 1
  store i32 %347, i32* %20, align 4
  br label %94

; <label>:348:                                    ; preds = %94
  br label %349

; <label>:349:                                    ; preds = %348
  %350 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %18)
          to label %351 unwind label %303

; <label>:351:                                    ; preds = %349
  br label %67

; <label>:352:                                    ; preds = %71
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %15)
          to label %353 unwind label %354

; <label>:353:                                    ; preds = %352
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
  ret void

; <label>:354:                                    ; preds = %352
  %355 = landingpad { i8*, i32 }
          cleanup
  %356 = extractvalue { i8*, i32 } %355, 0
  store i8* %356, i8** %13, align 8
  %357 = extractvalue { i8*, i32 } %355, 1
  store i32 %357, i32* %14, align 4
  br label %359

; <label>:358:                                    ; preds = %303
  br label %359

; <label>:359:                                    ; preds = %358, %354, %299
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
          to label %360 unwind label %382

; <label>:360:                                    ; preds = %359
  %361 = load i32, i32* @x.35
  %362 = load i32, i32* @y.36
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %360, %originalBB58alteredBB
  %369 = load i32, i32* @x.35
  %370 = load i32, i32* @y.36
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %377

; <label>:377:                                    ; preds = %originalBBpart260, %295
  %378 = load i8*, i8** %13, align 8
  %379 = load i32, i32* %14, align 4
  %380 = insertvalue { i8*, i32 } undef, i8* %378, 0
  %381 = insertvalue { i8*, i32 } %380, i32 %379, 1
  resume { i8*, i32 } %381

; <label>:382:                                    ; preds = %359, %303
  %383 = landingpad { i8*, i32 }
          catch i8* null
  %384 = extractvalue { i8*, i32 } %383, 0
  call void @__clang_call_terminate(i8* %384) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %50
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %75
  %385 = bitcast %class.MGDoFCellAccessor* %74 to %class.MGDoFObjectAccessor*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %110
  %386 = bitcast %class.MGDoFCellAccessor* %109 to i8*
  %387 = getelementptr inbounds i8, i8* %386, i64 16
  %388 = bitcast i8* %387 to %class.CellAccessor*
  %389 = load i32, i32* %20, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %132
  %390 = load i32, i32* %6, align 4
  %391 = icmp ne i32 %131, %390
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %154
  %392 = load i32, i32* %20, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %175
  %393 = bitcast %class.MGDoFCellAccessor* %174 to %class.MGDoFObjectAccessor*
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %194
  %394 = load i32, i32* %22, align 4
  %395 = load i32, i32* %9, align 4
  %396 = icmp ult i32 %394, %395
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %224
  %397 = load i32, i32* %223, align 4
  %398 = load i32, i32* %23, align 4
  %399 = zext i32 %398 to i64
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %252
  %400 = load i32, i32* %251, align 4
  %401 = load i32, i32* %22, align 4
  %402 = zext i32 %401 to i64
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %275
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %308
  %403 = load i32, i32* %22, align 4
  %_ = shl i32 %403, 1
  %_39 = shl i32 %403, 1
  %_40 = sub i32 %403, 1
  %gen = mul i32 %_40, 1
  %_41 = sub i32 0, %403
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 %403, 1
  %gen44 = mul i32 %_43, 1
  %_45 = shl i32 %403, 1
  %_46 = sub i32 %403, 1
  %gen47 = mul i32 %_46, 1
  %_48 = shl i32 %403, 1
  %_49 = sub i32 %403, 1
  %gen50 = mul i32 %_49, 1
  %404 = add i32 %403, 1
  store i32 %404, i32* %22, align 4
  br label %originalBB38

originalBB54alteredBB:                            ; preds = %originalBB54, %327
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %360
  br label %originalBB58
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools21make_sparsity_patternILi3E20BlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.BlockSparsityPattern* dereferenceable(144), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.BlockSparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::vector.12", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.14", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %class.TriaIterator, align 8
  %15 = alloca %class.TriaIterator, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.BlockSparsityPattern* %1, %class.BlockSparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %18 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %19 = load i32, i32* %6, align 4
  %20 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %18, i32 %19)
  store i32 %20, i32* %7, align 4
  %21 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %22 = bitcast %class.MGDoFHandler* %21 to %class.DoFHandler*
  %23 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %22)
  %24 = bitcast %class.FiniteElement* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 24
  %26 = bitcast i8* %25 to %class.FiniteElementData*
  %27 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %26, i32 0, i32 10
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %8, align 4
  %29 = load i32, i32* %8, align 4
  %30 = zext i32 %29 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %11) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %9, i64 %30, i32* dereferenceable(4) %10, %"class.std::allocator.14"* dereferenceable(1) %11)
          to label %31 unwind label %139

; <label>:31:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  %32 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %33 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %14, %class.MGDoFHandler* %32, i32 %33)
          to label %34 unwind label %159

; <label>:34:                                     ; preds = %31
  %35 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %36 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %15, %class.MGDoFHandler* %35, i32 %36)
          to label %37 unwind label %159

; <label>:37:                                     ; preds = %34
  br label %38

; <label>:38:                                     ; preds = %202, %37
  %39 = load i32, i32* @x.37
  %40 = load i32, i32* @y.38
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %38, %originalBBalteredBB
  %47 = bitcast %class.TriaIterator* %14 to %class.TriaRawIterator*
  %48 = bitcast %class.TriaIterator* %15 to %class.TriaRawIterator*
  %49 = load i32, i32* @x.37
  %50 = load i32, i32* @y.38
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %57 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %47, %class.TriaRawIterator* dereferenceable(32) %48)
          to label %58 unwind label %159

; <label>:58:                                     ; preds = %originalBBpart2
  %59 = load i32, i32* @x.37
  %60 = load i32, i32* @y.38
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %58, %originalBB1alteredBB
  %67 = load i32, i32* @x.37
  %68 = load i32, i32* @y.38
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %57, label %75, label %203

; <label>:75:                                     ; preds = %originalBBpart24
  %76 = bitcast %class.TriaIterator* %14 to %class.TriaRawIterator*
  %77 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %76)
          to label %78 unwind label %159

; <label>:78:                                     ; preds = %75
  %79 = bitcast %class.MGDoFCellAccessor* %77 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %79, %"class.std::vector.12"* dereferenceable(24) %9)
          to label %80 unwind label %159

; <label>:80:                                     ; preds = %78
  store i32 0, i32* %16, align 4
  br label %81

; <label>:81:                                     ; preds = %180, %80
  %82 = load i32, i32* %16, align 4
  %83 = load i32, i32* %8, align 4
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %85, label %183

; <label>:85:                                     ; preds = %81
  store i32 0, i32* %17, align 4
  br label %86

; <label>:86:                                     ; preds = %originalBBpart213, %85
  %87 = load i32, i32* %17, align 4
  %88 = load i32, i32* %8, align 4
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %90, label %163

; <label>:90:                                     ; preds = %86
  %91 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %5, align 8
  %92 = bitcast %class.BlockSparsityPattern* %91 to %class.BlockSparsityPatternBase*
  %93 = load i32, i32* %16, align 4
  %94 = zext i32 %93 to i64
  %95 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %94)
          to label %96 unwind label %159

; <label>:96:                                     ; preds = %90
  %97 = load i32, i32* %95, align 4
  %98 = load i32, i32* %17, align 4
  %99 = zext i32 %98 to i64
  %100 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %99)
          to label %101 unwind label %159

; <label>:101:                                    ; preds = %96
  %102 = load i32, i32* @x.37
  %103 = load i32, i32* @y.38
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %101, %originalBB6alteredBB
  %110 = load i32, i32* %100, align 4
  %111 = load i32, i32* @x.37
  %112 = load i32, i32* @y.38
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase* %92, i32 %97, i32 %110)
          to label %119 unwind label %159

; <label>:119:                                    ; preds = %originalBBpart28
  br label %120

; <label>:120:                                    ; preds = %119
  %121 = load i32, i32* @x.37
  %122 = load i32, i32* @y.38
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %120, %originalBB10alteredBB
  %129 = load i32, i32* %17, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %17, align 4
  %131 = load i32, i32* @x.37
  %132 = load i32, i32* @y.38
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart213, label %originalBB10alteredBB

originalBBpart213:                                ; preds = %originalBB10
  br label %86

; <label>:139:                                    ; preds = %3
  %140 = load i32, i32* @x.37
  %141 = load i32, i32* @y.38
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %139, %originalBB15alteredBB
  %148 = landingpad { i8*, i32 }
          cleanup
  %149 = extractvalue { i8*, i32 } %148, 0
  store i8* %149, i8** %12, align 8
  %150 = extractvalue { i8*, i32 } %148, 1
  store i32 %150, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  %151 = load i32, i32* @x.37
  %152 = load i32, i32* @y.38
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %205

; <label>:159:                                    ; preds = %200, %originalBBpart28, %96, %90, %78, %75, %originalBBpart2, %34, %31
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %12, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %13, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
          to label %204 unwind label %226

; <label>:163:                                    ; preds = %86
  %164 = load i32, i32* @x.37
  %165 = load i32, i32* @y.38
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %163, %originalBB19alteredBB
  %172 = load i32, i32* @x.37
  %173 = load i32, i32* @y.38
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %180

; <label>:180:                                    ; preds = %originalBBpart221
  %181 = load i32, i32* %16, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %16, align 4
  br label %81

; <label>:183:                                    ; preds = %81
  %184 = load i32, i32* @x.37
  %185 = load i32, i32* @y.38
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %183, %originalBB23alteredBB
  %192 = load i32, i32* @x.37
  %193 = load i32, i32* @y.38
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %200

; <label>:200:                                    ; preds = %originalBBpart225
  %201 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %14)
          to label %202 unwind label %159

; <label>:202:                                    ; preds = %200
  br label %38

; <label>:203:                                    ; preds = %originalBBpart24
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
  ret void

; <label>:204:                                    ; preds = %159
  br label %205

; <label>:205:                                    ; preds = %204, %originalBBpart217
  %206 = load i32, i32* @x.37
  %207 = load i32, i32* @y.38
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %205, %originalBB27alteredBB
  %214 = load i8*, i8** %12, align 8
  %215 = load i32, i32* %13, align 4
  %216 = insertvalue { i8*, i32 } undef, i8* %214, 0
  %217 = insertvalue { i8*, i32 } %216, i32 %215, 1
  %218 = load i32, i32* @x.37
  %219 = load i32, i32* @y.38
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  resume { i8*, i32 } %217

; <label>:226:                                    ; preds = %159
  %227 = load i32, i32* @x.37
  %228 = load i32, i32* @y.38
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %226, %originalBB31alteredBB
  %235 = landingpad { i8*, i32 }
          catch i8* null
  %236 = extractvalue { i8*, i32 } %235, 0
  call void @__clang_call_terminate(i8* %236) #9
  %237 = load i32, i32* @x.37
  %238 = load i32, i32* @y.38
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %38
  %245 = bitcast %class.TriaIterator* %14 to %class.TriaRawIterator*
  %246 = bitcast %class.TriaIterator* %15 to %class.TriaRawIterator*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %101
  %247 = load i32, i32* %100, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %120
  %248 = load i32, i32* %17, align 4
  %_ = shl i32 %248, 1
  %_11 = sub i32 %248, 1
  %gen = mul i32 %_11, 1
  %249 = add i32 %248, 1
  store i32 %249, i32* %17, align 4
  br label %originalBB10

originalBB15alteredBB:                            ; preds = %originalBB15, %139
  %250 = landingpad { i8*, i32 }
          cleanup
  %251 = extractvalue { i8*, i32 } %250, 0
  store i8* %251, i8** %12, align 8
  %252 = extractvalue { i8*, i32 } %250, 1
  store i32 %252, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %163
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %183
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %205
  %253 = load i8*, i8** %12, align 8
  %254 = load i32, i32* %13, align 4
  %255 = insertvalue { i8*, i32 } undef, i8* %253, 0
  %256 = insertvalue { i8*, i32 } %255, i32 %254, 1
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %226
  %257 = landingpad { i8*, i32 }
          catch i8* null
  %258 = extractvalue { i8*, i32 } %257, 0
  call void @__clang_call_terminate(i8* %258) #9
  br label %originalBB31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.39
  %5 = load i32, i32* @y.40
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.BlockSparsityPatternBase*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"struct.std::pair.60", align 4
  %16 = alloca %"struct.std::pair.60", align 4
  %17 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  store %class.BlockSparsityPatternBase* %0, %class.BlockSparsityPatternBase** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %18 = load %class.BlockSparsityPatternBase*, %class.BlockSparsityPatternBase** %12, align 8
  %19 = getelementptr inbounds %class.BlockSparsityPatternBase, %class.BlockSparsityPatternBase* %18, i32 0, i32 4
  %20 = load i32, i32* %13, align 4
  %21 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %19, i32 %20)
  %22 = bitcast %"struct.std::pair.60"* %15 to i64*
  store i64 %21, i64* %22, align 4
  %23 = getelementptr inbounds %class.BlockSparsityPatternBase, %class.BlockSparsityPatternBase* %18, i32 0, i32 5
  %24 = load i32, i32* %14, align 4
  %25 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %23, i32 %24)
  %26 = bitcast %"struct.std::pair.60"* %16 to i64*
  store i64 %25, i64* %26, align 4
  %27 = getelementptr inbounds %class.BlockSparsityPatternBase, %class.BlockSparsityPatternBase* %18, i32 0, i32 3
  %28 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %15, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  call void @_ZN5TableILi2E12SmartPointerI15SparsityPatternEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %17, %class.Table.98* %27, i32 %29)
  %30 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %16, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = call dereferenceable(8) %class.SmartPointer.100* @_ZNK8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI15SparsityPatternELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %17, i32 %31)
  %33 = call %class.SparsityPattern* @_ZNK12SmartPointerI15SparsityPatternEptEv(%class.SmartPointer.100* %32)
  %34 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %15, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %16, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  call void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %33, i32 %35, i32 %37)
  %38 = load i32, i32* @x.39
  %39 = load i32, i32* @y.40
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %46 = alloca %class.BlockSparsityPatternBase*, align 8
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca %"struct.std::pair.60", align 4
  %50 = alloca %"struct.std::pair.60", align 4
  %51 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  store %class.BlockSparsityPatternBase* %0, %class.BlockSparsityPatternBase** %46, align 8
  store i32 %1, i32* %47, align 4
  store i32 %2, i32* %48, align 4
  %52 = load %class.BlockSparsityPatternBase*, %class.BlockSparsityPatternBase** %46, align 8
  %53 = getelementptr inbounds %class.BlockSparsityPatternBase, %class.BlockSparsityPatternBase* %52, i32 0, i32 4
  %54 = load i32, i32* %47, align 4
  %55 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %53, i32 %54)
  %56 = bitcast %"struct.std::pair.60"* %49 to i64*
  store i64 %55, i64* %56, align 4
  %57 = getelementptr inbounds %class.BlockSparsityPatternBase, %class.BlockSparsityPatternBase* %52, i32 0, i32 5
  %58 = load i32, i32* %48, align 4
  %59 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %57, i32 %58)
  %60 = bitcast %"struct.std::pair.60"* %50 to i64*
  store i64 %59, i64* %60, align 4
  %61 = getelementptr inbounds %class.BlockSparsityPatternBase, %class.BlockSparsityPatternBase* %52, i32 0, i32 3
  %62 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %49, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  call void @_ZN5TableILi2E12SmartPointerI15SparsityPatternEEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %51, %class.Table.98* %61, i32 %63)
  %64 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %50, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = call dereferenceable(8) %class.SmartPointer.100* @_ZNK8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI15SparsityPatternELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %51, i32 %65)
  %67 = call %class.SparsityPattern* @_ZNK12SmartPointerI15SparsityPatternEptEv(%class.SmartPointer.100* %66)
  %68 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %49, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %50, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  call void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %67, i32 %69, i32 %71)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools26make_flux_sparsity_patternILi3E20BlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.BlockSparsityPattern* dereferenceable(144), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.BlockSparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::vector.12", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.14", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %"class.std::vector.12", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::allocator.14", align 1
  %17 = alloca %class.TriaIterator, align 8
  %18 = alloca %class.TriaIterator, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %class.TriaIterator, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.BlockSparsityPattern* %1, %class.BlockSparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %25 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %25, i32 %26)
  store i32 %27, i32* %7, align 4
  %28 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %29 = bitcast %class.MGDoFHandler* %28 to %class.DoFHandler*
  %30 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %29)
  %31 = bitcast %class.FiniteElement* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 24
  %33 = bitcast i8* %32 to %class.FiniteElementData*
  %34 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %33, i32 0, i32 10
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %8, align 4
  %36 = load i32, i32* %8, align 4
  %37 = zext i32 %36 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %11) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %9, i64 %37, i32* dereferenceable(4) %10, %"class.std::allocator.14"* dereferenceable(1) %11)
          to label %38 unwind label %213

; <label>:38:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  %39 = load i32, i32* %8, align 4
  %40 = zext i32 %39 to i64
  store i32 0, i32* %15, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %16) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %14, i64 %40, i32* dereferenceable(4) %15, %"class.std::allocator.14"* dereferenceable(1) %16)
          to label %41 unwind label %217

; <label>:41:                                     ; preds = %38
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  %42 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %43 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %17, %class.MGDoFHandler* %42, i32 %43)
          to label %44 unwind label %221

; <label>:44:                                     ; preds = %41
  %45 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %46 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %18, %class.MGDoFHandler* %45, i32 %46)
          to label %47 unwind label %221

; <label>:47:                                     ; preds = %44
  %48 = load i32, i32* @x.41
  %49 = load i32, i32* @y.42
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %47, %originalBBalteredBB
  %56 = load i32, i32* @x.41
  %57 = load i32, i32* @y.42
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %64

; <label>:64:                                     ; preds = %originalBBpart295, %originalBBpart2
  %65 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %66 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %67 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %65, %class.TriaRawIterator* dereferenceable(32) %66)
          to label %68 unwind label %221

; <label>:68:                                     ; preds = %64
  %69 = load i32, i32* @x.41
  %70 = load i32, i32* @y.42
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %68, %originalBB1alteredBB
  %77 = load i32, i32* @x.41
  %78 = load i32, i32* @y.42
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %67, label %85, label %449

; <label>:85:                                     ; preds = %originalBBpart24
  %86 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %87 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %86)
          to label %88 unwind label %221

; <label>:88:                                     ; preds = %85
  %89 = bitcast %class.MGDoFCellAccessor* %87 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %89, %"class.std::vector.12"* dereferenceable(24) %9)
          to label %90 unwind label %221

; <label>:90:                                     ; preds = %88
  %91 = load i32, i32* @x.41
  %92 = load i32, i32* @y.42
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %90, %originalBB6alteredBB
  store i32 0, i32* %19, align 4
  %99 = load i32, i32* @x.41
  %100 = load i32, i32* @y.42
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %107

; <label>:107:                                    ; preds = %originalBBpart252, %originalBBpart28
  %108 = load i32, i32* @x.41
  %109 = load i32, i32* @y.42
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %107, %originalBB10alteredBB
  %116 = load i32, i32* %19, align 4
  %117 = load i32, i32* %8, align 4
  %118 = icmp ult i32 %116, %117
  %119 = load i32, i32* @x.41
  %120 = load i32, i32* @y.42
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %118, label %127, label %261

; <label>:127:                                    ; preds = %originalBBpart212
  %128 = load i32, i32* @x.41
  %129 = load i32, i32* @y.42
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %127, %originalBB14alteredBB
  store i32 0, i32* %20, align 4
  %136 = load i32, i32* @x.41
  %137 = load i32, i32* @y.42
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %144

; <label>:144:                                    ; preds = %originalBBpart235, %originalBBpart216
  %145 = load i32, i32* %20, align 4
  %146 = load i32, i32* %8, align 4
  %147 = icmp ult i32 %145, %146
  br i1 %147, label %148, label %241

; <label>:148:                                    ; preds = %144
  %149 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %5, align 8
  %150 = bitcast %class.BlockSparsityPattern* %149 to %class.BlockSparsityPatternBase*
  %151 = load i32, i32* %19, align 4
  %152 = zext i32 %151 to i64
  %153 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %152)
          to label %154 unwind label %221

; <label>:154:                                    ; preds = %148
  %155 = load i32, i32* %153, align 4
  %156 = load i32, i32* %20, align 4
  %157 = zext i32 %156 to i64
  %158 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %157)
          to label %159 unwind label %221

; <label>:159:                                    ; preds = %154
  %160 = load i32, i32* @x.41
  %161 = load i32, i32* @y.42
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %159, %originalBB18alteredBB
  %168 = load i32, i32* %158, align 4
  %169 = load i32, i32* @x.41
  %170 = load i32, i32* @y.42
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase* %150, i32 %155, i32 %168)
          to label %177 unwind label %221

; <label>:177:                                    ; preds = %originalBBpart220
  %178 = load i32, i32* @x.41
  %179 = load i32, i32* @y.42
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %177, %originalBB22alteredBB
  %186 = load i32, i32* @x.41
  %187 = load i32, i32* @y.42
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %194

; <label>:194:                                    ; preds = %originalBBpart224
  %195 = load i32, i32* @x.41
  %196 = load i32, i32* @y.42
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %194, %originalBB26alteredBB
  %203 = load i32, i32* %20, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %20, align 4
  %205 = load i32, i32* @x.41
  %206 = load i32, i32* @y.42
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart235, label %originalBB26alteredBB

originalBBpart235:                                ; preds = %originalBB26
  br label %144

; <label>:213:                                    ; preds = %3
  %214 = landingpad { i8*, i32 }
          cleanup
  %215 = extractvalue { i8*, i32 } %214, 0
  store i8* %215, i8** %12, align 8
  %216 = extractvalue { i8*, i32 } %214, 1
  store i32 %216, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  br label %506

; <label>:217:                                    ; preds = %38
  %218 = landingpad { i8*, i32 }
          cleanup
  %219 = extractvalue { i8*, i32 } %218, 0
  store i8* %219, i8** %12, align 8
  %220 = extractvalue { i8*, i32 } %218, 1
  store i32 %220, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  br label %488

; <label>:221:                                    ; preds = %430, %398, %393, %originalBBpart272, %343, %originalBBpart264, %322, %319, %310, %307, %originalBBpart260, %originalBBpart256, %originalBBpart220, %154, %148, %88, %85, %64, %44, %41
  %222 = load i32, i32* @x.41
  %223 = load i32, i32* @y.42
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %221, %originalBB37alteredBB
  %230 = landingpad { i8*, i32 }
          cleanup
  %231 = extractvalue { i8*, i32 } %230, 0
  store i8* %231, i8** %12, align 8
  %232 = extractvalue { i8*, i32 } %230, 1
  store i32 %232, i32* %13, align 4
  %233 = load i32, i32* @x.41
  %234 = load i32, i32* @y.42
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
          to label %471 unwind label %511

; <label>:241:                                    ; preds = %144
  br label %242

; <label>:242:                                    ; preds = %241
  %243 = load i32, i32* @x.41
  %244 = load i32, i32* @y.42
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %242, %originalBB41alteredBB
  %251 = load i32, i32* %19, align 4
  %252 = add i32 %251, 1
  store i32 %252, i32* %19, align 4
  %253 = load i32, i32* @x.41
  %254 = load i32, i32* @y.42
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart252, label %originalBB41alteredBB

originalBBpart252:                                ; preds = %originalBB41
  br label %107

; <label>:261:                                    ; preds = %originalBBpart212
  store i32 0, i32* %21, align 4
  br label %262

; <label>:262:                                    ; preds = %426, %261
  %263 = load i32, i32* %21, align 4
  %264 = icmp ult i32 %263, 6
  br i1 %264, label %265, label %429

; <label>:265:                                    ; preds = %262
  %266 = load i32, i32* @x.41
  %267 = load i32, i32* @y.42
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %265, %originalBB54alteredBB
  %274 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %275 = load i32, i32* @x.41
  %276 = load i32, i32* @y.42
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  %283 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %274)
          to label %284 unwind label %221

; <label>:284:                                    ; preds = %originalBBpart256
  %285 = load i32, i32* @x.41
  %286 = load i32, i32* @y.42
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %284, %originalBB58alteredBB
  %293 = bitcast %class.MGDoFCellAccessor* %283 to i8*
  %294 = getelementptr inbounds i8, i8* %293, i64 16
  %295 = bitcast i8* %294 to %class.CellAccessor*
  %296 = load i32, i32* %21, align 4
  %297 = load i32, i32* @x.41
  %298 = load i32, i32* @y.42
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  %305 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %295, i32 %296)
          to label %306 unwind label %221

; <label>:306:                                    ; preds = %originalBBpart260
  br i1 %305, label %425, label %307

; <label>:307:                                    ; preds = %306
  %308 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %309 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %308)
          to label %310 unwind label %221

; <label>:310:                                    ; preds = %307
  %311 = bitcast %class.MGDoFCellAccessor* %309 to i8*
  %312 = getelementptr inbounds i8, i8* %311, i64 16
  %313 = bitcast i8* %312 to %class.CellAccessor*
  %314 = load i32, i32* %21, align 4
  %315 = invoke i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor* %313, i32 %314)
          to label %316 unwind label %221

; <label>:316:                                    ; preds = %310
  %317 = load i32, i32* %6, align 4
  %318 = icmp eq i32 %315, %317
  br i1 %318, label %319, label %425

; <label>:319:                                    ; preds = %316
  %320 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %321 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %320)
          to label %322 unwind label %221

; <label>:322:                                    ; preds = %319
  %323 = load i32, i32* %21, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %22, %class.MGDoFCellAccessor* %321, i32 %323)
          to label %324 unwind label %221

; <label>:324:                                    ; preds = %322
  %325 = load i32, i32* @x.41
  %326 = load i32, i32* @y.42
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %324, %originalBB62alteredBB
  %333 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %334 = load i32, i32* @x.41
  %335 = load i32, i32* @y.42
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  %342 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %333)
          to label %343 unwind label %221

; <label>:343:                                    ; preds = %originalBBpart264
  %344 = bitcast %class.MGDoFCellAccessor* %342 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %344, %"class.std::vector.12"* dereferenceable(24) %14)
          to label %345 unwind label %221

; <label>:345:                                    ; preds = %343
  %346 = load i32, i32* @x.41
  %347 = load i32, i32* @y.42
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %345, %originalBB66alteredBB
  store i32 0, i32* %23, align 4
  %354 = load i32, i32* @x.41
  %355 = load i32, i32* @y.42
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %362

; <label>:362:                                    ; preds = %421, %originalBBpart268
  %363 = load i32, i32* %23, align 4
  %364 = load i32, i32* %8, align 4
  %365 = icmp ult i32 %363, %364
  br i1 %365, label %366, label %424

; <label>:366:                                    ; preds = %362
  store i32 0, i32* %24, align 4
  br label %367

; <label>:367:                                    ; preds = %originalBBpart291, %366
  %368 = load i32, i32* %24, align 4
  %369 = load i32, i32* %8, align 4
  %370 = icmp ult i32 %368, %369
  br i1 %370, label %371, label %420

; <label>:371:                                    ; preds = %367
  %372 = load i32, i32* @x.41
  %373 = load i32, i32* @y.42
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %371, %originalBB70alteredBB
  %380 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %5, align 8
  %381 = bitcast %class.BlockSparsityPattern* %380 to %class.BlockSparsityPatternBase*
  %382 = load i32, i32* %23, align 4
  %383 = zext i32 %382 to i64
  %384 = load i32, i32* @x.41
  %385 = load i32, i32* @y.42
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  %392 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %383)
          to label %393 unwind label %221

; <label>:393:                                    ; preds = %originalBBpart272
  %394 = load i32, i32* %392, align 4
  %395 = load i32, i32* %24, align 4
  %396 = zext i32 %395 to i64
  %397 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %396)
          to label %398 unwind label %221

; <label>:398:                                    ; preds = %393
  %399 = load i32, i32* %397, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase* %381, i32 %394, i32 %399)
          to label %400 unwind label %221

; <label>:400:                                    ; preds = %398
  br label %401

; <label>:401:                                    ; preds = %400
  %402 = load i32, i32* @x.41
  %403 = load i32, i32* @y.42
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %401, %originalBB74alteredBB
  %410 = load i32, i32* %24, align 4
  %411 = add i32 %410, 1
  store i32 %411, i32* %24, align 4
  %412 = load i32, i32* @x.41
  %413 = load i32, i32* @y.42
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart291, label %originalBB74alteredBB

originalBBpart291:                                ; preds = %originalBB74
  br label %367

; <label>:420:                                    ; preds = %367
  br label %421

; <label>:421:                                    ; preds = %420
  %422 = load i32, i32* %23, align 4
  %423 = add i32 %422, 1
  store i32 %423, i32* %23, align 4
  br label %362

; <label>:424:                                    ; preds = %362
  br label %425

; <label>:425:                                    ; preds = %424, %316, %306
  br label %426

; <label>:426:                                    ; preds = %425
  %427 = load i32, i32* %21, align 4
  %428 = add i32 %427, 1
  store i32 %428, i32* %21, align 4
  br label %262

; <label>:429:                                    ; preds = %262
  br label %430

; <label>:430:                                    ; preds = %429
  %431 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %17)
          to label %432 unwind label %221

; <label>:432:                                    ; preds = %430
  %433 = load i32, i32* @x.41
  %434 = load i32, i32* @y.42
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %432, %originalBB93alteredBB
  %441 = load i32, i32* @x.41
  %442 = load i32, i32* @y.42
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %64

; <label>:449:                                    ; preds = %originalBBpart24
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
          to label %450 unwind label %451

; <label>:450:                                    ; preds = %449
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
  ret void

; <label>:451:                                    ; preds = %449
  %452 = load i32, i32* @x.41
  %453 = load i32, i32* @y.42
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %451, %originalBB97alteredBB
  %460 = landingpad { i8*, i32 }
          cleanup
  %461 = extractvalue { i8*, i32 } %460, 0
  store i8* %461, i8** %12, align 8
  %462 = extractvalue { i8*, i32 } %460, 1
  store i32 %462, i32* %13, align 4
  %463 = load i32, i32* @x.41
  %464 = load i32, i32* @y.42
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br label %488

; <label>:471:                                    ; preds = %originalBBpart239
  %472 = load i32, i32* @x.41
  %473 = load i32, i32* @y.42
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %471, %originalBB101alteredBB
  %480 = load i32, i32* @x.41
  %481 = load i32, i32* @y.42
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %488

; <label>:488:                                    ; preds = %originalBBpart2103, %originalBBpart299, %217
  %489 = load i32, i32* @x.41
  %490 = load i32, i32* @y.42
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %488, %originalBB105alteredBB
  %497 = load i32, i32* @x.41
  %498 = load i32, i32* @y.42
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
          to label %505 unwind label %511

; <label>:505:                                    ; preds = %originalBBpart2107
  br label %506

; <label>:506:                                    ; preds = %505, %213
  %507 = load i8*, i8** %12, align 8
  %508 = load i32, i32* %13, align 4
  %509 = insertvalue { i8*, i32 } undef, i8* %507, 0
  %510 = insertvalue { i8*, i32 } %509, i32 %508, 1
  resume { i8*, i32 } %510

; <label>:511:                                    ; preds = %originalBBpart2107, %originalBBpart239
  %512 = load i32, i32* @x.41
  %513 = load i32, i32* @y.42
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %511, %originalBB109alteredBB
  %520 = landingpad { i8*, i32 }
          catch i8* null
  %521 = extractvalue { i8*, i32 } %520, 0
  call void @__clang_call_terminate(i8* %521) #9
  %522 = load i32, i32* @x.41
  %523 = load i32, i32* @y.42
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %47
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %90
  store i32 0, i32* %19, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %107
  %530 = load i32, i32* %19, align 4
  %531 = load i32, i32* %8, align 4
  %532 = icmp ult i32 %530, %531
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %127
  store i32 0, i32* %20, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %159
  %533 = load i32, i32* %158, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %177
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %194
  %534 = load i32, i32* %20, align 4
  %_ = sub i32 0, %534
  %gen = add i32 %_, 1
  %_27 = shl i32 %534, 1
  %_28 = shl i32 %534, 1
  %_29 = shl i32 %534, 1
  %_30 = sub i32 0, %534
  %gen31 = add i32 %_30, 1
  %_32 = sub i32 %534, 1
  %gen33 = mul i32 %_32, 1
  %535 = add i32 %534, 1
  store i32 %535, i32* %20, align 4
  br label %originalBB26

originalBB37alteredBB:                            ; preds = %originalBB37, %221
  %536 = landingpad { i8*, i32 }
          cleanup
  %537 = extractvalue { i8*, i32 } %536, 0
  store i8* %537, i8** %12, align 8
  %538 = extractvalue { i8*, i32 } %536, 1
  store i32 %538, i32* %13, align 4
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %242
  %539 = load i32, i32* %19, align 4
  %_42 = sub i32 %539, 1
  %gen43 = mul i32 %_42, 1
  %_44 = shl i32 %539, 1
  %_45 = sub i32 0, %539
  %gen46 = add i32 %_45, 1
  %_47 = sub i32 %539, 1
  %gen48 = mul i32 %_47, 1
  %_49 = sub i32 %539, 1
  %gen50 = mul i32 %_49, 1
  %540 = add i32 %539, 1
  store i32 %540, i32* %19, align 4
  br label %originalBB41

originalBB54alteredBB:                            ; preds = %originalBB54, %265
  %541 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %284
  %542 = bitcast %class.MGDoFCellAccessor* %283 to i8*
  %543 = getelementptr inbounds i8, i8* %542, i64 16
  %544 = bitcast i8* %543 to %class.CellAccessor*
  %545 = load i32, i32* %21, align 4
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %324
  %546 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %345
  store i32 0, i32* %23, align 4
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %371
  %547 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %5, align 8
  %548 = bitcast %class.BlockSparsityPattern* %547 to %class.BlockSparsityPatternBase*
  %549 = load i32, i32* %23, align 4
  %550 = zext i32 %549 to i64
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %401
  %551 = load i32, i32* %24, align 4
  %_75 = sub i32 %551, 1
  %gen76 = mul i32 %_75, 1
  %_77 = sub i32 %551, 1
  %gen78 = mul i32 %_77, 1
  %_79 = sub i32 %551, 1
  %gen80 = mul i32 %_79, 1
  %_81 = sub i32 %551, 1
  %gen82 = mul i32 %_81, 1
  %_83 = sub i32 0, %551
  %gen84 = add i32 %_83, 1
  %_85 = shl i32 %551, 1
  %_86 = sub i32 0, %551
  %gen87 = add i32 %_86, 1
  %_88 = sub i32 %551, 1
  %gen89 = mul i32 %_88, 1
  %552 = add i32 %551, 1
  store i32 %552, i32* %24, align 4
  br label %originalBB74

originalBB93alteredBB:                            ; preds = %originalBB93, %432
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %451
  %553 = landingpad { i8*, i32 }
          cleanup
  %554 = extractvalue { i8*, i32 } %553, 0
  store i8* %554, i8** %12, align 8
  %555 = extractvalue { i8*, i32 } %553, 1
  store i32 %555, i32* %13, align 4
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %471
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %488
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %511
  %556 = landingpad { i8*, i32 }
          catch i8* null
  %557 = extractvalue { i8*, i32 } %556, 0
  call void @__clang_call_terminate(i8* %557) #9
  br label %originalBB109
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools31make_flux_sparsity_pattern_edgeILi3E20BlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.BlockSparsityPattern* dereferenceable(144), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.BlockSparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.12", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::allocator.14", align 1
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca %"class.std::vector.12", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::allocator.14", align 1
  %18 = alloca %class.TriaIterator, align 8
  %19 = alloca %class.TriaIterator, align 8
  %20 = alloca i32, align 4
  %21 = alloca %class.TriaIterator, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.BlockSparsityPattern* %1, %class.BlockSparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %24 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %25 = load i32, i32* %6, align 4
  %26 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %24, i32 %25)
  store i32 %26, i32* %7, align 4
  %27 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %28 = load i32, i32* %6, align 4
  %29 = sub i32 %28, 1
  %30 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %27, i32 %29)
  store i32 %30, i32* %8, align 4
  %31 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %32 = bitcast %class.MGDoFHandler* %31 to %class.DoFHandler*
  %33 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %32)
  %34 = bitcast %class.FiniteElement* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 24
  %36 = bitcast i8* %35 to %class.FiniteElementData*
  %37 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %36, i32 0, i32 10
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %9, align 4
  %39 = load i32, i32* %9, align 4
  %40 = zext i32 %39 to i64
  store i32 0, i32* %11, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %12) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %10, i64 %40, i32* dereferenceable(4) %11, %"class.std::allocator.14"* dereferenceable(1) %12)
          to label %41 unwind label %281

; <label>:41:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  %42 = load i32, i32* %9, align 4
  %43 = zext i32 %42 to i64
  store i32 0, i32* %16, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %17) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %15, i64 %43, i32* dereferenceable(4) %16, %"class.std::allocator.14"* dereferenceable(1) %17)
          to label %44 unwind label %285

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* @x.43
  %46 = load i32, i32* @y.44
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %44, %originalBBalteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  %53 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %54 = load i32, i32* %6, align 4
  %55 = load i32, i32* @x.43
  %56 = load i32, i32* @y.44
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %18, %class.MGDoFHandler* %53, i32 %54)
          to label %63 unwind label %305

; <label>:63:                                     ; preds = %originalBBpart2
  %64 = load i32, i32* @x.43
  %65 = load i32, i32* @y.44
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %63, %originalBB1alteredBB
  %72 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %73 = load i32, i32* %6, align 4
  %74 = load i32, i32* @x.43
  %75 = load i32, i32* @y.44
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %19, %class.MGDoFHandler* %72, i32 %73)
          to label %82 unwind label %305

; <label>:82:                                     ; preds = %originalBBpart24
  br label %83

; <label>:83:                                     ; preds = %originalBBpart282, %82
  %84 = load i32, i32* @x.43
  %85 = load i32, i32* @y.44
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %83, %originalBB6alteredBB
  %92 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %93 = bitcast %class.TriaIterator* %19 to %class.TriaRawIterator*
  %94 = load i32, i32* @x.43
  %95 = load i32, i32* @y.44
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %102 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %92, %class.TriaRawIterator* dereferenceable(32) %93)
          to label %103 unwind label %305

; <label>:103:                                    ; preds = %originalBBpart28
  br i1 %102, label %104, label %418

; <label>:104:                                    ; preds = %103
  %105 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %106 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %105)
          to label %107 unwind label %305

; <label>:107:                                    ; preds = %104
  %108 = bitcast %class.MGDoFCellAccessor* %106 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %108, %"class.std::vector.12"* dereferenceable(24) %10)
          to label %109 unwind label %305

; <label>:109:                                    ; preds = %107
  store i32 0, i32* %20, align 4
  br label %110

; <label>:110:                                    ; preds = %originalBBpart278, %109
  %111 = load i32, i32* %20, align 4
  %112 = icmp ult i32 %111, 6
  br i1 %112, label %113, label %398

; <label>:113:                                    ; preds = %110
  %114 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %115 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %114)
          to label %116 unwind label %305

; <label>:116:                                    ; preds = %113
  %117 = bitcast %class.MGDoFCellAccessor* %115 to i8*
  %118 = getelementptr inbounds i8, i8* %117, i64 16
  %119 = bitcast i8* %118 to %class.CellAccessor*
  %120 = load i32, i32* %20, align 4
  %121 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %119, i32 %120)
          to label %122 unwind label %305

; <label>:122:                                    ; preds = %116
  %123 = load i32, i32* @x.43
  %124 = load i32, i32* @y.44
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %122, %originalBB10alteredBB
  %131 = load i32, i32* @x.43
  %132 = load i32, i32* @y.44
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %121, label %378, label %139

; <label>:139:                                    ; preds = %originalBBpart212
  %140 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %141 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %140)
          to label %142 unwind label %305

; <label>:142:                                    ; preds = %139
  %143 = bitcast %class.MGDoFCellAccessor* %141 to i8*
  %144 = getelementptr inbounds i8, i8* %143, i64 16
  %145 = bitcast i8* %144 to %class.CellAccessor*
  %146 = load i32, i32* %20, align 4
  %147 = invoke i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor* %145, i32 %146)
          to label %148 unwind label %305

; <label>:148:                                    ; preds = %142
  %149 = load i32, i32* @x.43
  %150 = load i32, i32* @y.44
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %148, %originalBB14alteredBB
  %157 = load i32, i32* %6, align 4
  %158 = icmp ne i32 %147, %157
  %159 = load i32, i32* @x.43
  %160 = load i32, i32* @y.44
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %158, label %167, label %378

; <label>:167:                                    ; preds = %originalBBpart216
  %168 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %169 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %168)
          to label %170 unwind label %305

; <label>:170:                                    ; preds = %167
  %171 = load i32, i32* %20, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %21, %class.MGDoFCellAccessor* %169, i32 %171)
          to label %172 unwind label %305

; <label>:172:                                    ; preds = %170
  %173 = bitcast %class.TriaIterator* %21 to %class.TriaRawIterator*
  %174 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %173)
          to label %175 unwind label %305

; <label>:175:                                    ; preds = %172
  %176 = bitcast %class.MGDoFCellAccessor* %174 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %176, %"class.std::vector.12"* dereferenceable(24) %15)
          to label %177 unwind label %305

; <label>:177:                                    ; preds = %175
  store i32 0, i32* %22, align 4
  br label %178

; <label>:178:                                    ; preds = %originalBBpart260, %177
  %179 = load i32, i32* @x.43
  %180 = load i32, i32* @y.44
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %178, %originalBB18alteredBB
  %187 = load i32, i32* %22, align 4
  %188 = load i32, i32* %9, align 4
  %189 = icmp ult i32 %187, %188
  %190 = load i32, i32* @x.43
  %191 = load i32, i32* @y.44
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %189, label %198, label %361

; <label>:198:                                    ; preds = %originalBBpart220
  store i32 0, i32* %23, align 4
  br label %199

; <label>:199:                                    ; preds = %278, %198
  %200 = load i32, i32* @x.43
  %201 = load i32, i32* @y.44
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %199, %originalBB22alteredBB
  %208 = load i32, i32* %23, align 4
  %209 = load i32, i32* %9, align 4
  %210 = icmp ult i32 %208, %209
  %211 = load i32, i32* @x.43
  %212 = load i32, i32* @y.44
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %210, label %219, label %325

; <label>:219:                                    ; preds = %originalBBpart224
  %220 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %5, align 8
  %221 = bitcast %class.BlockSparsityPattern* %220 to %class.BlockSparsityPatternBase*
  %222 = load i32, i32* %22, align 4
  %223 = zext i32 %222 to i64
  %224 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %15, i64 %223)
          to label %225 unwind label %305

; <label>:225:                                    ; preds = %219
  %226 = load i32, i32* @x.43
  %227 = load i32, i32* @y.44
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %225, %originalBB26alteredBB
  %234 = load i32, i32* %224, align 4
  %235 = load i32, i32* %23, align 4
  %236 = zext i32 %235 to i64
  %237 = load i32, i32* @x.43
  %238 = load i32, i32* @y.44
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %245 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %236)
          to label %246 unwind label %305

; <label>:246:                                    ; preds = %originalBBpart228
  %247 = load i32, i32* %245, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase* %221, i32 %234, i32 %247)
          to label %248 unwind label %305

; <label>:248:                                    ; preds = %246
  %249 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %5, align 8
  %250 = bitcast %class.BlockSparsityPattern* %249 to %class.BlockSparsityPatternBase*
  %251 = load i32, i32* %23, align 4
  %252 = zext i32 %251 to i64
  %253 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %15, i64 %252)
          to label %254 unwind label %305

; <label>:254:                                    ; preds = %248
  %255 = load i32, i32* %253, align 4
  %256 = load i32, i32* %22, align 4
  %257 = zext i32 %256 to i64
  %258 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %257)
          to label %259 unwind label %305

; <label>:259:                                    ; preds = %254
  %260 = load i32, i32* %258, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase* %250, i32 %255, i32 %260)
          to label %261 unwind label %305

; <label>:261:                                    ; preds = %259
  %262 = load i32, i32* @x.43
  %263 = load i32, i32* @y.44
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %261, %originalBB30alteredBB
  %270 = load i32, i32* @x.43
  %271 = load i32, i32* @y.44
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %278

; <label>:278:                                    ; preds = %originalBBpart232
  %279 = load i32, i32* %23, align 4
  %280 = add i32 %279, 1
  store i32 %280, i32* %23, align 4
  br label %199

; <label>:281:                                    ; preds = %3
  %282 = landingpad { i8*, i32 }
          cleanup
  %283 = extractvalue { i8*, i32 } %282, 0
  store i8* %283, i8** %13, align 8
  %284 = extractvalue { i8*, i32 } %282, 1
  store i32 %284, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  br label %459

; <label>:285:                                    ; preds = %41
  %286 = load i32, i32* @x.43
  %287 = load i32, i32* @y.44
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %285, %originalBB34alteredBB
  %294 = landingpad { i8*, i32 }
          cleanup
  %295 = extractvalue { i8*, i32 } %294, 0
  store i8* %295, i8** %13, align 8
  %296 = extractvalue { i8*, i32 } %294, 1
  store i32 %296, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  %297 = load i32, i32* @x.43
  %298 = load i32, i32* @y.44
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %457

; <label>:305:                                    ; preds = %399, %259, %254, %248, %246, %originalBBpart228, %219, %175, %172, %170, %167, %142, %139, %116, %113, %107, %104, %originalBBpart28, %originalBBpart24, %originalBBpart2
  %306 = load i32, i32* @x.43
  %307 = load i32, i32* @y.44
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %305, %originalBB38alteredBB
  %314 = landingpad { i8*, i32 }
          cleanup
  %315 = extractvalue { i8*, i32 } %314, 0
  store i8* %315, i8** %13, align 8
  %316 = extractvalue { i8*, i32 } %314, 1
  store i32 %316, i32* %14, align 4
  %317 = load i32, i32* @x.43
  %318 = load i32, i32* @y.44
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %15)
          to label %456 unwind label %464

; <label>:325:                                    ; preds = %originalBBpart224
  %326 = load i32, i32* @x.43
  %327 = load i32, i32* @y.44
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %325, %originalBB42alteredBB
  %334 = load i32, i32* @x.43
  %335 = load i32, i32* @y.44
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %342

; <label>:342:                                    ; preds = %originalBBpart244
  %343 = load i32, i32* @x.43
  %344 = load i32, i32* @y.44
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %342, %originalBB46alteredBB
  %351 = load i32, i32* %22, align 4
  %352 = add i32 %351, 1
  store i32 %352, i32* %22, align 4
  %353 = load i32, i32* @x.43
  %354 = load i32, i32* @y.44
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart260, label %originalBB46alteredBB

originalBBpart260:                                ; preds = %originalBB46
  br label %178

; <label>:361:                                    ; preds = %originalBBpart220
  %362 = load i32, i32* @x.43
  %363 = load i32, i32* @y.44
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %361, %originalBB62alteredBB
  %370 = load i32, i32* @x.43
  %371 = load i32, i32* @y.44
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %378

; <label>:378:                                    ; preds = %originalBBpart264, %originalBBpart216, %originalBBpart212
  br label %379

; <label>:379:                                    ; preds = %378
  %380 = load i32, i32* @x.43
  %381 = load i32, i32* @y.44
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %379, %originalBB66alteredBB
  %388 = load i32, i32* %20, align 4
  %389 = add i32 %388, 1
  store i32 %389, i32* %20, align 4
  %390 = load i32, i32* @x.43
  %391 = load i32, i32* @y.44
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart278, label %originalBB66alteredBB

originalBBpart278:                                ; preds = %originalBB66
  br label %110

; <label>:398:                                    ; preds = %110
  br label %399

; <label>:399:                                    ; preds = %398
  %400 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %18)
          to label %401 unwind label %305

; <label>:401:                                    ; preds = %399
  %402 = load i32, i32* @x.43
  %403 = load i32, i32* @y.44
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %401, %originalBB80alteredBB
  %410 = load i32, i32* @x.43
  %411 = load i32, i32* @y.44
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %83

; <label>:418:                                    ; preds = %103
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %15)
          to label %419 unwind label %436

; <label>:419:                                    ; preds = %418
  %420 = load i32, i32* @x.43
  %421 = load i32, i32* @y.44
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %419, %originalBB84alteredBB
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
  %428 = load i32, i32* @x.43
  %429 = load i32, i32* @y.44
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  ret void

; <label>:436:                                    ; preds = %418
  %437 = load i32, i32* @x.43
  %438 = load i32, i32* @y.44
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %436, %originalBB88alteredBB
  %445 = landingpad { i8*, i32 }
          cleanup
  %446 = extractvalue { i8*, i32 } %445, 0
  store i8* %446, i8** %13, align 8
  %447 = extractvalue { i8*, i32 } %445, 1
  store i32 %447, i32* %14, align 4
  %448 = load i32, i32* @x.43
  %449 = load i32, i32* @y.44
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br label %457

; <label>:456:                                    ; preds = %originalBBpart240
  br label %457

; <label>:457:                                    ; preds = %456, %originalBBpart290, %originalBBpart236
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
          to label %458 unwind label %464

; <label>:458:                                    ; preds = %457
  br label %459

; <label>:459:                                    ; preds = %458, %281
  %460 = load i8*, i8** %13, align 8
  %461 = load i32, i32* %14, align 4
  %462 = insertvalue { i8*, i32 } undef, i8* %460, 0
  %463 = insertvalue { i8*, i32 } %462, i32 %461, 1
  resume { i8*, i32 } %463

; <label>:464:                                    ; preds = %457, %originalBBpart240
  %465 = landingpad { i8*, i32 }
          catch i8* null
  %466 = extractvalue { i8*, i32 } %465, 0
  call void @__clang_call_terminate(i8* %466) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %44
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  %467 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %468 = load i32, i32* %6, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %63
  %469 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %470 = load i32, i32* %6, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %83
  %471 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %472 = bitcast %class.TriaIterator* %19 to %class.TriaRawIterator*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %122
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %148
  %473 = load i32, i32* %6, align 4
  %474 = icmp ne i32 %147, %473
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %178
  %475 = load i32, i32* %22, align 4
  %476 = load i32, i32* %9, align 4
  %477 = icmp ult i32 %475, %476
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %199
  %478 = load i32, i32* %23, align 4
  %479 = load i32, i32* %9, align 4
  %480 = icmp ult i32 %478, %479
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %225
  %481 = load i32, i32* %224, align 4
  %482 = load i32, i32* %23, align 4
  %483 = zext i32 %482 to i64
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %261
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %285
  %484 = landingpad { i8*, i32 }
          cleanup
  %485 = extractvalue { i8*, i32 } %484, 0
  store i8* %485, i8** %13, align 8
  %486 = extractvalue { i8*, i32 } %484, 1
  store i32 %486, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %305
  %487 = landingpad { i8*, i32 }
          cleanup
  %488 = extractvalue { i8*, i32 } %487, 0
  store i8* %488, i8** %13, align 8
  %489 = extractvalue { i8*, i32 } %487, 1
  store i32 %489, i32* %14, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %325
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %342
  %490 = load i32, i32* %22, align 4
  %_ = sub i32 %490, 1
  %gen = mul i32 %_, 1
  %_47 = sub i32 0, %490
  %gen48 = add i32 %_47, 1
  %_49 = shl i32 %490, 1
  %_50 = shl i32 %490, 1
  %_51 = sub i32 0, %490
  %gen52 = add i32 %_51, 1
  %_53 = shl i32 %490, 1
  %_54 = shl i32 %490, 1
  %_55 = sub i32 %490, 1
  %gen56 = mul i32 %_55, 1
  %_57 = sub i32 %490, 1
  %gen58 = mul i32 %_57, 1
  %491 = add i32 %490, 1
  store i32 %491, i32* %22, align 4
  br label %originalBB46

originalBB62alteredBB:                            ; preds = %originalBB62, %361
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %379
  %492 = load i32, i32* %20, align 4
  %_67 = shl i32 %492, 1
  %_68 = sub i32 %492, 1
  %gen69 = mul i32 %_68, 1
  %_70 = sub i32 %492, 1
  %gen71 = mul i32 %_70, 1
  %_72 = sub i32 0, %492
  %gen73 = add i32 %_72, 1
  %_74 = shl i32 %492, 1
  %_75 = sub i32 0, %492
  %gen76 = add i32 %_75, 1
  %493 = add i32 %492, 1
  store i32 %493, i32* %20, align 4
  br label %originalBB66

originalBB80alteredBB:                            ; preds = %originalBB80, %401
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %419
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %436
  %494 = landingpad { i8*, i32 }
          cleanup
  %495 = extractvalue { i8*, i32 } %494, 0
  store i8* %495, i8** %13, align 8
  %496 = extractvalue { i8*, i32 } %494, 1
  store i32 %496, i32* %14, align 4
  br label %originalBB88
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools21make_sparsity_patternILi3E30CompressedBlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.CompressedBlockSparsityPattern* dereferenceable(144), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.CompressedBlockSparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::vector.12", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.14", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %class.TriaIterator, align 8
  %15 = alloca %class.TriaIterator, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.CompressedBlockSparsityPattern* %1, %class.CompressedBlockSparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %18 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %19 = load i32, i32* %6, align 4
  %20 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %18, i32 %19)
  store i32 %20, i32* %7, align 4
  %21 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %22 = bitcast %class.MGDoFHandler* %21 to %class.DoFHandler*
  %23 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %22)
  %24 = bitcast %class.FiniteElement* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 24
  %26 = bitcast i8* %25 to %class.FiniteElementData*
  %27 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %26, i32 0, i32 10
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %8, align 4
  %29 = load i32, i32* %8, align 4
  %30 = zext i32 %29 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %11) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %9, i64 %30, i32* dereferenceable(4) %10, %"class.std::allocator.14"* dereferenceable(1) %11)
          to label %31 unwind label %139

; <label>:31:                                     ; preds = %3
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  %32 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %33 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %14, %class.MGDoFHandler* %32, i32 %33)
          to label %34 unwind label %143

; <label>:34:                                     ; preds = %31
  %35 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %36 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %15, %class.MGDoFHandler* %35, i32 %36)
          to label %37 unwind label %143

; <label>:37:                                     ; preds = %34
  br label %38

; <label>:38:                                     ; preds = %170, %37
  %39 = bitcast %class.TriaIterator* %14 to %class.TriaRawIterator*
  %40 = bitcast %class.TriaIterator* %15 to %class.TriaRawIterator*
  %41 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %39, %class.TriaRawIterator* dereferenceable(32) %40)
          to label %42 unwind label %143

; <label>:42:                                     ; preds = %38
  br i1 %41, label %43, label %171

; <label>:43:                                     ; preds = %42
  %44 = bitcast %class.TriaIterator* %14 to %class.TriaRawIterator*
  %45 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %44)
          to label %46 unwind label %143

; <label>:46:                                     ; preds = %43
  %47 = load i32, i32* @x.45
  %48 = load i32, i32* @y.46
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %46, %originalBBalteredBB
  %55 = bitcast %class.MGDoFCellAccessor* %45 to %class.MGDoFObjectAccessor*
  %56 = load i32, i32* @x.45
  %57 = load i32, i32* @y.46
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %55, %"class.std::vector.12"* dereferenceable(24) %9)
          to label %64 unwind label %143

; <label>:64:                                     ; preds = %originalBBpart2
  store i32 0, i32* %16, align 4
  br label %65

; <label>:65:                                     ; preds = %148, %64
  %66 = load i32, i32* @x.45
  %67 = load i32, i32* @y.46
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %65, %originalBB1alteredBB
  %74 = load i32, i32* %16, align 4
  %75 = load i32, i32* %8, align 4
  %76 = icmp ult i32 %74, %75
  %77 = load i32, i32* @x.45
  %78 = load i32, i32* @y.46
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %76, label %85, label %151

; <label>:85:                                     ; preds = %originalBBpart24
  %86 = load i32, i32* @x.45
  %87 = load i32, i32* @y.46
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %85, %originalBB6alteredBB
  store i32 0, i32* %17, align 4
  %94 = load i32, i32* @x.45
  %95 = load i32, i32* @y.46
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %102

; <label>:102:                                    ; preds = %136, %originalBBpart28
  %103 = load i32, i32* %17, align 4
  %104 = load i32, i32* %8, align 4
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %106, label %147

; <label>:106:                                    ; preds = %102
  %107 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %5, align 8
  %108 = bitcast %class.CompressedBlockSparsityPattern* %107 to %class.BlockSparsityPatternBase.103*
  %109 = load i32, i32* %16, align 4
  %110 = zext i32 %109 to i64
  %111 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %110)
          to label %112 unwind label %143

; <label>:112:                                    ; preds = %106
  %113 = load i32, i32* @x.45
  %114 = load i32, i32* @y.46
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %112, %originalBB10alteredBB
  %121 = load i32, i32* %111, align 4
  %122 = load i32, i32* %17, align 4
  %123 = zext i32 %122 to i64
  %124 = load i32, i32* @x.45
  %125 = load i32, i32* @y.46
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %132 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %9, i64 %123)
          to label %133 unwind label %143

; <label>:133:                                    ; preds = %originalBBpart212
  %134 = load i32, i32* %132, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103* %108, i32 %121, i32 %134)
          to label %135 unwind label %143

; <label>:135:                                    ; preds = %133
  br label %136

; <label>:136:                                    ; preds = %135
  %137 = load i32, i32* %17, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %17, align 4
  br label %102

; <label>:139:                                    ; preds = %3
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %12, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %13, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %11) #2
  br label %189

; <label>:143:                                    ; preds = %168, %133, %originalBBpart212, %106, %originalBBpart2, %43, %38, %34, %31
  %144 = landingpad { i8*, i32 }
          cleanup
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %12, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %13, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
          to label %172 unwind label %194

; <label>:147:                                    ; preds = %102
  br label %148

; <label>:148:                                    ; preds = %147
  %149 = load i32, i32* %16, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %16, align 4
  br label %65

; <label>:151:                                    ; preds = %originalBBpart24
  %152 = load i32, i32* @x.45
  %153 = load i32, i32* @y.46
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %151, %originalBB14alteredBB
  %160 = load i32, i32* @x.45
  %161 = load i32, i32* @y.46
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %168

; <label>:168:                                    ; preds = %originalBBpart216
  %169 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %14)
          to label %170 unwind label %143

; <label>:170:                                    ; preds = %168
  br label %38

; <label>:171:                                    ; preds = %42
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %9)
  ret void

; <label>:172:                                    ; preds = %143
  %173 = load i32, i32* @x.45
  %174 = load i32, i32* @y.46
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %172, %originalBB18alteredBB
  %181 = load i32, i32* @x.45
  %182 = load i32, i32* @y.46
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %189

; <label>:189:                                    ; preds = %originalBBpart220, %139
  %190 = load i8*, i8** %12, align 8
  %191 = load i32, i32* %13, align 4
  %192 = insertvalue { i8*, i32 } undef, i8* %190, 0
  %193 = insertvalue { i8*, i32 } %192, i32 %191, 1
  resume { i8*, i32 } %193

; <label>:194:                                    ; preds = %143
  %195 = landingpad { i8*, i32 }
          catch i8* null
  %196 = extractvalue { i8*, i32 } %195, 0
  call void @__clang_call_terminate(i8* %196) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %46
  %197 = bitcast %class.MGDoFCellAccessor* %45 to %class.MGDoFObjectAccessor*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %65
  %198 = load i32, i32* %16, align 4
  %199 = load i32, i32* %8, align 4
  %200 = icmp ult i32 %198, %199
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %85
  store i32 0, i32* %17, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %112
  %201 = load i32, i32* %111, align 4
  %202 = load i32, i32* %17, align 4
  %203 = zext i32 %202 to i64
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %151
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %172
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103*, i32, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.47
  %5 = load i32, i32* @y.48
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.BlockSparsityPatternBase.103*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"struct.std::pair.60", align 4
  %16 = alloca %"struct.std::pair.60", align 4
  %17 = alloca %"class.internal::TableBaseAccessors::Accessor.169", align 8
  store %class.BlockSparsityPatternBase.103* %0, %class.BlockSparsityPatternBase.103** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %18 = load %class.BlockSparsityPatternBase.103*, %class.BlockSparsityPatternBase.103** %12, align 8
  %19 = getelementptr inbounds %class.BlockSparsityPatternBase.103, %class.BlockSparsityPatternBase.103* %18, i32 0, i32 4
  %20 = load i32, i32* %13, align 4
  %21 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %19, i32 %20)
  %22 = bitcast %"struct.std::pair.60"* %15 to i64*
  store i64 %21, i64* %22, align 4
  %23 = getelementptr inbounds %class.BlockSparsityPatternBase.103, %class.BlockSparsityPatternBase.103* %18, i32 0, i32 5
  %24 = load i32, i32* %14, align 4
  %25 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %23, i32 %24)
  %26 = bitcast %"struct.std::pair.60"* %16 to i64*
  store i64 %25, i64* %26, align 4
  %27 = getelementptr inbounds %class.BlockSparsityPatternBase.103, %class.BlockSparsityPatternBase.103* %18, i32 0, i32 3
  %28 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %15, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  call void @_ZN5TableILi2E12SmartPointerI25CompressedSparsityPatternEEixEj(%"class.internal::TableBaseAccessors::Accessor.169"* sret %17, %class.Table.104* %27, i32 %29)
  %30 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %16, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = call dereferenceable(8) %class.SmartPointer.106* @_ZNK8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI25CompressedSparsityPatternELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.169"* %17, i32 %31)
  %33 = call %class.CompressedSparsityPattern* @_ZNK12SmartPointerI25CompressedSparsityPatternEptEv(%class.SmartPointer.106* %32)
  %34 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %15, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %16, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  call void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %33, i32 %35, i32 %37)
  %38 = load i32, i32* @x.47
  %39 = load i32, i32* @y.48
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %46 = alloca %class.BlockSparsityPatternBase.103*, align 8
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca %"struct.std::pair.60", align 4
  %50 = alloca %"struct.std::pair.60", align 4
  %51 = alloca %"class.internal::TableBaseAccessors::Accessor.169", align 8
  store %class.BlockSparsityPatternBase.103* %0, %class.BlockSparsityPatternBase.103** %46, align 8
  store i32 %1, i32* %47, align 4
  store i32 %2, i32* %48, align 4
  %52 = load %class.BlockSparsityPatternBase.103*, %class.BlockSparsityPatternBase.103** %46, align 8
  %53 = getelementptr inbounds %class.BlockSparsityPatternBase.103, %class.BlockSparsityPatternBase.103* %52, i32 0, i32 4
  %54 = load i32, i32* %47, align 4
  %55 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %53, i32 %54)
  %56 = bitcast %"struct.std::pair.60"* %49 to i64*
  store i64 %55, i64* %56, align 4
  %57 = getelementptr inbounds %class.BlockSparsityPatternBase.103, %class.BlockSparsityPatternBase.103* %52, i32 0, i32 5
  %58 = load i32, i32* %48, align 4
  %59 = call i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices* %57, i32 %58)
  %60 = bitcast %"struct.std::pair.60"* %50 to i64*
  store i64 %59, i64* %60, align 4
  %61 = getelementptr inbounds %class.BlockSparsityPatternBase.103, %class.BlockSparsityPatternBase.103* %52, i32 0, i32 3
  %62 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %49, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  call void @_ZN5TableILi2E12SmartPointerI25CompressedSparsityPatternEEixEj(%"class.internal::TableBaseAccessors::Accessor.169"* sret %51, %class.Table.104* %61, i32 %63)
  %64 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %50, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = call dereferenceable(8) %class.SmartPointer.106* @_ZNK8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI25CompressedSparsityPatternELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.169"* %51, i32 %65)
  %67 = call %class.CompressedSparsityPattern* @_ZNK12SmartPointerI25CompressedSparsityPatternEptEv(%class.SmartPointer.106* %66)
  %68 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %49, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %50, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  call void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %67, i32 %69, i32 %71)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools26make_flux_sparsity_patternILi3E30CompressedBlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.CompressedBlockSparsityPattern* dereferenceable(144), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.49
  %5 = load i32, i32* @y.50
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.MGDoFHandler*, align 8
  %13 = alloca %class.CompressedBlockSparsityPattern*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::vector.12", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::allocator.14", align 1
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca %"class.std::vector.12", align 8
  %23 = alloca i32, align 4
  %24 = alloca %"class.std::allocator.14", align 1
  %25 = alloca %class.TriaIterator, align 8
  %26 = alloca %class.TriaIterator, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %class.TriaIterator, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %12, align 8
  store %class.CompressedBlockSparsityPattern* %1, %class.CompressedBlockSparsityPattern** %13, align 8
  store i32 %2, i32* %14, align 4
  %33 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %34 = load i32, i32* %14, align 4
  %35 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %33, i32 %34)
  store i32 %35, i32* %15, align 4
  %36 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %37 = bitcast %class.MGDoFHandler* %36 to %class.DoFHandler*
  %38 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %37)
  %39 = bitcast %class.FiniteElement* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 24
  %41 = bitcast i8* %40 to %class.FiniteElementData*
  %42 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %41, i32 0, i32 10
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %16, align 4
  %44 = load i32, i32* %16, align 4
  %45 = zext i32 %44 to i64
  store i32 0, i32* %18, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %19) #2
  %46 = load i32, i32* @x.49
  %47 = load i32, i32* @y.50
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %17, i64 %45, i32* dereferenceable(4) %18, %"class.std::allocator.14"* dereferenceable(1) %19)
          to label %54 unwind label %181

; <label>:54:                                     ; preds = %originalBBpart2
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %19) #2
  %55 = load i32, i32* %16, align 4
  %56 = zext i32 %55 to i64
  store i32 0, i32* %23, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %24) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %22, i64 %56, i32* dereferenceable(4) %23, %"class.std::allocator.14"* dereferenceable(1) %24)
          to label %57 unwind label %201

; <label>:57:                                     ; preds = %54
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  %58 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %59 = load i32, i32* %14, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %25, %class.MGDoFHandler* %58, i32 %59)
          to label %60 unwind label %221

; <label>:60:                                     ; preds = %57
  %61 = load i32, i32* @x.49
  %62 = load i32, i32* @y.50
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %60, %originalBB1alteredBB
  %69 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %70 = load i32, i32* %14, align 4
  %71 = load i32, i32* @x.49
  %72 = load i32, i32* @y.50
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %26, %class.MGDoFHandler* %69, i32 %70)
          to label %79 unwind label %221

; <label>:79:                                     ; preds = %originalBBpart24
  br label %80

; <label>:80:                                     ; preds = %originalBBpart261, %79
  %81 = load i32, i32* @x.49
  %82 = load i32, i32* @y.50
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %80, %originalBB6alteredBB
  %89 = bitcast %class.TriaIterator* %25 to %class.TriaRawIterator*
  %90 = bitcast %class.TriaIterator* %26 to %class.TriaRawIterator*
  %91 = load i32, i32* @x.49
  %92 = load i32, i32* @y.50
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %99 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %89, %class.TriaRawIterator* dereferenceable(32) %90)
          to label %100 unwind label %221

; <label>:100:                                    ; preds = %originalBBpart28
  br i1 %99, label %101, label %417

; <label>:101:                                    ; preds = %100
  %102 = bitcast %class.TriaIterator* %25 to %class.TriaRawIterator*
  %103 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %102)
          to label %104 unwind label %221

; <label>:104:                                    ; preds = %101
  %105 = bitcast %class.MGDoFCellAccessor* %103 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %105, %"class.std::vector.12"* dereferenceable(24) %17)
          to label %106 unwind label %221

; <label>:106:                                    ; preds = %104
  store i32 0, i32* %27, align 4
  br label %107

; <label>:107:                                    ; preds = %226, %106
  %108 = load i32, i32* %27, align 4
  %109 = load i32, i32* %16, align 4
  %110 = icmp ult i32 %108, %109
  br i1 %110, label %111, label %229

; <label>:111:                                    ; preds = %107
  store i32 0, i32* %28, align 4
  br label %112

; <label>:112:                                    ; preds = %originalBBpart225, %111
  %113 = load i32, i32* %28, align 4
  %114 = load i32, i32* %16, align 4
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %116, label %225

; <label>:116:                                    ; preds = %112
  %117 = load i32, i32* @x.49
  %118 = load i32, i32* @y.50
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %116, %originalBB10alteredBB
  %125 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %13, align 8
  %126 = bitcast %class.CompressedBlockSparsityPattern* %125 to %class.BlockSparsityPatternBase.103*
  %127 = load i32, i32* %27, align 4
  %128 = zext i32 %127 to i64
  %129 = load i32, i32* @x.49
  %130 = load i32, i32* @y.50
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %137 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %17, i64 %128)
          to label %138 unwind label %221

; <label>:138:                                    ; preds = %originalBBpart212
  %139 = load i32, i32* %137, align 4
  %140 = load i32, i32* %28, align 4
  %141 = zext i32 %140 to i64
  %142 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %17, i64 %141)
          to label %143 unwind label %221

; <label>:143:                                    ; preds = %138
  %144 = load i32, i32* @x.49
  %145 = load i32, i32* @y.50
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %143, %originalBB14alteredBB
  %152 = load i32, i32* %142, align 4
  %153 = load i32, i32* @x.49
  %154 = load i32, i32* @y.50
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103* %126, i32 %139, i32 %152)
          to label %161 unwind label %221

; <label>:161:                                    ; preds = %originalBBpart216
  br label %162

; <label>:162:                                    ; preds = %161
  %163 = load i32, i32* @x.49
  %164 = load i32, i32* @y.50
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %162, %originalBB18alteredBB
  %171 = load i32, i32* %28, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %28, align 4
  %173 = load i32, i32* @x.49
  %174 = load i32, i32* @y.50
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart225, label %originalBB18alteredBB

originalBBpart225:                                ; preds = %originalBB18
  br label %112

; <label>:181:                                    ; preds = %originalBBpart2
  %182 = load i32, i32* @x.49
  %183 = load i32, i32* @y.50
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %181, %originalBB27alteredBB
  %190 = landingpad { i8*, i32 }
          cleanup
  %191 = extractvalue { i8*, i32 } %190, 0
  store i8* %191, i8** %20, align 8
  %192 = extractvalue { i8*, i32 } %190, 1
  store i32 %192, i32* %21, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %19) #2
  %193 = load i32, i32* @x.49
  %194 = load i32, i32* @y.50
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %458

; <label>:201:                                    ; preds = %54
  %202 = load i32, i32* @x.49
  %203 = load i32, i32* @y.50
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %201, %originalBB31alteredBB
  %210 = landingpad { i8*, i32 }
          cleanup
  %211 = extractvalue { i8*, i32 } %210, 0
  store i8* %211, i8** %20, align 8
  %212 = extractvalue { i8*, i32 } %210, 1
  store i32 %212, i32* %21, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  %213 = load i32, i32* @x.49
  %214 = load i32, i32* @y.50
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %440

; <label>:221:                                    ; preds = %398, %350, %345, %originalBBpart249, %295, %292, %290, %287, %278, %275, %252, %249, %originalBBpart216, %138, %originalBBpart212, %104, %101, %originalBBpart28, %originalBBpart24, %57
  %222 = landingpad { i8*, i32 }
          cleanup
  %223 = extractvalue { i8*, i32 } %222, 0
  store i8* %223, i8** %20, align 8
  %224 = extractvalue { i8*, i32 } %222, 1
  store i32 %224, i32* %21, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %22)
          to label %439 unwind label %479

; <label>:225:                                    ; preds = %112
  br label %226

; <label>:226:                                    ; preds = %225
  %227 = load i32, i32* %27, align 4
  %228 = add i32 %227, 1
  store i32 %228, i32* %27, align 4
  br label %107

; <label>:229:                                    ; preds = %107
  %230 = load i32, i32* @x.49
  %231 = load i32, i32* @y.50
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %229, %originalBB35alteredBB
  store i32 0, i32* %29, align 4
  %238 = load i32, i32* @x.49
  %239 = load i32, i32* @y.50
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %246

; <label>:246:                                    ; preds = %378, %originalBBpart237
  %247 = load i32, i32* %29, align 4
  %248 = icmp ult i32 %247, 6
  br i1 %248, label %249, label %381

; <label>:249:                                    ; preds = %246
  %250 = bitcast %class.TriaIterator* %25 to %class.TriaRawIterator*
  %251 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %250)
          to label %252 unwind label %221

; <label>:252:                                    ; preds = %249
  %253 = bitcast %class.MGDoFCellAccessor* %251 to i8*
  %254 = getelementptr inbounds i8, i8* %253, i64 16
  %255 = bitcast i8* %254 to %class.CellAccessor*
  %256 = load i32, i32* %29, align 4
  %257 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %255, i32 %256)
          to label %258 unwind label %221

; <label>:258:                                    ; preds = %252
  %259 = load i32, i32* @x.49
  %260 = load i32, i32* @y.50
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %258, %originalBB39alteredBB
  %267 = load i32, i32* @x.49
  %268 = load i32, i32* @y.50
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %257, label %361, label %275

; <label>:275:                                    ; preds = %originalBBpart241
  %276 = bitcast %class.TriaIterator* %25 to %class.TriaRawIterator*
  %277 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %276)
          to label %278 unwind label %221

; <label>:278:                                    ; preds = %275
  %279 = bitcast %class.MGDoFCellAccessor* %277 to i8*
  %280 = getelementptr inbounds i8, i8* %279, i64 16
  %281 = bitcast i8* %280 to %class.CellAccessor*
  %282 = load i32, i32* %29, align 4
  %283 = invoke i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor* %281, i32 %282)
          to label %284 unwind label %221

; <label>:284:                                    ; preds = %278
  %285 = load i32, i32* %14, align 4
  %286 = icmp eq i32 %283, %285
  br i1 %286, label %287, label %361

; <label>:287:                                    ; preds = %284
  %288 = bitcast %class.TriaIterator* %25 to %class.TriaRawIterator*
  %289 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %288)
          to label %290 unwind label %221

; <label>:290:                                    ; preds = %287
  %291 = load i32, i32* %29, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %30, %class.MGDoFCellAccessor* %289, i32 %291)
          to label %292 unwind label %221

; <label>:292:                                    ; preds = %290
  %293 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %294 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %293)
          to label %295 unwind label %221

; <label>:295:                                    ; preds = %292
  %296 = bitcast %class.MGDoFCellAccessor* %294 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %296, %"class.std::vector.12"* dereferenceable(24) %22)
          to label %297 unwind label %221

; <label>:297:                                    ; preds = %295
  store i32 0, i32* %31, align 4
  br label %298

; <label>:298:                                    ; preds = %357, %297
  %299 = load i32, i32* %31, align 4
  %300 = load i32, i32* %16, align 4
  %301 = icmp ult i32 %299, %300
  br i1 %301, label %302, label %360

; <label>:302:                                    ; preds = %298
  %303 = load i32, i32* @x.49
  %304 = load i32, i32* @y.50
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %302, %originalBB43alteredBB
  store i32 0, i32* %32, align 4
  %311 = load i32, i32* @x.49
  %312 = load i32, i32* @y.50
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %319

; <label>:319:                                    ; preds = %353, %originalBBpart245
  %320 = load i32, i32* %32, align 4
  %321 = load i32, i32* %16, align 4
  %322 = icmp ult i32 %320, %321
  br i1 %322, label %323, label %356

; <label>:323:                                    ; preds = %319
  %324 = load i32, i32* @x.49
  %325 = load i32, i32* @y.50
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %323, %originalBB47alteredBB
  %332 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %13, align 8
  %333 = bitcast %class.CompressedBlockSparsityPattern* %332 to %class.BlockSparsityPatternBase.103*
  %334 = load i32, i32* %31, align 4
  %335 = zext i32 %334 to i64
  %336 = load i32, i32* @x.49
  %337 = load i32, i32* @y.50
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  %344 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %17, i64 %335)
          to label %345 unwind label %221

; <label>:345:                                    ; preds = %originalBBpart249
  %346 = load i32, i32* %344, align 4
  %347 = load i32, i32* %32, align 4
  %348 = zext i32 %347 to i64
  %349 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %348)
          to label %350 unwind label %221

; <label>:350:                                    ; preds = %345
  %351 = load i32, i32* %349, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103* %333, i32 %346, i32 %351)
          to label %352 unwind label %221

; <label>:352:                                    ; preds = %350
  br label %353

; <label>:353:                                    ; preds = %352
  %354 = load i32, i32* %32, align 4
  %355 = add i32 %354, 1
  store i32 %355, i32* %32, align 4
  br label %319

; <label>:356:                                    ; preds = %319
  br label %357

; <label>:357:                                    ; preds = %356
  %358 = load i32, i32* %31, align 4
  %359 = add i32 %358, 1
  store i32 %359, i32* %31, align 4
  br label %298

; <label>:360:                                    ; preds = %298
  br label %361

; <label>:361:                                    ; preds = %360, %284, %originalBBpart241
  %362 = load i32, i32* @x.49
  %363 = load i32, i32* @y.50
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %361, %originalBB51alteredBB
  %370 = load i32, i32* @x.49
  %371 = load i32, i32* @y.50
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %378

; <label>:378:                                    ; preds = %originalBBpart253
  %379 = load i32, i32* %29, align 4
  %380 = add i32 %379, 1
  store i32 %380, i32* %29, align 4
  br label %246

; <label>:381:                                    ; preds = %246
  %382 = load i32, i32* @x.49
  %383 = load i32, i32* @y.50
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %381, %originalBB55alteredBB
  %390 = load i32, i32* @x.49
  %391 = load i32, i32* @y.50
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %398

; <label>:398:                                    ; preds = %originalBBpart257
  %399 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %25)
          to label %400 unwind label %221

; <label>:400:                                    ; preds = %398
  %401 = load i32, i32* @x.49
  %402 = load i32, i32* @y.50
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %400, %originalBB59alteredBB
  %409 = load i32, i32* @x.49
  %410 = load i32, i32* @y.50
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %80

; <label>:417:                                    ; preds = %100
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %22)
          to label %418 unwind label %435

; <label>:418:                                    ; preds = %417
  %419 = load i32, i32* @x.49
  %420 = load i32, i32* @y.50
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %418, %originalBB63alteredBB
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
  %427 = load i32, i32* @x.49
  %428 = load i32, i32* @y.50
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  ret void

; <label>:435:                                    ; preds = %417
  %436 = landingpad { i8*, i32 }
          cleanup
  %437 = extractvalue { i8*, i32 } %436, 0
  store i8* %437, i8** %20, align 8
  %438 = extractvalue { i8*, i32 } %436, 1
  store i32 %438, i32* %21, align 4
  br label %440

; <label>:439:                                    ; preds = %221
  br label %440

; <label>:440:                                    ; preds = %439, %435, %originalBBpart233
  %441 = load i32, i32* @x.49
  %442 = load i32, i32* @y.50
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %440, %originalBB67alteredBB
  %449 = load i32, i32* @x.49
  %450 = load i32, i32* @y.50
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
          to label %457 unwind label %479

; <label>:457:                                    ; preds = %originalBBpart269
  br label %458

; <label>:458:                                    ; preds = %457, %originalBBpart229
  %459 = load i32, i32* @x.49
  %460 = load i32, i32* @y.50
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %458, %originalBB71alteredBB
  %467 = load i8*, i8** %20, align 8
  %468 = load i32, i32* %21, align 4
  %469 = insertvalue { i8*, i32 } undef, i8* %467, 0
  %470 = insertvalue { i8*, i32 } %469, i32 %468, 1
  %471 = load i32, i32* @x.49
  %472 = load i32, i32* @y.50
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  resume { i8*, i32 } %470

; <label>:479:                                    ; preds = %originalBBpart269, %221
  %480 = landingpad { i8*, i32 }
          catch i8* null
  %481 = extractvalue { i8*, i32 } %480, 0
  call void @__clang_call_terminate(i8* %481) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %482 = alloca %class.MGDoFHandler*, align 8
  %483 = alloca %class.CompressedBlockSparsityPattern*, align 8
  %484 = alloca i32, align 4
  %485 = alloca i32, align 4
  %486 = alloca i32, align 4
  %487 = alloca %"class.std::vector.12", align 8
  %488 = alloca i32, align 4
  %489 = alloca %"class.std::allocator.14", align 1
  %490 = alloca i8*
  %491 = alloca i32
  %492 = alloca %"class.std::vector.12", align 8
  %493 = alloca i32, align 4
  %494 = alloca %"class.std::allocator.14", align 1
  %495 = alloca %class.TriaIterator, align 8
  %496 = alloca %class.TriaIterator, align 8
  %497 = alloca i32, align 4
  %498 = alloca i32, align 4
  %499 = alloca i32, align 4
  %500 = alloca %class.TriaIterator, align 8
  %501 = alloca i32, align 4
  %502 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %482, align 8
  store %class.CompressedBlockSparsityPattern* %1, %class.CompressedBlockSparsityPattern** %483, align 8
  store i32 %2, i32* %484, align 4
  %503 = load %class.MGDoFHandler*, %class.MGDoFHandler** %482, align 8
  %504 = load i32, i32* %484, align 4
  %505 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %503, i32 %504)
  store i32 %505, i32* %485, align 4
  %506 = load %class.MGDoFHandler*, %class.MGDoFHandler** %482, align 8
  %507 = bitcast %class.MGDoFHandler* %506 to %class.DoFHandler*
  %508 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %507)
  %509 = bitcast %class.FiniteElement* %508 to i8*
  %510 = getelementptr inbounds i8, i8* %509, i64 24
  %511 = bitcast i8* %510 to %class.FiniteElementData*
  %512 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %511, i32 0, i32 10
  %513 = load i32, i32* %512, align 8
  store i32 %513, i32* %486, align 4
  %514 = load i32, i32* %486, align 4
  %515 = zext i32 %514 to i64
  store i32 0, i32* %488, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %489) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  %516 = load %class.MGDoFHandler*, %class.MGDoFHandler** %12, align 8
  %517 = load i32, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %80
  %518 = bitcast %class.TriaIterator* %25 to %class.TriaRawIterator*
  %519 = bitcast %class.TriaIterator* %26 to %class.TriaRawIterator*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %116
  %520 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %13, align 8
  %521 = bitcast %class.CompressedBlockSparsityPattern* %520 to %class.BlockSparsityPatternBase.103*
  %522 = load i32, i32* %27, align 4
  %523 = zext i32 %522 to i64
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %143
  %524 = load i32, i32* %142, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %162
  %525 = load i32, i32* %28, align 4
  %_ = sub i32 0, %525
  %gen = add i32 %_, 1
  %_19 = shl i32 %525, 1
  %_20 = sub i32 %525, 1
  %gen21 = mul i32 %_20, 1
  %_22 = sub i32 %525, 1
  %gen23 = mul i32 %_22, 1
  %526 = add i32 %525, 1
  store i32 %526, i32* %28, align 4
  br label %originalBB18

originalBB27alteredBB:                            ; preds = %originalBB27, %181
  %527 = landingpad { i8*, i32 }
          cleanup
  %528 = extractvalue { i8*, i32 } %527, 0
  store i8* %528, i8** %20, align 8
  %529 = extractvalue { i8*, i32 } %527, 1
  store i32 %529, i32* %21, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %19) #2
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %201
  %530 = landingpad { i8*, i32 }
          cleanup
  %531 = extractvalue { i8*, i32 } %530, 0
  store i8* %531, i8** %20, align 8
  %532 = extractvalue { i8*, i32 } %530, 1
  store i32 %532, i32* %21, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %229
  store i32 0, i32* %29, align 4
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %258
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %302
  store i32 0, i32* %32, align 4
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %323
  %533 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %13, align 8
  %534 = bitcast %class.CompressedBlockSparsityPattern* %533 to %class.BlockSparsityPatternBase.103*
  %535 = load i32, i32* %31, align 4
  %536 = zext i32 %535 to i64
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %361
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %381
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %400
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %418
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %440
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %458
  %537 = load i8*, i8** %20, align 8
  %538 = load i32, i32* %21, align 4
  %539 = insertvalue { i8*, i32 } undef, i8* %537, 0
  %540 = insertvalue { i8*, i32 } %539, i32 %538, 1
  br label %originalBB71
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools31make_flux_sparsity_pattern_edgeILi3E30CompressedBlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_j(%class.MGDoFHandler* dereferenceable(168), %class.CompressedBlockSparsityPattern* dereferenceable(144), i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %class.CompressedBlockSparsityPattern*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.12", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::allocator.14", align 1
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca %"class.std::vector.12", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::allocator.14", align 1
  %18 = alloca %class.TriaIterator, align 8
  %19 = alloca %class.TriaIterator, align 8
  %20 = alloca i32, align 4
  %21 = alloca %class.TriaIterator, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %class.CompressedBlockSparsityPattern* %1, %class.CompressedBlockSparsityPattern** %5, align 8
  store i32 %2, i32* %6, align 4
  %24 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %25 = load i32, i32* %6, align 4
  %26 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %24, i32 %25)
  store i32 %26, i32* %7, align 4
  %27 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %28 = load i32, i32* %6, align 4
  %29 = sub i32 %28, 1
  %30 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %27, i32 %29)
  store i32 %30, i32* %8, align 4
  %31 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %32 = bitcast %class.MGDoFHandler* %31 to %class.DoFHandler*
  %33 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %32)
  %34 = bitcast %class.FiniteElement* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 24
  %36 = bitcast i8* %35 to %class.FiniteElementData*
  %37 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %36, i32 0, i32 10
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %9, align 4
  %39 = load i32, i32* %9, align 4
  %40 = zext i32 %39 to i64
  store i32 0, i32* %11, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %12) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %10, i64 %40, i32* dereferenceable(4) %11, %"class.std::allocator.14"* dereferenceable(1) %12)
          to label %41 unwind label %265

; <label>:41:                                     ; preds = %3
  %42 = load i32, i32* @x.51
  %43 = load i32, i32* @y.52
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %41, %originalBBalteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  %50 = load i32, i32* %9, align 4
  %51 = zext i32 %50 to i64
  store i32 0, i32* %16, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %17) #2
  %52 = load i32, i32* @x.51
  %53 = load i32, i32* @y.52
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %15, i64 %51, i32* dereferenceable(4) %16, %"class.std::allocator.14"* dereferenceable(1) %17)
          to label %60 unwind label %269

; <label>:60:                                     ; preds = %originalBBpart2
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  %61 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %62 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %18, %class.MGDoFHandler* %61, i32 %62)
          to label %63 unwind label %289

; <label>:63:                                     ; preds = %60
  %64 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %65 = load i32, i32* %6, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %19, %class.MGDoFHandler* %64, i32 %65)
          to label %66 unwind label %289

; <label>:66:                                     ; preds = %63
  br label %67

; <label>:67:                                     ; preds = %337, %66
  %68 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %69 = bitcast %class.TriaIterator* %19 to %class.TriaRawIterator*
  %70 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %68, %class.TriaRawIterator* dereferenceable(32) %69)
          to label %71 unwind label %289

; <label>:71:                                     ; preds = %67
  br i1 %70, label %72, label %338

; <label>:72:                                     ; preds = %71
  %73 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %74 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %73)
          to label %75 unwind label %289

; <label>:75:                                     ; preds = %72
  %76 = bitcast %class.MGDoFCellAccessor* %74 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %76, %"class.std::vector.12"* dereferenceable(24) %10)
          to label %77 unwind label %289

; <label>:77:                                     ; preds = %75
  store i32 0, i32* %20, align 4
  br label %78

; <label>:78:                                     ; preds = %299, %77
  %79 = load i32, i32* %20, align 4
  %80 = icmp ult i32 %79, 6
  br i1 %80, label %81, label %302

; <label>:81:                                     ; preds = %78
  %82 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %83 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %82)
          to label %84 unwind label %289

; <label>:84:                                     ; preds = %81
  %85 = bitcast %class.MGDoFCellAccessor* %83 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8* %86 to %class.CellAccessor*
  %88 = load i32, i32* %20, align 4
  %89 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %87, i32 %88)
          to label %90 unwind label %289

; <label>:90:                                     ; preds = %84
  %91 = load i32, i32* @x.51
  %92 = load i32, i32* @y.52
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %90, %originalBB1alteredBB
  %99 = load i32, i32* @x.51
  %100 = load i32, i32* @y.52
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %89, label %298, label %107

; <label>:107:                                    ; preds = %originalBBpart24
  %108 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %109 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %108)
          to label %110 unwind label %289

; <label>:110:                                    ; preds = %107
  %111 = load i32, i32* @x.51
  %112 = load i32, i32* @y.52
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %110, %originalBB6alteredBB
  %119 = bitcast %class.MGDoFCellAccessor* %109 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 16
  %121 = bitcast i8* %120 to %class.CellAccessor*
  %122 = load i32, i32* %20, align 4
  %123 = load i32, i32* @x.51
  %124 = load i32, i32* @y.52
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %131 = invoke i32 @_ZNK12CellAccessorILi3EE14neighbor_levelEj(%class.CellAccessor* %121, i32 %122)
          to label %132 unwind label %289

; <label>:132:                                    ; preds = %originalBBpart28
  %133 = load i32, i32* %6, align 4
  %134 = icmp ne i32 %131, %133
  br i1 %134, label %135, label %298

; <label>:135:                                    ; preds = %132
  %136 = load i32, i32* @x.51
  %137 = load i32, i32* @y.52
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %135, %originalBB10alteredBB
  %144 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  %145 = load i32, i32* @x.51
  %146 = load i32, i32* @y.52
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %153 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %144)
          to label %154 unwind label %289

; <label>:154:                                    ; preds = %originalBBpart212
  %155 = load i32, i32* @x.51
  %156 = load i32, i32* @y.52
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %154, %originalBB14alteredBB
  %163 = load i32, i32* %20, align 4
  %164 = load i32, i32* @x.51
  %165 = load i32, i32* @y.52
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %21, %class.MGDoFCellAccessor* %153, i32 %163)
          to label %172 unwind label %289

; <label>:172:                                    ; preds = %originalBBpart216
  %173 = bitcast %class.TriaIterator* %21 to %class.TriaRawIterator*
  %174 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %173)
          to label %175 unwind label %289

; <label>:175:                                    ; preds = %172
  %176 = bitcast %class.MGDoFCellAccessor* %174 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %176, %"class.std::vector.12"* dereferenceable(24) %15)
          to label %177 unwind label %289

; <label>:177:                                    ; preds = %175
  %178 = load i32, i32* @x.51
  %179 = load i32, i32* @y.52
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %177, %originalBB18alteredBB
  store i32 0, i32* %22, align 4
  %186 = load i32, i32* @x.51
  %187 = load i32, i32* @y.52
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %194

; <label>:194:                                    ; preds = %294, %originalBBpart220
  %195 = load i32, i32* %22, align 4
  %196 = load i32, i32* %9, align 4
  %197 = icmp ult i32 %195, %196
  br i1 %197, label %198, label %297

; <label>:198:                                    ; preds = %194
  store i32 0, i32* %23, align 4
  br label %199

; <label>:199:                                    ; preds = %262, %198
  %200 = load i32, i32* %23, align 4
  %201 = load i32, i32* %9, align 4
  %202 = icmp ult i32 %200, %201
  br i1 %202, label %203, label %293

; <label>:203:                                    ; preds = %199
  %204 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %5, align 8
  %205 = bitcast %class.CompressedBlockSparsityPattern* %204 to %class.BlockSparsityPatternBase.103*
  %206 = load i32, i32* %22, align 4
  %207 = zext i32 %206 to i64
  %208 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %15, i64 %207)
          to label %209 unwind label %289

; <label>:209:                                    ; preds = %203
  %210 = load i32, i32* %208, align 4
  %211 = load i32, i32* %23, align 4
  %212 = zext i32 %211 to i64
  %213 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %212)
          to label %214 unwind label %289

; <label>:214:                                    ; preds = %209
  %215 = load i32, i32* %213, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103* %205, i32 %210, i32 %215)
          to label %216 unwind label %289

; <label>:216:                                    ; preds = %214
  %217 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %5, align 8
  %218 = bitcast %class.CompressedBlockSparsityPattern* %217 to %class.BlockSparsityPatternBase.103*
  %219 = load i32, i32* %23, align 4
  %220 = zext i32 %219 to i64
  %221 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %15, i64 %220)
          to label %222 unwind label %289

; <label>:222:                                    ; preds = %216
  %223 = load i32, i32* @x.51
  %224 = load i32, i32* @y.52
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %222, %originalBB22alteredBB
  %231 = load i32, i32* %221, align 4
  %232 = load i32, i32* %22, align 4
  %233 = zext i32 %232 to i64
  %234 = load i32, i32* @x.51
  %235 = load i32, i32* @y.52
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %242 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %233)
          to label %243 unwind label %289

; <label>:243:                                    ; preds = %originalBBpart224
  %244 = load i32, i32* %242, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103* %218, i32 %231, i32 %244)
          to label %245 unwind label %289

; <label>:245:                                    ; preds = %243
  %246 = load i32, i32* @x.51
  %247 = load i32, i32* @y.52
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %245, %originalBB26alteredBB
  %254 = load i32, i32* @x.51
  %255 = load i32, i32* @y.52
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %262

; <label>:262:                                    ; preds = %originalBBpart228
  %263 = load i32, i32* %23, align 4
  %264 = add i32 %263, 1
  store i32 %264, i32* %23, align 4
  br label %199

; <label>:265:                                    ; preds = %3
  %266 = landingpad { i8*, i32 }
          cleanup
  %267 = extractvalue { i8*, i32 } %266, 0
  store i8* %267, i8** %13, align 8
  %268 = extractvalue { i8*, i32 } %266, 1
  store i32 %268, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  br label %347

; <label>:269:                                    ; preds = %originalBBpart2
  %270 = load i32, i32* @x.51
  %271 = load i32, i32* @y.52
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %269, %originalBB30alteredBB
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %13, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  %281 = load i32, i32* @x.51
  %282 = load i32, i32* @y.52
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %345

; <label>:289:                                    ; preds = %originalBBpart240, %243, %originalBBpart224, %216, %214, %209, %203, %175, %172, %originalBBpart216, %originalBBpart212, %originalBBpart28, %107, %84, %81, %75, %72, %67, %63, %60
  %290 = landingpad { i8*, i32 }
          cleanup
  %291 = extractvalue { i8*, i32 } %290, 0
  store i8* %291, i8** %13, align 8
  %292 = extractvalue { i8*, i32 } %290, 1
  store i32 %292, i32* %14, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %15)
          to label %344 unwind label %352

; <label>:293:                                    ; preds = %199
  br label %294

; <label>:294:                                    ; preds = %293
  %295 = load i32, i32* %22, align 4
  %296 = add i32 %295, 1
  store i32 %296, i32* %22, align 4
  br label %194

; <label>:297:                                    ; preds = %194
  br label %298

; <label>:298:                                    ; preds = %297, %132, %originalBBpart24
  br label %299

; <label>:299:                                    ; preds = %298
  %300 = load i32, i32* %20, align 4
  %301 = add i32 %300, 1
  store i32 %301, i32* %20, align 4
  br label %78

; <label>:302:                                    ; preds = %78
  %303 = load i32, i32* @x.51
  %304 = load i32, i32* @y.52
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %302, %originalBB34alteredBB
  %311 = load i32, i32* @x.51
  %312 = load i32, i32* @y.52
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %319

; <label>:319:                                    ; preds = %originalBBpart236
  %320 = load i32, i32* @x.51
  %321 = load i32, i32* @y.52
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %319, %originalBB38alteredBB
  %328 = load i32, i32* @x.51
  %329 = load i32, i32* @y.52
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  %336 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %18)
          to label %337 unwind label %289

; <label>:337:                                    ; preds = %originalBBpart240
  br label %67

; <label>:338:                                    ; preds = %71
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %15)
          to label %339 unwind label %340

; <label>:339:                                    ; preds = %338
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
  ret void

; <label>:340:                                    ; preds = %338
  %341 = landingpad { i8*, i32 }
          cleanup
  %342 = extractvalue { i8*, i32 } %341, 0
  store i8* %342, i8** %13, align 8
  %343 = extractvalue { i8*, i32 } %341, 1
  store i32 %343, i32* %14, align 4
  br label %345

; <label>:344:                                    ; preds = %289
  br label %345

; <label>:345:                                    ; preds = %344, %340, %originalBBpart232
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
          to label %346 unwind label %352

; <label>:346:                                    ; preds = %345
  br label %347

; <label>:347:                                    ; preds = %346, %265
  %348 = load i8*, i8** %13, align 8
  %349 = load i32, i32* %14, align 4
  %350 = insertvalue { i8*, i32 } undef, i8* %348, 0
  %351 = insertvalue { i8*, i32 } %350, i32 %349, 1
  resume { i8*, i32 } %351

; <label>:352:                                    ; preds = %345, %289
  %353 = landingpad { i8*, i32 }
          catch i8* null
  %354 = extractvalue { i8*, i32 } %353, 0
  call void @__clang_call_terminate(i8* %354) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %41
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  %355 = load i32, i32* %9, align 4
  %356 = zext i32 %355 to i64
  store i32 0, i32* %16, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %17) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %90
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %110
  %357 = bitcast %class.MGDoFCellAccessor* %109 to i8*
  %358 = getelementptr inbounds i8, i8* %357, i64 16
  %359 = bitcast i8* %358 to %class.CellAccessor*
  %360 = load i32, i32* %20, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %135
  %361 = bitcast %class.TriaIterator* %18 to %class.TriaRawIterator*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %154
  %362 = load i32, i32* %20, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %177
  store i32 0, i32* %22, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %222
  %363 = load i32, i32* %221, align 4
  %364 = load i32, i32* %22, align 4
  %365 = zext i32 %364 to i64
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %245
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %269
  %366 = landingpad { i8*, i32 }
          cleanup
  %367 = extractvalue { i8*, i32 } %366, 0
  store i8* %367, i8** %13, align 8
  %368 = extractvalue { i8*, i32 } %366, 1
  store i32 %368, i32* %14, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %17) #2
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %302
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %319
  br label %originalBB38
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools26make_flux_sparsity_patternILi3E15SparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_jRK10FullMatrixIdESB_(%class.MGDoFHandler* dereferenceable(168), %class.SparsityPattern* dereferenceable(72), i32, %class.FullMatrix* dereferenceable(48), %class.FullMatrix* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = load i32, i32* @x.53
  %7 = load i32, i32* @y.54
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.MGDoFHandler*, align 8
  %15 = alloca %class.SparsityPattern*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %class.FullMatrix*, align 8
  %18 = alloca %class.FullMatrix*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::vector.12", align 8
  %23 = alloca i32, align 4
  %24 = alloca %"class.std::allocator.14", align 1
  %25 = alloca i8*
  %26 = alloca i32
  %27 = alloca %"class.std::vector.12", align 8
  %28 = alloca i32, align 4
  %29 = alloca %"class.std::allocator.14", align 1
  %30 = alloca %class.TriaIterator, align 8
  %31 = alloca %class.TriaIterator, align 8
  %32 = alloca %"class.std::vector.75", align 8
  %33 = alloca %"class.std::vector.3", align 8
  %34 = alloca i8, align 1
  %35 = alloca %"class.std::allocator.109", align 1
  %36 = alloca %"class.std::allocator.77", align 1
  %37 = alloca %"class.std::vector.75", align 8
  %38 = alloca %"class.std::vector.3", align 8
  %39 = alloca i8, align 1
  %40 = alloca %"class.std::allocator.109", align 1
  %41 = alloca %"class.std::allocator.77", align 1
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %"struct.std::pair.60", align 4
  %46 = alloca i32, align 4
  %47 = alloca %"struct.std::pair.60", align 4
  %48 = alloca %"struct.std::_Bit_reference", align 8
  %49 = alloca %"struct.std::_Bit_reference", align 8
  %50 = alloca %"class.std::vector.3", align 8
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca %"struct.std::_Bit_reference", align 8
  %54 = alloca i32, align 4
  %55 = alloca %class.TriaIterator.112, align 8
  %56 = alloca %class.TriaIterator, align 8
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca %"struct.std::_Bit_reference", align 8
  %61 = alloca %class.TriaIterator.112, align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %14, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %15, align 8
  store i32 %2, i32* %16, align 4
  store %class.FullMatrix* %3, %class.FullMatrix** %17, align 8
  store %class.FullMatrix* %4, %class.FullMatrix** %18, align 8
  %62 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %63 = load i32, i32* %16, align 4
  %64 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %62, i32 %63)
  store i32 %64, i32* %19, align 4
  %65 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %66 = bitcast %class.MGDoFHandler* %65 to %class.DoFHandler*
  %67 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %66)
  %68 = bitcast %class.FiniteElement* %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 24
  %70 = bitcast i8* %69 to %class.FiniteElementData*
  %71 = call i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %70)
  store i32 %71, i32* %20, align 4
  %72 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %73 = bitcast %class.MGDoFHandler* %72 to %class.DoFHandler*
  %74 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %73)
  %75 = bitcast %class.FiniteElement* %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 24
  %77 = bitcast i8* %76 to %class.FiniteElementData*
  %78 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %77, i32 0, i32 10
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %21, align 4
  %80 = load i32, i32* %21, align 4
  %81 = zext i32 %80 to i64
  store i32 0, i32* %23, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %24) #2
  %82 = load i32, i32* @x.53
  %83 = load i32, i32* @y.54
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %22, i64 %81, i32* dereferenceable(4) %23, %"class.std::allocator.14"* dereferenceable(1) %24)
          to label %90 unwind label %330

; <label>:90:                                     ; preds = %originalBBpart2
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  %91 = load i32, i32* %21, align 4
  %92 = zext i32 %91 to i64
  store i32 0, i32* %28, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %29) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %27, i64 %92, i32* dereferenceable(4) %28, %"class.std::allocator.14"* dereferenceable(1) %29)
          to label %93 unwind label %350

; <label>:93:                                     ; preds = %90
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %29) #2
  %94 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %95 = load i32, i32* %16, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %30, %class.MGDoFHandler* %94, i32 %95)
          to label %96 unwind label %370

; <label>:96:                                     ; preds = %93
  %97 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %98 = load i32, i32* %16, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %31, %class.MGDoFHandler* %97, i32 %98)
          to label %99 unwind label %370

; <label>:99:                                     ; preds = %96
  %100 = load i32, i32* @x.53
  %101 = load i32, i32* @y.54
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %99, %originalBB1alteredBB
  %108 = load i32, i32* %21, align 4
  %109 = zext i32 %108 to i64
  %110 = load i32, i32* %21, align 4
  %111 = zext i32 %110 to i64
  store i8 0, i8* %34, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %35) #2
  %112 = load i32, i32* @x.53
  %113 = load i32, i32* @y.54
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %33, i64 %111, i8* dereferenceable(1) %34, %"class.std::allocator.109"* dereferenceable(1) %35)
          to label %120 unwind label %390

; <label>:120:                                    ; preds = %originalBBpart24
  %121 = load i32, i32* @x.53
  %122 = load i32, i32* @y.54
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %120, %originalBB6alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %36) #2
  %129 = load i32, i32* @x.53
  %130 = load i32, i32* @y.54
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %32, i64 %109, %"class.std::vector.3"* dereferenceable(40) %33, %"class.std::allocator.77"* dereferenceable(1) %36)
          to label %137 unwind label %394

; <label>:137:                                    ; preds = %originalBBpart28
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %36) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %33)
          to label %138 unwind label %390

; <label>:138:                                    ; preds = %137
  %139 = load i32, i32* @x.53
  %140 = load i32, i32* @y.54
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %138, %originalBB10alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %35) #2
  %147 = load i32, i32* %21, align 4
  %148 = zext i32 %147 to i64
  %149 = load i32, i32* %21, align 4
  %150 = zext i32 %149 to i64
  store i8 0, i8* %39, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %40) #2
  %151 = load i32, i32* @x.53
  %152 = load i32, i32* @y.54
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %38, i64 %150, i8* dereferenceable(1) %39, %"class.std::allocator.109"* dereferenceable(1) %40)
          to label %159 unwind label %416

; <label>:159:                                    ; preds = %originalBBpart212
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %41) #2
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %37, i64 %148, %"class.std::vector.3"* dereferenceable(40) %38, %"class.std::allocator.77"* dereferenceable(1) %41)
          to label %160 unwind label %420

; <label>:160:                                    ; preds = %159
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %41) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %38)
          to label %161 unwind label %416

; <label>:161:                                    ; preds = %160
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %40) #2
  store i32 0, i32* %42, align 4
  br label %162

; <label>:162:                                    ; preds = %originalBBpart273, %161
  %163 = load i32, i32* @x.53
  %164 = load i32, i32* @y.54
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %162, %originalBB14alteredBB
  %171 = load i32, i32* %42, align 4
  %172 = load i32, i32* %21, align 4
  %173 = icmp ult i32 %171, %172
  %174 = load i32, i32* @x.53
  %175 = load i32, i32* @y.54
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %173, label %182, label %511

; <label>:182:                                    ; preds = %originalBBpart216
  %183 = load i32, i32* @x.53
  %184 = load i32, i32* @y.54
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %182, %originalBB18alteredBB
  store i32 0, i32* %43, align 4
  %191 = load i32, i32* @x.53
  %192 = load i32, i32* @y.54
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %199

; <label>:199:                                    ; preds = %488, %originalBBpart220
  %200 = load i32, i32* @x.53
  %201 = load i32, i32* @y.54
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %199, %originalBB22alteredBB
  %208 = load i32, i32* %43, align 4
  %209 = load i32, i32* %21, align 4
  %210 = icmp ult i32 %208, %209
  %211 = load i32, i32* @x.53
  %212 = load i32, i32* @y.54
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %210, label %219, label %491

; <label>:219:                                    ; preds = %originalBBpart224
  %220 = load i32, i32* @x.53
  %221 = load i32, i32* @y.54
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %219, %originalBB26alteredBB
  %228 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %229 = bitcast %class.MGDoFHandler* %228 to %class.DoFHandler*
  %230 = load i32, i32* @x.53
  %231 = load i32, i32* @y.54
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %238 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %229)
          to label %239 unwind label %442

; <label>:239:                                    ; preds = %originalBBpart228
  %240 = bitcast %class.FiniteElement* %238 to %class.FiniteElementBase*
  %241 = load i32, i32* %42, align 4
  %242 = invoke i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase* %240, i32 %241)
          to label %243 unwind label %442

; <label>:243:                                    ; preds = %239
  %244 = bitcast %"struct.std::pair.60"* %45 to i64*
  store i64 %242, i64* %244, align 4
  %245 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %45, i32 0, i32 0
  %246 = load i32, i32* %245, align 4
  store i32 %246, i32* %44, align 4
  %247 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %248 = bitcast %class.MGDoFHandler* %247 to %class.DoFHandler*
  %249 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %248)
          to label %250 unwind label %442

; <label>:250:                                    ; preds = %243
  %251 = load i32, i32* @x.53
  %252 = load i32, i32* @y.54
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %250, %originalBB30alteredBB
  %259 = bitcast %class.FiniteElement* %249 to %class.FiniteElementBase*
  %260 = load i32, i32* %43, align 4
  %261 = load i32, i32* @x.53
  %262 = load i32, i32* @y.54
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  %269 = invoke i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase* %259, i32 %260)
          to label %270 unwind label %442

; <label>:270:                                    ; preds = %originalBBpart232
  %271 = bitcast %"struct.std::pair.60"* %47 to i64*
  store i64 %269, i64* %271, align 4
  %272 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %47, i32 0, i32 0
  %273 = load i32, i32* %272, align 4
  store i32 %273, i32* %46, align 4
  %274 = load %class.FullMatrix*, %class.FullMatrix** %17, align 8
  %275 = bitcast %class.FullMatrix* %274 to %class.Table*
  %276 = load i32, i32* %44, align 4
  %277 = load i32, i32* %46, align 4
  %278 = invoke dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table* %275, i32 %276, i32 %277)
          to label %279 unwind label %442

; <label>:279:                                    ; preds = %270
  %280 = load i32, i32* @x.53
  %281 = load i32, i32* @y.54
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %279, %originalBB34alteredBB
  %288 = load double, double* %278, align 8
  %289 = fcmp une double %288, 0.000000e+00
  %290 = load i32, i32* @x.53
  %291 = load i32, i32* @y.54
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %289, label %298, label %446

; <label>:298:                                    ; preds = %originalBBpart236
  %299 = load i32, i32* %42, align 4
  %300 = zext i32 %299 to i64
  %301 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %32, i64 %300)
          to label %302 unwind label %442

; <label>:302:                                    ; preds = %298
  %303 = load i32, i32* %43, align 4
  %304 = zext i32 %303 to i64
  %305 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %301, i64 %304)
          to label %306 unwind label %442

; <label>:306:                                    ; preds = %302
  %307 = bitcast %"struct.std::_Bit_reference"* %48 to { i64*, i64 }*
  %308 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %307, i32 0, i32 0
  %309 = extractvalue { i64*, i64 } %305, 0
  store i64* %309, i64** %308, align 8
  %310 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %307, i32 0, i32 1
  %311 = extractvalue { i64*, i64 } %305, 1
  store i64 %311, i64* %310, align 8
  %312 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %48, i1 zeroext true)
          to label %313 unwind label %442

; <label>:313:                                    ; preds = %306
  %314 = load i32, i32* @x.53
  %315 = load i32, i32* @y.54
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %313, %originalBB38alteredBB
  %322 = load i32, i32* @x.53
  %323 = load i32, i32* @y.54
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %446

; <label>:330:                                    ; preds = %originalBBpart2
  %331 = load i32, i32* @x.53
  %332 = load i32, i32* @y.54
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %330, %originalBB42alteredBB
  %339 = landingpad { i8*, i32 }
          cleanup
  %340 = extractvalue { i8*, i32 } %339, 0
  store i8* %340, i8** %25, align 8
  %341 = extractvalue { i8*, i32 } %339, 1
  store i32 %341, i32* %26, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  %342 = load i32, i32* @x.53
  %343 = load i32, i32* @y.54
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %1222

; <label>:350:                                    ; preds = %90
  %351 = load i32, i32* @x.53
  %352 = load i32, i32* @y.54
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %350, %originalBB46alteredBB
  %359 = landingpad { i8*, i32 }
          cleanup
  %360 = extractvalue { i8*, i32 } %359, 0
  store i8* %360, i8** %25, align 8
  %361 = extractvalue { i8*, i32 } %359, 1
  store i32 %361, i32* %26, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %29) #2
  %362 = load i32, i32* @x.53
  %363 = load i32, i32* @y.54
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %1204

; <label>:370:                                    ; preds = %originalBBpart2171, %96, %93
  %371 = load i32, i32* @x.53
  %372 = load i32, i32* @y.54
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %370, %originalBB50alteredBB
  %379 = landingpad { i8*, i32 }
          cleanup
  %380 = extractvalue { i8*, i32 } %379, 0
  store i8* %380, i8** %25, align 8
  %381 = extractvalue { i8*, i32 } %379, 1
  store i32 %381, i32* %26, align 4
  %382 = load i32, i32* @x.53
  %383 = load i32, i32* @y.54
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %1186

; <label>:390:                                    ; preds = %137, %originalBBpart24
  %391 = landingpad { i8*, i32 }
          cleanup
  %392 = extractvalue { i8*, i32 } %391, 0
  store i8* %392, i8** %25, align 8
  %393 = extractvalue { i8*, i32 } %391, 1
  store i32 %393, i32* %26, align 4
  br label %415

; <label>:394:                                    ; preds = %originalBBpart28
  %395 = load i32, i32* @x.53
  %396 = load i32, i32* @y.54
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %394, %originalBB54alteredBB
  %403 = landingpad { i8*, i32 }
          cleanup
  %404 = extractvalue { i8*, i32 } %403, 0
  store i8* %404, i8** %25, align 8
  %405 = extractvalue { i8*, i32 } %403, 1
  store i32 %405, i32* %26, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %36) #2
  %406 = load i32, i32* @x.53
  %407 = load i32, i32* @y.54
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %33)
          to label %414 unwind label %1227

; <label>:414:                                    ; preds = %originalBBpart256
  br label %415

; <label>:415:                                    ; preds = %414, %390
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %35) #2
  br label %1186

; <label>:416:                                    ; preds = %160, %originalBBpart212
  %417 = landingpad { i8*, i32 }
          cleanup
  %418 = extractvalue { i8*, i32 } %417, 0
  store i8* %418, i8** %25, align 8
  %419 = extractvalue { i8*, i32 } %417, 1
  store i32 %419, i32* %26, align 4
  br label %441

; <label>:420:                                    ; preds = %159
  %421 = landingpad { i8*, i32 }
          cleanup
  %422 = extractvalue { i8*, i32 } %421, 0
  store i8* %422, i8** %25, align 8
  %423 = extractvalue { i8*, i32 } %421, 1
  store i32 %423, i32* %26, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %41) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %38)
          to label %424 unwind label %1227

; <label>:424:                                    ; preds = %420
  %425 = load i32, i32* @x.53
  %426 = load i32, i32* @y.54
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %424, %originalBB58alteredBB
  %433 = load i32, i32* @x.53
  %434 = load i32, i32* @y.54
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %441

; <label>:441:                                    ; preds = %originalBBpart260, %416
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %40) #2
  br label %1164

; <label>:442:                                    ; preds = %1072, %511, %463, %459, %455, %446, %306, %302, %298, %270, %originalBBpart232, %243, %239, %originalBBpart228
  %443 = landingpad { i8*, i32 }
          cleanup
  %444 = extractvalue { i8*, i32 } %443, 0
  store i8* %444, i8** %25, align 8
  %445 = extractvalue { i8*, i32 } %443, 1
  store i32 %445, i32* %26, align 4
  br label %1146

; <label>:446:                                    ; preds = %originalBBpart240, %originalBBpart236
  %447 = load %class.FullMatrix*, %class.FullMatrix** %18, align 8
  %448 = bitcast %class.FullMatrix* %447 to %class.Table*
  %449 = load i32, i32* %44, align 4
  %450 = load i32, i32* %46, align 4
  %451 = invoke dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table* %448, i32 %449, i32 %450)
          to label %452 unwind label %442

; <label>:452:                                    ; preds = %446
  %453 = load double, double* %451, align 8
  %454 = fcmp une double %453, 0.000000e+00
  br i1 %454, label %455, label %471

; <label>:455:                                    ; preds = %452
  %456 = load i32, i32* %42, align 4
  %457 = zext i32 %456 to i64
  %458 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %37, i64 %457)
          to label %459 unwind label %442

; <label>:459:                                    ; preds = %455
  %460 = load i32, i32* %43, align 4
  %461 = zext i32 %460 to i64
  %462 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %458, i64 %461)
          to label %463 unwind label %442

; <label>:463:                                    ; preds = %459
  %464 = bitcast %"struct.std::_Bit_reference"* %49 to { i64*, i64 }*
  %465 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %464, i32 0, i32 0
  %466 = extractvalue { i64*, i64 } %462, 0
  store i64* %466, i64** %465, align 8
  %467 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %464, i32 0, i32 1
  %468 = extractvalue { i64*, i64 } %462, 1
  store i64 %468, i64* %467, align 8
  %469 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %49, i1 zeroext true)
          to label %470 unwind label %442

; <label>:470:                                    ; preds = %463
  br label %471

; <label>:471:                                    ; preds = %470, %452
  %472 = load i32, i32* @x.53
  %473 = load i32, i32* @y.54
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %471, %originalBB62alteredBB
  %480 = load i32, i32* @x.53
  %481 = load i32, i32* @y.54
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %488

; <label>:488:                                    ; preds = %originalBBpart264
  %489 = load i32, i32* %43, align 4
  %490 = add i32 %489, 1
  store i32 %490, i32* %43, align 4
  br label %199

; <label>:491:                                    ; preds = %originalBBpart224
  br label %492

; <label>:492:                                    ; preds = %491
  %493 = load i32, i32* @x.53
  %494 = load i32, i32* @y.54
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %492, %originalBB66alteredBB
  %501 = load i32, i32* %42, align 4
  %502 = add i32 %501, 1
  store i32 %502, i32* %42, align 4
  %503 = load i32, i32* @x.53
  %504 = load i32, i32* @y.54
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart273, label %originalBB66alteredBB

originalBBpart273:                                ; preds = %originalBB66
  br label %162

; <label>:511:                                    ; preds = %originalBBpart216
  invoke void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.3"* %50)
          to label %512 unwind label %442

; <label>:512:                                    ; preds = %511
  %513 = load i32, i32* @x.53
  %514 = load i32, i32* @y.54
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %512, %originalBB75alteredBB
  %521 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %522 = bitcast %class.MGDoFHandler* %521 to %class.DoFHandler*
  %523 = load i32, i32* @x.53
  %524 = load i32, i32* @y.54
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  %531 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %522)
          to label %532 unwind label %684

; <label>:532:                                    ; preds = %originalBBpart277
  invoke void @_ZNK13TriangulationILi3EE15save_user_flagsERSt6vectorIbSaIbEE(%class.Triangulation* %531, %"class.std::vector.3"* dereferenceable(40) %50)
          to label %533 unwind label %684

; <label>:533:                                    ; preds = %532
  %534 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %535 = bitcast %class.MGDoFHandler* %534 to %class.DoFHandler*
  %536 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %535)
          to label %537 unwind label %684

; <label>:537:                                    ; preds = %533
  %538 = load i32, i32* @x.53
  %539 = load i32, i32* @y.54
  %540 = sub i32 %538, 1
  %541 = mul i32 %538, %540
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %543, %544
  br i1 %545, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %537, %originalBB79alteredBB
  %546 = load i32, i32* @x.53
  %547 = load i32, i32* @y.54
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  invoke void @_ZN13TriangulationILi3EE16clear_user_flagsEv(%class.Triangulation* %536)
          to label %554 unwind label %684

; <label>:554:                                    ; preds = %originalBBpart281
  br label %555

; <label>:555:                                    ; preds = %1066, %554
  %556 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %557 = bitcast %class.TriaIterator* %31 to %class.TriaRawIterator*
  %558 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %556, %class.TriaRawIterator* dereferenceable(32) %557)
          to label %559 unwind label %684

; <label>:559:                                    ; preds = %555
  %560 = load i32, i32* @x.53
  %561 = load i32, i32* @y.54
  %562 = sub i32 %560, 1
  %563 = mul i32 %560, %562
  %564 = urem i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %561, 10
  %567 = or i1 %565, %566
  br i1 %567, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %559, %originalBB83alteredBB
  %568 = load i32, i32* @x.53
  %569 = load i32, i32* @y.54
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %558, label %576, label %1067

; <label>:576:                                    ; preds = %originalBBpart285
  %577 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %578 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %577)
          to label %579 unwind label %684

; <label>:579:                                    ; preds = %576
  %580 = bitcast %class.MGDoFCellAccessor* %578 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %580, %"class.std::vector.12"* dereferenceable(24) %22)
          to label %581 unwind label %684

; <label>:581:                                    ; preds = %579
  store i32 0, i32* %51, align 4
  br label %582

; <label>:582:                                    ; preds = %693, %581
  %583 = load i32, i32* @x.53
  %584 = load i32, i32* @y.54
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %582, %originalBB87alteredBB
  %591 = load i32, i32* %51, align 4
  %592 = load i32, i32* %21, align 4
  %593 = icmp ult i32 %591, %592
  %594 = load i32, i32* @x.53
  %595 = load i32, i32* @y.54
  %596 = sub i32 %594, 1
  %597 = mul i32 %594, %596
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %595, 10
  %601 = or i1 %599, %600
  br i1 %601, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br i1 %593, label %602, label %696

; <label>:602:                                    ; preds = %originalBBpart289
  store i32 0, i32* %52, align 4
  br label %603

; <label>:603:                                    ; preds = %689, %602
  %604 = load i32, i32* %52, align 4
  %605 = load i32, i32* %21, align 4
  %606 = icmp ult i32 %604, %605
  br i1 %606, label %607, label %692

; <label>:607:                                    ; preds = %603
  %608 = load i32, i32* %51, align 4
  %609 = zext i32 %608 to i64
  %610 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %32, i64 %609)
          to label %611 unwind label %684

; <label>:611:                                    ; preds = %607
  %612 = load i32, i32* %52, align 4
  %613 = zext i32 %612 to i64
  %614 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %610, i64 %613)
          to label %615 unwind label %684

; <label>:615:                                    ; preds = %611
  %616 = load i32, i32* @x.53
  %617 = load i32, i32* @y.54
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %615, %originalBB91alteredBB
  %624 = bitcast %"struct.std::_Bit_reference"* %53 to { i64*, i64 }*
  %625 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %624, i32 0, i32 0
  %626 = extractvalue { i64*, i64 } %614, 0
  store i64* %626, i64** %625, align 8
  %627 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %624, i32 0, i32 1
  %628 = extractvalue { i64*, i64 } %614, 1
  store i64 %628, i64* %627, align 8
  %629 = load i32, i32* @x.53
  %630 = load i32, i32* @y.54
  %631 = sub i32 %629, 1
  %632 = mul i32 %629, %631
  %633 = urem i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %630, 10
  %636 = or i1 %634, %635
  br i1 %636, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  %637 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %53)
          to label %638 unwind label %684

; <label>:638:                                    ; preds = %originalBBpart293
  br i1 %637, label %639, label %688

; <label>:639:                                    ; preds = %638
  %640 = load i32, i32* @x.53
  %641 = load i32, i32* @y.54
  %642 = sub i32 %640, 1
  %643 = mul i32 %640, %642
  %644 = urem i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = icmp slt i32 %641, 10
  %647 = or i1 %645, %646
  br i1 %647, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %639, %originalBB95alteredBB
  %648 = load %class.SparsityPattern*, %class.SparsityPattern** %15, align 8
  %649 = load i32, i32* %51, align 4
  %650 = zext i32 %649 to i64
  %651 = load i32, i32* @x.53
  %652 = load i32, i32* @y.54
  %653 = sub i32 %651, 1
  %654 = mul i32 %651, %653
  %655 = urem i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = icmp slt i32 %652, 10
  %658 = or i1 %656, %657
  br i1 %658, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  %659 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %650)
          to label %660 unwind label %684

; <label>:660:                                    ; preds = %originalBBpart297
  %661 = load i32, i32* %659, align 4
  %662 = load i32, i32* %52, align 4
  %663 = zext i32 %662 to i64
  %664 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %663)
          to label %665 unwind label %684

; <label>:665:                                    ; preds = %660
  %666 = load i32, i32* %664, align 4
  invoke void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %648, i32 %661, i32 %666)
          to label %667 unwind label %684

; <label>:667:                                    ; preds = %665
  %668 = load i32, i32* @x.53
  %669 = load i32, i32* @y.54
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %667, %originalBB99alteredBB
  %676 = load i32, i32* @x.53
  %677 = load i32, i32* @y.54
  %678 = sub i32 %676, 1
  %679 = mul i32 %676, %678
  %680 = urem i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = icmp slt i32 %677, 10
  %683 = or i1 %681, %682
  br i1 %683, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %688

; <label>:684:                                    ; preds = %1071, %1067, %1064, %1038, %1035, %1033, %1030, %originalBBpart2153, %998, %993, %originalBBpart2149, %970, %965, %originalBBpart2141, %921, %917, %originalBBpart2133, %originalBBpart2129, %848, %originalBBpart2125, %805, %originalBBpart2117, %781, %778, %776, %originalBBpart2113, %750, %747, %740, %originalBBpart2109, %originalBBpart2105, %700, %665, %660, %originalBBpart297, %originalBBpart293, %611, %607, %579, %576, %555, %originalBBpart281, %533, %532, %originalBBpart277
  %685 = landingpad { i8*, i32 }
          cleanup
  %686 = extractvalue { i8*, i32 } %685, 0
  store i8* %686, i8** %25, align 8
  %687 = extractvalue { i8*, i32 } %685, 1
  store i32 %687, i32* %26, align 4
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %50)
          to label %1109 unwind label %1227

; <label>:688:                                    ; preds = %originalBBpart2101, %638
  br label %689

; <label>:689:                                    ; preds = %688
  %690 = load i32, i32* %52, align 4
  %691 = add i32 %690, 1
  store i32 %691, i32* %52, align 4
  br label %603

; <label>:692:                                    ; preds = %603
  br label %693

; <label>:693:                                    ; preds = %692
  %694 = load i32, i32* %51, align 4
  %695 = add i32 %694, 1
  store i32 %695, i32* %51, align 4
  br label %582

; <label>:696:                                    ; preds = %originalBBpart289
  store i32 0, i32* %54, align 4
  br label %697

; <label>:697:                                    ; preds = %originalBBpart2167, %696
  %698 = load i32, i32* %54, align 4
  %699 = icmp ult i32 %698, 6
  br i1 %699, label %700, label %1063

; <label>:700:                                    ; preds = %697
  %701 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %702 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %701)
          to label %703 unwind label %684

; <label>:703:                                    ; preds = %700
  %704 = load i32, i32* @x.53
  %705 = load i32, i32* @y.54
  %706 = sub i32 %704, 1
  %707 = mul i32 %704, %706
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %705, 10
  %711 = or i1 %709, %710
  br i1 %711, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %703, %originalBB103alteredBB
  %712 = load i32, i32* %54, align 4
  %713 = load i32, i32* @x.53
  %714 = load i32, i32* @y.54
  %715 = sub i32 %713, 1
  %716 = mul i32 %713, %715
  %717 = urem i32 %716, 2
  %718 = icmp eq i32 %717, 0
  %719 = icmp slt i32 %714, 10
  %720 = or i1 %718, %719
  br i1 %720, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  invoke void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret %55, %class.MGDoFCellAccessor* %702, i32 %712)
          to label %721 unwind label %684

; <label>:721:                                    ; preds = %originalBBpart2105
  %722 = load i32, i32* @x.53
  %723 = load i32, i32* @y.54
  %724 = sub i32 %722, 1
  %725 = mul i32 %722, %724
  %726 = urem i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = icmp slt i32 %723, 10
  %729 = or i1 %727, %728
  br i1 %729, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %721, %originalBB107alteredBB
  %730 = bitcast %class.TriaIterator.112* %55 to %class.TriaRawIterator.113*
  %731 = load i32, i32* @x.53
  %732 = load i32, i32* @y.54
  %733 = sub i32 %731, 1
  %734 = mul i32 %731, %733
  %735 = urem i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = icmp slt i32 %732, 10
  %738 = or i1 %736, %737
  br i1 %738, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  %739 = invoke %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113* %730)
          to label %740 unwind label %684

; <label>:740:                                    ; preds = %originalBBpart2109
  %741 = bitcast %class.MGDoFObjectAccessor.115* %739 to i8*
  %742 = getelementptr inbounds i8, i8* %741, i64 16
  %743 = bitcast i8* %742 to %class.TriaObjectAccessor.117*
  %744 = invoke zeroext i1 @_ZNK18TriaObjectAccessorILi2ELi3EE13user_flag_setEv(%class.TriaObjectAccessor.117* %743)
          to label %745 unwind label %684

; <label>:745:                                    ; preds = %740
  br i1 %744, label %746, label %747

; <label>:746:                                    ; preds = %745
  br label %1044

; <label>:747:                                    ; preds = %745
  %748 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %749 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %748)
          to label %750 unwind label %684

; <label>:750:                                    ; preds = %747
  %751 = bitcast %class.MGDoFCellAccessor* %749 to i8*
  %752 = getelementptr inbounds i8, i8* %751, i64 16
  %753 = bitcast i8* %752 to %class.CellAccessor*
  %754 = load i32, i32* %54, align 4
  %755 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %753, i32 %754)
          to label %756 unwind label %684

; <label>:756:                                    ; preds = %750
  br i1 %755, label %1043, label %757

; <label>:757:                                    ; preds = %756
  %758 = load i32, i32* @x.53
  %759 = load i32, i32* @y.54
  %760 = sub i32 %758, 1
  %761 = mul i32 %758, %760
  %762 = urem i32 %761, 2
  %763 = icmp eq i32 %762, 0
  %764 = icmp slt i32 %759, 10
  %765 = or i1 %763, %764
  br i1 %765, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %757, %originalBB111alteredBB
  %766 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %767 = load i32, i32* @x.53
  %768 = load i32, i32* @y.54
  %769 = sub i32 %767, 1
  %770 = mul i32 %767, %769
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %768, 10
  %774 = or i1 %772, %773
  br i1 %774, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  %775 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %766)
          to label %776 unwind label %684

; <label>:776:                                    ; preds = %originalBBpart2113
  %777 = load i32, i32* %54, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %56, %class.MGDoFCellAccessor* %775, i32 %777)
          to label %778 unwind label %684

; <label>:778:                                    ; preds = %776
  %779 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  %780 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %779)
          to label %781 unwind label %684

; <label>:781:                                    ; preds = %778
  %782 = bitcast %class.MGDoFCellAccessor* %780 to i8*
  %783 = getelementptr inbounds i8, i8* %782, i64 16
  %784 = bitcast i8* %783 to %class.TriaAccessor*
  %785 = invoke i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor* %784)
          to label %786 unwind label %684

; <label>:786:                                    ; preds = %781
  %787 = load i32, i32* @x.53
  %788 = load i32, i32* @y.54
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %786, %originalBB115alteredBB
  %795 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %796 = load i32, i32* @x.53
  %797 = load i32, i32* @y.54
  %798 = sub i32 %796, 1
  %799 = mul i32 %796, %798
  %800 = urem i32 %799, 2
  %801 = icmp eq i32 %800, 0
  %802 = icmp slt i32 %797, 10
  %803 = or i1 %801, %802
  br i1 %803, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  %804 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %795)
          to label %805 unwind label %684

; <label>:805:                                    ; preds = %originalBBpart2117
  %806 = bitcast %class.MGDoFCellAccessor* %804 to i8*
  %807 = getelementptr inbounds i8, i8* %806, i64 16
  %808 = bitcast i8* %807 to %class.TriaAccessor*
  %809 = invoke i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor* %808)
          to label %810 unwind label %684

; <label>:810:                                    ; preds = %805
  %811 = load i32, i32* @x.53
  %812 = load i32, i32* @y.54
  %813 = sub i32 %811, 1
  %814 = mul i32 %811, %813
  %815 = urem i32 %814, 2
  %816 = icmp eq i32 %815, 0
  %817 = icmp slt i32 %812, 10
  %818 = or i1 %816, %817
  br i1 %818, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %810, %originalBB119alteredBB
  %819 = icmp slt i32 %785, %809
  %820 = load i32, i32* @x.53
  %821 = load i32, i32* @y.54
  %822 = sub i32 %820, 1
  %823 = mul i32 %820, %822
  %824 = urem i32 %823, 2
  %825 = icmp eq i32 %824, 0
  %826 = icmp slt i32 %821, 10
  %827 = or i1 %825, %826
  br i1 %827, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br i1 %819, label %828, label %829

; <label>:828:                                    ; preds = %originalBBpart2121
  br label %1044

; <label>:829:                                    ; preds = %originalBBpart2121
  %830 = load i32, i32* @x.53
  %831 = load i32, i32* @y.54
  %832 = sub i32 %830, 1
  %833 = mul i32 %830, %832
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %831, 10
  %837 = or i1 %835, %836
  br i1 %837, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %829, %originalBB123alteredBB
  %838 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %839 = load i32, i32* @x.53
  %840 = load i32, i32* @y.54
  %841 = sub i32 %839, 1
  %842 = mul i32 %839, %841
  %843 = urem i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = icmp slt i32 %840, 10
  %846 = or i1 %844, %845
  br i1 %846, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  %847 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %838)
          to label %848 unwind label %684

; <label>:848:                                    ; preds = %originalBBpart2125
  %849 = bitcast %class.MGDoFCellAccessor* %847 to i8*
  %850 = getelementptr inbounds i8, i8* %849, i64 16
  %851 = bitcast i8* %850 to %class.CellAccessor*
  %852 = load i32, i32* %54, align 4
  %853 = invoke i32 @_ZNK12CellAccessorILi3EE20neighbor_of_neighborEj(%class.CellAccessor* %851, i32 %852)
          to label %854 unwind label %684

; <label>:854:                                    ; preds = %848
  %855 = load i32, i32* @x.53
  %856 = load i32, i32* @y.54
  %857 = sub i32 %855, 1
  %858 = mul i32 %855, %857
  %859 = urem i32 %858, 2
  %860 = icmp eq i32 %859, 0
  %861 = icmp slt i32 %856, 10
  %862 = or i1 %860, %861
  br i1 %862, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %854, %originalBB127alteredBB
  store i32 %853, i32* %57, align 4
  %863 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  %864 = load i32, i32* @x.53
  %865 = load i32, i32* @y.54
  %866 = sub i32 %864, 1
  %867 = mul i32 %864, %866
  %868 = urem i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = icmp slt i32 %865, 10
  %871 = or i1 %869, %870
  br i1 %871, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  %872 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %863)
          to label %873 unwind label %684

; <label>:873:                                    ; preds = %originalBBpart2129
  %874 = load i32, i32* @x.53
  %875 = load i32, i32* @y.54
  %876 = sub i32 %874, 1
  %877 = mul i32 %874, %876
  %878 = urem i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = icmp slt i32 %875, 10
  %881 = or i1 %879, %880
  br i1 %881, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %873, %originalBB131alteredBB
  %882 = bitcast %class.MGDoFCellAccessor* %872 to %class.MGDoFObjectAccessor*
  %883 = load i32, i32* @x.53
  %884 = load i32, i32* @y.54
  %885 = sub i32 %883, 1
  %886 = mul i32 %883, %885
  %887 = urem i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = icmp slt i32 %884, 10
  %890 = or i1 %888, %889
  br i1 %890, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %882, %"class.std::vector.12"* dereferenceable(24) %27)
          to label %891 unwind label %684

; <label>:891:                                    ; preds = %originalBBpart2133
  store i32 0, i32* %58, align 4
  br label %892

; <label>:892:                                    ; preds = %1027, %891
  %893 = load i32, i32* %58, align 4
  %894 = load i32, i32* %21, align 4
  %895 = icmp ult i32 %893, %894
  br i1 %895, label %896, label %1030

; <label>:896:                                    ; preds = %892
  store i32 0, i32* %59, align 4
  br label %897

; <label>:897:                                    ; preds = %1023, %896
  %898 = load i32, i32* @x.53
  %899 = load i32, i32* @y.54
  %900 = sub i32 %898, 1
  %901 = mul i32 %898, %900
  %902 = urem i32 %901, 2
  %903 = icmp eq i32 %902, 0
  %904 = icmp slt i32 %899, 10
  %905 = or i1 %903, %904
  br i1 %905, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %897, %originalBB135alteredBB
  %906 = load i32, i32* %59, align 4
  %907 = load i32, i32* %21, align 4
  %908 = icmp ult i32 %906, %907
  %909 = load i32, i32* @x.53
  %910 = load i32, i32* @y.54
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br i1 %908, label %917, label %1026

; <label>:917:                                    ; preds = %originalBBpart2137
  %918 = load i32, i32* %58, align 4
  %919 = zext i32 %918 to i64
  %920 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %37, i64 %919)
          to label %921 unwind label %684

; <label>:921:                                    ; preds = %917
  %922 = load i32, i32* %59, align 4
  %923 = zext i32 %922 to i64
  %924 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %920, i64 %923)
          to label %925 unwind label %684

; <label>:925:                                    ; preds = %921
  %926 = load i32, i32* @x.53
  %927 = load i32, i32* @y.54
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %925, %originalBB139alteredBB
  %934 = bitcast %"struct.std::_Bit_reference"* %60 to { i64*, i64 }*
  %935 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %934, i32 0, i32 0
  %936 = extractvalue { i64*, i64 } %924, 0
  store i64* %936, i64** %935, align 8
  %937 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %934, i32 0, i32 1
  %938 = extractvalue { i64*, i64 } %924, 1
  store i64 %938, i64* %937, align 8
  %939 = load i32, i32* @x.53
  %940 = load i32, i32* @y.54
  %941 = sub i32 %939, 1
  %942 = mul i32 %939, %941
  %943 = urem i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = icmp slt i32 %940, 10
  %946 = or i1 %944, %945
  br i1 %946, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  %947 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %60)
          to label %948 unwind label %684

; <label>:948:                                    ; preds = %originalBBpart2141
  %949 = load i32, i32* @x.53
  %950 = load i32, i32* @y.54
  %951 = sub i32 %949, 1
  %952 = mul i32 %949, %951
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %950, 10
  %956 = or i1 %954, %955
  br i1 %956, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %948, %originalBB143alteredBB
  %957 = load i32, i32* @x.53
  %958 = load i32, i32* @y.54
  %959 = sub i32 %957, 1
  %960 = mul i32 %957, %959
  %961 = urem i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = icmp slt i32 %958, 10
  %964 = or i1 %962, %963
  br i1 %964, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br i1 %947, label %965, label %1022

; <label>:965:                                    ; preds = %originalBBpart2145
  %966 = load %class.SparsityPattern*, %class.SparsityPattern** %15, align 8
  %967 = load i32, i32* %58, align 4
  %968 = zext i32 %967 to i64
  %969 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %968)
          to label %970 unwind label %684

; <label>:970:                                    ; preds = %965
  %971 = load i32, i32* %969, align 4
  %972 = load i32, i32* %59, align 4
  %973 = zext i32 %972 to i64
  %974 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %27, i64 %973)
          to label %975 unwind label %684

; <label>:975:                                    ; preds = %970
  %976 = load i32, i32* @x.53
  %977 = load i32, i32* @y.54
  %978 = sub i32 %976, 1
  %979 = mul i32 %976, %978
  %980 = urem i32 %979, 2
  %981 = icmp eq i32 %980, 0
  %982 = icmp slt i32 %977, 10
  %983 = or i1 %981, %982
  br i1 %983, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %975, %originalBB147alteredBB
  %984 = load i32, i32* %974, align 4
  %985 = load i32, i32* @x.53
  %986 = load i32, i32* @y.54
  %987 = sub i32 %985, 1
  %988 = mul i32 %985, %987
  %989 = urem i32 %988, 2
  %990 = icmp eq i32 %989, 0
  %991 = icmp slt i32 %986, 10
  %992 = or i1 %990, %991
  br i1 %992, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  invoke void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %966, i32 %971, i32 %984)
          to label %993 unwind label %684

; <label>:993:                                    ; preds = %originalBBpart2149
  %994 = load %class.SparsityPattern*, %class.SparsityPattern** %15, align 8
  %995 = load i32, i32* %58, align 4
  %996 = zext i32 %995 to i64
  %997 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %27, i64 %996)
          to label %998 unwind label %684

; <label>:998:                                    ; preds = %993
  %999 = load i32, i32* %997, align 4
  %1000 = load i32, i32* %59, align 4
  %1001 = zext i32 %1000 to i64
  %1002 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %1001)
          to label %1003 unwind label %684

; <label>:1003:                                   ; preds = %998
  %1004 = load i32, i32* @x.53
  %1005 = load i32, i32* @y.54
  %1006 = sub i32 %1004, 1
  %1007 = mul i32 %1004, %1006
  %1008 = urem i32 %1007, 2
  %1009 = icmp eq i32 %1008, 0
  %1010 = icmp slt i32 %1005, 10
  %1011 = or i1 %1009, %1010
  br i1 %1011, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %1003, %originalBB151alteredBB
  %1012 = load i32, i32* %1002, align 4
  %1013 = load i32, i32* @x.53
  %1014 = load i32, i32* @y.54
  %1015 = sub i32 %1013, 1
  %1016 = mul i32 %1013, %1015
  %1017 = urem i32 %1016, 2
  %1018 = icmp eq i32 %1017, 0
  %1019 = icmp slt i32 %1014, 10
  %1020 = or i1 %1018, %1019
  br i1 %1020, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  invoke void @_ZN15SparsityPattern3addEjj(%class.SparsityPattern* %994, i32 %999, i32 %1012)
          to label %1021 unwind label %684

; <label>:1021:                                   ; preds = %originalBBpart2153
  br label %1022

; <label>:1022:                                   ; preds = %1021, %originalBBpart2145
  br label %1023

; <label>:1023:                                   ; preds = %1022
  %1024 = load i32, i32* %59, align 4
  %1025 = add i32 %1024, 1
  store i32 %1025, i32* %59, align 4
  br label %897

; <label>:1026:                                   ; preds = %originalBBpart2137
  br label %1027

; <label>:1027:                                   ; preds = %1026
  %1028 = load i32, i32* %58, align 4
  %1029 = add i32 %1028, 1
  store i32 %1029, i32* %58, align 4
  br label %892

; <label>:1030:                                   ; preds = %892
  %1031 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  %1032 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %1031)
          to label %1033 unwind label %684

; <label>:1033:                                   ; preds = %1030
  %1034 = load i32, i32* %57, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret %61, %class.MGDoFCellAccessor* %1032, i32 %1034)
          to label %1035 unwind label %684

; <label>:1035:                                   ; preds = %1033
  %1036 = bitcast %class.TriaIterator.112* %61 to %class.TriaRawIterator.113*
  %1037 = invoke %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113* %1036)
          to label %1038 unwind label %684

; <label>:1038:                                   ; preds = %1035
  %1039 = bitcast %class.MGDoFObjectAccessor.115* %1037 to i8*
  %1040 = getelementptr inbounds i8, i8* %1039, i64 16
  %1041 = bitcast i8* %1040 to %class.TriaObjectAccessor.117*
  invoke void @_ZNK18TriaObjectAccessorILi2ELi3EE13set_user_flagEv(%class.TriaObjectAccessor.117* %1041)
          to label %1042 unwind label %684

; <label>:1042:                                   ; preds = %1038
  br label %1043

; <label>:1043:                                   ; preds = %1042, %756
  br label %1044

; <label>:1044:                                   ; preds = %1043, %828, %746
  %1045 = load i32, i32* @x.53
  %1046 = load i32, i32* @y.54
  %1047 = sub i32 %1045, 1
  %1048 = mul i32 %1045, %1047
  %1049 = urem i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = icmp slt i32 %1046, 10
  %1052 = or i1 %1050, %1051
  br i1 %1052, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %1044, %originalBB155alteredBB
  %1053 = load i32, i32* %54, align 4
  %1054 = add i32 %1053, 1
  store i32 %1054, i32* %54, align 4
  %1055 = load i32, i32* @x.53
  %1056 = load i32, i32* @y.54
  %1057 = sub i32 %1055, 1
  %1058 = mul i32 %1055, %1057
  %1059 = urem i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  %1061 = icmp slt i32 %1056, 10
  %1062 = or i1 %1060, %1061
  br i1 %1062, label %originalBBpart2167, label %originalBB155alteredBB

originalBBpart2167:                               ; preds = %originalBB155
  br label %697

; <label>:1063:                                   ; preds = %697
  br label %1064

; <label>:1064:                                   ; preds = %1063
  %1065 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %30)
          to label %1066 unwind label %684

; <label>:1066:                                   ; preds = %1064
  br label %555

; <label>:1067:                                   ; preds = %originalBBpart285
  %1068 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %1069 = bitcast %class.MGDoFHandler* %1068 to %class.DoFHandler*
  %1070 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %1069)
          to label %1071 unwind label %684

; <label>:1071:                                   ; preds = %1067
  invoke void @_ZN13TriangulationILi3EE15load_user_flagsERKSt6vectorIbSaIbEE(%class.Triangulation* %1070, %"class.std::vector.3"* dereferenceable(40) %50)
          to label %1072 unwind label %684

; <label>:1072:                                   ; preds = %1071
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %50)
          to label %1073 unwind label %442

; <label>:1073:                                   ; preds = %1072
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %37)
          to label %1074 unwind label %1126

; <label>:1074:                                   ; preds = %1073
  %1075 = load i32, i32* @x.53
  %1076 = load i32, i32* @y.54
  %1077 = sub i32 %1075, 1
  %1078 = mul i32 %1075, %1077
  %1079 = urem i32 %1078, 2
  %1080 = icmp eq i32 %1079, 0
  %1081 = icmp slt i32 %1076, 10
  %1082 = or i1 %1080, %1081
  br i1 %1082, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %1074, %originalBB169alteredBB
  %1083 = load i32, i32* @x.53
  %1084 = load i32, i32* @y.54
  %1085 = sub i32 %1083, 1
  %1086 = mul i32 %1083, %1085
  %1087 = urem i32 %1086, 2
  %1088 = icmp eq i32 %1087, 0
  %1089 = icmp slt i32 %1084, 10
  %1090 = or i1 %1088, %1089
  br i1 %1090, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %32)
          to label %1091 unwind label %370

; <label>:1091:                                   ; preds = %originalBBpart2171
  %1092 = load i32, i32* @x.53
  %1093 = load i32, i32* @y.54
  %1094 = sub i32 %1092, 1
  %1095 = mul i32 %1092, %1094
  %1096 = urem i32 %1095, 2
  %1097 = icmp eq i32 %1096, 0
  %1098 = icmp slt i32 %1093, 10
  %1099 = or i1 %1097, %1098
  br i1 %1099, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %1091, %originalBB173alteredBB
  %1100 = load i32, i32* @x.53
  %1101 = load i32, i32* @y.54
  %1102 = sub i32 %1100, 1
  %1103 = mul i32 %1100, %1102
  %1104 = urem i32 %1103, 2
  %1105 = icmp eq i32 %1104, 0
  %1106 = icmp slt i32 %1101, 10
  %1107 = or i1 %1105, %1106
  br i1 %1107, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %27)
          to label %1108 unwind label %1182

; <label>:1108:                                   ; preds = %originalBBpart2175
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %22)
  ret void

; <label>:1109:                                   ; preds = %684
  %1110 = load i32, i32* @x.53
  %1111 = load i32, i32* @y.54
  %1112 = sub i32 %1110, 1
  %1113 = mul i32 %1110, %1112
  %1114 = urem i32 %1113, 2
  %1115 = icmp eq i32 %1114, 0
  %1116 = icmp slt i32 %1111, 10
  %1117 = or i1 %1115, %1116
  br i1 %1117, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %1109, %originalBB177alteredBB
  %1118 = load i32, i32* @x.53
  %1119 = load i32, i32* @y.54
  %1120 = sub i32 %1118, 1
  %1121 = mul i32 %1118, %1120
  %1122 = urem i32 %1121, 2
  %1123 = icmp eq i32 %1122, 0
  %1124 = icmp slt i32 %1119, 10
  %1125 = or i1 %1123, %1124
  br i1 %1125, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br label %1146

; <label>:1126:                                   ; preds = %1073
  %1127 = load i32, i32* @x.53
  %1128 = load i32, i32* @y.54
  %1129 = sub i32 %1127, 1
  %1130 = mul i32 %1127, %1129
  %1131 = urem i32 %1130, 2
  %1132 = icmp eq i32 %1131, 0
  %1133 = icmp slt i32 %1128, 10
  %1134 = or i1 %1132, %1133
  br i1 %1134, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %1126, %originalBB181alteredBB
  %1135 = landingpad { i8*, i32 }
          cleanup
  %1136 = extractvalue { i8*, i32 } %1135, 0
  store i8* %1136, i8** %25, align 8
  %1137 = extractvalue { i8*, i32 } %1135, 1
  store i32 %1137, i32* %26, align 4
  %1138 = load i32, i32* @x.53
  %1139 = load i32, i32* @y.54
  %1140 = sub i32 %1138, 1
  %1141 = mul i32 %1138, %1140
  %1142 = urem i32 %1141, 2
  %1143 = icmp eq i32 %1142, 0
  %1144 = icmp slt i32 %1139, 10
  %1145 = or i1 %1143, %1144
  br i1 %1145, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br label %1164

; <label>:1146:                                   ; preds = %originalBBpart2179, %442
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %37)
          to label %1147 unwind label %1227

; <label>:1147:                                   ; preds = %1146
  %1148 = load i32, i32* @x.53
  %1149 = load i32, i32* @y.54
  %1150 = sub i32 %1148, 1
  %1151 = mul i32 %1148, %1150
  %1152 = urem i32 %1151, 2
  %1153 = icmp eq i32 %1152, 0
  %1154 = icmp slt i32 %1149, 10
  %1155 = or i1 %1153, %1154
  br i1 %1155, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %1147, %originalBB185alteredBB
  %1156 = load i32, i32* @x.53
  %1157 = load i32, i32* @y.54
  %1158 = sub i32 %1156, 1
  %1159 = mul i32 %1156, %1158
  %1160 = urem i32 %1159, 2
  %1161 = icmp eq i32 %1160, 0
  %1162 = icmp slt i32 %1157, 10
  %1163 = or i1 %1161, %1162
  br i1 %1163, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %1164

; <label>:1164:                                   ; preds = %originalBBpart2187, %originalBBpart2183, %441
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %32)
          to label %1165 unwind label %1227

; <label>:1165:                                   ; preds = %1164
  %1166 = load i32, i32* @x.53
  %1167 = load i32, i32* @y.54
  %1168 = sub i32 %1166, 1
  %1169 = mul i32 %1166, %1168
  %1170 = urem i32 %1169, 2
  %1171 = icmp eq i32 %1170, 0
  %1172 = icmp slt i32 %1167, 10
  %1173 = or i1 %1171, %1172
  br i1 %1173, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %1165, %originalBB189alteredBB
  %1174 = load i32, i32* @x.53
  %1175 = load i32, i32* @y.54
  %1176 = sub i32 %1174, 1
  %1177 = mul i32 %1174, %1176
  %1178 = urem i32 %1177, 2
  %1179 = icmp eq i32 %1178, 0
  %1180 = icmp slt i32 %1175, 10
  %1181 = or i1 %1179, %1180
  br i1 %1181, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %1186

; <label>:1182:                                   ; preds = %originalBBpart2175
  %1183 = landingpad { i8*, i32 }
          cleanup
  %1184 = extractvalue { i8*, i32 } %1183, 0
  store i8* %1184, i8** %25, align 8
  %1185 = extractvalue { i8*, i32 } %1183, 1
  store i32 %1185, i32* %26, align 4
  br label %1204

; <label>:1186:                                   ; preds = %originalBBpart2191, %415, %originalBBpart252
  %1187 = load i32, i32* @x.53
  %1188 = load i32, i32* @y.54
  %1189 = sub i32 %1187, 1
  %1190 = mul i32 %1187, %1189
  %1191 = urem i32 %1190, 2
  %1192 = icmp eq i32 %1191, 0
  %1193 = icmp slt i32 %1188, 10
  %1194 = or i1 %1192, %1193
  br i1 %1194, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %1186, %originalBB193alteredBB
  %1195 = load i32, i32* @x.53
  %1196 = load i32, i32* @y.54
  %1197 = sub i32 %1195, 1
  %1198 = mul i32 %1195, %1197
  %1199 = urem i32 %1198, 2
  %1200 = icmp eq i32 %1199, 0
  %1201 = icmp slt i32 %1196, 10
  %1202 = or i1 %1200, %1201
  br i1 %1202, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %27)
          to label %1203 unwind label %1227

; <label>:1203:                                   ; preds = %originalBBpart2195
  br label %1204

; <label>:1204:                                   ; preds = %1203, %1182, %originalBBpart248
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %22)
          to label %1205 unwind label %1227

; <label>:1205:                                   ; preds = %1204
  %1206 = load i32, i32* @x.53
  %1207 = load i32, i32* @y.54
  %1208 = sub i32 %1206, 1
  %1209 = mul i32 %1206, %1208
  %1210 = urem i32 %1209, 2
  %1211 = icmp eq i32 %1210, 0
  %1212 = icmp slt i32 %1207, 10
  %1213 = or i1 %1211, %1212
  br i1 %1213, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %1205, %originalBB197alteredBB
  %1214 = load i32, i32* @x.53
  %1215 = load i32, i32* @y.54
  %1216 = sub i32 %1214, 1
  %1217 = mul i32 %1214, %1216
  %1218 = urem i32 %1217, 2
  %1219 = icmp eq i32 %1218, 0
  %1220 = icmp slt i32 %1215, 10
  %1221 = or i1 %1219, %1220
  br i1 %1221, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br label %1222

; <label>:1222:                                   ; preds = %originalBBpart2199, %originalBBpart244
  %1223 = load i8*, i8** %25, align 8
  %1224 = load i32, i32* %26, align 4
  %1225 = insertvalue { i8*, i32 } undef, i8* %1223, 0
  %1226 = insertvalue { i8*, i32 } %1225, i32 %1224, 1
  resume { i8*, i32 } %1226

; <label>:1227:                                   ; preds = %1204, %originalBBpart2195, %1164, %1146, %684, %420, %originalBBpart256
  %1228 = landingpad { i8*, i32 }
          catch i8* null
  %1229 = extractvalue { i8*, i32 } %1228, 0
  call void @__clang_call_terminate(i8* %1229) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %5
  %1230 = alloca %class.MGDoFHandler*, align 8
  %1231 = alloca %class.SparsityPattern*, align 8
  %1232 = alloca i32, align 4
  %1233 = alloca %class.FullMatrix*, align 8
  %1234 = alloca %class.FullMatrix*, align 8
  %1235 = alloca i32, align 4
  %1236 = alloca i32, align 4
  %1237 = alloca i32, align 4
  %1238 = alloca %"class.std::vector.12", align 8
  %1239 = alloca i32, align 4
  %1240 = alloca %"class.std::allocator.14", align 1
  %1241 = alloca i8*
  %1242 = alloca i32
  %1243 = alloca %"class.std::vector.12", align 8
  %1244 = alloca i32, align 4
  %1245 = alloca %"class.std::allocator.14", align 1
  %1246 = alloca %class.TriaIterator, align 8
  %1247 = alloca %class.TriaIterator, align 8
  %1248 = alloca %"class.std::vector.75", align 8
  %1249 = alloca %"class.std::vector.3", align 8
  %1250 = alloca i8, align 1
  %1251 = alloca %"class.std::allocator.109", align 1
  %1252 = alloca %"class.std::allocator.77", align 1
  %1253 = alloca %"class.std::vector.75", align 8
  %1254 = alloca %"class.std::vector.3", align 8
  %1255 = alloca i8, align 1
  %1256 = alloca %"class.std::allocator.109", align 1
  %1257 = alloca %"class.std::allocator.77", align 1
  %1258 = alloca i32, align 4
  %1259 = alloca i32, align 4
  %1260 = alloca i32, align 4
  %1261 = alloca %"struct.std::pair.60", align 4
  %1262 = alloca i32, align 4
  %1263 = alloca %"struct.std::pair.60", align 4
  %1264 = alloca %"struct.std::_Bit_reference", align 8
  %1265 = alloca %"struct.std::_Bit_reference", align 8
  %1266 = alloca %"class.std::vector.3", align 8
  %1267 = alloca i32, align 4
  %1268 = alloca i32, align 4
  %1269 = alloca %"struct.std::_Bit_reference", align 8
  %1270 = alloca i32, align 4
  %1271 = alloca %class.TriaIterator.112, align 8
  %1272 = alloca %class.TriaIterator, align 8
  %1273 = alloca i32, align 4
  %1274 = alloca i32, align 4
  %1275 = alloca i32, align 4
  %1276 = alloca %"struct.std::_Bit_reference", align 8
  %1277 = alloca %class.TriaIterator.112, align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %1230, align 8
  store %class.SparsityPattern* %1, %class.SparsityPattern** %1231, align 8
  store i32 %2, i32* %1232, align 4
  store %class.FullMatrix* %3, %class.FullMatrix** %1233, align 8
  store %class.FullMatrix* %4, %class.FullMatrix** %1234, align 8
  %1278 = load %class.MGDoFHandler*, %class.MGDoFHandler** %1230, align 8
  %1279 = load i32, i32* %1232, align 4
  %1280 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %1278, i32 %1279)
  store i32 %1280, i32* %1235, align 4
  %1281 = load %class.MGDoFHandler*, %class.MGDoFHandler** %1230, align 8
  %1282 = bitcast %class.MGDoFHandler* %1281 to %class.DoFHandler*
  %1283 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %1282)
  %1284 = bitcast %class.FiniteElement* %1283 to i8*
  %1285 = getelementptr inbounds i8, i8* %1284, i64 24
  %1286 = bitcast i8* %1285 to %class.FiniteElementData*
  %1287 = call i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %1286)
  store i32 %1287, i32* %1236, align 4
  %1288 = load %class.MGDoFHandler*, %class.MGDoFHandler** %1230, align 8
  %1289 = bitcast %class.MGDoFHandler* %1288 to %class.DoFHandler*
  %1290 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %1289)
  %1291 = bitcast %class.FiniteElement* %1290 to i8*
  %1292 = getelementptr inbounds i8, i8* %1291, i64 24
  %1293 = bitcast i8* %1292 to %class.FiniteElementData*
  %1294 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %1293, i32 0, i32 10
  %1295 = load i32, i32* %1294, align 8
  store i32 %1295, i32* %1237, align 4
  %1296 = load i32, i32* %1237, align 4
  %1297 = zext i32 %1296 to i64
  store i32 0, i32* %1239, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %1240) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %99
  %1298 = load i32, i32* %21, align 4
  %1299 = zext i32 %1298 to i64
  %1300 = load i32, i32* %21, align 4
  %1301 = zext i32 %1300 to i64
  store i8 0, i8* %34, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %35) #2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %120
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %36) #2
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %138
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %35) #2
  %1302 = load i32, i32* %21, align 4
  %1303 = zext i32 %1302 to i64
  %1304 = load i32, i32* %21, align 4
  %1305 = zext i32 %1304 to i64
  store i8 0, i8* %39, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %40) #2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %162
  %1306 = load i32, i32* %42, align 4
  %1307 = load i32, i32* %21, align 4
  %1308 = icmp ult i32 %1306, %1307
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %182
  store i32 0, i32* %43, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %199
  %1309 = load i32, i32* %43, align 4
  %1310 = load i32, i32* %21, align 4
  %1311 = icmp ult i32 %1309, %1310
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %219
  %1312 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %1313 = bitcast %class.MGDoFHandler* %1312 to %class.DoFHandler*
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %250
  %1314 = bitcast %class.FiniteElement* %249 to %class.FiniteElementBase*
  %1315 = load i32, i32* %43, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %279
  %1316 = load double, double* %278, align 8
  %1317 = fcmp une double %1316, 0.000000e+00
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %313
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %330
  %1318 = landingpad { i8*, i32 }
          cleanup
  %1319 = extractvalue { i8*, i32 } %1318, 0
  store i8* %1319, i8** %25, align 8
  %1320 = extractvalue { i8*, i32 } %1318, 1
  store i32 %1320, i32* %26, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %350
  %1321 = landingpad { i8*, i32 }
          cleanup
  %1322 = extractvalue { i8*, i32 } %1321, 0
  store i8* %1322, i8** %25, align 8
  %1323 = extractvalue { i8*, i32 } %1321, 1
  store i32 %1323, i32* %26, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %29) #2
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %370
  %1324 = landingpad { i8*, i32 }
          cleanup
  %1325 = extractvalue { i8*, i32 } %1324, 0
  store i8* %1325, i8** %25, align 8
  %1326 = extractvalue { i8*, i32 } %1324, 1
  store i32 %1326, i32* %26, align 4
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %394
  %1327 = landingpad { i8*, i32 }
          cleanup
  %1328 = extractvalue { i8*, i32 } %1327, 0
  store i8* %1328, i8** %25, align 8
  %1329 = extractvalue { i8*, i32 } %1327, 1
  store i32 %1329, i32* %26, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %36) #2
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %424
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %471
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %492
  %1330 = load i32, i32* %42, align 4
  %_ = shl i32 %1330, 1
  %_67 = sub i32 %1330, 1
  %gen = mul i32 %_67, 1
  %_68 = sub i32 0, %1330
  %gen69 = add i32 %_68, 1
  %_70 = sub i32 0, %1330
  %gen71 = add i32 %_70, 1
  %1331 = add i32 %1330, 1
  store i32 %1331, i32* %42, align 4
  br label %originalBB66

originalBB75alteredBB:                            ; preds = %originalBB75, %512
  %1332 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %1333 = bitcast %class.MGDoFHandler* %1332 to %class.DoFHandler*
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %537
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %559
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %582
  %1334 = load i32, i32* %51, align 4
  %1335 = load i32, i32* %21, align 4
  %1336 = icmp ult i32 %1334, %1335
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %615
  %1337 = bitcast %"struct.std::_Bit_reference"* %53 to { i64*, i64 }*
  %1338 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1337, i32 0, i32 0
  %1339 = extractvalue { i64*, i64 } %614, 0
  store i64* %1339, i64** %1338, align 8
  %1340 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1337, i32 0, i32 1
  %1341 = extractvalue { i64*, i64 } %614, 1
  store i64 %1341, i64* %1340, align 8
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %639
  %1342 = load %class.SparsityPattern*, %class.SparsityPattern** %15, align 8
  %1343 = load i32, i32* %51, align 4
  %1344 = zext i32 %1343 to i64
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %667
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %703
  %1345 = load i32, i32* %54, align 4
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %721
  %1346 = bitcast %class.TriaIterator.112* %55 to %class.TriaRawIterator.113*
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %757
  %1347 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %786
  %1348 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %810
  %1349 = icmp slt i32 %785, %809
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %829
  %1350 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %854
  store i32 %853, i32* %57, align 4
  %1351 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %873
  %1352 = bitcast %class.MGDoFCellAccessor* %872 to %class.MGDoFObjectAccessor*
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %897
  %1353 = load i32, i32* %59, align 4
  %1354 = load i32, i32* %21, align 4
  %1355 = icmp ult i32 %1353, %1354
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %925
  %1356 = bitcast %"struct.std::_Bit_reference"* %60 to { i64*, i64 }*
  %1357 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1356, i32 0, i32 0
  %1358 = extractvalue { i64*, i64 } %924, 0
  store i64* %1358, i64** %1357, align 8
  %1359 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1356, i32 0, i32 1
  %1360 = extractvalue { i64*, i64 } %924, 1
  store i64 %1360, i64* %1359, align 8
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %948
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %975
  %1361 = load i32, i32* %974, align 4
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %1003
  %1362 = load i32, i32* %1002, align 4
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %1044
  %1363 = load i32, i32* %54, align 4
  %_156 = sub i32 0, %1363
  %gen157 = add i32 %_156, 1
  %_158 = sub i32 %1363, 1
  %gen159 = mul i32 %_158, 1
  %_160 = sub i32 0, %1363
  %gen161 = add i32 %_160, 1
  %_162 = shl i32 %1363, 1
  %_163 = shl i32 %1363, 1
  %_164 = sub i32 %1363, 1
  %gen165 = mul i32 %_164, 1
  %1364 = add i32 %1363, 1
  store i32 %1364, i32* %54, align 4
  br label %originalBB155

originalBB169alteredBB:                           ; preds = %originalBB169, %1074
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %1091
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %1109
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %1126
  %1365 = landingpad { i8*, i32 }
          cleanup
  %1366 = extractvalue { i8*, i32 } %1365, 0
  store i8* %1366, i8** %25, align 8
  %1367 = extractvalue { i8*, i32 } %1365, 1
  store i32 %1367, i32* %26, align 4
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %1147
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %1165
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %1186
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %1205
  br label %originalBB197
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData*) #3 comdat align 2 {
  %2 = alloca %class.FiniteElementData*, align 8
  store %class.FiniteElementData* %0, %class.FiniteElementData** %2, align 8
  %3 = load %class.FiniteElementData*, %class.FiniteElementData** %2, align 8
  %4 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %3, i32 0, i32 11
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2Ev(%"class.std::allocator.109"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.57
  %3 = load i32, i32* @y.58
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.109"*, align 8
  store %"class.std::allocator.109"* %0, %"class.std::allocator.109"** %10, align 8
  %11 = load %"class.std::allocator.109"*, %"class.std::allocator.109"** %10, align 8
  %12 = bitcast %"class.std::allocator.109"* %11 to %"class.__gnu_cxx::new_allocator.110"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.110"* %12) #2
  %13 = load i32, i32* @x.57
  %14 = load i32, i32* @y.58
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.109"*, align 8
  store %"class.std::allocator.109"* %0, %"class.std::allocator.109"** %21, align 8
  %22 = load %"class.std::allocator.109"*, %"class.std::allocator.109"** %21, align 8
  %23 = bitcast %"class.std::allocator.109"* %22 to %"class.__gnu_cxx::new_allocator.110"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.110"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"*, i64, i8* dereferenceable(1), %"class.std::allocator.109"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.109"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.109"* %3, %"class.std::allocator.109"** %8, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %12 = bitcast %"class.std::vector.3"* %11 to %"struct.std::_Bvector_base"*
  %13 = load %"class.std::allocator.109"*, %"class.std::allocator.109"** %8, align 8
  call void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %12, %"class.std::allocator.109"* dereferenceable(1) %13)
  %14 = load i64, i64* %6, align 8
  invoke void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.3"* %11, i64 %14)
          to label %15 unwind label %52

; <label>:15:                                     ; preds = %4
  %16 = load i32, i32* @x.59
  %17 = load i32, i32* @y.60
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %7, align 8
  %25 = load i8, i8* %24, align 1
  %26 = trunc i8 %25 to i1
  %27 = load i32, i32* @x.59
  %28 = load i32, i32* @y.60
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb(%"class.std::vector.3"* %11, i1 zeroext %26)
          to label %35 unwind label %52

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.59
  %37 = load i32, i32* @y.60
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i32, i32* @x.59
  %45 = load i32, i32* @y.60
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:52:                                     ; preds = %originalBBpart2, %4
  %53 = load i32, i32* @x.59
  %54 = load i32, i32* @y.60
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %9, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %10, align 4
  %64 = bitcast %"class.std::vector.3"* %11 to %"struct.std::_Bvector_base"*
  %65 = load i32, i32* @x.59
  %66 = load i32, i32* @y.60
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %64)
          to label %73 unwind label %95

; <label>:73:                                     ; preds = %originalBBpart28
  br label %74

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* @x.59
  %76 = load i32, i32* @y.60
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load i8*, i8** %9, align 8
  %84 = load i32, i32* %10, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  %87 = load i32, i32* @x.59
  %88 = load i32, i32* @y.60
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %86

; <label>:95:                                     ; preds = %originalBBpart28
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  call void @__clang_call_terminate(i8* %97) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %15
  %98 = load i8*, i8** %7, align 8
  %99 = load i8, i8* %98, align 1
  %100 = trunc i8 %99 to i1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  store i8* %102, i8** %9, align 8
  %103 = extractvalue { i8*, i32 } %101, 1
  store i32 %103, i32* %10, align 4
  %104 = bitcast %"class.std::vector.3"* %11 to %"struct.std::_Bvector_base"*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %105 = load i8*, i8** %9, align 8
  %106 = load i32, i32* %10, align 4
  %107 = insertvalue { i8*, i32 } undef, i8* %105, 0
  %108 = insertvalue { i8*, i32 } %107, i32 %106, 1
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.61
  %3 = load i32, i32* @y.62
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.77"*, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %10, align 8
  %11 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %10, align 8
  %12 = bitcast %"class.std::allocator.77"* %11 to %"class.__gnu_cxx::new_allocator.78"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev(%"class.__gnu_cxx::new_allocator.78"* %12) #2
  %13 = load i32, i32* @x.61
  %14 = load i32, i32* @y.62
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.77"*, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %21, align 8
  %22 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %21, align 8
  %23 = bitcast %"class.std::allocator.77"* %22 to %"class.__gnu_cxx::new_allocator.78"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev(%"class.__gnu_cxx::new_allocator.78"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"*, i64, %"class.std::vector.3"* dereferenceable(40), %"class.std::allocator.77"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.75"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::allocator.77"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.75"* %0, %"class.std::vector.75"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::allocator.77"* %3, %"class.std::allocator.77"** %8, align 8
  %11 = load %"class.std::vector.75"*, %"class.std::vector.75"** %5, align 8
  %12 = bitcast %"class.std::vector.75"* %11 to %"struct.std::_Vector_base.76"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %8, align 8
  %15 = call i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %13, %"class.std::allocator.77"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.76"* %12, i64 %15, %"class.std::allocator.77"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.75"* %11, i64 %17, %"class.std::vector.3"* dereferenceable(40) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %4
  ret void

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* @x.63
  %22 = load i32, i32* @y.64
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %9, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %10, align 4
  %32 = bitcast %"class.std::vector.75"* %11 to %"struct.std::_Vector_base.76"*
  %33 = load i32, i32* @x.63
  %34 = load i32, i32* @y.64
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.76"* %32)
          to label %41 unwind label %47

; <label>:41:                                     ; preds = %originalBBpart2
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %9, align 8
  %44 = load i32, i32* %10, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = load i32, i32* @x.63
  %49 = load i32, i32* @y.64
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #9
  %58 = load i32, i32* @x.63
  %59 = load i32, i32* @y.64
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %20
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %9, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %10, align 4
  %69 = bitcast %"class.std::vector.75"* %11 to %"struct.std::_Vector_base.76"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  call void @__clang_call_terminate(i8* %71) #9
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.65
  %3 = load i32, i32* @y.66
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.77"*, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %10, align 8
  %11 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %10, align 8
  %12 = bitcast %"class.std::allocator.77"* %11 to %"class.__gnu_cxx::new_allocator.78"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev(%"class.__gnu_cxx::new_allocator.78"* %12) #2
  %13 = load i32, i32* @x.65
  %14 = load i32, i32* @y.66
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.77"*, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %21, align 8
  %22 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %21, align 8
  %23 = bitcast %"class.std::allocator.77"* %22 to %"class.__gnu_cxx::new_allocator.78"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev(%"class.__gnu_cxx::new_allocator.78"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbED2Ev(%"class.std::allocator.109"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.109"*, align 8
  store %"class.std::allocator.109"* %0, %"class.std::allocator.109"** %2, align 8
  %3 = load %"class.std::allocator.109"*, %"class.std::allocator.109"** %2, align 8
  %4 = bitcast %"class.std::allocator.109"* %3 to %"class.__gnu_cxx::new_allocator.110"*
  call void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.110"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase*, i32) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair.60", align 4
  %4 = alloca %class.FiniteElementBase*, align 8
  %5 = alloca i32, align 4
  store %class.FiniteElementBase* %0, %class.FiniteElementBase** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %class.FiniteElementBase*, %class.FiniteElementBase** %4, align 8
  %7 = getelementptr inbounds %class.FiniteElementBase, %class.FiniteElementBase* %6, i32 0, i32 6
  %8 = load i32, i32* %5, align 4
  %9 = zext i32 %8 to i64
  %10 = call dereferenceable(8) %"struct.std::pair.60"* @_ZNKSt6vectorISt4pairIjjESaIS1_EEixEm(%"class.std::vector.55"* %7, i64 %9)
  %11 = bitcast %"struct.std::pair.60"* %3 to i8*
  %12 = bitcast %"struct.std::pair.60"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 4, i1 false)
  %13 = bitcast %"struct.std::pair.60"* %3 to i64*
  %14 = load i64, i64* %13, align 4
  ret i64 %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table*, i32, i32) #3 comdat align 2 {
  %4 = load i32, i32* @x.73
  %5 = load i32, i32* @y.74
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Table*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.Table* %0, %class.Table** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %15 = load %class.Table*, %class.Table** %12, align 8
  %16 = bitcast %class.Table* %15 to %class.TableBase*
  %17 = getelementptr inbounds %class.TableBase, %class.TableBase* %16, i32 0, i32 1
  %18 = load double*, double** %17, align 8
  %19 = load i32, i32* %13, align 4
  %20 = bitcast %class.Table* %15 to %class.TableBase*
  %21 = getelementptr inbounds %class.TableBase, %class.TableBase* %20, i32 0, i32 3
  %22 = bitcast %class.TableIndices* %21 to %class.TableIndicesBase*
  %23 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %22, i32 1)
  %24 = mul i32 %19, %23
  %25 = load i32, i32* %14, align 4
  %26 = add i32 %24, %25
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds double, double* %18, i64 %27
  %29 = load i32, i32* @x.73
  %30 = load i32, i32* @y.74
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %28

originalBBalteredBB:                              ; preds = %originalBB, %3
  %37 = alloca %class.Table*, align 8
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  store %class.Table* %0, %class.Table** %37, align 8
  store i32 %1, i32* %38, align 4
  store i32 %2, i32* %39, align 4
  %40 = load %class.Table*, %class.Table** %37, align 8
  %41 = bitcast %class.Table* %40 to %class.TableBase*
  %42 = getelementptr inbounds %class.TableBase, %class.TableBase* %41, i32 0, i32 1
  %43 = load double*, double** %42, align 8
  %44 = load i32, i32* %38, align 4
  %45 = bitcast %class.Table* %40 to %class.TableBase*
  %46 = getelementptr inbounds %class.TableBase, %class.TableBase* %45, i32 0, i32 3
  %47 = bitcast %class.TableIndices* %46 to %class.TableIndicesBase*
  %48 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %47, i32 1)
  %_ = shl i32 %44, %48
  %_1 = sub i32 %44, %48
  %gen = mul i32 %_1, %48
  %49 = mul i32 %44, %48
  %50 = load i32, i32* %39, align 4
  %_2 = shl i32 %49, %50
  %51 = add i32 %49, %50
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds double, double* %43, i64 %52
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.75"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.75"* %0, %"class.std::vector.75"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.75"*, %"class.std::vector.75"** %3, align 8
  %6 = bitcast %"class.std::vector.75"* %5 to %"struct.std::_Vector_base.76"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %10, i64 %11
  ret %"class.std::vector.3"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.77
  %4 = load i32, i32* @y.78
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_reference", align 8
  %12 = alloca %"class.std::vector.3"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %12, align 8
  store i64 %1, i64* %13, align 8
  %15 = load %"class.std::vector.3"*, %"class.std::vector.3"** %12, align 8
  %16 = bitcast %"class.std::vector.3"* %15 to %"struct.std::_Bvector_base"*
  %17 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %17 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Bit_iterator"* %19 to %"struct.std::_Bit_iterator_base"*
  %21 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %20, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = load i64, i64* %13, align 8
  %24 = udiv i64 %23, 64
  %25 = getelementptr inbounds i64, i64* %22, i64 %24
  %26 = load i64, i64* %13, align 8
  %27 = urem i64 %26, 64
  %28 = trunc i64 %27 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %25, i32 %28)
  %29 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %14)
  %30 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %31 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %30, i32 0, i32 0
  %32 = extractvalue { i64*, i64 } %29, 0
  store i64* %32, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %30, i32 0, i32 1
  %34 = extractvalue { i64*, i64 } %29, 1
  store i64 %34, i64* %33, align 8
  %35 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %36 = load { i64*, i64 }, { i64*, i64 }* %35, align 8
  %37 = load i32, i32* @x.77
  %38 = load i32, i32* @y.78
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i64 } %36

originalBBalteredBB:                              ; preds = %originalBB, %2
  %45 = alloca %"struct.std::_Bit_reference", align 8
  %46 = alloca %"class.std::vector.3"*, align 8
  %47 = alloca i64, align 8
  %48 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %46, align 8
  store i64 %1, i64* %47, align 8
  %49 = load %"class.std::vector.3"*, %"class.std::vector.3"** %46, align 8
  %50 = bitcast %"class.std::vector.3"* %49 to %"struct.std::_Bvector_base"*
  %51 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %51 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Bit_iterator"* %53 to %"struct.std::_Bit_iterator_base"*
  %55 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = load i64, i64* %47, align 8
  %_ = shl i64 %57, 64
  %_1 = sub i64 0, %57
  %gen = add i64 %_1, 64
  %_2 = sub i64 0, %57
  %gen3 = add i64 %_2, 64
  %_4 = sub i64 0, %57
  %gen5 = add i64 %_4, 64
  %_6 = sub i64 0, %57
  %gen7 = add i64 %_6, 64
  %_8 = shl i64 %57, 64
  %_9 = shl i64 %57, 64
  %_10 = sub i64 0, %57
  %gen11 = add i64 %_10, 64
  %58 = udiv i64 %57, 64
  %59 = getelementptr inbounds i64, i64* %56, i64 %58
  %60 = load i64, i64* %47, align 8
  %_12 = sub i64 0, %60
  %gen13 = add i64 %_12, 64
  %_14 = shl i64 %60, 64
  %_15 = sub i64 %60, 64
  %gen16 = mul i64 %_15, 64
  %_17 = sub i64 %60, 64
  %gen18 = mul i64 %_17, 64
  %_19 = sub i64 0, %60
  %gen20 = add i64 %_19, 64
  %_21 = sub i64 %60, 64
  %gen22 = mul i64 %_21, 64
  %61 = urem i64 %60, 64
  %62 = trunc i64 %61 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %48, i64* %59, i32 %62)
  %63 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %48)
  %64 = bitcast %"struct.std::_Bit_reference"* %45 to { i64*, i64 }*
  %65 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %64, i32 0, i32 0
  %66 = extractvalue { i64*, i64 } %63, 0
  store i64* %66, i64** %65, align 8
  %67 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %64, i32 0, i32 1
  %68 = extractvalue { i64*, i64 } %63, 1
  store i64 %68, i64* %67, align 8
  %69 = bitcast %"struct.std::_Bit_reference"* %45 to { i64*, i64 }*
  %70 = load { i64*, i64 }, { i64*, i64 }* %69, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"*, i1 zeroext) #3 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_reference"*, align 8
  %4 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %3, align 8
  %7 = load i8, i8* %4, align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %9, label %32

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.79
  %11 = load i32, i32* @y.80
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %21, align 8
  %23 = or i64 %22, %19
  store i64 %23, i64* %21, align 8
  %24 = load i32, i32* @x.79
  %25 = load i32, i32* @y.80
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %40

; <label>:32:                                     ; preds = %2
  %33 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = xor i64 %34, -1
  %36 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, %35
  store i64 %39, i64* %37, align 8
  br label %40

; <label>:40:                                     ; preds = %32, %originalBBpart2
  ret %"struct.std::_Bit_reference"* %6

originalBBalteredBB:                              ; preds = %originalBB, %9
  %41 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %6, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = load i64, i64* %44, align 8
  %_ = shl i64 %45, %42
  %_1 = shl i64 %45, %42
  %_2 = shl i64 %45, %42
  %_3 = shl i64 %45, %42
  %46 = or i64 %45, %42
  store i64 %46, i64* %44, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.3"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEEC2Ev(%"struct.std::_Bvector_base"* %4)
  ret void
}

declare dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler*) #1

declare void @_ZNK13TriangulationILi3EE15save_user_flagsERSt6vectorIbSaIbEE(%class.Triangulation*, %"class.std::vector.3"* dereferenceable(40)) #1

declare void @_ZN13TriangulationILi3EE16clear_user_flagsEv(%class.Triangulation*) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %2, align 8
  %3 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %6, %8
  %10 = icmp ne i64 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  ret i1 %12
}

declare void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret, %class.MGDoFCellAccessor*, i32) #1

; Function Attrs: noinline uwtable
define linkonce_odr %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113*) #0 comdat align 2 {
  %2 = load i32, i32* @x.85
  %3 = load i32, i32* @y.86
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaRawIterator.113*, align 8
  store %class.TriaRawIterator.113* %0, %class.TriaRawIterator.113** %10, align 8
  %11 = load %class.TriaRawIterator.113*, %class.TriaRawIterator.113** %10, align 8
  %12 = call dereferenceable(32) %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEdeEv(%class.TriaRawIterator.113* %11)
  %13 = load i32, i32* @x.85
  %14 = load i32, i32* @y.86
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.MGDoFObjectAccessor.115* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TriaRawIterator.113*, align 8
  store %class.TriaRawIterator.113* %0, %class.TriaRawIterator.113** %21, align 8
  %22 = load %class.TriaRawIterator.113*, %class.TriaRawIterator.113** %21, align 8
  %23 = call dereferenceable(32) %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEdeEv(%class.TriaRawIterator.113* %22)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK18TriaObjectAccessorILi2ELi3EE13user_flag_setEv(%class.TriaObjectAccessor.117*) #0 comdat align 2 {
  %2 = alloca %class.TriaObjectAccessor.117*, align 8
  %3 = alloca %"struct.std::_Bit_reference", align 8
  store %class.TriaObjectAccessor.117* %0, %class.TriaObjectAccessor.117** %2, align 8
  %4 = load %class.TriaObjectAccessor.117*, %class.TriaObjectAccessor.117** %2, align 8
  %5 = bitcast %class.TriaObjectAccessor.117* %4 to %class.TriaAccessor*
  %6 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %5, i32 0, i32 2
  %7 = load %class.Triangulation*, %class.Triangulation** %6, align 8
  %8 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %7, i32 0, i32 1
  %9 = bitcast %class.TriaObjectAccessor.117* %4 to %class.TriaAccessor*
  %10 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %8, i64 %12)
  %14 = load %class.TriangulationLevel*, %class.TriangulationLevel** %13, align 8
  %15 = bitcast %class.TriangulationLevel* %14 to %class.TriangulationLevel.0*
  %16 = getelementptr inbounds %class.TriangulationLevel.0, %class.TriangulationLevel.0* %15, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.TriangulationLevel<2>::QuadsData", %"struct.TriangulationLevel<2>::QuadsData"* %16, i32 0, i32 3
  %18 = bitcast %class.TriaObjectAccessor.117* %4 to %class.TriaAccessor*
  %19 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %17, i64 %21)
  %23 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %24 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %23, i32 0, i32 0
  %25 = extractvalue { i64*, i64 } %22, 0
  store i64* %25, i64** %24, align 8
  %26 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %23, i32 0, i32 1
  %27 = extractvalue { i64*, i64 } %22, 1
  store i64 %27, i64* %26, align 8
  %28 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %3)
  ret i1 %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor*) #3 comdat align 2 {
  %2 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %2, align 8
  %3 = load %class.TriaAccessor*, %class.TriaAccessor** %2, align 8
  %4 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

declare i32 @_ZNK12CellAccessorILi3EE20neighbor_of_neighborEj(%class.CellAccessor*, i32) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK18TriaObjectAccessorILi2ELi3EE13set_user_flagEv(%class.TriaObjectAccessor.117*) #0 comdat align 2 {
  %2 = alloca %class.TriaObjectAccessor.117*, align 8
  %3 = alloca %"struct.std::_Bit_reference", align 8
  store %class.TriaObjectAccessor.117* %0, %class.TriaObjectAccessor.117** %2, align 8
  %4 = load %class.TriaObjectAccessor.117*, %class.TriaObjectAccessor.117** %2, align 8
  %5 = bitcast %class.TriaObjectAccessor.117* %4 to %class.TriaAccessor*
  %6 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %5, i32 0, i32 2
  %7 = load %class.Triangulation*, %class.Triangulation** %6, align 8
  %8 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %7, i32 0, i32 1
  %9 = bitcast %class.TriaObjectAccessor.117* %4 to %class.TriaAccessor*
  %10 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %8, i64 %12)
  %14 = load %class.TriangulationLevel*, %class.TriangulationLevel** %13, align 8
  %15 = bitcast %class.TriangulationLevel* %14 to %class.TriangulationLevel.0*
  %16 = getelementptr inbounds %class.TriangulationLevel.0, %class.TriangulationLevel.0* %15, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.TriangulationLevel<2>::QuadsData", %"struct.TriangulationLevel<2>::QuadsData"* %16, i32 0, i32 3
  %18 = bitcast %class.TriaObjectAccessor.117* %4 to %class.TriaAccessor*
  %19 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %17, i64 %21)
  %23 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %24 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %23, i32 0, i32 0
  %25 = extractvalue { i64*, i64 } %22, 0
  store i64* %25, i64** %24, align 8
  %26 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %23, i32 0, i32 1
  %27 = extractvalue { i64*, i64 } %22, 1
  store i64 %27, i64* %26, align 8
  %28 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %3, i1 zeroext true)
  ret void
}

declare void @_ZN13TriangulationILi3EE15load_user_flagsERKSt6vectorIbSaIbEE(%class.Triangulation*, %"class.std::vector.3"* dereferenceable(40)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.75"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.75"* %0, %"class.std::vector.75"** %2, align 8
  %5 = load %"class.std::vector.75"*, %"class.std::vector.75"** %2, align 8
  %6 = bitcast %"class.std::vector.75"* %5 to %"struct.std::_Vector_base.76"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %11 = bitcast %"class.std::vector.75"* %5 to %"struct.std::_Vector_base.76"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"class.std::vector.3"*, %"class.std::vector.3"** %14, align 8
  %16 = bitcast %"class.std::vector.75"* %5 to %"struct.std::_Vector_base.76"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.77"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.76"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E(%"class.std::vector.3"* %10, %"class.std::vector.3"* %15, %"class.std::allocator.77"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.75"* %5 to %"struct.std::_Vector_base.76"*
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.76"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = bitcast %"class.std::vector.75"* %5 to %"struct.std::_Vector_base.76"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.76"* %25)
          to label %26 unwind label %48

; <label>:26:                                     ; preds = %21
  br label %27

; <label>:27:                                     ; preds = %26
  %28 = load i32, i32* @x.93
  %29 = load i32, i32* @y.94
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %27, %originalBBalteredBB
  %36 = load i8*, i8** %3, align 8
  %37 = load i32, i32* %4, align 4
  %38 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  %40 = load i32, i32* @x.93
  %41 = load i32, i32* @y.94
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %39

; <label>:48:                                     ; preds = %21
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %27
  %51 = load i8*, i8** %3, align 8
  %52 = load i32, i32* %4, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools26make_flux_sparsity_patternILi3E25CompressedSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_jRK10FullMatrixIdESB_(%class.MGDoFHandler* dereferenceable(168), %class.CompressedSparsityPattern* dereferenceable(56), i32, %class.FullMatrix* dereferenceable(48), %class.FullMatrix* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = load i32, i32* @x.95
  %7 = load i32, i32* @y.96
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.MGDoFHandler*, align 8
  %15 = alloca %class.CompressedSparsityPattern*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %class.FullMatrix*, align 8
  %18 = alloca %class.FullMatrix*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::vector.12", align 8
  %23 = alloca i32, align 4
  %24 = alloca %"class.std::allocator.14", align 1
  %25 = alloca i8*
  %26 = alloca i32
  %27 = alloca %"class.std::vector.12", align 8
  %28 = alloca i32, align 4
  %29 = alloca %"class.std::allocator.14", align 1
  %30 = alloca %class.TriaIterator, align 8
  %31 = alloca %class.TriaIterator, align 8
  %32 = alloca %"class.std::vector.75", align 8
  %33 = alloca %"class.std::vector.3", align 8
  %34 = alloca i8, align 1
  %35 = alloca %"class.std::allocator.109", align 1
  %36 = alloca %"class.std::allocator.77", align 1
  %37 = alloca %"class.std::vector.75", align 8
  %38 = alloca %"class.std::vector.3", align 8
  %39 = alloca i8, align 1
  %40 = alloca %"class.std::allocator.109", align 1
  %41 = alloca %"class.std::allocator.77", align 1
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %"struct.std::pair.60", align 4
  %46 = alloca i32, align 4
  %47 = alloca %"struct.std::pair.60", align 4
  %48 = alloca %"struct.std::_Bit_reference", align 8
  %49 = alloca %"struct.std::_Bit_reference", align 8
  %50 = alloca %"class.std::vector.3", align 8
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca %"struct.std::_Bit_reference", align 8
  %54 = alloca i32, align 4
  %55 = alloca %class.TriaIterator.112, align 8
  %56 = alloca %class.TriaIterator, align 8
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca %"struct.std::_Bit_reference", align 8
  %61 = alloca %class.TriaIterator.112, align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %14, align 8
  store %class.CompressedSparsityPattern* %1, %class.CompressedSparsityPattern** %15, align 8
  store i32 %2, i32* %16, align 4
  store %class.FullMatrix* %3, %class.FullMatrix** %17, align 8
  store %class.FullMatrix* %4, %class.FullMatrix** %18, align 8
  %62 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %63 = load i32, i32* %16, align 4
  %64 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %62, i32 %63)
  store i32 %64, i32* %19, align 4
  %65 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %66 = bitcast %class.MGDoFHandler* %65 to %class.DoFHandler*
  %67 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %66)
  %68 = bitcast %class.FiniteElement* %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 24
  %70 = bitcast i8* %69 to %class.FiniteElementData*
  %71 = call i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %70)
  store i32 %71, i32* %20, align 4
  %72 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %73 = bitcast %class.MGDoFHandler* %72 to %class.DoFHandler*
  %74 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %73)
  %75 = bitcast %class.FiniteElement* %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 24
  %77 = bitcast i8* %76 to %class.FiniteElementData*
  %78 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %77, i32 0, i32 10
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %21, align 4
  %80 = load i32, i32* %21, align 4
  %81 = zext i32 %80 to i64
  store i32 0, i32* %23, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %24) #2
  %82 = load i32, i32* @x.95
  %83 = load i32, i32* @y.96
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %22, i64 %81, i32* dereferenceable(4) %23, %"class.std::allocator.14"* dereferenceable(1) %24)
          to label %90 unwind label %282

; <label>:90:                                     ; preds = %originalBBpart2
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  %91 = load i32, i32* %21, align 4
  %92 = zext i32 %91 to i64
  store i32 0, i32* %28, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %29) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %27, i64 %92, i32* dereferenceable(4) %28, %"class.std::allocator.14"* dereferenceable(1) %29)
          to label %93 unwind label %302

; <label>:93:                                     ; preds = %90
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %29) #2
  %94 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %95 = load i32, i32* %16, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %30, %class.MGDoFHandler* %94, i32 %95)
          to label %96 unwind label %322

; <label>:96:                                     ; preds = %93
  %97 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %98 = load i32, i32* %16, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %31, %class.MGDoFHandler* %97, i32 %98)
          to label %99 unwind label %322

; <label>:99:                                     ; preds = %96
  %100 = load i32, i32* %21, align 4
  %101 = zext i32 %100 to i64
  %102 = load i32, i32* %21, align 4
  %103 = zext i32 %102 to i64
  store i8 0, i8* %34, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %35) #2
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %33, i64 %103, i8* dereferenceable(1) %34, %"class.std::allocator.109"* dereferenceable(1) %35)
          to label %104 unwind label %342

; <label>:104:                                    ; preds = %99
  %105 = load i32, i32* @x.95
  %106 = load i32, i32* @y.96
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %104, %originalBB1alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %36) #2
  %113 = load i32, i32* @x.95
  %114 = load i32, i32* @y.96
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %32, i64 %101, %"class.std::vector.3"* dereferenceable(40) %33, %"class.std::allocator.77"* dereferenceable(1) %36)
          to label %121 unwind label %362

; <label>:121:                                    ; preds = %originalBBpart24
  %122 = load i32, i32* @x.95
  %123 = load i32, i32* @y.96
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %121, %originalBB6alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %36) #2
  %130 = load i32, i32* @x.95
  %131 = load i32, i32* @y.96
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %33)
          to label %138 unwind label %342

; <label>:138:                                    ; preds = %originalBBpart28
  %139 = load i32, i32* @x.95
  %140 = load i32, i32* @y.96
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %138, %originalBB10alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %35) #2
  %147 = load i32, i32* %21, align 4
  %148 = zext i32 %147 to i64
  %149 = load i32, i32* %21, align 4
  %150 = zext i32 %149 to i64
  store i8 0, i8* %39, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %40) #2
  %151 = load i32, i32* @x.95
  %152 = load i32, i32* @y.96
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %38, i64 %150, i8* dereferenceable(1) %39, %"class.std::allocator.109"* dereferenceable(1) %40)
          to label %159 unwind label %368

; <label>:159:                                    ; preds = %originalBBpart212
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %41) #2
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %37, i64 %148, %"class.std::vector.3"* dereferenceable(40) %38, %"class.std::allocator.77"* dereferenceable(1) %41)
          to label %160 unwind label %372

; <label>:160:                                    ; preds = %159
  %161 = load i32, i32* @x.95
  %162 = load i32, i32* @y.96
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %160, %originalBB14alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %41) #2
  %169 = load i32, i32* @x.95
  %170 = load i32, i32* @y.96
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %38)
          to label %177 unwind label %368

; <label>:177:                                    ; preds = %originalBBpart216
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %40) #2
  store i32 0, i32* %42, align 4
  br label %178

; <label>:178:                                    ; preds = %492, %177
  %179 = load i32, i32* @x.95
  %180 = load i32, i32* @y.96
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %178, %originalBB18alteredBB
  %187 = load i32, i32* %42, align 4
  %188 = load i32, i32* %21, align 4
  %189 = icmp ult i32 %187, %188
  %190 = load i32, i32* @x.95
  %191 = load i32, i32* @y.96
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %189, label %198, label %495

; <label>:198:                                    ; preds = %originalBBpart220
  store i32 0, i32* %43, align 4
  br label %199

; <label>:199:                                    ; preds = %472, %198
  %200 = load i32, i32* %43, align 4
  %201 = load i32, i32* %21, align 4
  %202 = icmp ult i32 %200, %201
  br i1 %202, label %203, label %475

; <label>:203:                                    ; preds = %199
  %204 = load i32, i32* @x.95
  %205 = load i32, i32* @y.96
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %203, %originalBB22alteredBB
  %212 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %213 = bitcast %class.MGDoFHandler* %212 to %class.DoFHandler*
  %214 = load i32, i32* @x.95
  %215 = load i32, i32* @y.96
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %222 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %213)
          to label %223 unwind label %410

; <label>:223:                                    ; preds = %originalBBpart224
  %224 = bitcast %class.FiniteElement* %222 to %class.FiniteElementBase*
  %225 = load i32, i32* %42, align 4
  %226 = invoke i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase* %224, i32 %225)
          to label %227 unwind label %410

; <label>:227:                                    ; preds = %223
  %228 = bitcast %"struct.std::pair.60"* %45 to i64*
  store i64 %226, i64* %228, align 4
  %229 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %45, i32 0, i32 0
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %44, align 4
  %231 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %232 = bitcast %class.MGDoFHandler* %231 to %class.DoFHandler*
  %233 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %232)
          to label %234 unwind label %410

; <label>:234:                                    ; preds = %227
  %235 = load i32, i32* @x.95
  %236 = load i32, i32* @y.96
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %234, %originalBB26alteredBB
  %243 = bitcast %class.FiniteElement* %233 to %class.FiniteElementBase*
  %244 = load i32, i32* %43, align 4
  %245 = load i32, i32* @x.95
  %246 = load i32, i32* @y.96
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %253 = invoke i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase* %243, i32 %244)
          to label %254 unwind label %410

; <label>:254:                                    ; preds = %originalBBpart228
  %255 = bitcast %"struct.std::pair.60"* %47 to i64*
  store i64 %253, i64* %255, align 4
  %256 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %47, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  store i32 %257, i32* %46, align 4
  %258 = load %class.FullMatrix*, %class.FullMatrix** %17, align 8
  %259 = bitcast %class.FullMatrix* %258 to %class.Table*
  %260 = load i32, i32* %44, align 4
  %261 = load i32, i32* %46, align 4
  %262 = invoke dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table* %259, i32 %260, i32 %261)
          to label %263 unwind label %410

; <label>:263:                                    ; preds = %254
  %264 = load double, double* %262, align 8
  %265 = fcmp une double %264, 0.000000e+00
  br i1 %265, label %266, label %414

; <label>:266:                                    ; preds = %263
  %267 = load i32, i32* %42, align 4
  %268 = zext i32 %267 to i64
  %269 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %32, i64 %268)
          to label %270 unwind label %410

; <label>:270:                                    ; preds = %266
  %271 = load i32, i32* %43, align 4
  %272 = zext i32 %271 to i64
  %273 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %269, i64 %272)
          to label %274 unwind label %410

; <label>:274:                                    ; preds = %270
  %275 = bitcast %"struct.std::_Bit_reference"* %48 to { i64*, i64 }*
  %276 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %275, i32 0, i32 0
  %277 = extractvalue { i64*, i64 } %273, 0
  store i64* %277, i64** %276, align 8
  %278 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %275, i32 0, i32 1
  %279 = extractvalue { i64*, i64 } %273, 1
  store i64 %279, i64* %278, align 8
  %280 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %48, i1 zeroext true)
          to label %281 unwind label %410

; <label>:281:                                    ; preds = %274
  br label %414

; <label>:282:                                    ; preds = %originalBBpart2
  %283 = load i32, i32* @x.95
  %284 = load i32, i32* @y.96
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %282, %originalBB30alteredBB
  %291 = landingpad { i8*, i32 }
          cleanup
  %292 = extractvalue { i8*, i32 } %291, 0
  store i8* %292, i8** %25, align 8
  %293 = extractvalue { i8*, i32 } %291, 1
  store i32 %293, i32* %26, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  %294 = load i32, i32* @x.95
  %295 = load i32, i32* @y.96
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %1350

; <label>:302:                                    ; preds = %90
  %303 = load i32, i32* @x.95
  %304 = load i32, i32* @y.96
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %302, %originalBB34alteredBB
  %311 = landingpad { i8*, i32 }
          cleanup
  %312 = extractvalue { i8*, i32 } %311, 0
  store i8* %312, i8** %25, align 8
  %313 = extractvalue { i8*, i32 } %311, 1
  store i32 %313, i32* %26, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %29) #2
  %314 = load i32, i32* @x.95
  %315 = load i32, i32* @y.96
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %1348

; <label>:322:                                    ; preds = %1298, %96, %93
  %323 = load i32, i32* @x.95
  %324 = load i32, i32* @y.96
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %322, %originalBB38alteredBB
  %331 = landingpad { i8*, i32 }
          cleanup
  %332 = extractvalue { i8*, i32 } %331, 0
  store i8* %332, i8** %25, align 8
  %333 = extractvalue { i8*, i32 } %331, 1
  store i32 %333, i32* %26, align 4
  %334 = load i32, i32* @x.95
  %335 = load i32, i32* @y.96
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %1330

; <label>:342:                                    ; preds = %originalBBpart28, %99
  %343 = load i32, i32* @x.95
  %344 = load i32, i32* @y.96
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %342, %originalBB42alteredBB
  %351 = landingpad { i8*, i32 }
          cleanup
  %352 = extractvalue { i8*, i32 } %351, 0
  store i8* %352, i8** %25, align 8
  %353 = extractvalue { i8*, i32 } %351, 1
  store i32 %353, i32* %26, align 4
  %354 = load i32, i32* @x.95
  %355 = load i32, i32* @y.96
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %367

; <label>:362:                                    ; preds = %originalBBpart24
  %363 = landingpad { i8*, i32 }
          cleanup
  %364 = extractvalue { i8*, i32 } %363, 0
  store i8* %364, i8** %25, align 8
  %365 = extractvalue { i8*, i32 } %363, 1
  store i32 %365, i32* %26, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %36) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %33)
          to label %366 unwind label %1355

; <label>:366:                                    ; preds = %362
  br label %367

; <label>:367:                                    ; preds = %366, %originalBBpart244
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %35) #2
  br label %1330

; <label>:368:                                    ; preds = %originalBBpart216, %originalBBpart212
  %369 = landingpad { i8*, i32 }
          cleanup
  %370 = extractvalue { i8*, i32 } %369, 0
  store i8* %370, i8** %25, align 8
  %371 = extractvalue { i8*, i32 } %369, 1
  store i32 %371, i32* %26, align 4
  br label %409

; <label>:372:                                    ; preds = %159
  %373 = load i32, i32* @x.95
  %374 = load i32, i32* @y.96
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %372, %originalBB46alteredBB
  %381 = landingpad { i8*, i32 }
          cleanup
  %382 = extractvalue { i8*, i32 } %381, 0
  store i8* %382, i8** %25, align 8
  %383 = extractvalue { i8*, i32 } %381, 1
  store i32 %383, i32* %26, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %41) #2
  %384 = load i32, i32* @x.95
  %385 = load i32, i32* @y.96
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %38)
          to label %392 unwind label %1355

; <label>:392:                                    ; preds = %originalBBpart248
  %393 = load i32, i32* @x.95
  %394 = load i32, i32* @y.96
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %392, %originalBB50alteredBB
  %401 = load i32, i32* @x.95
  %402 = load i32, i32* @y.96
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %409

; <label>:409:                                    ; preds = %originalBBpart252, %368
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %40) #2
  br label %1324

; <label>:410:                                    ; preds = %1296, %originalBBpart268, %447, %originalBBpart256, %423, %414, %274, %270, %266, %254, %originalBBpart228, %227, %223, %originalBBpart224
  %411 = landingpad { i8*, i32 }
          cleanup
  %412 = extractvalue { i8*, i32 } %411, 0
  store i8* %412, i8** %25, align 8
  %413 = extractvalue { i8*, i32 } %411, 1
  store i32 %413, i32* %26, align 4
  br label %1322

; <label>:414:                                    ; preds = %281, %263
  %415 = load %class.FullMatrix*, %class.FullMatrix** %18, align 8
  %416 = bitcast %class.FullMatrix* %415 to %class.Table*
  %417 = load i32, i32* %44, align 4
  %418 = load i32, i32* %46, align 4
  %419 = invoke dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table* %416, i32 %417, i32 %418)
          to label %420 unwind label %410

; <label>:420:                                    ; preds = %414
  %421 = load double, double* %419, align 8
  %422 = fcmp une double %421, 0.000000e+00
  br i1 %422, label %423, label %455

; <label>:423:                                    ; preds = %420
  %424 = load i32, i32* %42, align 4
  %425 = zext i32 %424 to i64
  %426 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %37, i64 %425)
          to label %427 unwind label %410

; <label>:427:                                    ; preds = %423
  %428 = load i32, i32* @x.95
  %429 = load i32, i32* @y.96
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %427, %originalBB54alteredBB
  %436 = load i32, i32* %43, align 4
  %437 = zext i32 %436 to i64
  %438 = load i32, i32* @x.95
  %439 = load i32, i32* @y.96
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  %446 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %426, i64 %437)
          to label %447 unwind label %410

; <label>:447:                                    ; preds = %originalBBpart256
  %448 = bitcast %"struct.std::_Bit_reference"* %49 to { i64*, i64 }*
  %449 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %448, i32 0, i32 0
  %450 = extractvalue { i64*, i64 } %446, 0
  store i64* %450, i64** %449, align 8
  %451 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %448, i32 0, i32 1
  %452 = extractvalue { i64*, i64 } %446, 1
  store i64 %452, i64* %451, align 8
  %453 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %49, i1 zeroext true)
          to label %454 unwind label %410

; <label>:454:                                    ; preds = %447
  br label %455

; <label>:455:                                    ; preds = %454, %420
  %456 = load i32, i32* @x.95
  %457 = load i32, i32* @y.96
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %455, %originalBB58alteredBB
  %464 = load i32, i32* @x.95
  %465 = load i32, i32* @y.96
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %472

; <label>:472:                                    ; preds = %originalBBpart260
  %473 = load i32, i32* %43, align 4
  %474 = add i32 %473, 1
  store i32 %474, i32* %43, align 4
  br label %199

; <label>:475:                                    ; preds = %199
  %476 = load i32, i32* @x.95
  %477 = load i32, i32* @y.96
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %475, %originalBB62alteredBB
  %484 = load i32, i32* @x.95
  %485 = load i32, i32* @y.96
  %486 = sub i32 %484, 1
  %487 = mul i32 %484, %486
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %485, 10
  %491 = or i1 %489, %490
  br i1 %491, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %492

; <label>:492:                                    ; preds = %originalBBpart264
  %493 = load i32, i32* %42, align 4
  %494 = add i32 %493, 1
  store i32 %494, i32* %42, align 4
  br label %178

; <label>:495:                                    ; preds = %originalBBpart220
  %496 = load i32, i32* @x.95
  %497 = load i32, i32* @y.96
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %495, %originalBB66alteredBB
  %504 = load i32, i32* @x.95
  %505 = load i32, i32* @y.96
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  invoke void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.3"* %50)
          to label %512 unwind label %410

; <label>:512:                                    ; preds = %originalBBpart268
  %513 = load i32, i32* @x.95
  %514 = load i32, i32* @y.96
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %512, %originalBB70alteredBB
  %521 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %522 = bitcast %class.MGDoFHandler* %521 to %class.DoFHandler*
  %523 = load i32, i32* @x.95
  %524 = load i32, i32* @y.96
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  %531 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %522)
          to label %532 unwind label %716

; <label>:532:                                    ; preds = %originalBBpart272
  invoke void @_ZNK13TriangulationILi3EE15save_user_flagsERSt6vectorIbSaIbEE(%class.Triangulation* %531, %"class.std::vector.3"* dereferenceable(40) %50)
          to label %533 unwind label %716

; <label>:533:                                    ; preds = %532
  %534 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %535 = bitcast %class.MGDoFHandler* %534 to %class.DoFHandler*
  %536 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %535)
          to label %537 unwind label %716

; <label>:537:                                    ; preds = %533
  invoke void @_ZN13TriangulationILi3EE16clear_user_flagsEv(%class.Triangulation* %536)
          to label %538 unwind label %716

; <label>:538:                                    ; preds = %537
  br label %539

; <label>:539:                                    ; preds = %1274, %538
  %540 = load i32, i32* @x.95
  %541 = load i32, i32* @y.96
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %539, %originalBB74alteredBB
  %548 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %549 = bitcast %class.TriaIterator* %31 to %class.TriaRawIterator*
  %550 = load i32, i32* @x.95
  %551 = load i32, i32* @y.96
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  %558 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %548, %class.TriaRawIterator* dereferenceable(32) %549)
          to label %559 unwind label %716

; <label>:559:                                    ; preds = %originalBBpart276
  %560 = load i32, i32* @x.95
  %561 = load i32, i32* @y.96
  %562 = sub i32 %560, 1
  %563 = mul i32 %560, %562
  %564 = urem i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %561, 10
  %567 = or i1 %565, %566
  br i1 %567, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %559, %originalBB78alteredBB
  %568 = load i32, i32* @x.95
  %569 = load i32, i32* @y.96
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %558, label %576, label %1275

; <label>:576:                                    ; preds = %originalBBpart280
  %577 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %578 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %577)
          to label %579 unwind label %716

; <label>:579:                                    ; preds = %576
  %580 = load i32, i32* @x.95
  %581 = load i32, i32* @y.96
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %579, %originalBB82alteredBB
  %588 = bitcast %class.MGDoFCellAccessor* %578 to %class.MGDoFObjectAccessor*
  %589 = load i32, i32* @x.95
  %590 = load i32, i32* @y.96
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %588, %"class.std::vector.12"* dereferenceable(24) %22)
          to label %597 unwind label %716

; <label>:597:                                    ; preds = %originalBBpart284
  store i32 0, i32* %51, align 4
  br label %598

; <label>:598:                                    ; preds = %originalBBpart2119, %597
  %599 = load i32, i32* %51, align 4
  %600 = load i32, i32* %21, align 4
  %601 = icmp ult i32 %599, %600
  br i1 %601, label %602, label %760

; <label>:602:                                    ; preds = %598
  store i32 0, i32* %52, align 4
  br label %603

; <label>:603:                                    ; preds = %721, %602
  %604 = load i32, i32* %52, align 4
  %605 = load i32, i32* %21, align 4
  %606 = icmp ult i32 %604, %605
  br i1 %606, label %607, label %724

; <label>:607:                                    ; preds = %603
  %608 = load i32, i32* @x.95
  %609 = load i32, i32* @y.96
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %607, %originalBB86alteredBB
  %616 = load i32, i32* %51, align 4
  %617 = zext i32 %616 to i64
  %618 = load i32, i32* @x.95
  %619 = load i32, i32* @y.96
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  %626 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %32, i64 %617)
          to label %627 unwind label %716

; <label>:627:                                    ; preds = %originalBBpart288
  %628 = load i32, i32* @x.95
  %629 = load i32, i32* @y.96
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %627, %originalBB90alteredBB
  %636 = load i32, i32* %52, align 4
  %637 = zext i32 %636 to i64
  %638 = load i32, i32* @x.95
  %639 = load i32, i32* @y.96
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  %646 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %626, i64 %637)
          to label %647 unwind label %716

; <label>:647:                                    ; preds = %originalBBpart292
  %648 = bitcast %"struct.std::_Bit_reference"* %53 to { i64*, i64 }*
  %649 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %648, i32 0, i32 0
  %650 = extractvalue { i64*, i64 } %646, 0
  store i64* %650, i64** %649, align 8
  %651 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %648, i32 0, i32 1
  %652 = extractvalue { i64*, i64 } %646, 1
  store i64 %652, i64* %651, align 8
  %653 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %53)
          to label %654 unwind label %716

; <label>:654:                                    ; preds = %647
  br i1 %653, label %655, label %720

; <label>:655:                                    ; preds = %654
  %656 = load i32, i32* @x.95
  %657 = load i32, i32* @y.96
  %658 = sub i32 %656, 1
  %659 = mul i32 %656, %658
  %660 = urem i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %661, %662
  br i1 %663, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %655, %originalBB94alteredBB
  %664 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %15, align 8
  %665 = load i32, i32* %51, align 4
  %666 = zext i32 %665 to i64
  %667 = load i32, i32* @x.95
  %668 = load i32, i32* @y.96
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  %675 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %666)
          to label %676 unwind label %716

; <label>:676:                                    ; preds = %originalBBpart296
  %677 = load i32, i32* @x.95
  %678 = load i32, i32* @y.96
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %676, %originalBB98alteredBB
  %685 = load i32, i32* %675, align 4
  %686 = load i32, i32* %52, align 4
  %687 = zext i32 %686 to i64
  %688 = load i32, i32* @x.95
  %689 = load i32, i32* @y.96
  %690 = sub i32 %688, 1
  %691 = mul i32 %688, %690
  %692 = urem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = icmp slt i32 %689, 10
  %695 = or i1 %693, %694
  br i1 %695, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  %696 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %687)
          to label %697 unwind label %716

; <label>:697:                                    ; preds = %originalBBpart2100
  %698 = load i32, i32* @x.95
  %699 = load i32, i32* @y.96
  %700 = sub i32 %698, 1
  %701 = mul i32 %698, %700
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %699, 10
  %705 = or i1 %703, %704
  br i1 %705, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %697, %originalBB102alteredBB
  %706 = load i32, i32* %696, align 4
  %707 = load i32, i32* @x.95
  %708 = load i32, i32* @y.96
  %709 = sub i32 %707, 1
  %710 = mul i32 %707, %709
  %711 = urem i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = icmp slt i32 %708, 10
  %714 = or i1 %712, %713
  br i1 %714, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  invoke void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %664, i32 %685, i32 %706)
          to label %715 unwind label %716

; <label>:715:                                    ; preds = %originalBBpart2104
  br label %720

; <label>:716:                                    ; preds = %1295, %originalBBpart2228, %1272, %originalBBpart2204, %1195, %1193, %1190, %originalBBpart2187, %originalBBpart2183, %1105, %1103, %1098, %1093, %originalBBpart2175, %originalBBpart2171, %1029, %985, %982, %976, %973, %originalBBpart2159, %946, %originalBBpart2155, %originalBBpart2151, %904, %originalBBpart2147, %originalBBpart2143, %859, %836, %originalBBpart2135, %originalBBpart2131, %originalBBpart2127, %originalBBpart2104, %originalBBpart2100, %originalBBpart296, %647, %originalBBpart292, %originalBBpart288, %originalBBpart284, %576, %originalBBpart276, %537, %533, %532, %originalBBpart272
  %717 = landingpad { i8*, i32 }
          cleanup
  %718 = extractvalue { i8*, i32 } %717, 0
  store i8* %718, i8** %25, align 8
  %719 = extractvalue { i8*, i32 } %717, 1
  store i32 %719, i32* %26, align 4
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %50)
          to label %1301 unwind label %1355

; <label>:720:                                    ; preds = %715, %654
  br label %721

; <label>:721:                                    ; preds = %720
  %722 = load i32, i32* %52, align 4
  %723 = add i32 %722, 1
  store i32 %723, i32* %52, align 4
  br label %603

; <label>:724:                                    ; preds = %603
  %725 = load i32, i32* @x.95
  %726 = load i32, i32* @y.96
  %727 = sub i32 %725, 1
  %728 = mul i32 %725, %727
  %729 = urem i32 %728, 2
  %730 = icmp eq i32 %729, 0
  %731 = icmp slt i32 %726, 10
  %732 = or i1 %730, %731
  br i1 %732, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %724, %originalBB106alteredBB
  %733 = load i32, i32* @x.95
  %734 = load i32, i32* @y.96
  %735 = sub i32 %733, 1
  %736 = mul i32 %733, %735
  %737 = urem i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = icmp slt i32 %734, 10
  %740 = or i1 %738, %739
  br i1 %740, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %741

; <label>:741:                                    ; preds = %originalBBpart2108
  %742 = load i32, i32* @x.95
  %743 = load i32, i32* @y.96
  %744 = sub i32 %742, 1
  %745 = mul i32 %742, %744
  %746 = urem i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = icmp slt i32 %743, 10
  %749 = or i1 %747, %748
  br i1 %749, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %741, %originalBB110alteredBB
  %750 = load i32, i32* %51, align 4
  %751 = add i32 %750, 1
  store i32 %751, i32* %51, align 4
  %752 = load i32, i32* @x.95
  %753 = load i32, i32* @y.96
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBBpart2119, label %originalBB110alteredBB

originalBBpart2119:                               ; preds = %originalBB110
  br label %598

; <label>:760:                                    ; preds = %598
  %761 = load i32, i32* @x.95
  %762 = load i32, i32* @y.96
  %763 = sub i32 %761, 1
  %764 = mul i32 %761, %763
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %762, 10
  %768 = or i1 %766, %767
  br i1 %768, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %760, %originalBB121alteredBB
  store i32 0, i32* %54, align 4
  %769 = load i32, i32* @x.95
  %770 = load i32, i32* @y.96
  %771 = sub i32 %769, 1
  %772 = mul i32 %769, %771
  %773 = urem i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = icmp slt i32 %770, 10
  %776 = or i1 %774, %775
  br i1 %776, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %777

; <label>:777:                                    ; preds = %originalBBpart2220, %originalBBpart2123
  %778 = load i32, i32* %54, align 4
  %779 = icmp ult i32 %778, 6
  br i1 %779, label %780, label %1255

; <label>:780:                                    ; preds = %777
  %781 = load i32, i32* @x.95
  %782 = load i32, i32* @y.96
  %783 = sub i32 %781, 1
  %784 = mul i32 %781, %783
  %785 = urem i32 %784, 2
  %786 = icmp eq i32 %785, 0
  %787 = icmp slt i32 %782, 10
  %788 = or i1 %786, %787
  br i1 %788, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %780, %originalBB125alteredBB
  %789 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %790 = load i32, i32* @x.95
  %791 = load i32, i32* @y.96
  %792 = sub i32 %790, 1
  %793 = mul i32 %790, %792
  %794 = urem i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = icmp slt i32 %791, 10
  %797 = or i1 %795, %796
  br i1 %797, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  %798 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %789)
          to label %799 unwind label %716

; <label>:799:                                    ; preds = %originalBBpart2127
  %800 = load i32, i32* @x.95
  %801 = load i32, i32* @y.96
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %799, %originalBB129alteredBB
  %808 = load i32, i32* %54, align 4
  %809 = load i32, i32* @x.95
  %810 = load i32, i32* @y.96
  %811 = sub i32 %809, 1
  %812 = mul i32 %809, %811
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %810, 10
  %816 = or i1 %814, %815
  br i1 %816, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  invoke void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret %55, %class.MGDoFCellAccessor* %798, i32 %808)
          to label %817 unwind label %716

; <label>:817:                                    ; preds = %originalBBpart2131
  %818 = load i32, i32* @x.95
  %819 = load i32, i32* @y.96
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %817, %originalBB133alteredBB
  %826 = bitcast %class.TriaIterator.112* %55 to %class.TriaRawIterator.113*
  %827 = load i32, i32* @x.95
  %828 = load i32, i32* @y.96
  %829 = sub i32 %827, 1
  %830 = mul i32 %827, %829
  %831 = urem i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = icmp slt i32 %828, 10
  %834 = or i1 %832, %833
  br i1 %834, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  %835 = invoke %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113* %826)
          to label %836 unwind label %716

; <label>:836:                                    ; preds = %originalBBpart2135
  %837 = bitcast %class.MGDoFObjectAccessor.115* %835 to i8*
  %838 = getelementptr inbounds i8, i8* %837, i64 16
  %839 = bitcast i8* %838 to %class.TriaObjectAccessor.117*
  %840 = invoke zeroext i1 @_ZNK18TriaObjectAccessorILi2ELi3EE13user_flag_setEv(%class.TriaObjectAccessor.117* %839)
          to label %841 unwind label %716

; <label>:841:                                    ; preds = %836
  %842 = load i32, i32* @x.95
  %843 = load i32, i32* @y.96
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %841, %originalBB137alteredBB
  %850 = load i32, i32* @x.95
  %851 = load i32, i32* @y.96
  %852 = sub i32 %850, 1
  %853 = mul i32 %850, %852
  %854 = urem i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = icmp slt i32 %851, 10
  %857 = or i1 %855, %856
  br i1 %857, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br i1 %840, label %858, label %859

; <label>:858:                                    ; preds = %originalBBpart2139
  br label %1236

; <label>:859:                                    ; preds = %originalBBpart2139
  %860 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %861 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %860)
          to label %862 unwind label %716

; <label>:862:                                    ; preds = %859
  %863 = load i32, i32* @x.95
  %864 = load i32, i32* @y.96
  %865 = sub i32 %863, 1
  %866 = mul i32 %863, %865
  %867 = urem i32 %866, 2
  %868 = icmp eq i32 %867, 0
  %869 = icmp slt i32 %864, 10
  %870 = or i1 %868, %869
  br i1 %870, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %862, %originalBB141alteredBB
  %871 = bitcast %class.MGDoFCellAccessor* %861 to i8*
  %872 = getelementptr inbounds i8, i8* %871, i64 16
  %873 = bitcast i8* %872 to %class.CellAccessor*
  %874 = load i32, i32* %54, align 4
  %875 = load i32, i32* @x.95
  %876 = load i32, i32* @y.96
  %877 = sub i32 %875, 1
  %878 = mul i32 %875, %877
  %879 = urem i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = icmp slt i32 %876, 10
  %882 = or i1 %880, %881
  br i1 %882, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  %883 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %873, i32 %874)
          to label %884 unwind label %716

; <label>:884:                                    ; preds = %originalBBpart2143
  br i1 %883, label %1235, label %885

; <label>:885:                                    ; preds = %884
  %886 = load i32, i32* @x.95
  %887 = load i32, i32* @y.96
  %888 = sub i32 %886, 1
  %889 = mul i32 %886, %888
  %890 = urem i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = icmp slt i32 %887, 10
  %893 = or i1 %891, %892
  br i1 %893, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %885, %originalBB145alteredBB
  %894 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %895 = load i32, i32* @x.95
  %896 = load i32, i32* @y.96
  %897 = sub i32 %895, 1
  %898 = mul i32 %895, %897
  %899 = urem i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = icmp slt i32 %896, 10
  %902 = or i1 %900, %901
  br i1 %902, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  %903 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %894)
          to label %904 unwind label %716

; <label>:904:                                    ; preds = %originalBBpart2147
  %905 = load i32, i32* %54, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %56, %class.MGDoFCellAccessor* %903, i32 %905)
          to label %906 unwind label %716

; <label>:906:                                    ; preds = %904
  %907 = load i32, i32* @x.95
  %908 = load i32, i32* @y.96
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %906, %originalBB149alteredBB
  %915 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  %916 = load i32, i32* @x.95
  %917 = load i32, i32* @y.96
  %918 = sub i32 %916, 1
  %919 = mul i32 %916, %918
  %920 = urem i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = icmp slt i32 %917, 10
  %923 = or i1 %921, %922
  br i1 %923, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  %924 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %915)
          to label %925 unwind label %716

; <label>:925:                                    ; preds = %originalBBpart2151
  %926 = load i32, i32* @x.95
  %927 = load i32, i32* @y.96
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %925, %originalBB153alteredBB
  %934 = bitcast %class.MGDoFCellAccessor* %924 to i8*
  %935 = getelementptr inbounds i8, i8* %934, i64 16
  %936 = bitcast i8* %935 to %class.TriaAccessor*
  %937 = load i32, i32* @x.95
  %938 = load i32, i32* @y.96
  %939 = sub i32 %937, 1
  %940 = mul i32 %937, %939
  %941 = urem i32 %940, 2
  %942 = icmp eq i32 %941, 0
  %943 = icmp slt i32 %938, 10
  %944 = or i1 %942, %943
  br i1 %944, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  %945 = invoke i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor* %936)
          to label %946 unwind label %716

; <label>:946:                                    ; preds = %originalBBpart2155
  %947 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %948 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %947)
          to label %949 unwind label %716

; <label>:949:                                    ; preds = %946
  %950 = load i32, i32* @x.95
  %951 = load i32, i32* @y.96
  %952 = sub i32 %950, 1
  %953 = mul i32 %950, %952
  %954 = urem i32 %953, 2
  %955 = icmp eq i32 %954, 0
  %956 = icmp slt i32 %951, 10
  %957 = or i1 %955, %956
  br i1 %957, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %949, %originalBB157alteredBB
  %958 = bitcast %class.MGDoFCellAccessor* %948 to i8*
  %959 = getelementptr inbounds i8, i8* %958, i64 16
  %960 = bitcast i8* %959 to %class.TriaAccessor*
  %961 = load i32, i32* @x.95
  %962 = load i32, i32* @y.96
  %963 = sub i32 %961, 1
  %964 = mul i32 %961, %963
  %965 = urem i32 %964, 2
  %966 = icmp eq i32 %965, 0
  %967 = icmp slt i32 %962, 10
  %968 = or i1 %966, %967
  br i1 %968, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  %969 = invoke i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor* %960)
          to label %970 unwind label %716

; <label>:970:                                    ; preds = %originalBBpart2159
  %971 = icmp slt i32 %945, %969
  br i1 %971, label %972, label %973

; <label>:972:                                    ; preds = %970
  br label %1236

; <label>:973:                                    ; preds = %970
  %974 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %975 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %974)
          to label %976 unwind label %716

; <label>:976:                                    ; preds = %973
  %977 = bitcast %class.MGDoFCellAccessor* %975 to i8*
  %978 = getelementptr inbounds i8, i8* %977, i64 16
  %979 = bitcast i8* %978 to %class.CellAccessor*
  %980 = load i32, i32* %54, align 4
  %981 = invoke i32 @_ZNK12CellAccessorILi3EE20neighbor_of_neighborEj(%class.CellAccessor* %979, i32 %980)
          to label %982 unwind label %716

; <label>:982:                                    ; preds = %976
  store i32 %981, i32* %57, align 4
  %983 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  %984 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %983)
          to label %985 unwind label %716

; <label>:985:                                    ; preds = %982
  %986 = bitcast %class.MGDoFCellAccessor* %984 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %986, %"class.std::vector.12"* dereferenceable(24) %27)
          to label %987 unwind label %716

; <label>:987:                                    ; preds = %985
  store i32 0, i32* %58, align 4
  br label %988

; <label>:988:                                    ; preds = %originalBBpart2200, %987
  %989 = load i32, i32* @x.95
  %990 = load i32, i32* @y.96
  %991 = sub i32 %989, 1
  %992 = mul i32 %989, %991
  %993 = urem i32 %992, 2
  %994 = icmp eq i32 %993, 0
  %995 = icmp slt i32 %990, 10
  %996 = or i1 %994, %995
  br i1 %996, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %988, %originalBB161alteredBB
  %997 = load i32, i32* %58, align 4
  %998 = load i32, i32* %21, align 4
  %999 = icmp ult i32 %997, %998
  %1000 = load i32, i32* @x.95
  %1001 = load i32, i32* @y.96
  %1002 = sub i32 %1000, 1
  %1003 = mul i32 %1000, %1002
  %1004 = urem i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  %1006 = icmp slt i32 %1001, 10
  %1007 = or i1 %1005, %1006
  br i1 %1007, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br i1 %999, label %1008, label %1190

; <label>:1008:                                   ; preds = %originalBBpart2163
  store i32 0, i32* %59, align 4
  br label %1009

; <label>:1009:                                   ; preds = %1151, %1008
  %1010 = load i32, i32* @x.95
  %1011 = load i32, i32* @y.96
  %1012 = sub i32 %1010, 1
  %1013 = mul i32 %1010, %1012
  %1014 = urem i32 %1013, 2
  %1015 = icmp eq i32 %1014, 0
  %1016 = icmp slt i32 %1011, 10
  %1017 = or i1 %1015, %1016
  br i1 %1017, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %1009, %originalBB165alteredBB
  %1018 = load i32, i32* %59, align 4
  %1019 = load i32, i32* %21, align 4
  %1020 = icmp ult i32 %1018, %1019
  %1021 = load i32, i32* @x.95
  %1022 = load i32, i32* @y.96
  %1023 = sub i32 %1021, 1
  %1024 = mul i32 %1021, %1023
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1022, 10
  %1028 = or i1 %1026, %1027
  br i1 %1028, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br i1 %1020, label %1029, label %1154

; <label>:1029:                                   ; preds = %originalBBpart2167
  %1030 = load i32, i32* %58, align 4
  %1031 = zext i32 %1030 to i64
  %1032 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %37, i64 %1031)
          to label %1033 unwind label %716

; <label>:1033:                                   ; preds = %1029
  %1034 = load i32, i32* @x.95
  %1035 = load i32, i32* @y.96
  %1036 = sub i32 %1034, 1
  %1037 = mul i32 %1034, %1036
  %1038 = urem i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = icmp slt i32 %1035, 10
  %1041 = or i1 %1039, %1040
  br i1 %1041, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %1033, %originalBB169alteredBB
  %1042 = load i32, i32* %59, align 4
  %1043 = zext i32 %1042 to i64
  %1044 = load i32, i32* @x.95
  %1045 = load i32, i32* @y.96
  %1046 = sub i32 %1044, 1
  %1047 = mul i32 %1044, %1046
  %1048 = urem i32 %1047, 2
  %1049 = icmp eq i32 %1048, 0
  %1050 = icmp slt i32 %1045, 10
  %1051 = or i1 %1049, %1050
  br i1 %1051, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  %1052 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %1032, i64 %1043)
          to label %1053 unwind label %716

; <label>:1053:                                   ; preds = %originalBBpart2171
  %1054 = load i32, i32* @x.95
  %1055 = load i32, i32* @y.96
  %1056 = sub i32 %1054, 1
  %1057 = mul i32 %1054, %1056
  %1058 = urem i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = icmp slt i32 %1055, 10
  %1061 = or i1 %1059, %1060
  br i1 %1061, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %1053, %originalBB173alteredBB
  %1062 = bitcast %"struct.std::_Bit_reference"* %60 to { i64*, i64 }*
  %1063 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1062, i32 0, i32 0
  %1064 = extractvalue { i64*, i64 } %1052, 0
  store i64* %1064, i64** %1063, align 8
  %1065 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1062, i32 0, i32 1
  %1066 = extractvalue { i64*, i64 } %1052, 1
  store i64 %1066, i64* %1065, align 8
  %1067 = load i32, i32* @x.95
  %1068 = load i32, i32* @y.96
  %1069 = sub i32 %1067, 1
  %1070 = mul i32 %1067, %1069
  %1071 = urem i32 %1070, 2
  %1072 = icmp eq i32 %1071, 0
  %1073 = icmp slt i32 %1068, 10
  %1074 = or i1 %1072, %1073
  br i1 %1074, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  %1075 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %60)
          to label %1076 unwind label %716

; <label>:1076:                                   ; preds = %originalBBpart2175
  %1077 = load i32, i32* @x.95
  %1078 = load i32, i32* @y.96
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %1076, %originalBB177alteredBB
  %1085 = load i32, i32* @x.95
  %1086 = load i32, i32* @y.96
  %1087 = sub i32 %1085, 1
  %1088 = mul i32 %1085, %1087
  %1089 = urem i32 %1088, 2
  %1090 = icmp eq i32 %1089, 0
  %1091 = icmp slt i32 %1086, 10
  %1092 = or i1 %1090, %1091
  br i1 %1092, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br i1 %1075, label %1093, label %1150

; <label>:1093:                                   ; preds = %originalBBpart2179
  %1094 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %15, align 8
  %1095 = load i32, i32* %58, align 4
  %1096 = zext i32 %1095 to i64
  %1097 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %1096)
          to label %1098 unwind label %716

; <label>:1098:                                   ; preds = %1093
  %1099 = load i32, i32* %1097, align 4
  %1100 = load i32, i32* %59, align 4
  %1101 = zext i32 %1100 to i64
  %1102 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %27, i64 %1101)
          to label %1103 unwind label %716

; <label>:1103:                                   ; preds = %1098
  %1104 = load i32, i32* %1102, align 4
  invoke void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %1094, i32 %1099, i32 %1104)
          to label %1105 unwind label %716

; <label>:1105:                                   ; preds = %1103
  %1106 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %15, align 8
  %1107 = load i32, i32* %58, align 4
  %1108 = zext i32 %1107 to i64
  %1109 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %27, i64 %1108)
          to label %1110 unwind label %716

; <label>:1110:                                   ; preds = %1105
  %1111 = load i32, i32* @x.95
  %1112 = load i32, i32* @y.96
  %1113 = sub i32 %1111, 1
  %1114 = mul i32 %1111, %1113
  %1115 = urem i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = icmp slt i32 %1112, 10
  %1118 = or i1 %1116, %1117
  br i1 %1118, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %1110, %originalBB181alteredBB
  %1119 = load i32, i32* %1109, align 4
  %1120 = load i32, i32* %59, align 4
  %1121 = zext i32 %1120 to i64
  %1122 = load i32, i32* @x.95
  %1123 = load i32, i32* @y.96
  %1124 = sub i32 %1122, 1
  %1125 = mul i32 %1122, %1124
  %1126 = urem i32 %1125, 2
  %1127 = icmp eq i32 %1126, 0
  %1128 = icmp slt i32 %1123, 10
  %1129 = or i1 %1127, %1128
  br i1 %1129, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  %1130 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %22, i64 %1121)
          to label %1131 unwind label %716

; <label>:1131:                                   ; preds = %originalBBpart2183
  %1132 = load i32, i32* @x.95
  %1133 = load i32, i32* @y.96
  %1134 = sub i32 %1132, 1
  %1135 = mul i32 %1132, %1134
  %1136 = urem i32 %1135, 2
  %1137 = icmp eq i32 %1136, 0
  %1138 = icmp slt i32 %1133, 10
  %1139 = or i1 %1137, %1138
  br i1 %1139, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %1131, %originalBB185alteredBB
  %1140 = load i32, i32* %1130, align 4
  %1141 = load i32, i32* @x.95
  %1142 = load i32, i32* @y.96
  %1143 = sub i32 %1141, 1
  %1144 = mul i32 %1141, %1143
  %1145 = urem i32 %1144, 2
  %1146 = icmp eq i32 %1145, 0
  %1147 = icmp slt i32 %1142, 10
  %1148 = or i1 %1146, %1147
  br i1 %1148, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  invoke void @_ZN25CompressedSparsityPattern3addEjj(%class.CompressedSparsityPattern* %1106, i32 %1119, i32 %1140)
          to label %1149 unwind label %716

; <label>:1149:                                   ; preds = %originalBBpart2187
  br label %1150

; <label>:1150:                                   ; preds = %1149, %originalBBpart2179
  br label %1151

; <label>:1151:                                   ; preds = %1150
  %1152 = load i32, i32* %59, align 4
  %1153 = add i32 %1152, 1
  store i32 %1153, i32* %59, align 4
  br label %1009

; <label>:1154:                                   ; preds = %originalBBpart2167
  %1155 = load i32, i32* @x.95
  %1156 = load i32, i32* @y.96
  %1157 = sub i32 %1155, 1
  %1158 = mul i32 %1155, %1157
  %1159 = urem i32 %1158, 2
  %1160 = icmp eq i32 %1159, 0
  %1161 = icmp slt i32 %1156, 10
  %1162 = or i1 %1160, %1161
  br i1 %1162, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %1154, %originalBB189alteredBB
  %1163 = load i32, i32* @x.95
  %1164 = load i32, i32* @y.96
  %1165 = sub i32 %1163, 1
  %1166 = mul i32 %1163, %1165
  %1167 = urem i32 %1166, 2
  %1168 = icmp eq i32 %1167, 0
  %1169 = icmp slt i32 %1164, 10
  %1170 = or i1 %1168, %1169
  br i1 %1170, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %1171

; <label>:1171:                                   ; preds = %originalBBpart2191
  %1172 = load i32, i32* @x.95
  %1173 = load i32, i32* @y.96
  %1174 = sub i32 %1172, 1
  %1175 = mul i32 %1172, %1174
  %1176 = urem i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  %1178 = icmp slt i32 %1173, 10
  %1179 = or i1 %1177, %1178
  br i1 %1179, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %1171, %originalBB193alteredBB
  %1180 = load i32, i32* %58, align 4
  %1181 = add i32 %1180, 1
  store i32 %1181, i32* %58, align 4
  %1182 = load i32, i32* @x.95
  %1183 = load i32, i32* @y.96
  %1184 = sub i32 %1182, 1
  %1185 = mul i32 %1182, %1184
  %1186 = urem i32 %1185, 2
  %1187 = icmp eq i32 %1186, 0
  %1188 = icmp slt i32 %1183, 10
  %1189 = or i1 %1187, %1188
  br i1 %1189, label %originalBBpart2200, label %originalBB193alteredBB

originalBBpart2200:                               ; preds = %originalBB193
  br label %988

; <label>:1190:                                   ; preds = %originalBBpart2163
  %1191 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  %1192 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %1191)
          to label %1193 unwind label %716

; <label>:1193:                                   ; preds = %1190
  %1194 = load i32, i32* %57, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret %61, %class.MGDoFCellAccessor* %1192, i32 %1194)
          to label %1195 unwind label %716

; <label>:1195:                                   ; preds = %1193
  %1196 = bitcast %class.TriaIterator.112* %61 to %class.TriaRawIterator.113*
  %1197 = invoke %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113* %1196)
          to label %1198 unwind label %716

; <label>:1198:                                   ; preds = %1195
  %1199 = load i32, i32* @x.95
  %1200 = load i32, i32* @y.96
  %1201 = sub i32 %1199, 1
  %1202 = mul i32 %1199, %1201
  %1203 = urem i32 %1202, 2
  %1204 = icmp eq i32 %1203, 0
  %1205 = icmp slt i32 %1200, 10
  %1206 = or i1 %1204, %1205
  br i1 %1206, label %originalBB202, label %originalBB202alteredBB

originalBB202:                                    ; preds = %1198, %originalBB202alteredBB
  %1207 = bitcast %class.MGDoFObjectAccessor.115* %1197 to i8*
  %1208 = getelementptr inbounds i8, i8* %1207, i64 16
  %1209 = bitcast i8* %1208 to %class.TriaObjectAccessor.117*
  %1210 = load i32, i32* @x.95
  %1211 = load i32, i32* @y.96
  %1212 = sub i32 %1210, 1
  %1213 = mul i32 %1210, %1212
  %1214 = urem i32 %1213, 2
  %1215 = icmp eq i32 %1214, 0
  %1216 = icmp slt i32 %1211, 10
  %1217 = or i1 %1215, %1216
  br i1 %1217, label %originalBBpart2204, label %originalBB202alteredBB

originalBBpart2204:                               ; preds = %originalBB202
  invoke void @_ZNK18TriaObjectAccessorILi2ELi3EE13set_user_flagEv(%class.TriaObjectAccessor.117* %1209)
          to label %1218 unwind label %716

; <label>:1218:                                   ; preds = %originalBBpart2204
  %1219 = load i32, i32* @x.95
  %1220 = load i32, i32* @y.96
  %1221 = sub i32 %1219, 1
  %1222 = mul i32 %1219, %1221
  %1223 = urem i32 %1222, 2
  %1224 = icmp eq i32 %1223, 0
  %1225 = icmp slt i32 %1220, 10
  %1226 = or i1 %1224, %1225
  br i1 %1226, label %originalBB206, label %originalBB206alteredBB

originalBB206:                                    ; preds = %1218, %originalBB206alteredBB
  %1227 = load i32, i32* @x.95
  %1228 = load i32, i32* @y.96
  %1229 = sub i32 %1227, 1
  %1230 = mul i32 %1227, %1229
  %1231 = urem i32 %1230, 2
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp slt i32 %1228, 10
  %1234 = or i1 %1232, %1233
  br i1 %1234, label %originalBBpart2208, label %originalBB206alteredBB

originalBBpart2208:                               ; preds = %originalBB206
  br label %1235

; <label>:1235:                                   ; preds = %originalBBpart2208, %884
  br label %1236

; <label>:1236:                                   ; preds = %1235, %972, %858
  %1237 = load i32, i32* @x.95
  %1238 = load i32, i32* @y.96
  %1239 = sub i32 %1237, 1
  %1240 = mul i32 %1237, %1239
  %1241 = urem i32 %1240, 2
  %1242 = icmp eq i32 %1241, 0
  %1243 = icmp slt i32 %1238, 10
  %1244 = or i1 %1242, %1243
  br i1 %1244, label %originalBB210, label %originalBB210alteredBB

originalBB210:                                    ; preds = %1236, %originalBB210alteredBB
  %1245 = load i32, i32* %54, align 4
  %1246 = add i32 %1245, 1
  store i32 %1246, i32* %54, align 4
  %1247 = load i32, i32* @x.95
  %1248 = load i32, i32* @y.96
  %1249 = sub i32 %1247, 1
  %1250 = mul i32 %1247, %1249
  %1251 = urem i32 %1250, 2
  %1252 = icmp eq i32 %1251, 0
  %1253 = icmp slt i32 %1248, 10
  %1254 = or i1 %1252, %1253
  br i1 %1254, label %originalBBpart2220, label %originalBB210alteredBB

originalBBpart2220:                               ; preds = %originalBB210
  br label %777

; <label>:1255:                                   ; preds = %777
  %1256 = load i32, i32* @x.95
  %1257 = load i32, i32* @y.96
  %1258 = sub i32 %1256, 1
  %1259 = mul i32 %1256, %1258
  %1260 = urem i32 %1259, 2
  %1261 = icmp eq i32 %1260, 0
  %1262 = icmp slt i32 %1257, 10
  %1263 = or i1 %1261, %1262
  br i1 %1263, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %1255, %originalBB222alteredBB
  %1264 = load i32, i32* @x.95
  %1265 = load i32, i32* @y.96
  %1266 = sub i32 %1264, 1
  %1267 = mul i32 %1264, %1266
  %1268 = urem i32 %1267, 2
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp slt i32 %1265, 10
  %1271 = or i1 %1269, %1270
  br i1 %1271, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  br label %1272

; <label>:1272:                                   ; preds = %originalBBpart2224
  %1273 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %30)
          to label %1274 unwind label %716

; <label>:1274:                                   ; preds = %1272
  br label %539

; <label>:1275:                                   ; preds = %originalBBpart280
  %1276 = load i32, i32* @x.95
  %1277 = load i32, i32* @y.96
  %1278 = sub i32 %1276, 1
  %1279 = mul i32 %1276, %1278
  %1280 = urem i32 %1279, 2
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp slt i32 %1277, 10
  %1283 = or i1 %1281, %1282
  br i1 %1283, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %1275, %originalBB226alteredBB
  %1284 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %1285 = bitcast %class.MGDoFHandler* %1284 to %class.DoFHandler*
  %1286 = load i32, i32* @x.95
  %1287 = load i32, i32* @y.96
  %1288 = sub i32 %1286, 1
  %1289 = mul i32 %1286, %1288
  %1290 = urem i32 %1289, 2
  %1291 = icmp eq i32 %1290, 0
  %1292 = icmp slt i32 %1287, 10
  %1293 = or i1 %1291, %1292
  br i1 %1293, label %originalBBpart2228, label %originalBB226alteredBB

originalBBpart2228:                               ; preds = %originalBB226
  %1294 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %1285)
          to label %1295 unwind label %716

; <label>:1295:                                   ; preds = %originalBBpart2228
  invoke void @_ZN13TriangulationILi3EE15load_user_flagsERKSt6vectorIbSaIbEE(%class.Triangulation* %1294, %"class.std::vector.3"* dereferenceable(40) %50)
          to label %1296 unwind label %716

; <label>:1296:                                   ; preds = %1295
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %50)
          to label %1297 unwind label %410

; <label>:1297:                                   ; preds = %1296
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %37)
          to label %1298 unwind label %1302

; <label>:1298:                                   ; preds = %1297
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %32)
          to label %1299 unwind label %322

; <label>:1299:                                   ; preds = %1298
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %27)
          to label %1300 unwind label %1326

; <label>:1300:                                   ; preds = %1299
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %22)
  ret void

; <label>:1301:                                   ; preds = %716
  br label %1322

; <label>:1302:                                   ; preds = %1297
  %1303 = load i32, i32* @x.95
  %1304 = load i32, i32* @y.96
  %1305 = sub i32 %1303, 1
  %1306 = mul i32 %1303, %1305
  %1307 = urem i32 %1306, 2
  %1308 = icmp eq i32 %1307, 0
  %1309 = icmp slt i32 %1304, 10
  %1310 = or i1 %1308, %1309
  br i1 %1310, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %1302, %originalBB230alteredBB
  %1311 = landingpad { i8*, i32 }
          cleanup
  %1312 = extractvalue { i8*, i32 } %1311, 0
  store i8* %1312, i8** %25, align 8
  %1313 = extractvalue { i8*, i32 } %1311, 1
  store i32 %1313, i32* %26, align 4
  %1314 = load i32, i32* @x.95
  %1315 = load i32, i32* @y.96
  %1316 = sub i32 %1314, 1
  %1317 = mul i32 %1314, %1316
  %1318 = urem i32 %1317, 2
  %1319 = icmp eq i32 %1318, 0
  %1320 = icmp slt i32 %1315, 10
  %1321 = or i1 %1319, %1320
  br i1 %1321, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  br label %1324

; <label>:1322:                                   ; preds = %1301, %410
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %37)
          to label %1323 unwind label %1355

; <label>:1323:                                   ; preds = %1322
  br label %1324

; <label>:1324:                                   ; preds = %1323, %originalBBpart2232, %409
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %32)
          to label %1325 unwind label %1355

; <label>:1325:                                   ; preds = %1324
  br label %1330

; <label>:1326:                                   ; preds = %1299
  %1327 = landingpad { i8*, i32 }
          cleanup
  %1328 = extractvalue { i8*, i32 } %1327, 0
  store i8* %1328, i8** %25, align 8
  %1329 = extractvalue { i8*, i32 } %1327, 1
  store i32 %1329, i32* %26, align 4
  br label %1348

; <label>:1330:                                   ; preds = %1325, %367, %originalBBpart240
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %27)
          to label %1331 unwind label %1355

; <label>:1331:                                   ; preds = %1330
  %1332 = load i32, i32* @x.95
  %1333 = load i32, i32* @y.96
  %1334 = sub i32 %1332, 1
  %1335 = mul i32 %1332, %1334
  %1336 = urem i32 %1335, 2
  %1337 = icmp eq i32 %1336, 0
  %1338 = icmp slt i32 %1333, 10
  %1339 = or i1 %1337, %1338
  br i1 %1339, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %1331, %originalBB234alteredBB
  %1340 = load i32, i32* @x.95
  %1341 = load i32, i32* @y.96
  %1342 = sub i32 %1340, 1
  %1343 = mul i32 %1340, %1342
  %1344 = urem i32 %1343, 2
  %1345 = icmp eq i32 %1344, 0
  %1346 = icmp slt i32 %1341, 10
  %1347 = or i1 %1345, %1346
  br i1 %1347, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  br label %1348

; <label>:1348:                                   ; preds = %originalBBpart2236, %1326, %originalBBpart236
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %22)
          to label %1349 unwind label %1355

; <label>:1349:                                   ; preds = %1348
  br label %1350

; <label>:1350:                                   ; preds = %1349, %originalBBpart232
  %1351 = load i8*, i8** %25, align 8
  %1352 = load i32, i32* %26, align 4
  %1353 = insertvalue { i8*, i32 } undef, i8* %1351, 0
  %1354 = insertvalue { i8*, i32 } %1353, i32 %1352, 1
  resume { i8*, i32 } %1354

; <label>:1355:                                   ; preds = %1348, %1330, %1324, %1322, %716, %originalBBpart248, %362
  %1356 = landingpad { i8*, i32 }
          catch i8* null
  %1357 = extractvalue { i8*, i32 } %1356, 0
  call void @__clang_call_terminate(i8* %1357) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %5
  %1358 = alloca %class.MGDoFHandler*, align 8
  %1359 = alloca %class.CompressedSparsityPattern*, align 8
  %1360 = alloca i32, align 4
  %1361 = alloca %class.FullMatrix*, align 8
  %1362 = alloca %class.FullMatrix*, align 8
  %1363 = alloca i32, align 4
  %1364 = alloca i32, align 4
  %1365 = alloca i32, align 4
  %1366 = alloca %"class.std::vector.12", align 8
  %1367 = alloca i32, align 4
  %1368 = alloca %"class.std::allocator.14", align 1
  %1369 = alloca i8*
  %1370 = alloca i32
  %1371 = alloca %"class.std::vector.12", align 8
  %1372 = alloca i32, align 4
  %1373 = alloca %"class.std::allocator.14", align 1
  %1374 = alloca %class.TriaIterator, align 8
  %1375 = alloca %class.TriaIterator, align 8
  %1376 = alloca %"class.std::vector.75", align 8
  %1377 = alloca %"class.std::vector.3", align 8
  %1378 = alloca i8, align 1
  %1379 = alloca %"class.std::allocator.109", align 1
  %1380 = alloca %"class.std::allocator.77", align 1
  %1381 = alloca %"class.std::vector.75", align 8
  %1382 = alloca %"class.std::vector.3", align 8
  %1383 = alloca i8, align 1
  %1384 = alloca %"class.std::allocator.109", align 1
  %1385 = alloca %"class.std::allocator.77", align 1
  %1386 = alloca i32, align 4
  %1387 = alloca i32, align 4
  %1388 = alloca i32, align 4
  %1389 = alloca %"struct.std::pair.60", align 4
  %1390 = alloca i32, align 4
  %1391 = alloca %"struct.std::pair.60", align 4
  %1392 = alloca %"struct.std::_Bit_reference", align 8
  %1393 = alloca %"struct.std::_Bit_reference", align 8
  %1394 = alloca %"class.std::vector.3", align 8
  %1395 = alloca i32, align 4
  %1396 = alloca i32, align 4
  %1397 = alloca %"struct.std::_Bit_reference", align 8
  %1398 = alloca i32, align 4
  %1399 = alloca %class.TriaIterator.112, align 8
  %1400 = alloca %class.TriaIterator, align 8
  %1401 = alloca i32, align 4
  %1402 = alloca i32, align 4
  %1403 = alloca i32, align 4
  %1404 = alloca %"struct.std::_Bit_reference", align 8
  %1405 = alloca %class.TriaIterator.112, align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %1358, align 8
  store %class.CompressedSparsityPattern* %1, %class.CompressedSparsityPattern** %1359, align 8
  store i32 %2, i32* %1360, align 4
  store %class.FullMatrix* %3, %class.FullMatrix** %1361, align 8
  store %class.FullMatrix* %4, %class.FullMatrix** %1362, align 8
  %1406 = load %class.MGDoFHandler*, %class.MGDoFHandler** %1358, align 8
  %1407 = load i32, i32* %1360, align 4
  %1408 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %1406, i32 %1407)
  store i32 %1408, i32* %1363, align 4
  %1409 = load %class.MGDoFHandler*, %class.MGDoFHandler** %1358, align 8
  %1410 = bitcast %class.MGDoFHandler* %1409 to %class.DoFHandler*
  %1411 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %1410)
  %1412 = bitcast %class.FiniteElement* %1411 to i8*
  %1413 = getelementptr inbounds i8, i8* %1412, i64 24
  %1414 = bitcast i8* %1413 to %class.FiniteElementData*
  %1415 = call i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %1414)
  store i32 %1415, i32* %1364, align 4
  %1416 = load %class.MGDoFHandler*, %class.MGDoFHandler** %1358, align 8
  %1417 = bitcast %class.MGDoFHandler* %1416 to %class.DoFHandler*
  %1418 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %1417)
  %1419 = bitcast %class.FiniteElement* %1418 to i8*
  %1420 = getelementptr inbounds i8, i8* %1419, i64 24
  %1421 = bitcast i8* %1420 to %class.FiniteElementData*
  %1422 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %1421, i32 0, i32 10
  %1423 = load i32, i32* %1422, align 8
  store i32 %1423, i32* %1365, align 4
  %1424 = load i32, i32* %1365, align 4
  %1425 = zext i32 %1424 to i64
  store i32 0, i32* %1367, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %1368) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %104
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %36) #2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %121
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %36) #2
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %138
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %35) #2
  %1426 = load i32, i32* %21, align 4
  %1427 = zext i32 %1426 to i64
  %1428 = load i32, i32* %21, align 4
  %1429 = zext i32 %1428 to i64
  store i8 0, i8* %39, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %40) #2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %160
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %41) #2
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %178
  %1430 = load i32, i32* %42, align 4
  %1431 = load i32, i32* %21, align 4
  %1432 = icmp ult i32 %1430, %1431
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %203
  %1433 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %1434 = bitcast %class.MGDoFHandler* %1433 to %class.DoFHandler*
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %234
  %1435 = bitcast %class.FiniteElement* %233 to %class.FiniteElementBase*
  %1436 = load i32, i32* %43, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %282
  %1437 = landingpad { i8*, i32 }
          cleanup
  %1438 = extractvalue { i8*, i32 } %1437, 0
  store i8* %1438, i8** %25, align 8
  %1439 = extractvalue { i8*, i32 } %1437, 1
  store i32 %1439, i32* %26, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %24) #2
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %302
  %1440 = landingpad { i8*, i32 }
          cleanup
  %1441 = extractvalue { i8*, i32 } %1440, 0
  store i8* %1441, i8** %25, align 8
  %1442 = extractvalue { i8*, i32 } %1440, 1
  store i32 %1442, i32* %26, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %29) #2
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %322
  %1443 = landingpad { i8*, i32 }
          cleanup
  %1444 = extractvalue { i8*, i32 } %1443, 0
  store i8* %1444, i8** %25, align 8
  %1445 = extractvalue { i8*, i32 } %1443, 1
  store i32 %1445, i32* %26, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %342
  %1446 = landingpad { i8*, i32 }
          cleanup
  %1447 = extractvalue { i8*, i32 } %1446, 0
  store i8* %1447, i8** %25, align 8
  %1448 = extractvalue { i8*, i32 } %1446, 1
  store i32 %1448, i32* %26, align 4
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %372
  %1449 = landingpad { i8*, i32 }
          cleanup
  %1450 = extractvalue { i8*, i32 } %1449, 0
  store i8* %1450, i8** %25, align 8
  %1451 = extractvalue { i8*, i32 } %1449, 1
  store i32 %1451, i32* %26, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %41) #2
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %392
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %427
  %1452 = load i32, i32* %43, align 4
  %1453 = zext i32 %1452 to i64
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %455
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %475
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %495
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %512
  %1454 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %1455 = bitcast %class.MGDoFHandler* %1454 to %class.DoFHandler*
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %539
  %1456 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  %1457 = bitcast %class.TriaIterator* %31 to %class.TriaRawIterator*
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %559
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %579
  %1458 = bitcast %class.MGDoFCellAccessor* %578 to %class.MGDoFObjectAccessor*
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %607
  %1459 = load i32, i32* %51, align 4
  %1460 = zext i32 %1459 to i64
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %627
  %1461 = load i32, i32* %52, align 4
  %1462 = zext i32 %1461 to i64
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %655
  %1463 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %15, align 8
  %1464 = load i32, i32* %51, align 4
  %1465 = zext i32 %1464 to i64
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %676
  %1466 = load i32, i32* %675, align 4
  %1467 = load i32, i32* %52, align 4
  %1468 = zext i32 %1467 to i64
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %697
  %1469 = load i32, i32* %696, align 4
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %724
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %741
  %1470 = load i32, i32* %51, align 4
  %_ = sub i32 %1470, 1
  %gen = mul i32 %_, 1
  %_111 = sub i32 %1470, 1
  %gen112 = mul i32 %_111, 1
  %_113 = shl i32 %1470, 1
  %_114 = sub i32 0, %1470
  %gen115 = add i32 %_114, 1
  %_116 = shl i32 %1470, 1
  %_117 = shl i32 %1470, 1
  %1471 = add i32 %1470, 1
  store i32 %1471, i32* %51, align 4
  br label %originalBB110

originalBB121alteredBB:                           ; preds = %originalBB121, %760
  store i32 0, i32* %54, align 4
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %780
  %1472 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %799
  %1473 = load i32, i32* %54, align 4
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %817
  %1474 = bitcast %class.TriaIterator.112* %55 to %class.TriaRawIterator.113*
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %841
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %862
  %1475 = bitcast %class.MGDoFCellAccessor* %861 to i8*
  %1476 = getelementptr inbounds i8, i8* %1475, i64 16
  %1477 = bitcast i8* %1476 to %class.CellAccessor*
  %1478 = load i32, i32* %54, align 4
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %885
  %1479 = bitcast %class.TriaIterator* %30 to %class.TriaRawIterator*
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %906
  %1480 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %925
  %1481 = bitcast %class.MGDoFCellAccessor* %924 to i8*
  %1482 = getelementptr inbounds i8, i8* %1481, i64 16
  %1483 = bitcast i8* %1482 to %class.TriaAccessor*
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %949
  %1484 = bitcast %class.MGDoFCellAccessor* %948 to i8*
  %1485 = getelementptr inbounds i8, i8* %1484, i64 16
  %1486 = bitcast i8* %1485 to %class.TriaAccessor*
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %988
  %1487 = load i32, i32* %58, align 4
  %1488 = load i32, i32* %21, align 4
  %1489 = icmp ult i32 %1487, %1488
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %1009
  %1490 = load i32, i32* %59, align 4
  %1491 = load i32, i32* %21, align 4
  %1492 = icmp ult i32 %1490, %1491
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %1033
  %1493 = load i32, i32* %59, align 4
  %1494 = zext i32 %1493 to i64
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %1053
  %1495 = bitcast %"struct.std::_Bit_reference"* %60 to { i64*, i64 }*
  %1496 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1495, i32 0, i32 0
  %1497 = extractvalue { i64*, i64 } %1052, 0
  store i64* %1497, i64** %1496, align 8
  %1498 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1495, i32 0, i32 1
  %1499 = extractvalue { i64*, i64 } %1052, 1
  store i64 %1499, i64* %1498, align 8
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %1076
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %1110
  %1500 = load i32, i32* %1109, align 4
  %1501 = load i32, i32* %59, align 4
  %1502 = zext i32 %1501 to i64
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %1131
  %1503 = load i32, i32* %1130, align 4
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %1154
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %1171
  %1504 = load i32, i32* %58, align 4
  %_194 = sub i32 %1504, 1
  %gen195 = mul i32 %_194, 1
  %_196 = shl i32 %1504, 1
  %_197 = sub i32 %1504, 1
  %gen198 = mul i32 %_197, 1
  %1505 = add i32 %1504, 1
  store i32 %1505, i32* %58, align 4
  br label %originalBB193

originalBB202alteredBB:                           ; preds = %originalBB202, %1198
  %1506 = bitcast %class.MGDoFObjectAccessor.115* %1197 to i8*
  %1507 = getelementptr inbounds i8, i8* %1506, i64 16
  %1508 = bitcast i8* %1507 to %class.TriaObjectAccessor.117*
  br label %originalBB202

originalBB206alteredBB:                           ; preds = %originalBB206, %1218
  br label %originalBB206

originalBB210alteredBB:                           ; preds = %originalBB210, %1236
  %1509 = load i32, i32* %54, align 4
  %_211 = sub i32 %1509, 1
  %gen212 = mul i32 %_211, 1
  %_213 = sub i32 0, %1509
  %gen214 = add i32 %_213, 1
  %_215 = sub i32 %1509, 1
  %gen216 = mul i32 %_215, 1
  %_217 = sub i32 %1509, 1
  %gen218 = mul i32 %_217, 1
  %1510 = add i32 %1509, 1
  store i32 %1510, i32* %54, align 4
  br label %originalBB210

originalBB222alteredBB:                           ; preds = %originalBB222, %1255
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %1275
  %1511 = load %class.MGDoFHandler*, %class.MGDoFHandler** %14, align 8
  %1512 = bitcast %class.MGDoFHandler* %1511 to %class.DoFHandler*
  br label %originalBB226

originalBB230alteredBB:                           ; preds = %originalBB230, %1302
  %1513 = landingpad { i8*, i32 }
          cleanup
  %1514 = extractvalue { i8*, i32 } %1513, 0
  store i8* %1514, i8** %25, align 8
  %1515 = extractvalue { i8*, i32 } %1513, 1
  store i32 %1515, i32* %26, align 4
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %1331
  br label %originalBB234
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools26make_flux_sparsity_patternILi3E20BlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_jRK10FullMatrixIdESB_(%class.MGDoFHandler* dereferenceable(168), %class.BlockSparsityPattern* dereferenceable(144), i32, %class.FullMatrix* dereferenceable(48), %class.FullMatrix* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.MGDoFHandler*, align 8
  %7 = alloca %class.BlockSparsityPattern*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.FullMatrix*, align 8
  %10 = alloca %class.FullMatrix*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::vector.12", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::allocator.14", align 1
  %17 = alloca i8*
  %18 = alloca i32
  %19 = alloca %"class.std::vector.12", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::allocator.14", align 1
  %22 = alloca %class.TriaIterator, align 8
  %23 = alloca %class.TriaIterator, align 8
  %24 = alloca %"class.std::vector.75", align 8
  %25 = alloca %"class.std::vector.3", align 8
  %26 = alloca i8, align 1
  %27 = alloca %"class.std::allocator.109", align 1
  %28 = alloca %"class.std::allocator.77", align 1
  %29 = alloca %"class.std::vector.75", align 8
  %30 = alloca %"class.std::vector.3", align 8
  %31 = alloca i8, align 1
  %32 = alloca %"class.std::allocator.109", align 1
  %33 = alloca %"class.std::allocator.77", align 1
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %"struct.std::pair.60", align 4
  %38 = alloca i32, align 4
  %39 = alloca %"struct.std::pair.60", align 4
  %40 = alloca %"struct.std::_Bit_reference", align 8
  %41 = alloca %"struct.std::_Bit_reference", align 8
  %42 = alloca %"class.std::vector.3", align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %"struct.std::_Bit_reference", align 8
  %46 = alloca i32, align 4
  %47 = alloca %class.TriaIterator.112, align 8
  %48 = alloca %class.TriaIterator, align 8
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca %"struct.std::_Bit_reference", align 8
  %53 = alloca %class.TriaIterator.112, align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %6, align 8
  store %class.BlockSparsityPattern* %1, %class.BlockSparsityPattern** %7, align 8
  store i32 %2, i32* %8, align 4
  store %class.FullMatrix* %3, %class.FullMatrix** %9, align 8
  store %class.FullMatrix* %4, %class.FullMatrix** %10, align 8
  %54 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %55 = load i32, i32* %8, align 4
  %56 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %54, i32 %55)
  store i32 %56, i32* %11, align 4
  %57 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %58 = bitcast %class.MGDoFHandler* %57 to %class.DoFHandler*
  %59 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %58)
  %60 = bitcast %class.FiniteElement* %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 24
  %62 = bitcast i8* %61 to %class.FiniteElementData*
  %63 = call i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %62)
  store i32 %63, i32* %12, align 4
  %64 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %65 = bitcast %class.MGDoFHandler* %64 to %class.DoFHandler*
  %66 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %65)
  %67 = bitcast %class.FiniteElement* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 24
  %69 = bitcast i8* %68 to %class.FiniteElementData*
  %70 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %69, i32 0, i32 10
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %13, align 4
  %72 = load i32, i32* %13, align 4
  %73 = zext i32 %72 to i64
  store i32 0, i32* %15, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %16) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %14, i64 %73, i32* dereferenceable(4) %15, %"class.std::allocator.14"* dereferenceable(1) %16)
          to label %74 unwind label %266

; <label>:74:                                     ; preds = %5
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  %75 = load i32, i32* %13, align 4
  %76 = zext i32 %75 to i64
  store i32 0, i32* %20, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %21) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %19, i64 %76, i32* dereferenceable(4) %20, %"class.std::allocator.14"* dereferenceable(1) %21)
          to label %77 unwind label %286

; <label>:77:                                     ; preds = %74
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %21) #2
  %78 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %79 = load i32, i32* %8, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %22, %class.MGDoFHandler* %78, i32 %79)
          to label %80 unwind label %306

; <label>:80:                                     ; preds = %77
  %81 = load i32, i32* @x.97
  %82 = load i32, i32* @y.98
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %80, %originalBBalteredBB
  %89 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %90 = load i32, i32* %8, align 4
  %91 = load i32, i32* @x.97
  %92 = load i32, i32* @y.98
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %23, %class.MGDoFHandler* %89, i32 %90)
          to label %99 unwind label %306

; <label>:99:                                     ; preds = %originalBBpart2
  %100 = load i32, i32* %13, align 4
  %101 = zext i32 %100 to i64
  %102 = load i32, i32* %13, align 4
  %103 = zext i32 %102 to i64
  store i8 0, i8* %26, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %27) #2
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %25, i64 %103, i8* dereferenceable(1) %26, %"class.std::allocator.109"* dereferenceable(1) %27)
          to label %104 unwind label %310

; <label>:104:                                    ; preds = %99
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %28) #2
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %24, i64 %101, %"class.std::vector.3"* dereferenceable(40) %25, %"class.std::allocator.77"* dereferenceable(1) %28)
          to label %105 unwind label %314

; <label>:105:                                    ; preds = %104
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %28) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %25)
          to label %106 unwind label %310

; <label>:106:                                    ; preds = %105
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %27) #2
  %107 = load i32, i32* %13, align 4
  %108 = zext i32 %107 to i64
  %109 = load i32, i32* %13, align 4
  %110 = zext i32 %109 to i64
  store i8 0, i8* %31, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %32) #2
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %30, i64 %110, i8* dereferenceable(1) %31, %"class.std::allocator.109"* dereferenceable(1) %32)
          to label %111 unwind label %352

; <label>:111:                                    ; preds = %106
  %112 = load i32, i32* @x.97
  %113 = load i32, i32* @y.98
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %111, %originalBB1alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %33) #2
  %120 = load i32, i32* @x.97
  %121 = load i32, i32* @y.98
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %29, i64 %108, %"class.std::vector.3"* dereferenceable(40) %30, %"class.std::allocator.77"* dereferenceable(1) %33)
          to label %128 unwind label %372

; <label>:128:                                    ; preds = %originalBBpart24
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %33) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %30)
          to label %129 unwind label %352

; <label>:129:                                    ; preds = %128
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %32) #2
  store i32 0, i32* %34, align 4
  br label %130

; <label>:130:                                    ; preds = %444, %129
  %131 = load i32, i32* %34, align 4
  %132 = load i32, i32* %13, align 4
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %134, label %447

; <label>:134:                                    ; preds = %130
  store i32 0, i32* %35, align 4
  br label %135

; <label>:135:                                    ; preds = %440, %134
  %136 = load i32, i32* %35, align 4
  %137 = load i32, i32* %13, align 4
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %139, label %443

; <label>:139:                                    ; preds = %135
  %140 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %141 = bitcast %class.MGDoFHandler* %140 to %class.DoFHandler*
  %142 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %141)
          to label %143 unwind label %378

; <label>:143:                                    ; preds = %139
  %144 = bitcast %class.FiniteElement* %142 to %class.FiniteElementBase*
  %145 = load i32, i32* %34, align 4
  %146 = invoke i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase* %144, i32 %145)
          to label %147 unwind label %378

; <label>:147:                                    ; preds = %143
  %148 = load i32, i32* @x.97
  %149 = load i32, i32* @y.98
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %147, %originalBB6alteredBB
  %156 = bitcast %"struct.std::pair.60"* %37 to i64*
  store i64 %146, i64* %156, align 4
  %157 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %37, i32 0, i32 0
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %36, align 4
  %159 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %160 = bitcast %class.MGDoFHandler* %159 to %class.DoFHandler*
  %161 = load i32, i32* @x.97
  %162 = load i32, i32* @y.98
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %169 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %160)
          to label %170 unwind label %378

; <label>:170:                                    ; preds = %originalBBpart28
  %171 = load i32, i32* @x.97
  %172 = load i32, i32* @y.98
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %170, %originalBB10alteredBB
  %179 = bitcast %class.FiniteElement* %169 to %class.FiniteElementBase*
  %180 = load i32, i32* %35, align 4
  %181 = load i32, i32* @x.97
  %182 = load i32, i32* @y.98
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %189 = invoke i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase* %179, i32 %180)
          to label %190 unwind label %378

; <label>:190:                                    ; preds = %originalBBpart212
  %191 = load i32, i32* @x.97
  %192 = load i32, i32* @y.98
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %190, %originalBB14alteredBB
  %199 = bitcast %"struct.std::pair.60"* %39 to i64*
  store i64 %189, i64* %199, align 4
  %200 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %39, i32 0, i32 0
  %201 = load i32, i32* %200, align 4
  store i32 %201, i32* %38, align 4
  %202 = load %class.FullMatrix*, %class.FullMatrix** %9, align 8
  %203 = bitcast %class.FullMatrix* %202 to %class.Table*
  %204 = load i32, i32* %36, align 4
  %205 = load i32, i32* %38, align 4
  %206 = load i32, i32* @x.97
  %207 = load i32, i32* @y.98
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %214 = invoke dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table* %203, i32 %204, i32 %205)
          to label %215 unwind label %378

; <label>:215:                                    ; preds = %originalBBpart216
  %216 = load double, double* %214, align 8
  %217 = fcmp une double %216, 0.000000e+00
  br i1 %217, label %218, label %382

; <label>:218:                                    ; preds = %215
  %219 = load i32, i32* @x.97
  %220 = load i32, i32* @y.98
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %218, %originalBB18alteredBB
  %227 = load i32, i32* %34, align 4
  %228 = zext i32 %227 to i64
  %229 = load i32, i32* @x.97
  %230 = load i32, i32* @y.98
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %237 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %24, i64 %228)
          to label %238 unwind label %378

; <label>:238:                                    ; preds = %originalBBpart220
  %239 = load i32, i32* %35, align 4
  %240 = zext i32 %239 to i64
  %241 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %237, i64 %240)
          to label %242 unwind label %378

; <label>:242:                                    ; preds = %238
  %243 = load i32, i32* @x.97
  %244 = load i32, i32* @y.98
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %242, %originalBB22alteredBB
  %251 = bitcast %"struct.std::_Bit_reference"* %40 to { i64*, i64 }*
  %252 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %251, i32 0, i32 0
  %253 = extractvalue { i64*, i64 } %241, 0
  store i64* %253, i64** %252, align 8
  %254 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %251, i32 0, i32 1
  %255 = extractvalue { i64*, i64 } %241, 1
  store i64 %255, i64* %254, align 8
  %256 = load i32, i32* @x.97
  %257 = load i32, i32* @y.98
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %264 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %40, i1 zeroext true)
          to label %265 unwind label %378

; <label>:265:                                    ; preds = %originalBBpart224
  br label %382

; <label>:266:                                    ; preds = %5
  %267 = load i32, i32* @x.97
  %268 = load i32, i32* @y.98
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %266, %originalBB26alteredBB
  %275 = landingpad { i8*, i32 }
          cleanup
  %276 = extractvalue { i8*, i32 } %275, 0
  store i8* %276, i8** %17, align 8
  %277 = extractvalue { i8*, i32 } %275, 1
  store i32 %277, i32* %18, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  %278 = load i32, i32* @x.97
  %279 = load i32, i32* @y.98
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %1097

; <label>:286:                                    ; preds = %74
  %287 = load i32, i32* @x.97
  %288 = load i32, i32* @y.98
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %286, %originalBB30alteredBB
  %295 = landingpad { i8*, i32 }
          cleanup
  %296 = extractvalue { i8*, i32 } %295, 0
  store i8* %296, i8** %17, align 8
  %297 = extractvalue { i8*, i32 } %295, 1
  store i32 %297, i32* %18, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %21) #2
  %298 = load i32, i32* @x.97
  %299 = load i32, i32* @y.98
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %1095

; <label>:306:                                    ; preds = %1061, %originalBBpart2, %77
  %307 = landingpad { i8*, i32 }
          cleanup
  %308 = extractvalue { i8*, i32 } %307, 0
  store i8* %308, i8** %17, align 8
  %309 = extractvalue { i8*, i32 } %307, 1
  store i32 %309, i32* %18, align 4
  br label %1093

; <label>:310:                                    ; preds = %105, %99
  %311 = landingpad { i8*, i32 }
          cleanup
  %312 = extractvalue { i8*, i32 } %311, 0
  store i8* %312, i8** %17, align 8
  %313 = extractvalue { i8*, i32 } %311, 1
  store i32 %313, i32* %18, align 4
  br label %335

; <label>:314:                                    ; preds = %104
  %315 = load i32, i32* @x.97
  %316 = load i32, i32* @y.98
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %314, %originalBB34alteredBB
  %323 = landingpad { i8*, i32 }
          cleanup
  %324 = extractvalue { i8*, i32 } %323, 0
  store i8* %324, i8** %17, align 8
  %325 = extractvalue { i8*, i32 } %323, 1
  store i32 %325, i32* %18, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %28) #2
  %326 = load i32, i32* @x.97
  %327 = load i32, i32* @y.98
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %25)
          to label %334 unwind label %1118

; <label>:334:                                    ; preds = %originalBBpart236
  br label %335

; <label>:335:                                    ; preds = %334, %310
  %336 = load i32, i32* @x.97
  %337 = load i32, i32* @y.98
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %335, %originalBB38alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %27) #2
  %344 = load i32, i32* @x.97
  %345 = load i32, i32* @y.98
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %1093

; <label>:352:                                    ; preds = %128, %106
  %353 = load i32, i32* @x.97
  %354 = load i32, i32* @y.98
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %352, %originalBB42alteredBB
  %361 = landingpad { i8*, i32 }
          cleanup
  %362 = extractvalue { i8*, i32 } %361, 0
  store i8* %362, i8** %17, align 8
  %363 = extractvalue { i8*, i32 } %361, 1
  store i32 %363, i32* %18, align 4
  %364 = load i32, i32* @x.97
  %365 = load i32, i32* @y.98
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %377

; <label>:372:                                    ; preds = %originalBBpart24
  %373 = landingpad { i8*, i32 }
          cleanup
  %374 = extractvalue { i8*, i32 } %373, 0
  store i8* %374, i8** %17, align 8
  %375 = extractvalue { i8*, i32 } %373, 1
  store i32 %375, i32* %18, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %33) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %30)
          to label %376 unwind label %1118

; <label>:376:                                    ; preds = %372
  br label %377

; <label>:377:                                    ; preds = %376, %originalBBpart244
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %32) #2
  br label %1071

; <label>:378:                                    ; preds = %1059, %447, %originalBBpart248, %395, %391, %382, %originalBBpart224, %238, %originalBBpart220, %originalBBpart216, %originalBBpart212, %originalBBpart28, %143, %139
  %379 = landingpad { i8*, i32 }
          cleanup
  %380 = extractvalue { i8*, i32 } %379, 0
  store i8* %380, i8** %17, align 8
  %381 = extractvalue { i8*, i32 } %379, 1
  store i32 %381, i32* %18, align 4
  br label %1069

; <label>:382:                                    ; preds = %265, %215
  %383 = load %class.FullMatrix*, %class.FullMatrix** %10, align 8
  %384 = bitcast %class.FullMatrix* %383 to %class.Table*
  %385 = load i32, i32* %36, align 4
  %386 = load i32, i32* %38, align 4
  %387 = invoke dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table* %384, i32 %385, i32 %386)
          to label %388 unwind label %378

; <label>:388:                                    ; preds = %382
  %389 = load double, double* %387, align 8
  %390 = fcmp une double %389, 0.000000e+00
  br i1 %390, label %391, label %439

; <label>:391:                                    ; preds = %388
  %392 = load i32, i32* %34, align 4
  %393 = zext i32 %392 to i64
  %394 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %29, i64 %393)
          to label %395 unwind label %378

; <label>:395:                                    ; preds = %391
  %396 = load i32, i32* %35, align 4
  %397 = zext i32 %396 to i64
  %398 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %394, i64 %397)
          to label %399 unwind label %378

; <label>:399:                                    ; preds = %395
  %400 = load i32, i32* @x.97
  %401 = load i32, i32* @y.98
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %399, %originalBB46alteredBB
  %408 = bitcast %"struct.std::_Bit_reference"* %41 to { i64*, i64 }*
  %409 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %408, i32 0, i32 0
  %410 = extractvalue { i64*, i64 } %398, 0
  store i64* %410, i64** %409, align 8
  %411 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %408, i32 0, i32 1
  %412 = extractvalue { i64*, i64 } %398, 1
  store i64 %412, i64* %411, align 8
  %413 = load i32, i32* @x.97
  %414 = load i32, i32* @y.98
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  %421 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %41, i1 zeroext true)
          to label %422 unwind label %378

; <label>:422:                                    ; preds = %originalBBpart248
  %423 = load i32, i32* @x.97
  %424 = load i32, i32* @y.98
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %422, %originalBB50alteredBB
  %431 = load i32, i32* @x.97
  %432 = load i32, i32* @y.98
  %433 = sub i32 %431, 1
  %434 = mul i32 %431, %433
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %436, %437
  br i1 %438, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %439

; <label>:439:                                    ; preds = %originalBBpart252, %388
  br label %440

; <label>:440:                                    ; preds = %439
  %441 = load i32, i32* %35, align 4
  %442 = add i32 %441, 1
  store i32 %442, i32* %35, align 4
  br label %135

; <label>:443:                                    ; preds = %135
  br label %444

; <label>:444:                                    ; preds = %443
  %445 = load i32, i32* %34, align 4
  %446 = add i32 %445, 1
  store i32 %446, i32* %34, align 4
  br label %130

; <label>:447:                                    ; preds = %130
  invoke void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.3"* %42)
          to label %448 unwind label %378

; <label>:448:                                    ; preds = %447
  %449 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %450 = bitcast %class.MGDoFHandler* %449 to %class.DoFHandler*
  %451 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %450)
          to label %452 unwind label %589

; <label>:452:                                    ; preds = %448
  invoke void @_ZNK13TriangulationILi3EE15save_user_flagsERSt6vectorIbSaIbEE(%class.Triangulation* %451, %"class.std::vector.3"* dereferenceable(40) %42)
          to label %453 unwind label %589

; <label>:453:                                    ; preds = %452
  %454 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %455 = bitcast %class.MGDoFHandler* %454 to %class.DoFHandler*
  %456 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %455)
          to label %457 unwind label %589

; <label>:457:                                    ; preds = %453
  invoke void @_ZN13TriangulationILi3EE16clear_user_flagsEv(%class.Triangulation* %456)
          to label %458 unwind label %589

; <label>:458:                                    ; preds = %457
  br label %459

; <label>:459:                                    ; preds = %originalBBpart2181, %458
  %460 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %461 = bitcast %class.TriaIterator* %23 to %class.TriaRawIterator*
  %462 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %460, %class.TriaRawIterator* dereferenceable(32) %461)
          to label %463 unwind label %589

; <label>:463:                                    ; preds = %459
  br i1 %462, label %464, label %1054

; <label>:464:                                    ; preds = %463
  %465 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %466 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %465)
          to label %467 unwind label %589

; <label>:467:                                    ; preds = %464
  %468 = bitcast %class.MGDoFCellAccessor* %466 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %468, %"class.std::vector.12"* dereferenceable(24) %14)
          to label %469 unwind label %589

; <label>:469:                                    ; preds = %467
  store i32 0, i32* %43, align 4
  br label %470

; <label>:470:                                    ; preds = %630, %469
  %471 = load i32, i32* @x.97
  %472 = load i32, i32* @y.98
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %470, %originalBB54alteredBB
  %479 = load i32, i32* %43, align 4
  %480 = load i32, i32* %13, align 4
  %481 = icmp ult i32 %479, %480
  %482 = load i32, i32* @x.97
  %483 = load i32, i32* @y.98
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %481, label %490, label %633

; <label>:490:                                    ; preds = %originalBBpart256
  %491 = load i32, i32* @x.97
  %492 = load i32, i32* @y.98
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %490, %originalBB58alteredBB
  store i32 0, i32* %44, align 4
  %499 = load i32, i32* @x.97
  %500 = load i32, i32* @y.98
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %507

; <label>:507:                                    ; preds = %originalBBpart287, %originalBBpart260
  %508 = load i32, i32* @x.97
  %509 = load i32, i32* @y.98
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %507, %originalBB62alteredBB
  %516 = load i32, i32* %44, align 4
  %517 = load i32, i32* %13, align 4
  %518 = icmp ult i32 %516, %517
  %519 = load i32, i32* @x.97
  %520 = load i32, i32* @y.98
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %518, label %527, label %613

; <label>:527:                                    ; preds = %originalBBpart264
  %528 = load i32, i32* %43, align 4
  %529 = zext i32 %528 to i64
  %530 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %24, i64 %529)
          to label %531 unwind label %589

; <label>:531:                                    ; preds = %527
  %532 = load i32, i32* %44, align 4
  %533 = zext i32 %532 to i64
  %534 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %530, i64 %533)
          to label %535 unwind label %589

; <label>:535:                                    ; preds = %531
  %536 = bitcast %"struct.std::_Bit_reference"* %45 to { i64*, i64 }*
  %537 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %536, i32 0, i32 0
  %538 = extractvalue { i64*, i64 } %534, 0
  store i64* %538, i64** %537, align 8
  %539 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %536, i32 0, i32 1
  %540 = extractvalue { i64*, i64 } %534, 1
  store i64 %540, i64* %539, align 8
  %541 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %45)
          to label %542 unwind label %589

; <label>:542:                                    ; preds = %535
  br i1 %541, label %543, label %593

; <label>:543:                                    ; preds = %542
  %544 = load i32, i32* @x.97
  %545 = load i32, i32* @y.98
  %546 = sub i32 %544, 1
  %547 = mul i32 %544, %546
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %549, %550
  br i1 %551, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %543, %originalBB66alteredBB
  %552 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %7, align 8
  %553 = bitcast %class.BlockSparsityPattern* %552 to %class.BlockSparsityPatternBase*
  %554 = load i32, i32* %43, align 4
  %555 = zext i32 %554 to i64
  %556 = load i32, i32* @x.97
  %557 = load i32, i32* @y.98
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  %564 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %555)
          to label %565 unwind label %589

; <label>:565:                                    ; preds = %originalBBpart268
  %566 = load i32, i32* %564, align 4
  %567 = load i32, i32* %44, align 4
  %568 = zext i32 %567 to i64
  %569 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %568)
          to label %570 unwind label %589

; <label>:570:                                    ; preds = %565
  %571 = load i32, i32* %569, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase* %553, i32 %566, i32 %571)
          to label %572 unwind label %589

; <label>:572:                                    ; preds = %570
  %573 = load i32, i32* @x.97
  %574 = load i32, i32* @y.98
  %575 = sub i32 %573, 1
  %576 = mul i32 %573, %575
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %574, 10
  %580 = or i1 %578, %579
  br i1 %580, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %572, %originalBB70alteredBB
  %581 = load i32, i32* @x.97
  %582 = load i32, i32* @y.98
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %593

; <label>:589:                                    ; preds = %1058, %1054, %1035, %993, %originalBBpart2153, %originalBBpart2149, %originalBBpart2145, %910, %originalBBpart2131, %originalBBpart2127, %originalBBpart2123, %844, %originalBBpart2119, %798, %794, %790, %originalBBpart2107, %originalBBpart2103, %721, %originalBBpart299, %694, %691, %originalBBpart295, %667, %665, %662, %655, %652, %645, %642, %640, %637, %570, %565, %originalBBpart268, %535, %531, %527, %467, %464, %459, %457, %453, %452, %448
  %590 = landingpad { i8*, i32 }
          cleanup
  %591 = extractvalue { i8*, i32 } %590, 0
  store i8* %591, i8** %17, align 8
  %592 = extractvalue { i8*, i32 } %590, 1
  store i32 %592, i32* %18, align 4
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %42)
          to label %1064 unwind label %1118

; <label>:593:                                    ; preds = %originalBBpart272, %542
  br label %594

; <label>:594:                                    ; preds = %593
  %595 = load i32, i32* @x.97
  %596 = load i32, i32* @y.98
  %597 = sub i32 %595, 1
  %598 = mul i32 %595, %597
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %596, 10
  %602 = or i1 %600, %601
  br i1 %602, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %594, %originalBB74alteredBB
  %603 = load i32, i32* %44, align 4
  %604 = add i32 %603, 1
  store i32 %604, i32* %44, align 4
  %605 = load i32, i32* @x.97
  %606 = load i32, i32* @y.98
  %607 = sub i32 %605, 1
  %608 = mul i32 %605, %607
  %609 = urem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %610, %611
  br i1 %612, label %originalBBpart287, label %originalBB74alteredBB

originalBBpart287:                                ; preds = %originalBB74
  br label %507

; <label>:613:                                    ; preds = %originalBBpart264
  %614 = load i32, i32* @x.97
  %615 = load i32, i32* @y.98
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %613, %originalBB89alteredBB
  %622 = load i32, i32* @x.97
  %623 = load i32, i32* @y.98
  %624 = sub i32 %622, 1
  %625 = mul i32 %622, %624
  %626 = urem i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = icmp slt i32 %623, 10
  %629 = or i1 %627, %628
  br i1 %629, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %630

; <label>:630:                                    ; preds = %originalBBpart291
  %631 = load i32, i32* %43, align 4
  %632 = add i32 %631, 1
  store i32 %632, i32* %43, align 4
  br label %470

; <label>:633:                                    ; preds = %originalBBpart256
  store i32 0, i32* %46, align 4
  br label %634

; <label>:634:                                    ; preds = %originalBBpart2173, %633
  %635 = load i32, i32* %46, align 4
  %636 = icmp ult i32 %635, 6
  br i1 %636, label %637, label %1018

; <label>:637:                                    ; preds = %634
  %638 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %639 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %638)
          to label %640 unwind label %589

; <label>:640:                                    ; preds = %637
  %641 = load i32, i32* %46, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret %47, %class.MGDoFCellAccessor* %639, i32 %641)
          to label %642 unwind label %589

; <label>:642:                                    ; preds = %640
  %643 = bitcast %class.TriaIterator.112* %47 to %class.TriaRawIterator.113*
  %644 = invoke %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113* %643)
          to label %645 unwind label %589

; <label>:645:                                    ; preds = %642
  %646 = bitcast %class.MGDoFObjectAccessor.115* %644 to i8*
  %647 = getelementptr inbounds i8, i8* %646, i64 16
  %648 = bitcast i8* %647 to %class.TriaObjectAccessor.117*
  %649 = invoke zeroext i1 @_ZNK18TriaObjectAccessorILi2ELi3EE13user_flag_setEv(%class.TriaObjectAccessor.117* %648)
          to label %650 unwind label %589

; <label>:650:                                    ; preds = %645
  br i1 %649, label %651, label %652

; <label>:651:                                    ; preds = %650
  br label %999

; <label>:652:                                    ; preds = %650
  %653 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %654 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %653)
          to label %655 unwind label %589

; <label>:655:                                    ; preds = %652
  %656 = bitcast %class.MGDoFCellAccessor* %654 to i8*
  %657 = getelementptr inbounds i8, i8* %656, i64 16
  %658 = bitcast i8* %657 to %class.CellAccessor*
  %659 = load i32, i32* %46, align 4
  %660 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %658, i32 %659)
          to label %661 unwind label %589

; <label>:661:                                    ; preds = %655
  br i1 %660, label %998, label %662

; <label>:662:                                    ; preds = %661
  %663 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %664 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %663)
          to label %665 unwind label %589

; <label>:665:                                    ; preds = %662
  %666 = load i32, i32* %46, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %48, %class.MGDoFCellAccessor* %664, i32 %666)
          to label %667 unwind label %589

; <label>:667:                                    ; preds = %665
  %668 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  %669 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %668)
          to label %670 unwind label %589

; <label>:670:                                    ; preds = %667
  %671 = load i32, i32* @x.97
  %672 = load i32, i32* @y.98
  %673 = sub i32 %671, 1
  %674 = mul i32 %671, %673
  %675 = urem i32 %674, 2
  %676 = icmp eq i32 %675, 0
  %677 = icmp slt i32 %672, 10
  %678 = or i1 %676, %677
  br i1 %678, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %670, %originalBB93alteredBB
  %679 = bitcast %class.MGDoFCellAccessor* %669 to i8*
  %680 = getelementptr inbounds i8, i8* %679, i64 16
  %681 = bitcast i8* %680 to %class.TriaAccessor*
  %682 = load i32, i32* @x.97
  %683 = load i32, i32* @y.98
  %684 = sub i32 %682, 1
  %685 = mul i32 %682, %684
  %686 = urem i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = icmp slt i32 %683, 10
  %689 = or i1 %687, %688
  br i1 %689, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  %690 = invoke i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor* %681)
          to label %691 unwind label %589

; <label>:691:                                    ; preds = %originalBBpart295
  %692 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %693 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %692)
          to label %694 unwind label %589

; <label>:694:                                    ; preds = %691
  %695 = bitcast %class.MGDoFCellAccessor* %693 to i8*
  %696 = getelementptr inbounds i8, i8* %695, i64 16
  %697 = bitcast i8* %696 to %class.TriaAccessor*
  %698 = invoke i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor* %697)
          to label %699 unwind label %589

; <label>:699:                                    ; preds = %694
  %700 = icmp slt i32 %690, %698
  br i1 %700, label %701, label %702

; <label>:701:                                    ; preds = %699
  br label %999

; <label>:702:                                    ; preds = %699
  %703 = load i32, i32* @x.97
  %704 = load i32, i32* @y.98
  %705 = sub i32 %703, 1
  %706 = mul i32 %703, %705
  %707 = urem i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = icmp slt i32 %704, 10
  %710 = or i1 %708, %709
  br i1 %710, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %702, %originalBB97alteredBB
  %711 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %712 = load i32, i32* @x.97
  %713 = load i32, i32* @y.98
  %714 = sub i32 %712, 1
  %715 = mul i32 %712, %714
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %713, 10
  %719 = or i1 %717, %718
  br i1 %719, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  %720 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %711)
          to label %721 unwind label %589

; <label>:721:                                    ; preds = %originalBBpart299
  %722 = bitcast %class.MGDoFCellAccessor* %720 to i8*
  %723 = getelementptr inbounds i8, i8* %722, i64 16
  %724 = bitcast i8* %723 to %class.CellAccessor*
  %725 = load i32, i32* %46, align 4
  %726 = invoke i32 @_ZNK12CellAccessorILi3EE20neighbor_of_neighborEj(%class.CellAccessor* %724, i32 %725)
          to label %727 unwind label %589

; <label>:727:                                    ; preds = %721
  %728 = load i32, i32* @x.97
  %729 = load i32, i32* @y.98
  %730 = sub i32 %728, 1
  %731 = mul i32 %728, %730
  %732 = urem i32 %731, 2
  %733 = icmp eq i32 %732, 0
  %734 = icmp slt i32 %729, 10
  %735 = or i1 %733, %734
  br i1 %735, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %727, %originalBB101alteredBB
  store i32 %726, i32* %49, align 4
  %736 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  %737 = load i32, i32* @x.97
  %738 = load i32, i32* @y.98
  %739 = sub i32 %737, 1
  %740 = mul i32 %737, %739
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %738, 10
  %744 = or i1 %742, %743
  br i1 %744, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  %745 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %736)
          to label %746 unwind label %589

; <label>:746:                                    ; preds = %originalBBpart2103
  %747 = load i32, i32* @x.97
  %748 = load i32, i32* @y.98
  %749 = sub i32 %747, 1
  %750 = mul i32 %747, %749
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %752, %753
  br i1 %754, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %746, %originalBB105alteredBB
  %755 = bitcast %class.MGDoFCellAccessor* %745 to %class.MGDoFObjectAccessor*
  %756 = load i32, i32* @x.97
  %757 = load i32, i32* @y.98
  %758 = sub i32 %756, 1
  %759 = mul i32 %756, %758
  %760 = urem i32 %759, 2
  %761 = icmp eq i32 %760, 0
  %762 = icmp slt i32 %757, 10
  %763 = or i1 %761, %762
  br i1 %763, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %755, %"class.std::vector.12"* dereferenceable(24) %19)
          to label %764 unwind label %589

; <label>:764:                                    ; preds = %originalBBpart2107
  store i32 0, i32* %50, align 4
  br label %765

; <label>:765:                                    ; preds = %originalBBpart2141, %764
  %766 = load i32, i32* %50, align 4
  %767 = load i32, i32* %13, align 4
  %768 = icmp ult i32 %766, %767
  br i1 %768, label %769, label %937

; <label>:769:                                    ; preds = %765
  %770 = load i32, i32* @x.97
  %771 = load i32, i32* @y.98
  %772 = sub i32 %770, 1
  %773 = mul i32 %770, %772
  %774 = urem i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = icmp slt i32 %771, 10
  %777 = or i1 %775, %776
  br i1 %777, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %769, %originalBB109alteredBB
  store i32 0, i32* %51, align 4
  %778 = load i32, i32* @x.97
  %779 = load i32, i32* @y.98
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %786

; <label>:786:                                    ; preds = %914, %originalBBpart2111
  %787 = load i32, i32* %51, align 4
  %788 = load i32, i32* %13, align 4
  %789 = icmp ult i32 %787, %788
  br i1 %789, label %790, label %917

; <label>:790:                                    ; preds = %786
  %791 = load i32, i32* %50, align 4
  %792 = zext i32 %791 to i64
  %793 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %29, i64 %792)
          to label %794 unwind label %589

; <label>:794:                                    ; preds = %790
  %795 = load i32, i32* %51, align 4
  %796 = zext i32 %795 to i64
  %797 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %793, i64 %796)
          to label %798 unwind label %589

; <label>:798:                                    ; preds = %794
  %799 = bitcast %"struct.std::_Bit_reference"* %52 to { i64*, i64 }*
  %800 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %799, i32 0, i32 0
  %801 = extractvalue { i64*, i64 } %797, 0
  store i64* %801, i64** %800, align 8
  %802 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %799, i32 0, i32 1
  %803 = extractvalue { i64*, i64 } %797, 1
  store i64 %803, i64* %802, align 8
  %804 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %52)
          to label %805 unwind label %589

; <label>:805:                                    ; preds = %798
  %806 = load i32, i32* @x.97
  %807 = load i32, i32* @y.98
  %808 = sub i32 %806, 1
  %809 = mul i32 %806, %808
  %810 = urem i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = icmp slt i32 %807, 10
  %813 = or i1 %811, %812
  br i1 %813, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %805, %originalBB113alteredBB
  %814 = load i32, i32* @x.97
  %815 = load i32, i32* @y.98
  %816 = sub i32 %814, 1
  %817 = mul i32 %814, %816
  %818 = urem i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = icmp slt i32 %815, 10
  %821 = or i1 %819, %820
  br i1 %821, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br i1 %804, label %822, label %913

; <label>:822:                                    ; preds = %originalBBpart2115
  %823 = load i32, i32* @x.97
  %824 = load i32, i32* @y.98
  %825 = sub i32 %823, 1
  %826 = mul i32 %823, %825
  %827 = urem i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = icmp slt i32 %824, 10
  %830 = or i1 %828, %829
  br i1 %830, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %822, %originalBB117alteredBB
  %831 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %7, align 8
  %832 = bitcast %class.BlockSparsityPattern* %831 to %class.BlockSparsityPatternBase*
  %833 = load i32, i32* %50, align 4
  %834 = zext i32 %833 to i64
  %835 = load i32, i32* @x.97
  %836 = load i32, i32* @y.98
  %837 = sub i32 %835, 1
  %838 = mul i32 %835, %837
  %839 = urem i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = icmp slt i32 %836, 10
  %842 = or i1 %840, %841
  br i1 %842, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  %843 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %834)
          to label %844 unwind label %589

; <label>:844:                                    ; preds = %originalBBpart2119
  %845 = load i32, i32* %843, align 4
  %846 = load i32, i32* %51, align 4
  %847 = zext i32 %846 to i64
  %848 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %19, i64 %847)
          to label %849 unwind label %589

; <label>:849:                                    ; preds = %844
  %850 = load i32, i32* @x.97
  %851 = load i32, i32* @y.98
  %852 = sub i32 %850, 1
  %853 = mul i32 %850, %852
  %854 = urem i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = icmp slt i32 %851, 10
  %857 = or i1 %855, %856
  br i1 %857, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %849, %originalBB121alteredBB
  %858 = load i32, i32* %848, align 4
  %859 = load i32, i32* @x.97
  %860 = load i32, i32* @y.98
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  invoke void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase* %832, i32 %845, i32 %858)
          to label %867 unwind label %589

; <label>:867:                                    ; preds = %originalBBpart2123
  %868 = load i32, i32* @x.97
  %869 = load i32, i32* @y.98
  %870 = sub i32 %868, 1
  %871 = mul i32 %868, %870
  %872 = urem i32 %871, 2
  %873 = icmp eq i32 %872, 0
  %874 = icmp slt i32 %869, 10
  %875 = or i1 %873, %874
  br i1 %875, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %867, %originalBB125alteredBB
  %876 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %7, align 8
  %877 = bitcast %class.BlockSparsityPattern* %876 to %class.BlockSparsityPatternBase*
  %878 = load i32, i32* %50, align 4
  %879 = zext i32 %878 to i64
  %880 = load i32, i32* @x.97
  %881 = load i32, i32* @y.98
  %882 = sub i32 %880, 1
  %883 = mul i32 %880, %882
  %884 = urem i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = icmp slt i32 %881, 10
  %887 = or i1 %885, %886
  br i1 %887, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  %888 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %19, i64 %879)
          to label %889 unwind label %589

; <label>:889:                                    ; preds = %originalBBpart2127
  %890 = load i32, i32* @x.97
  %891 = load i32, i32* @y.98
  %892 = sub i32 %890, 1
  %893 = mul i32 %890, %892
  %894 = urem i32 %893, 2
  %895 = icmp eq i32 %894, 0
  %896 = icmp slt i32 %891, 10
  %897 = or i1 %895, %896
  br i1 %897, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %889, %originalBB129alteredBB
  %898 = load i32, i32* %888, align 4
  %899 = load i32, i32* %51, align 4
  %900 = zext i32 %899 to i64
  %901 = load i32, i32* @x.97
  %902 = load i32, i32* @y.98
  %903 = sub i32 %901, 1
  %904 = mul i32 %901, %903
  %905 = urem i32 %904, 2
  %906 = icmp eq i32 %905, 0
  %907 = icmp slt i32 %902, 10
  %908 = or i1 %906, %907
  br i1 %908, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  %909 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %900)
          to label %910 unwind label %589

; <label>:910:                                    ; preds = %originalBBpart2131
  %911 = load i32, i32* %909, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI15SparsityPatternE3addEjj(%class.BlockSparsityPatternBase* %877, i32 %898, i32 %911)
          to label %912 unwind label %589

; <label>:912:                                    ; preds = %910
  br label %913

; <label>:913:                                    ; preds = %912, %originalBBpart2115
  br label %914

; <label>:914:                                    ; preds = %913
  %915 = load i32, i32* %51, align 4
  %916 = add i32 %915, 1
  store i32 %916, i32* %51, align 4
  br label %786

; <label>:917:                                    ; preds = %786
  br label %918

; <label>:918:                                    ; preds = %917
  %919 = load i32, i32* @x.97
  %920 = load i32, i32* @y.98
  %921 = sub i32 %919, 1
  %922 = mul i32 %919, %921
  %923 = urem i32 %922, 2
  %924 = icmp eq i32 %923, 0
  %925 = icmp slt i32 %920, 10
  %926 = or i1 %924, %925
  br i1 %926, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %918, %originalBB133alteredBB
  %927 = load i32, i32* %50, align 4
  %928 = add i32 %927, 1
  store i32 %928, i32* %50, align 4
  %929 = load i32, i32* @x.97
  %930 = load i32, i32* @y.98
  %931 = sub i32 %929, 1
  %932 = mul i32 %929, %931
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %930, 10
  %936 = or i1 %934, %935
  br i1 %936, label %originalBBpart2141, label %originalBB133alteredBB

originalBBpart2141:                               ; preds = %originalBB133
  br label %765

; <label>:937:                                    ; preds = %765
  %938 = load i32, i32* @x.97
  %939 = load i32, i32* @y.98
  %940 = sub i32 %938, 1
  %941 = mul i32 %938, %940
  %942 = urem i32 %941, 2
  %943 = icmp eq i32 %942, 0
  %944 = icmp slt i32 %939, 10
  %945 = or i1 %943, %944
  br i1 %945, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %937, %originalBB143alteredBB
  %946 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  %947 = load i32, i32* @x.97
  %948 = load i32, i32* @y.98
  %949 = sub i32 %947, 1
  %950 = mul i32 %947, %949
  %951 = urem i32 %950, 2
  %952 = icmp eq i32 %951, 0
  %953 = icmp slt i32 %948, 10
  %954 = or i1 %952, %953
  br i1 %954, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  %955 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %946)
          to label %956 unwind label %589

; <label>:956:                                    ; preds = %originalBBpart2145
  %957 = load i32, i32* @x.97
  %958 = load i32, i32* @y.98
  %959 = sub i32 %957, 1
  %960 = mul i32 %957, %959
  %961 = urem i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = icmp slt i32 %958, 10
  %964 = or i1 %962, %963
  br i1 %964, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %956, %originalBB147alteredBB
  %965 = load i32, i32* %49, align 4
  %966 = load i32, i32* @x.97
  %967 = load i32, i32* @y.98
  %968 = sub i32 %966, 1
  %969 = mul i32 %966, %968
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %967, 10
  %973 = or i1 %971, %972
  br i1 %973, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  invoke void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret %53, %class.MGDoFCellAccessor* %955, i32 %965)
          to label %974 unwind label %589

; <label>:974:                                    ; preds = %originalBBpart2149
  %975 = load i32, i32* @x.97
  %976 = load i32, i32* @y.98
  %977 = sub i32 %975, 1
  %978 = mul i32 %975, %977
  %979 = urem i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = icmp slt i32 %976, 10
  %982 = or i1 %980, %981
  br i1 %982, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %974, %originalBB151alteredBB
  %983 = bitcast %class.TriaIterator.112* %53 to %class.TriaRawIterator.113*
  %984 = load i32, i32* @x.97
  %985 = load i32, i32* @y.98
  %986 = sub i32 %984, 1
  %987 = mul i32 %984, %986
  %988 = urem i32 %987, 2
  %989 = icmp eq i32 %988, 0
  %990 = icmp slt i32 %985, 10
  %991 = or i1 %989, %990
  br i1 %991, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  %992 = invoke %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113* %983)
          to label %993 unwind label %589

; <label>:993:                                    ; preds = %originalBBpart2153
  %994 = bitcast %class.MGDoFObjectAccessor.115* %992 to i8*
  %995 = getelementptr inbounds i8, i8* %994, i64 16
  %996 = bitcast i8* %995 to %class.TriaObjectAccessor.117*
  invoke void @_ZNK18TriaObjectAccessorILi2ELi3EE13set_user_flagEv(%class.TriaObjectAccessor.117* %996)
          to label %997 unwind label %589

; <label>:997:                                    ; preds = %993
  br label %998

; <label>:998:                                    ; preds = %997, %661
  br label %999

; <label>:999:                                    ; preds = %998, %701, %651
  %1000 = load i32, i32* @x.97
  %1001 = load i32, i32* @y.98
  %1002 = sub i32 %1000, 1
  %1003 = mul i32 %1000, %1002
  %1004 = urem i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  %1006 = icmp slt i32 %1001, 10
  %1007 = or i1 %1005, %1006
  br i1 %1007, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %999, %originalBB155alteredBB
  %1008 = load i32, i32* %46, align 4
  %1009 = add i32 %1008, 1
  store i32 %1009, i32* %46, align 4
  %1010 = load i32, i32* @x.97
  %1011 = load i32, i32* @y.98
  %1012 = sub i32 %1010, 1
  %1013 = mul i32 %1010, %1012
  %1014 = urem i32 %1013, 2
  %1015 = icmp eq i32 %1014, 0
  %1016 = icmp slt i32 %1011, 10
  %1017 = or i1 %1015, %1016
  br i1 %1017, label %originalBBpart2173, label %originalBB155alteredBB

originalBBpart2173:                               ; preds = %originalBB155
  br label %634

; <label>:1018:                                   ; preds = %634
  %1019 = load i32, i32* @x.97
  %1020 = load i32, i32* @y.98
  %1021 = sub i32 %1019, 1
  %1022 = mul i32 %1019, %1021
  %1023 = urem i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  %1025 = icmp slt i32 %1020, 10
  %1026 = or i1 %1024, %1025
  br i1 %1026, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %1018, %originalBB175alteredBB
  %1027 = load i32, i32* @x.97
  %1028 = load i32, i32* @y.98
  %1029 = sub i32 %1027, 1
  %1030 = mul i32 %1027, %1029
  %1031 = urem i32 %1030, 2
  %1032 = icmp eq i32 %1031, 0
  %1033 = icmp slt i32 %1028, 10
  %1034 = or i1 %1032, %1033
  br i1 %1034, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br label %1035

; <label>:1035:                                   ; preds = %originalBBpart2177
  %1036 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %22)
          to label %1037 unwind label %589

; <label>:1037:                                   ; preds = %1035
  %1038 = load i32, i32* @x.97
  %1039 = load i32, i32* @y.98
  %1040 = sub i32 %1038, 1
  %1041 = mul i32 %1038, %1040
  %1042 = urem i32 %1041, 2
  %1043 = icmp eq i32 %1042, 0
  %1044 = icmp slt i32 %1039, 10
  %1045 = or i1 %1043, %1044
  br i1 %1045, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %1037, %originalBB179alteredBB
  %1046 = load i32, i32* @x.97
  %1047 = load i32, i32* @y.98
  %1048 = sub i32 %1046, 1
  %1049 = mul i32 %1046, %1048
  %1050 = urem i32 %1049, 2
  %1051 = icmp eq i32 %1050, 0
  %1052 = icmp slt i32 %1047, 10
  %1053 = or i1 %1051, %1052
  br i1 %1053, label %originalBBpart2181, label %originalBB179alteredBB

originalBBpart2181:                               ; preds = %originalBB179
  br label %459

; <label>:1054:                                   ; preds = %463
  %1055 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %1056 = bitcast %class.MGDoFHandler* %1055 to %class.DoFHandler*
  %1057 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %1056)
          to label %1058 unwind label %589

; <label>:1058:                                   ; preds = %1054
  invoke void @_ZN13TriangulationILi3EE15load_user_flagsERKSt6vectorIbSaIbEE(%class.Triangulation* %1057, %"class.std::vector.3"* dereferenceable(40) %42)
          to label %1059 unwind label %589

; <label>:1059:                                   ; preds = %1058
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %42)
          to label %1060 unwind label %378

; <label>:1060:                                   ; preds = %1059
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %29)
          to label %1061 unwind label %1065

; <label>:1061:                                   ; preds = %1060
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %24)
          to label %1062 unwind label %306

; <label>:1062:                                   ; preds = %1061
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %19)
          to label %1063 unwind label %1089

; <label>:1063:                                   ; preds = %1062
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
  ret void

; <label>:1064:                                   ; preds = %589
  br label %1069

; <label>:1065:                                   ; preds = %1060
  %1066 = landingpad { i8*, i32 }
          cleanup
  %1067 = extractvalue { i8*, i32 } %1066, 0
  store i8* %1067, i8** %17, align 8
  %1068 = extractvalue { i8*, i32 } %1066, 1
  store i32 %1068, i32* %18, align 4
  br label %1071

; <label>:1069:                                   ; preds = %1064, %378
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %29)
          to label %1070 unwind label %1118

; <label>:1070:                                   ; preds = %1069
  br label %1071

; <label>:1071:                                   ; preds = %1070, %1065, %377
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %24)
          to label %1072 unwind label %1118

; <label>:1072:                                   ; preds = %1071
  %1073 = load i32, i32* @x.97
  %1074 = load i32, i32* @y.98
  %1075 = sub i32 %1073, 1
  %1076 = mul i32 %1073, %1075
  %1077 = urem i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  %1079 = icmp slt i32 %1074, 10
  %1080 = or i1 %1078, %1079
  br i1 %1080, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %1072, %originalBB183alteredBB
  %1081 = load i32, i32* @x.97
  %1082 = load i32, i32* @y.98
  %1083 = sub i32 %1081, 1
  %1084 = mul i32 %1081, %1083
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1082, 10
  %1088 = or i1 %1086, %1087
  br i1 %1088, label %originalBBpart2185, label %originalBB183alteredBB

originalBBpart2185:                               ; preds = %originalBB183
  br label %1093

; <label>:1089:                                   ; preds = %1062
  %1090 = landingpad { i8*, i32 }
          cleanup
  %1091 = extractvalue { i8*, i32 } %1090, 0
  store i8* %1091, i8** %17, align 8
  %1092 = extractvalue { i8*, i32 } %1090, 1
  store i32 %1092, i32* %18, align 4
  br label %1095

; <label>:1093:                                   ; preds = %originalBBpart2185, %originalBBpart240, %306
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %19)
          to label %1094 unwind label %1118

; <label>:1094:                                   ; preds = %1093
  br label %1095

; <label>:1095:                                   ; preds = %1094, %1089, %originalBBpart232
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
          to label %1096 unwind label %1118

; <label>:1096:                                   ; preds = %1095
  br label %1097

; <label>:1097:                                   ; preds = %1096, %originalBBpart228
  %1098 = load i32, i32* @x.97
  %1099 = load i32, i32* @y.98
  %1100 = sub i32 %1098, 1
  %1101 = mul i32 %1098, %1100
  %1102 = urem i32 %1101, 2
  %1103 = icmp eq i32 %1102, 0
  %1104 = icmp slt i32 %1099, 10
  %1105 = or i1 %1103, %1104
  br i1 %1105, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %1097, %originalBB187alteredBB
  %1106 = load i8*, i8** %17, align 8
  %1107 = load i32, i32* %18, align 4
  %1108 = insertvalue { i8*, i32 } undef, i8* %1106, 0
  %1109 = insertvalue { i8*, i32 } %1108, i32 %1107, 1
  %1110 = load i32, i32* @x.97
  %1111 = load i32, i32* @y.98
  %1112 = sub i32 %1110, 1
  %1113 = mul i32 %1110, %1112
  %1114 = urem i32 %1113, 2
  %1115 = icmp eq i32 %1114, 0
  %1116 = icmp slt i32 %1111, 10
  %1117 = or i1 %1115, %1116
  br i1 %1117, label %originalBBpart2189, label %originalBB187alteredBB

originalBBpart2189:                               ; preds = %originalBB187
  resume { i8*, i32 } %1109

; <label>:1118:                                   ; preds = %1095, %1093, %1071, %1069, %589, %372, %originalBBpart236
  %1119 = landingpad { i8*, i32 }
          catch i8* null
  %1120 = extractvalue { i8*, i32 } %1119, 0
  call void @__clang_call_terminate(i8* %1120) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %80
  %1121 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %1122 = load i32, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %111
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %33) #2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %147
  %1123 = bitcast %"struct.std::pair.60"* %37 to i64*
  store i64 %146, i64* %1123, align 4
  %1124 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %37, i32 0, i32 0
  %1125 = load i32, i32* %1124, align 4
  store i32 %1125, i32* %36, align 4
  %1126 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %1127 = bitcast %class.MGDoFHandler* %1126 to %class.DoFHandler*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %170
  %1128 = bitcast %class.FiniteElement* %169 to %class.FiniteElementBase*
  %1129 = load i32, i32* %35, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %190
  %1130 = bitcast %"struct.std::pair.60"* %39 to i64*
  store i64 %189, i64* %1130, align 4
  %1131 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %39, i32 0, i32 0
  %1132 = load i32, i32* %1131, align 4
  store i32 %1132, i32* %38, align 4
  %1133 = load %class.FullMatrix*, %class.FullMatrix** %9, align 8
  %1134 = bitcast %class.FullMatrix* %1133 to %class.Table*
  %1135 = load i32, i32* %36, align 4
  %1136 = load i32, i32* %38, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %218
  %1137 = load i32, i32* %34, align 4
  %1138 = zext i32 %1137 to i64
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %242
  %1139 = bitcast %"struct.std::_Bit_reference"* %40 to { i64*, i64 }*
  %1140 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1139, i32 0, i32 0
  %1141 = extractvalue { i64*, i64 } %241, 0
  store i64* %1141, i64** %1140, align 8
  %1142 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1139, i32 0, i32 1
  %1143 = extractvalue { i64*, i64 } %241, 1
  store i64 %1143, i64* %1142, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %266
  %1144 = landingpad { i8*, i32 }
          cleanup
  %1145 = extractvalue { i8*, i32 } %1144, 0
  store i8* %1145, i8** %17, align 8
  %1146 = extractvalue { i8*, i32 } %1144, 1
  store i32 %1146, i32* %18, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %286
  %1147 = landingpad { i8*, i32 }
          cleanup
  %1148 = extractvalue { i8*, i32 } %1147, 0
  store i8* %1148, i8** %17, align 8
  %1149 = extractvalue { i8*, i32 } %1147, 1
  store i32 %1149, i32* %18, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %21) #2
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %314
  %1150 = landingpad { i8*, i32 }
          cleanup
  %1151 = extractvalue { i8*, i32 } %1150, 0
  store i8* %1151, i8** %17, align 8
  %1152 = extractvalue { i8*, i32 } %1150, 1
  store i32 %1152, i32* %18, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %28) #2
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %335
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %27) #2
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %352
  %1153 = landingpad { i8*, i32 }
          cleanup
  %1154 = extractvalue { i8*, i32 } %1153, 0
  store i8* %1154, i8** %17, align 8
  %1155 = extractvalue { i8*, i32 } %1153, 1
  store i32 %1155, i32* %18, align 4
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %399
  %1156 = bitcast %"struct.std::_Bit_reference"* %41 to { i64*, i64 }*
  %1157 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1156, i32 0, i32 0
  %1158 = extractvalue { i64*, i64 } %398, 0
  store i64* %1158, i64** %1157, align 8
  %1159 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1156, i32 0, i32 1
  %1160 = extractvalue { i64*, i64 } %398, 1
  store i64 %1160, i64* %1159, align 8
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %422
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %470
  %1161 = load i32, i32* %43, align 4
  %1162 = load i32, i32* %13, align 4
  %1163 = icmp ult i32 %1161, %1162
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %490
  store i32 0, i32* %44, align 4
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %507
  %1164 = load i32, i32* %44, align 4
  %1165 = load i32, i32* %13, align 4
  %1166 = icmp ult i32 %1164, %1165
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %543
  %1167 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %7, align 8
  %1168 = bitcast %class.BlockSparsityPattern* %1167 to %class.BlockSparsityPatternBase*
  %1169 = load i32, i32* %43, align 4
  %1170 = zext i32 %1169 to i64
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %572
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %594
  %1171 = load i32, i32* %44, align 4
  %_ = sub i32 %1171, 1
  %gen = mul i32 %_, 1
  %_75 = sub i32 %1171, 1
  %gen76 = mul i32 %_75, 1
  %_77 = shl i32 %1171, 1
  %_78 = sub i32 %1171, 1
  %gen79 = mul i32 %_78, 1
  %_80 = sub i32 %1171, 1
  %gen81 = mul i32 %_80, 1
  %_82 = shl i32 %1171, 1
  %_83 = shl i32 %1171, 1
  %_84 = sub i32 0, %1171
  %gen85 = add i32 %_84, 1
  %1172 = add i32 %1171, 1
  store i32 %1172, i32* %44, align 4
  br label %originalBB74

originalBB89alteredBB:                            ; preds = %originalBB89, %613
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %670
  %1173 = bitcast %class.MGDoFCellAccessor* %669 to i8*
  %1174 = getelementptr inbounds i8, i8* %1173, i64 16
  %1175 = bitcast i8* %1174 to %class.TriaAccessor*
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %702
  %1176 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %727
  store i32 %726, i32* %49, align 4
  %1177 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %746
  %1178 = bitcast %class.MGDoFCellAccessor* %745 to %class.MGDoFObjectAccessor*
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %769
  store i32 0, i32* %51, align 4
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %805
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %822
  %1179 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %7, align 8
  %1180 = bitcast %class.BlockSparsityPattern* %1179 to %class.BlockSparsityPatternBase*
  %1181 = load i32, i32* %50, align 4
  %1182 = zext i32 %1181 to i64
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %849
  %1183 = load i32, i32* %848, align 4
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %867
  %1184 = load %class.BlockSparsityPattern*, %class.BlockSparsityPattern** %7, align 8
  %1185 = bitcast %class.BlockSparsityPattern* %1184 to %class.BlockSparsityPatternBase*
  %1186 = load i32, i32* %50, align 4
  %1187 = zext i32 %1186 to i64
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %889
  %1188 = load i32, i32* %888, align 4
  %1189 = load i32, i32* %51, align 4
  %1190 = zext i32 %1189 to i64
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %918
  %1191 = load i32, i32* %50, align 4
  %_134 = sub i32 %1191, 1
  %gen135 = mul i32 %_134, 1
  %_136 = sub i32 %1191, 1
  %gen137 = mul i32 %_136, 1
  %_138 = sub i32 0, %1191
  %gen139 = add i32 %_138, 1
  %1192 = add i32 %1191, 1
  store i32 %1192, i32* %50, align 4
  br label %originalBB133

originalBB143alteredBB:                           ; preds = %originalBB143, %937
  %1193 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %956
  %1194 = load i32, i32* %49, align 4
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %974
  %1195 = bitcast %class.TriaIterator.112* %53 to %class.TriaRawIterator.113*
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %999
  %1196 = load i32, i32* %46, align 4
  %_156 = sub i32 0, %1196
  %gen157 = add i32 %_156, 1
  %_158 = sub i32 0, %1196
  %gen159 = add i32 %_158, 1
  %_160 = sub i32 %1196, 1
  %gen161 = mul i32 %_160, 1
  %_162 = shl i32 %1196, 1
  %_163 = sub i32 0, %1196
  %gen164 = add i32 %_163, 1
  %_165 = sub i32 0, %1196
  %gen166 = add i32 %_165, 1
  %_167 = sub i32 %1196, 1
  %gen168 = mul i32 %_167, 1
  %_169 = shl i32 %1196, 1
  %_170 = sub i32 %1196, 1
  %gen171 = mul i32 %_170, 1
  %1197 = add i32 %1196, 1
  store i32 %1197, i32* %46, align 4
  br label %originalBB155

originalBB175alteredBB:                           ; preds = %originalBB175, %1018
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %1037
  br label %originalBB179

originalBB183alteredBB:                           ; preds = %originalBB183, %1072
  br label %originalBB183

originalBB187alteredBB:                           ; preds = %originalBB187, %1097
  %1198 = load i8*, i8** %17, align 8
  %1199 = load i32, i32* %18, align 4
  %1200 = insertvalue { i8*, i32 } undef, i8* %1198, 0
  %1201 = insertvalue { i8*, i32 } %1200, i32 %1199, 1
  br label %originalBB187
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools26make_flux_sparsity_patternILi3E30CompressedBlockSparsityPatternEEvRK12MGDoFHandlerIXT_EERT0_jRK10FullMatrixIdESB_(%class.MGDoFHandler* dereferenceable(168), %class.CompressedBlockSparsityPattern* dereferenceable(144), i32, %class.FullMatrix* dereferenceable(48), %class.FullMatrix* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.MGDoFHandler*, align 8
  %7 = alloca %class.CompressedBlockSparsityPattern*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.FullMatrix*, align 8
  %10 = alloca %class.FullMatrix*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::vector.12", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::allocator.14", align 1
  %17 = alloca i8*
  %18 = alloca i32
  %19 = alloca %"class.std::vector.12", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::allocator.14", align 1
  %22 = alloca %class.TriaIterator, align 8
  %23 = alloca %class.TriaIterator, align 8
  %24 = alloca %"class.std::vector.75", align 8
  %25 = alloca %"class.std::vector.3", align 8
  %26 = alloca i8, align 1
  %27 = alloca %"class.std::allocator.109", align 1
  %28 = alloca %"class.std::allocator.77", align 1
  %29 = alloca %"class.std::vector.75", align 8
  %30 = alloca %"class.std::vector.3", align 8
  %31 = alloca i8, align 1
  %32 = alloca %"class.std::allocator.109", align 1
  %33 = alloca %"class.std::allocator.77", align 1
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %"struct.std::pair.60", align 4
  %38 = alloca i32, align 4
  %39 = alloca %"struct.std::pair.60", align 4
  %40 = alloca %"struct.std::_Bit_reference", align 8
  %41 = alloca %"struct.std::_Bit_reference", align 8
  %42 = alloca %"class.std::vector.3", align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %"struct.std::_Bit_reference", align 8
  %46 = alloca i32, align 4
  %47 = alloca %class.TriaIterator.112, align 8
  %48 = alloca %class.TriaIterator, align 8
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca %"struct.std::_Bit_reference", align 8
  %53 = alloca %class.TriaIterator.112, align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %6, align 8
  store %class.CompressedBlockSparsityPattern* %1, %class.CompressedBlockSparsityPattern** %7, align 8
  store i32 %2, i32* %8, align 4
  store %class.FullMatrix* %3, %class.FullMatrix** %9, align 8
  store %class.FullMatrix* %4, %class.FullMatrix** %10, align 8
  %54 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %55 = load i32, i32* %8, align 4
  %56 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %54, i32 %55)
  store i32 %56, i32* %11, align 4
  %57 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %58 = bitcast %class.MGDoFHandler* %57 to %class.DoFHandler*
  %59 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %58)
  %60 = bitcast %class.FiniteElement* %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 24
  %62 = bitcast i8* %61 to %class.FiniteElementData*
  %63 = call i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %62)
  store i32 %63, i32* %12, align 4
  %64 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %65 = bitcast %class.MGDoFHandler* %64 to %class.DoFHandler*
  %66 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %65)
  %67 = bitcast %class.FiniteElement* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 24
  %69 = bitcast i8* %68 to %class.FiniteElementData*
  %70 = getelementptr inbounds %class.FiniteElementData, %class.FiniteElementData* %69, i32 0, i32 10
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %13, align 4
  %72 = load i32, i32* %13, align 4
  %73 = zext i32 %72 to i64
  store i32 0, i32* %15, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %16) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %14, i64 %73, i32* dereferenceable(4) %15, %"class.std::allocator.14"* dereferenceable(1) %16)
          to label %74 unwind label %250

; <label>:74:                                     ; preds = %5
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  %75 = load i32, i32* %13, align 4
  %76 = zext i32 %75 to i64
  store i32 0, i32* %20, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %21) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %19, i64 %76, i32* dereferenceable(4) %20, %"class.std::allocator.14"* dereferenceable(1) %21)
          to label %77 unwind label %270

; <label>:77:                                     ; preds = %74
  %78 = load i32, i32* @x.99
  %79 = load i32, i32* @y.100
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %77, %originalBBalteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %21) #2
  %86 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %87 = load i32, i32* %8, align 4
  %88 = load i32, i32* @x.99
  %89 = load i32, i32* @y.100
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNK12MGDoFHandlerILi3EE5beginEj(%class.TriaIterator* sret %22, %class.MGDoFHandler* %86, i32 %87)
          to label %96 unwind label %290

; <label>:96:                                     ; preds = %originalBBpart2
  %97 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %98 = load i32, i32* %8, align 4
  invoke void @_ZNK12MGDoFHandlerILi3EE3endEj(%class.TriaIterator* sret %23, %class.MGDoFHandler* %97, i32 %98)
          to label %99 unwind label %290

; <label>:99:                                     ; preds = %96
  %100 = load i32, i32* %13, align 4
  %101 = zext i32 %100 to i64
  %102 = load i32, i32* %13, align 4
  %103 = zext i32 %102 to i64
  store i8 0, i8* %26, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %27) #2
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %25, i64 %103, i8* dereferenceable(1) %26, %"class.std::allocator.109"* dereferenceable(1) %27)
          to label %104 unwind label %294

; <label>:104:                                    ; preds = %99
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %28) #2
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %24, i64 %101, %"class.std::vector.3"* dereferenceable(40) %25, %"class.std::allocator.77"* dereferenceable(1) %28)
          to label %105 unwind label %298

; <label>:105:                                    ; preds = %104
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %28) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %25)
          to label %106 unwind label %294

; <label>:106:                                    ; preds = %105
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %27) #2
  %107 = load i32, i32* %13, align 4
  %108 = zext i32 %107 to i64
  %109 = load i32, i32* %13, align 4
  %110 = zext i32 %109 to i64
  store i8 0, i8* %31, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %32) #2
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %30, i64 %110, i8* dereferenceable(1) %31, %"class.std::allocator.109"* dereferenceable(1) %32)
          to label %111 unwind label %320

; <label>:111:                                    ; preds = %106
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %33) #2
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %29, i64 %108, %"class.std::vector.3"* dereferenceable(40) %30, %"class.std::allocator.77"* dereferenceable(1) %33)
          to label %112 unwind label %324

; <label>:112:                                    ; preds = %111
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %33) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %30)
          to label %113 unwind label %320

; <label>:113:                                    ; preds = %112
  %114 = load i32, i32* @x.99
  %115 = load i32, i32* @y.100
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %113, %originalBB1alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %32) #2
  store i32 0, i32* %34, align 4
  %122 = load i32, i32* @x.99
  %123 = load i32, i32* @y.100
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %130

; <label>:130:                                    ; preds = %originalBBpart267, %originalBBpart24
  %131 = load i32, i32* %34, align 4
  %132 = load i32, i32* %13, align 4
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %134, label %463

; <label>:134:                                    ; preds = %130
  store i32 0, i32* %35, align 4
  br label %135

; <label>:135:                                    ; preds = %originalBBpart257, %134
  %136 = load i32, i32* @x.99
  %137 = load i32, i32* @y.100
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %135, %originalBB6alteredBB
  %144 = load i32, i32* %35, align 4
  %145 = load i32, i32* %13, align 4
  %146 = icmp ult i32 %144, %145
  %147 = load i32, i32* @x.99
  %148 = load i32, i32* @y.100
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %146, label %155, label %443

; <label>:155:                                    ; preds = %originalBBpart28
  %156 = load i32, i32* @x.99
  %157 = load i32, i32* @y.100
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %155, %originalBB10alteredBB
  %164 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %165 = bitcast %class.MGDoFHandler* %164 to %class.DoFHandler*
  %166 = load i32, i32* @x.99
  %167 = load i32, i32* @y.100
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %174 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %165)
          to label %175 unwind label %362

; <label>:175:                                    ; preds = %originalBBpart212
  %176 = load i32, i32* @x.99
  %177 = load i32, i32* @y.100
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %175, %originalBB14alteredBB
  %184 = bitcast %class.FiniteElement* %174 to %class.FiniteElementBase*
  %185 = load i32, i32* %34, align 4
  %186 = load i32, i32* @x.99
  %187 = load i32, i32* @y.100
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %194 = invoke i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase* %184, i32 %185)
          to label %195 unwind label %362

; <label>:195:                                    ; preds = %originalBBpart216
  %196 = load i32, i32* @x.99
  %197 = load i32, i32* @y.100
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %195, %originalBB18alteredBB
  %204 = bitcast %"struct.std::pair.60"* %37 to i64*
  store i64 %194, i64* %204, align 4
  %205 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %37, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %36, align 4
  %207 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %208 = bitcast %class.MGDoFHandler* %207 to %class.DoFHandler*
  %209 = load i32, i32* @x.99
  %210 = load i32, i32* @y.100
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %217 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %208)
          to label %218 unwind label %362

; <label>:218:                                    ; preds = %originalBBpart220
  %219 = bitcast %class.FiniteElement* %217 to %class.FiniteElementBase*
  %220 = load i32, i32* %35, align 4
  %221 = invoke i64 @_ZNK17FiniteElementBaseILi3EE25system_to_component_indexEj(%class.FiniteElementBase* %219, i32 %220)
          to label %222 unwind label %362

; <label>:222:                                    ; preds = %218
  %223 = bitcast %"struct.std::pair.60"* %39 to i64*
  store i64 %221, i64* %223, align 4
  %224 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %39, i32 0, i32 0
  %225 = load i32, i32* %224, align 4
  store i32 %225, i32* %38, align 4
  %226 = load %class.FullMatrix*, %class.FullMatrix** %9, align 8
  %227 = bitcast %class.FullMatrix* %226 to %class.Table*
  %228 = load i32, i32* %36, align 4
  %229 = load i32, i32* %38, align 4
  %230 = invoke dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table* %227, i32 %228, i32 %229)
          to label %231 unwind label %362

; <label>:231:                                    ; preds = %222
  %232 = load double, double* %230, align 8
  %233 = fcmp une double %232, 0.000000e+00
  br i1 %233, label %234, label %366

; <label>:234:                                    ; preds = %231
  %235 = load i32, i32* %34, align 4
  %236 = zext i32 %235 to i64
  %237 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %24, i64 %236)
          to label %238 unwind label %362

; <label>:238:                                    ; preds = %234
  %239 = load i32, i32* %35, align 4
  %240 = zext i32 %239 to i64
  %241 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %237, i64 %240)
          to label %242 unwind label %362

; <label>:242:                                    ; preds = %238
  %243 = bitcast %"struct.std::_Bit_reference"* %40 to { i64*, i64 }*
  %244 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %243, i32 0, i32 0
  %245 = extractvalue { i64*, i64 } %241, 0
  store i64* %245, i64** %244, align 8
  %246 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %243, i32 0, i32 1
  %247 = extractvalue { i64*, i64 } %241, 1
  store i64 %247, i64* %246, align 8
  %248 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %40, i1 zeroext true)
          to label %249 unwind label %362

; <label>:249:                                    ; preds = %242
  br label %366

; <label>:250:                                    ; preds = %5
  %251 = load i32, i32* @x.99
  %252 = load i32, i32* @y.100
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %250, %originalBB22alteredBB
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %17, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %18, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  %262 = load i32, i32* @x.99
  %263 = load i32, i32* @y.100
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %1209

; <label>:270:                                    ; preds = %74
  %271 = load i32, i32* @x.99
  %272 = load i32, i32* @y.100
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %270, %originalBB26alteredBB
  %279 = landingpad { i8*, i32 }
          cleanup
  %280 = extractvalue { i8*, i32 } %279, 0
  store i8* %280, i8** %17, align 8
  %281 = extractvalue { i8*, i32 } %279, 1
  store i32 %281, i32* %18, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %21) #2
  %282 = load i32, i32* @x.99
  %283 = load i32, i32* @y.100
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %1191

; <label>:290:                                    ; preds = %1077, %96, %originalBBpart2
  %291 = landingpad { i8*, i32 }
          cleanup
  %292 = extractvalue { i8*, i32 } %291, 0
  store i8* %292, i8** %17, align 8
  %293 = extractvalue { i8*, i32 } %291, 1
  store i32 %293, i32* %18, align 4
  br label %1173

; <label>:294:                                    ; preds = %105, %99
  %295 = landingpad { i8*, i32 }
          cleanup
  %296 = extractvalue { i8*, i32 } %295, 0
  store i8* %296, i8** %17, align 8
  %297 = extractvalue { i8*, i32 } %295, 1
  store i32 %297, i32* %18, align 4
  br label %319

; <label>:298:                                    ; preds = %104
  %299 = landingpad { i8*, i32 }
          cleanup
  %300 = extractvalue { i8*, i32 } %299, 0
  store i8* %300, i8** %17, align 8
  %301 = extractvalue { i8*, i32 } %299, 1
  store i32 %301, i32* %18, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %28) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %25)
          to label %302 unwind label %1230

; <label>:302:                                    ; preds = %298
  %303 = load i32, i32* @x.99
  %304 = load i32, i32* @y.100
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %302, %originalBB30alteredBB
  %311 = load i32, i32* @x.99
  %312 = load i32, i32* @y.100
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %319

; <label>:319:                                    ; preds = %originalBBpart232, %294
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %27) #2
  br label %1173

; <label>:320:                                    ; preds = %112, %106
  %321 = landingpad { i8*, i32 }
          cleanup
  %322 = extractvalue { i8*, i32 } %321, 0
  store i8* %322, i8** %17, align 8
  %323 = extractvalue { i8*, i32 } %321, 1
  store i32 %323, i32* %18, align 4
  br label %345

; <label>:324:                                    ; preds = %111
  %325 = landingpad { i8*, i32 }
          cleanup
  %326 = extractvalue { i8*, i32 } %325, 0
  store i8* %326, i8** %17, align 8
  %327 = extractvalue { i8*, i32 } %325, 1
  store i32 %327, i32* %18, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %33) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %30)
          to label %328 unwind label %1230

; <label>:328:                                    ; preds = %324
  %329 = load i32, i32* @x.99
  %330 = load i32, i32* @y.100
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %328, %originalBB34alteredBB
  %337 = load i32, i32* @x.99
  %338 = load i32, i32* @y.100
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %345

; <label>:345:                                    ; preds = %originalBBpart236, %320
  %346 = load i32, i32* @x.99
  %347 = load i32, i32* @y.100
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %345, %originalBB38alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %32) #2
  %354 = load i32, i32* @x.99
  %355 = load i32, i32* @y.100
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %1135

; <label>:362:                                    ; preds = %originalBBpart2159, %463, %originalBBpart244, %379, %375, %366, %242, %238, %234, %222, %218, %originalBBpart220, %originalBBpart216, %originalBBpart212
  %363 = landingpad { i8*, i32 }
          cleanup
  %364 = extractvalue { i8*, i32 } %363, 0
  store i8* %364, i8** %17, align 8
  %365 = extractvalue { i8*, i32 } %363, 1
  store i32 %365, i32* %18, align 4
  br label %1117

; <label>:366:                                    ; preds = %249, %231
  %367 = load %class.FullMatrix*, %class.FullMatrix** %10, align 8
  %368 = bitcast %class.FullMatrix* %367 to %class.Table*
  %369 = load i32, i32* %36, align 4
  %370 = load i32, i32* %38, align 4
  %371 = invoke dereferenceable(8) double* @_ZNK5TableILi2EdEclEjj(%class.Table* %368, i32 %369, i32 %370)
          to label %372 unwind label %362

; <label>:372:                                    ; preds = %366
  %373 = load double, double* %371, align 8
  %374 = fcmp une double %373, 0.000000e+00
  br i1 %374, label %375, label %423

; <label>:375:                                    ; preds = %372
  %376 = load i32, i32* %34, align 4
  %377 = zext i32 %376 to i64
  %378 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %29, i64 %377)
          to label %379 unwind label %362

; <label>:379:                                    ; preds = %375
  %380 = load i32, i32* %35, align 4
  %381 = zext i32 %380 to i64
  %382 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %378, i64 %381)
          to label %383 unwind label %362

; <label>:383:                                    ; preds = %379
  %384 = load i32, i32* @x.99
  %385 = load i32, i32* @y.100
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %383, %originalBB42alteredBB
  %392 = bitcast %"struct.std::_Bit_reference"* %41 to { i64*, i64 }*
  %393 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %392, i32 0, i32 0
  %394 = extractvalue { i64*, i64 } %382, 0
  store i64* %394, i64** %393, align 8
  %395 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %392, i32 0, i32 1
  %396 = extractvalue { i64*, i64 } %382, 1
  store i64 %396, i64* %395, align 8
  %397 = load i32, i32* @x.99
  %398 = load i32, i32* @y.100
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  %405 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %41, i1 zeroext true)
          to label %406 unwind label %362

; <label>:406:                                    ; preds = %originalBBpart244
  %407 = load i32, i32* @x.99
  %408 = load i32, i32* @y.100
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %406, %originalBB46alteredBB
  %415 = load i32, i32* @x.99
  %416 = load i32, i32* @y.100
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %423

; <label>:423:                                    ; preds = %originalBBpart248, %372
  br label %424

; <label>:424:                                    ; preds = %423
  %425 = load i32, i32* @x.99
  %426 = load i32, i32* @y.100
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %424, %originalBB50alteredBB
  %433 = load i32, i32* %35, align 4
  %434 = add i32 %433, 1
  store i32 %434, i32* %35, align 4
  %435 = load i32, i32* @x.99
  %436 = load i32, i32* @y.100
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBBpart257, label %originalBB50alteredBB

originalBBpart257:                                ; preds = %originalBB50
  br label %135

; <label>:443:                                    ; preds = %originalBBpart28
  br label %444

; <label>:444:                                    ; preds = %443
  %445 = load i32, i32* @x.99
  %446 = load i32, i32* @y.100
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %444, %originalBB59alteredBB
  %453 = load i32, i32* %34, align 4
  %454 = add i32 %453, 1
  store i32 %454, i32* %34, align 4
  %455 = load i32, i32* @x.99
  %456 = load i32, i32* @y.100
  %457 = sub i32 %455, 1
  %458 = mul i32 %455, %457
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %460, %461
  br i1 %462, label %originalBBpart267, label %originalBB59alteredBB

originalBBpart267:                                ; preds = %originalBB59
  br label %130

; <label>:463:                                    ; preds = %130
  invoke void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.3"* %42)
          to label %464 unwind label %362

; <label>:464:                                    ; preds = %463
  %465 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %466 = bitcast %class.MGDoFHandler* %465 to %class.DoFHandler*
  %467 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %466)
          to label %468 unwind label %621

; <label>:468:                                    ; preds = %464
  invoke void @_ZNK13TriangulationILi3EE15save_user_flagsERSt6vectorIbSaIbEE(%class.Triangulation* %467, %"class.std::vector.3"* dereferenceable(40) %42)
          to label %469 unwind label %621

; <label>:469:                                    ; preds = %468
  %470 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %471 = bitcast %class.MGDoFHandler* %470 to %class.DoFHandler*
  %472 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %471)
          to label %473 unwind label %621

; <label>:473:                                    ; preds = %469
  %474 = load i32, i32* @x.99
  %475 = load i32, i32* @y.100
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %473, %originalBB69alteredBB
  %482 = load i32, i32* @x.99
  %483 = load i32, i32* @y.100
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  invoke void @_ZN13TriangulationILi3EE16clear_user_flagsEv(%class.Triangulation* %472)
          to label %490 unwind label %621

; <label>:490:                                    ; preds = %originalBBpart271
  br label %491

; <label>:491:                                    ; preds = %originalBBpart2155, %490
  %492 = load i32, i32* @x.99
  %493 = load i32, i32* @y.100
  %494 = sub i32 %492, 1
  %495 = mul i32 %492, %494
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %497, %498
  br i1 %499, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %491, %originalBB73alteredBB
  %500 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %501 = bitcast %class.TriaIterator* %23 to %class.TriaRawIterator*
  %502 = load i32, i32* @x.99
  %503 = load i32, i32* @y.100
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  %510 = invoke zeroext i1 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEneERKS2_(%class.TriaRawIterator* %500, %class.TriaRawIterator* dereferenceable(32) %501)
          to label %511 unwind label %621

; <label>:511:                                    ; preds = %originalBBpart275
  br i1 %510, label %512, label %1038

; <label>:512:                                    ; preds = %511
  %513 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %514 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %513)
          to label %515 unwind label %621

; <label>:515:                                    ; preds = %512
  %516 = bitcast %class.MGDoFCellAccessor* %514 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %516, %"class.std::vector.12"* dereferenceable(24) %14)
          to label %517 unwind label %621

; <label>:517:                                    ; preds = %515
  store i32 0, i32* %43, align 4
  br label %518

; <label>:518:                                    ; preds = %630, %517
  %519 = load i32, i32* @x.99
  %520 = load i32, i32* @y.100
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %518, %originalBB77alteredBB
  %527 = load i32, i32* %43, align 4
  %528 = load i32, i32* %13, align 4
  %529 = icmp ult i32 %527, %528
  %530 = load i32, i32* @x.99
  %531 = load i32, i32* @y.100
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br i1 %529, label %538, label %633

; <label>:538:                                    ; preds = %originalBBpart279
  %539 = load i32, i32* @x.99
  %540 = load i32, i32* @y.100
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %538, %originalBB81alteredBB
  store i32 0, i32* %44, align 4
  %547 = load i32, i32* @x.99
  %548 = load i32, i32* @y.100
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %555

; <label>:555:                                    ; preds = %626, %originalBBpart283
  %556 = load i32, i32* %44, align 4
  %557 = load i32, i32* %13, align 4
  %558 = icmp ult i32 %556, %557
  br i1 %558, label %559, label %629

; <label>:559:                                    ; preds = %555
  %560 = load i32, i32* %43, align 4
  %561 = zext i32 %560 to i64
  %562 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %24, i64 %561)
          to label %563 unwind label %621

; <label>:563:                                    ; preds = %559
  %564 = load i32, i32* %44, align 4
  %565 = zext i32 %564 to i64
  %566 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %562, i64 %565)
          to label %567 unwind label %621

; <label>:567:                                    ; preds = %563
  %568 = bitcast %"struct.std::_Bit_reference"* %45 to { i64*, i64 }*
  %569 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %568, i32 0, i32 0
  %570 = extractvalue { i64*, i64 } %566, 0
  store i64* %570, i64** %569, align 8
  %571 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %568, i32 0, i32 1
  %572 = extractvalue { i64*, i64 } %566, 1
  store i64 %572, i64* %571, align 8
  %573 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %45)
          to label %574 unwind label %621

; <label>:574:                                    ; preds = %567
  %575 = load i32, i32* @x.99
  %576 = load i32, i32* @y.100
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %574, %originalBB85alteredBB
  %583 = load i32, i32* @x.99
  %584 = load i32, i32* @y.100
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %573, label %591, label %625

; <label>:591:                                    ; preds = %originalBBpart287
  %592 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %7, align 8
  %593 = bitcast %class.CompressedBlockSparsityPattern* %592 to %class.BlockSparsityPatternBase.103*
  %594 = load i32, i32* %43, align 4
  %595 = zext i32 %594 to i64
  %596 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %595)
          to label %597 unwind label %621

; <label>:597:                                    ; preds = %591
  %598 = load i32, i32* %596, align 4
  %599 = load i32, i32* %44, align 4
  %600 = zext i32 %599 to i64
  %601 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %600)
          to label %602 unwind label %621

; <label>:602:                                    ; preds = %597
  %603 = load i32, i32* @x.99
  %604 = load i32, i32* @y.100
  %605 = sub i32 %603, 1
  %606 = mul i32 %603, %605
  %607 = urem i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %604, 10
  %610 = or i1 %608, %609
  br i1 %610, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %602, %originalBB89alteredBB
  %611 = load i32, i32* %601, align 4
  %612 = load i32, i32* @x.99
  %613 = load i32, i32* @y.100
  %614 = sub i32 %612, 1
  %615 = mul i32 %612, %614
  %616 = urem i32 %615, 2
  %617 = icmp eq i32 %616, 0
  %618 = icmp slt i32 %613, 10
  %619 = or i1 %617, %618
  br i1 %619, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  invoke void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103* %593, i32 %598, i32 %611)
          to label %620 unwind label %621

; <label>:620:                                    ; preds = %originalBBpart291
  br label %625

; <label>:621:                                    ; preds = %1042, %1038, %1019, %1009, %originalBBpart2151, %988, %originalBBpart2147, %926, %921, %915, %originalBBpart2135, %892, %886, %878, %originalBBpart2131, %854, %826, %823, %originalBBpart2123, %798, %originalBBpart2119, %771, %originalBBpart2115, %747, %745, %742, %originalBBpart2111, %716, %693, %originalBBpart2103, %originalBBpart299, %653, %originalBBpart291, %597, %591, %567, %563, %559, %515, %512, %originalBBpart275, %originalBBpart271, %469, %468, %464
  %622 = landingpad { i8*, i32 }
          cleanup
  %623 = extractvalue { i8*, i32 } %622, 0
  store i8* %623, i8** %17, align 8
  %624 = extractvalue { i8*, i32 } %622, 1
  store i32 %624, i32* %18, align 4
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %42)
          to label %1080 unwind label %1230

; <label>:625:                                    ; preds = %620, %originalBBpart287
  br label %626

; <label>:626:                                    ; preds = %625
  %627 = load i32, i32* %44, align 4
  %628 = add i32 %627, 1
  store i32 %628, i32* %44, align 4
  br label %555

; <label>:629:                                    ; preds = %555
  br label %630

; <label>:630:                                    ; preds = %629
  %631 = load i32, i32* %43, align 4
  %632 = add i32 %631, 1
  store i32 %632, i32* %43, align 4
  br label %518

; <label>:633:                                    ; preds = %originalBBpart279
  %634 = load i32, i32* @x.99
  %635 = load i32, i32* @y.100
  %636 = sub i32 %634, 1
  %637 = mul i32 %634, %636
  %638 = urem i32 %637, 2
  %639 = icmp eq i32 %638, 0
  %640 = icmp slt i32 %635, 10
  %641 = or i1 %639, %640
  br i1 %641, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %633, %originalBB93alteredBB
  store i32 0, i32* %46, align 4
  %642 = load i32, i32* @x.99
  %643 = load i32, i32* @y.100
  %644 = sub i32 %642, 1
  %645 = mul i32 %642, %644
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %643, 10
  %649 = or i1 %647, %648
  br i1 %649, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %650

; <label>:650:                                    ; preds = %1015, %originalBBpart295
  %651 = load i32, i32* %46, align 4
  %652 = icmp ult i32 %651, 6
  br i1 %652, label %653, label %1018

; <label>:653:                                    ; preds = %650
  %654 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %655 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %654)
          to label %656 unwind label %621

; <label>:656:                                    ; preds = %653
  %657 = load i32, i32* @x.99
  %658 = load i32, i32* @y.100
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %656, %originalBB97alteredBB
  %665 = load i32, i32* %46, align 4
  %666 = load i32, i32* @x.99
  %667 = load i32, i32* @y.100
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  invoke void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret %47, %class.MGDoFCellAccessor* %655, i32 %665)
          to label %674 unwind label %621

; <label>:674:                                    ; preds = %originalBBpart299
  %675 = load i32, i32* @x.99
  %676 = load i32, i32* @y.100
  %677 = sub i32 %675, 1
  %678 = mul i32 %675, %677
  %679 = urem i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = icmp slt i32 %676, 10
  %682 = or i1 %680, %681
  br i1 %682, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %674, %originalBB101alteredBB
  %683 = bitcast %class.TriaIterator.112* %47 to %class.TriaRawIterator.113*
  %684 = load i32, i32* @x.99
  %685 = load i32, i32* @y.100
  %686 = sub i32 %684, 1
  %687 = mul i32 %684, %686
  %688 = urem i32 %687, 2
  %689 = icmp eq i32 %688, 0
  %690 = icmp slt i32 %685, 10
  %691 = or i1 %689, %690
  br i1 %691, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  %692 = invoke %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113* %683)
          to label %693 unwind label %621

; <label>:693:                                    ; preds = %originalBBpart2103
  %694 = bitcast %class.MGDoFObjectAccessor.115* %692 to i8*
  %695 = getelementptr inbounds i8, i8* %694, i64 16
  %696 = bitcast i8* %695 to %class.TriaObjectAccessor.117*
  %697 = invoke zeroext i1 @_ZNK18TriaObjectAccessorILi2ELi3EE13user_flag_setEv(%class.TriaObjectAccessor.117* %696)
          to label %698 unwind label %621

; <label>:698:                                    ; preds = %693
  br i1 %697, label %699, label %716

; <label>:699:                                    ; preds = %698
  %700 = load i32, i32* @x.99
  %701 = load i32, i32* @y.100
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %699, %originalBB105alteredBB
  %708 = load i32, i32* @x.99
  %709 = load i32, i32* @y.100
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %1015

; <label>:716:                                    ; preds = %698
  %717 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %718 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %717)
          to label %719 unwind label %621

; <label>:719:                                    ; preds = %716
  %720 = load i32, i32* @x.99
  %721 = load i32, i32* @y.100
  %722 = sub i32 %720, 1
  %723 = mul i32 %720, %722
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %721, 10
  %727 = or i1 %725, %726
  br i1 %727, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %719, %originalBB109alteredBB
  %728 = bitcast %class.MGDoFCellAccessor* %718 to i8*
  %729 = getelementptr inbounds i8, i8* %728, i64 16
  %730 = bitcast i8* %729 to %class.CellAccessor*
  %731 = load i32, i32* %46, align 4
  %732 = load i32, i32* @x.99
  %733 = load i32, i32* @y.100
  %734 = sub i32 %732, 1
  %735 = mul i32 %732, %734
  %736 = urem i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = icmp slt i32 %733, 10
  %739 = or i1 %737, %738
  br i1 %739, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  %740 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE11at_boundaryEj(%class.CellAccessor* %730, i32 %731)
          to label %741 unwind label %621

; <label>:741:                                    ; preds = %originalBBpart2111
  br i1 %740, label %1014, label %742

; <label>:742:                                    ; preds = %741
  %743 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %744 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %743)
          to label %745 unwind label %621

; <label>:745:                                    ; preds = %742
  %746 = load i32, i32* %46, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE8neighborEj(%class.TriaIterator* sret %48, %class.MGDoFCellAccessor* %744, i32 %746)
          to label %747 unwind label %621

; <label>:747:                                    ; preds = %745
  %748 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  %749 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %748)
          to label %750 unwind label %621

; <label>:750:                                    ; preds = %747
  %751 = load i32, i32* @x.99
  %752 = load i32, i32* @y.100
  %753 = sub i32 %751, 1
  %754 = mul i32 %751, %753
  %755 = urem i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = icmp slt i32 %752, 10
  %758 = or i1 %756, %757
  br i1 %758, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %750, %originalBB113alteredBB
  %759 = bitcast %class.MGDoFCellAccessor* %749 to i8*
  %760 = getelementptr inbounds i8, i8* %759, i64 16
  %761 = bitcast i8* %760 to %class.TriaAccessor*
  %762 = load i32, i32* @x.99
  %763 = load i32, i32* @y.100
  %764 = sub i32 %762, 1
  %765 = mul i32 %762, %764
  %766 = urem i32 %765, 2
  %767 = icmp eq i32 %766, 0
  %768 = icmp slt i32 %763, 10
  %769 = or i1 %767, %768
  br i1 %769, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  %770 = invoke i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor* %761)
          to label %771 unwind label %621

; <label>:771:                                    ; preds = %originalBBpart2115
  %772 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %773 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %772)
          to label %774 unwind label %621

; <label>:774:                                    ; preds = %771
  %775 = load i32, i32* @x.99
  %776 = load i32, i32* @y.100
  %777 = sub i32 %775, 1
  %778 = mul i32 %775, %777
  %779 = urem i32 %778, 2
  %780 = icmp eq i32 %779, 0
  %781 = icmp slt i32 %776, 10
  %782 = or i1 %780, %781
  br i1 %782, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %774, %originalBB117alteredBB
  %783 = bitcast %class.MGDoFCellAccessor* %773 to i8*
  %784 = getelementptr inbounds i8, i8* %783, i64 16
  %785 = bitcast i8* %784 to %class.TriaAccessor*
  %786 = load i32, i32* @x.99
  %787 = load i32, i32* @y.100
  %788 = sub i32 %786, 1
  %789 = mul i32 %786, %788
  %790 = urem i32 %789, 2
  %791 = icmp eq i32 %790, 0
  %792 = icmp slt i32 %787, 10
  %793 = or i1 %791, %792
  br i1 %793, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  %794 = invoke i32 @_ZNK12TriaAccessorILi3EE5levelEv(%class.TriaAccessor* %785)
          to label %795 unwind label %621

; <label>:795:                                    ; preds = %originalBBpart2119
  %796 = icmp slt i32 %770, %794
  br i1 %796, label %797, label %798

; <label>:797:                                    ; preds = %795
  br label %1015

; <label>:798:                                    ; preds = %795
  %799 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %800 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %799)
          to label %801 unwind label %621

; <label>:801:                                    ; preds = %798
  %802 = load i32, i32* @x.99
  %803 = load i32, i32* @y.100
  %804 = sub i32 %802, 1
  %805 = mul i32 %802, %804
  %806 = urem i32 %805, 2
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %803, 10
  %809 = or i1 %807, %808
  br i1 %809, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %801, %originalBB121alteredBB
  %810 = bitcast %class.MGDoFCellAccessor* %800 to i8*
  %811 = getelementptr inbounds i8, i8* %810, i64 16
  %812 = bitcast i8* %811 to %class.CellAccessor*
  %813 = load i32, i32* %46, align 4
  %814 = load i32, i32* @x.99
  %815 = load i32, i32* @y.100
  %816 = sub i32 %814, 1
  %817 = mul i32 %814, %816
  %818 = urem i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = icmp slt i32 %815, 10
  %821 = or i1 %819, %820
  br i1 %821, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  %822 = invoke i32 @_ZNK12CellAccessorILi3EE20neighbor_of_neighborEj(%class.CellAccessor* %812, i32 %813)
          to label %823 unwind label %621

; <label>:823:                                    ; preds = %originalBBpart2123
  store i32 %822, i32* %49, align 4
  %824 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  %825 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %824)
          to label %826 unwind label %621

; <label>:826:                                    ; preds = %823
  %827 = bitcast %class.MGDoFCellAccessor* %825 to %class.MGDoFObjectAccessor*
  invoke void @_ZNK19MGDoFObjectAccessorILi3ELi3EE18get_mg_dof_indicesERSt6vectorIjSaIjEE(%class.MGDoFObjectAccessor* %827, %"class.std::vector.12"* dereferenceable(24) %19)
          to label %828 unwind label %621

; <label>:828:                                    ; preds = %826
  %829 = load i32, i32* @x.99
  %830 = load i32, i32* @y.100
  %831 = sub i32 %829, 1
  %832 = mul i32 %829, %831
  %833 = urem i32 %832, 2
  %834 = icmp eq i32 %833, 0
  %835 = icmp slt i32 %830, 10
  %836 = or i1 %834, %835
  br i1 %836, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %828, %originalBB125alteredBB
  store i32 0, i32* %50, align 4
  %837 = load i32, i32* @x.99
  %838 = load i32, i32* @y.100
  %839 = sub i32 %837, 1
  %840 = mul i32 %837, %839
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %838, 10
  %844 = or i1 %842, %843
  br i1 %844, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %845

; <label>:845:                                    ; preds = %966, %originalBBpart2127
  %846 = load i32, i32* %50, align 4
  %847 = load i32, i32* %13, align 4
  %848 = icmp ult i32 %846, %847
  br i1 %848, label %849, label %969

; <label>:849:                                    ; preds = %845
  store i32 0, i32* %51, align 4
  br label %850

; <label>:850:                                    ; preds = %946, %849
  %851 = load i32, i32* %51, align 4
  %852 = load i32, i32* %13, align 4
  %853 = icmp ult i32 %851, %852
  br i1 %853, label %854, label %949

; <label>:854:                                    ; preds = %850
  %855 = load i32, i32* %50, align 4
  %856 = zext i32 %855 to i64
  %857 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %29, i64 %856)
          to label %858 unwind label %621

; <label>:858:                                    ; preds = %854
  %859 = load i32, i32* @x.99
  %860 = load i32, i32* @y.100
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %858, %originalBB129alteredBB
  %867 = load i32, i32* %51, align 4
  %868 = zext i32 %867 to i64
  %869 = load i32, i32* @x.99
  %870 = load i32, i32* @y.100
  %871 = sub i32 %869, 1
  %872 = mul i32 %869, %871
  %873 = urem i32 %872, 2
  %874 = icmp eq i32 %873, 0
  %875 = icmp slt i32 %870, 10
  %876 = or i1 %874, %875
  br i1 %876, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  %877 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %857, i64 %868)
          to label %878 unwind label %621

; <label>:878:                                    ; preds = %originalBBpart2131
  %879 = bitcast %"struct.std::_Bit_reference"* %52 to { i64*, i64 }*
  %880 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %879, i32 0, i32 0
  %881 = extractvalue { i64*, i64 } %877, 0
  store i64* %881, i64** %880, align 8
  %882 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %879, i32 0, i32 1
  %883 = extractvalue { i64*, i64 } %877, 1
  store i64 %883, i64* %882, align 8
  %884 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %52)
          to label %885 unwind label %621

; <label>:885:                                    ; preds = %878
  br i1 %884, label %886, label %929

; <label>:886:                                    ; preds = %885
  %887 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %7, align 8
  %888 = bitcast %class.CompressedBlockSparsityPattern* %887 to %class.BlockSparsityPatternBase.103*
  %889 = load i32, i32* %50, align 4
  %890 = zext i32 %889 to i64
  %891 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %890)
          to label %892 unwind label %621

; <label>:892:                                    ; preds = %886
  %893 = load i32, i32* %891, align 4
  %894 = load i32, i32* %51, align 4
  %895 = zext i32 %894 to i64
  %896 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %19, i64 %895)
          to label %897 unwind label %621

; <label>:897:                                    ; preds = %892
  %898 = load i32, i32* @x.99
  %899 = load i32, i32* @y.100
  %900 = sub i32 %898, 1
  %901 = mul i32 %898, %900
  %902 = urem i32 %901, 2
  %903 = icmp eq i32 %902, 0
  %904 = icmp slt i32 %899, 10
  %905 = or i1 %903, %904
  br i1 %905, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %897, %originalBB133alteredBB
  %906 = load i32, i32* %896, align 4
  %907 = load i32, i32* @x.99
  %908 = load i32, i32* @y.100
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  invoke void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103* %888, i32 %893, i32 %906)
          to label %915 unwind label %621

; <label>:915:                                    ; preds = %originalBBpart2135
  %916 = load %class.CompressedBlockSparsityPattern*, %class.CompressedBlockSparsityPattern** %7, align 8
  %917 = bitcast %class.CompressedBlockSparsityPattern* %916 to %class.BlockSparsityPatternBase.103*
  %918 = load i32, i32* %50, align 4
  %919 = zext i32 %918 to i64
  %920 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %19, i64 %919)
          to label %921 unwind label %621

; <label>:921:                                    ; preds = %915
  %922 = load i32, i32* %920, align 4
  %923 = load i32, i32* %51, align 4
  %924 = zext i32 %923 to i64
  %925 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %14, i64 %924)
          to label %926 unwind label %621

; <label>:926:                                    ; preds = %921
  %927 = load i32, i32* %925, align 4
  invoke void @_ZN24BlockSparsityPatternBaseI25CompressedSparsityPatternE3addEjj(%class.BlockSparsityPatternBase.103* %917, i32 %922, i32 %927)
          to label %928 unwind label %621

; <label>:928:                                    ; preds = %926
  br label %929

; <label>:929:                                    ; preds = %928, %885
  %930 = load i32, i32* @x.99
  %931 = load i32, i32* @y.100
  %932 = sub i32 %930, 1
  %933 = mul i32 %930, %932
  %934 = urem i32 %933, 2
  %935 = icmp eq i32 %934, 0
  %936 = icmp slt i32 %931, 10
  %937 = or i1 %935, %936
  br i1 %937, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %929, %originalBB137alteredBB
  %938 = load i32, i32* @x.99
  %939 = load i32, i32* @y.100
  %940 = sub i32 %938, 1
  %941 = mul i32 %938, %940
  %942 = urem i32 %941, 2
  %943 = icmp eq i32 %942, 0
  %944 = icmp slt i32 %939, 10
  %945 = or i1 %943, %944
  br i1 %945, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %946

; <label>:946:                                    ; preds = %originalBBpart2139
  %947 = load i32, i32* %51, align 4
  %948 = add i32 %947, 1
  store i32 %948, i32* %51, align 4
  br label %850

; <label>:949:                                    ; preds = %850
  %950 = load i32, i32* @x.99
  %951 = load i32, i32* @y.100
  %952 = sub i32 %950, 1
  %953 = mul i32 %950, %952
  %954 = urem i32 %953, 2
  %955 = icmp eq i32 %954, 0
  %956 = icmp slt i32 %951, 10
  %957 = or i1 %955, %956
  br i1 %957, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %949, %originalBB141alteredBB
  %958 = load i32, i32* @x.99
  %959 = load i32, i32* @y.100
  %960 = sub i32 %958, 1
  %961 = mul i32 %958, %960
  %962 = urem i32 %961, 2
  %963 = icmp eq i32 %962, 0
  %964 = icmp slt i32 %959, 10
  %965 = or i1 %963, %964
  br i1 %965, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br label %966

; <label>:966:                                    ; preds = %originalBBpart2143
  %967 = load i32, i32* %50, align 4
  %968 = add i32 %967, 1
  store i32 %968, i32* %50, align 4
  br label %845

; <label>:969:                                    ; preds = %845
  %970 = load i32, i32* @x.99
  %971 = load i32, i32* @y.100
  %972 = sub i32 %970, 1
  %973 = mul i32 %970, %972
  %974 = urem i32 %973, 2
  %975 = icmp eq i32 %974, 0
  %976 = icmp slt i32 %971, 10
  %977 = or i1 %975, %976
  br i1 %977, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %969, %originalBB145alteredBB
  %978 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  %979 = load i32, i32* @x.99
  %980 = load i32, i32* @y.100
  %981 = sub i32 %979, 1
  %982 = mul i32 %979, %981
  %983 = urem i32 %982, 2
  %984 = icmp eq i32 %983, 0
  %985 = icmp slt i32 %980, 10
  %986 = or i1 %984, %985
  br i1 %986, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  %987 = invoke %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEptEv(%class.TriaRawIterator* %978)
          to label %988 unwind label %621

; <label>:988:                                    ; preds = %originalBBpart2147
  %989 = load i32, i32* %49, align 4
  invoke void @_ZNK17MGDoFCellAccessorILi3EE4faceEj(%class.TriaIterator.112* sret %53, %class.MGDoFCellAccessor* %987, i32 %989)
          to label %990 unwind label %621

; <label>:990:                                    ; preds = %988
  %991 = load i32, i32* @x.99
  %992 = load i32, i32* @y.100
  %993 = sub i32 %991, 1
  %994 = mul i32 %991, %993
  %995 = urem i32 %994, 2
  %996 = icmp eq i32 %995, 0
  %997 = icmp slt i32 %992, 10
  %998 = or i1 %996, %997
  br i1 %998, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %990, %originalBB149alteredBB
  %999 = bitcast %class.TriaIterator.112* %53 to %class.TriaRawIterator.113*
  %1000 = load i32, i32* @x.99
  %1001 = load i32, i32* @y.100
  %1002 = sub i32 %1000, 1
  %1003 = mul i32 %1000, %1002
  %1004 = urem i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  %1006 = icmp slt i32 %1001, 10
  %1007 = or i1 %1005, %1006
  br i1 %1007, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  %1008 = invoke %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.113* %999)
          to label %1009 unwind label %621

; <label>:1009:                                   ; preds = %originalBBpart2151
  %1010 = bitcast %class.MGDoFObjectAccessor.115* %1008 to i8*
  %1011 = getelementptr inbounds i8, i8* %1010, i64 16
  %1012 = bitcast i8* %1011 to %class.TriaObjectAccessor.117*
  invoke void @_ZNK18TriaObjectAccessorILi2ELi3EE13set_user_flagEv(%class.TriaObjectAccessor.117* %1012)
          to label %1013 unwind label %621

; <label>:1013:                                   ; preds = %1009
  br label %1014

; <label>:1014:                                   ; preds = %1013, %741
  br label %1015

; <label>:1015:                                   ; preds = %1014, %797, %originalBBpart2107
  %1016 = load i32, i32* %46, align 4
  %1017 = add i32 %1016, 1
  store i32 %1017, i32* %46, align 4
  br label %650

; <label>:1018:                                   ; preds = %650
  br label %1019

; <label>:1019:                                   ; preds = %1018
  %1020 = invoke dereferenceable(32) %class.TriaIterator* @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaIterator* %22)
          to label %1021 unwind label %621

; <label>:1021:                                   ; preds = %1019
  %1022 = load i32, i32* @x.99
  %1023 = load i32, i32* @y.100
  %1024 = sub i32 %1022, 1
  %1025 = mul i32 %1022, %1024
  %1026 = urem i32 %1025, 2
  %1027 = icmp eq i32 %1026, 0
  %1028 = icmp slt i32 %1023, 10
  %1029 = or i1 %1027, %1028
  br i1 %1029, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %1021, %originalBB153alteredBB
  %1030 = load i32, i32* @x.99
  %1031 = load i32, i32* @y.100
  %1032 = sub i32 %1030, 1
  %1033 = mul i32 %1030, %1032
  %1034 = urem i32 %1033, 2
  %1035 = icmp eq i32 %1034, 0
  %1036 = icmp slt i32 %1031, 10
  %1037 = or i1 %1035, %1036
  br i1 %1037, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %491

; <label>:1038:                                   ; preds = %511
  %1039 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %1040 = bitcast %class.MGDoFHandler* %1039 to %class.DoFHandler*
  %1041 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %1040)
          to label %1042 unwind label %621

; <label>:1042:                                   ; preds = %1038
  invoke void @_ZN13TriangulationILi3EE15load_user_flagsERKSt6vectorIbSaIbEE(%class.Triangulation* %1041, %"class.std::vector.3"* dereferenceable(40) %42)
          to label %1043 unwind label %621

; <label>:1043:                                   ; preds = %1042
  %1044 = load i32, i32* @x.99
  %1045 = load i32, i32* @y.100
  %1046 = sub i32 %1044, 1
  %1047 = mul i32 %1044, %1046
  %1048 = urem i32 %1047, 2
  %1049 = icmp eq i32 %1048, 0
  %1050 = icmp slt i32 %1045, 10
  %1051 = or i1 %1049, %1050
  br i1 %1051, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %1043, %originalBB157alteredBB
  %1052 = load i32, i32* @x.99
  %1053 = load i32, i32* @y.100
  %1054 = sub i32 %1052, 1
  %1055 = mul i32 %1052, %1054
  %1056 = urem i32 %1055, 2
  %1057 = icmp eq i32 %1056, 0
  %1058 = icmp slt i32 %1053, 10
  %1059 = or i1 %1057, %1058
  br i1 %1059, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %42)
          to label %1060 unwind label %362

; <label>:1060:                                   ; preds = %originalBBpart2159
  %1061 = load i32, i32* @x.99
  %1062 = load i32, i32* @y.100
  %1063 = sub i32 %1061, 1
  %1064 = mul i32 %1061, %1063
  %1065 = urem i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  %1067 = icmp slt i32 %1062, 10
  %1068 = or i1 %1066, %1067
  br i1 %1068, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %1060, %originalBB161alteredBB
  %1069 = load i32, i32* @x.99
  %1070 = load i32, i32* @y.100
  %1071 = sub i32 %1069, 1
  %1072 = mul i32 %1069, %1071
  %1073 = urem i32 %1072, 2
  %1074 = icmp eq i32 %1073, 0
  %1075 = icmp slt i32 %1070, 10
  %1076 = or i1 %1074, %1075
  br i1 %1076, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %29)
          to label %1077 unwind label %1097

; <label>:1077:                                   ; preds = %originalBBpart2163
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %24)
          to label %1078 unwind label %290

; <label>:1078:                                   ; preds = %1077
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %19)
          to label %1079 unwind label %1169

; <label>:1079:                                   ; preds = %1078
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
  ret void

; <label>:1080:                                   ; preds = %621
  %1081 = load i32, i32* @x.99
  %1082 = load i32, i32* @y.100
  %1083 = sub i32 %1081, 1
  %1084 = mul i32 %1081, %1083
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1082, 10
  %1088 = or i1 %1086, %1087
  br i1 %1088, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %1080, %originalBB165alteredBB
  %1089 = load i32, i32* @x.99
  %1090 = load i32, i32* @y.100
  %1091 = sub i32 %1089, 1
  %1092 = mul i32 %1089, %1091
  %1093 = urem i32 %1092, 2
  %1094 = icmp eq i32 %1093, 0
  %1095 = icmp slt i32 %1090, 10
  %1096 = or i1 %1094, %1095
  br i1 %1096, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br label %1117

; <label>:1097:                                   ; preds = %originalBBpart2163
  %1098 = load i32, i32* @x.99
  %1099 = load i32, i32* @y.100
  %1100 = sub i32 %1098, 1
  %1101 = mul i32 %1098, %1100
  %1102 = urem i32 %1101, 2
  %1103 = icmp eq i32 %1102, 0
  %1104 = icmp slt i32 %1099, 10
  %1105 = or i1 %1103, %1104
  br i1 %1105, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %1097, %originalBB169alteredBB
  %1106 = landingpad { i8*, i32 }
          cleanup
  %1107 = extractvalue { i8*, i32 } %1106, 0
  store i8* %1107, i8** %17, align 8
  %1108 = extractvalue { i8*, i32 } %1106, 1
  store i32 %1108, i32* %18, align 4
  %1109 = load i32, i32* @x.99
  %1110 = load i32, i32* @y.100
  %1111 = sub i32 %1109, 1
  %1112 = mul i32 %1109, %1111
  %1113 = urem i32 %1112, 2
  %1114 = icmp eq i32 %1113, 0
  %1115 = icmp slt i32 %1110, 10
  %1116 = or i1 %1114, %1115
  br i1 %1116, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %1135

; <label>:1117:                                   ; preds = %originalBBpart2167, %362
  %1118 = load i32, i32* @x.99
  %1119 = load i32, i32* @y.100
  %1120 = sub i32 %1118, 1
  %1121 = mul i32 %1118, %1120
  %1122 = urem i32 %1121, 2
  %1123 = icmp eq i32 %1122, 0
  %1124 = icmp slt i32 %1119, 10
  %1125 = or i1 %1123, %1124
  br i1 %1125, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %1117, %originalBB173alteredBB
  %1126 = load i32, i32* @x.99
  %1127 = load i32, i32* @y.100
  %1128 = sub i32 %1126, 1
  %1129 = mul i32 %1126, %1128
  %1130 = urem i32 %1129, 2
  %1131 = icmp eq i32 %1130, 0
  %1132 = icmp slt i32 %1127, 10
  %1133 = or i1 %1131, %1132
  br i1 %1133, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %29)
          to label %1134 unwind label %1230

; <label>:1134:                                   ; preds = %originalBBpart2175
  br label %1135

; <label>:1135:                                   ; preds = %1134, %originalBBpart2171, %originalBBpart240
  %1136 = load i32, i32* @x.99
  %1137 = load i32, i32* @y.100
  %1138 = sub i32 %1136, 1
  %1139 = mul i32 %1136, %1138
  %1140 = urem i32 %1139, 2
  %1141 = icmp eq i32 %1140, 0
  %1142 = icmp slt i32 %1137, 10
  %1143 = or i1 %1141, %1142
  br i1 %1143, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %1135, %originalBB177alteredBB
  %1144 = load i32, i32* @x.99
  %1145 = load i32, i32* @y.100
  %1146 = sub i32 %1144, 1
  %1147 = mul i32 %1144, %1146
  %1148 = urem i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  %1150 = icmp slt i32 %1145, 10
  %1151 = or i1 %1149, %1150
  br i1 %1151, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %24)
          to label %1152 unwind label %1230

; <label>:1152:                                   ; preds = %originalBBpart2179
  %1153 = load i32, i32* @x.99
  %1154 = load i32, i32* @y.100
  %1155 = sub i32 %1153, 1
  %1156 = mul i32 %1153, %1155
  %1157 = urem i32 %1156, 2
  %1158 = icmp eq i32 %1157, 0
  %1159 = icmp slt i32 %1154, 10
  %1160 = or i1 %1158, %1159
  br i1 %1160, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %1152, %originalBB181alteredBB
  %1161 = load i32, i32* @x.99
  %1162 = load i32, i32* @y.100
  %1163 = sub i32 %1161, 1
  %1164 = mul i32 %1161, %1163
  %1165 = urem i32 %1164, 2
  %1166 = icmp eq i32 %1165, 0
  %1167 = icmp slt i32 %1162, 10
  %1168 = or i1 %1166, %1167
  br i1 %1168, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br label %1173

; <label>:1169:                                   ; preds = %1078
  %1170 = landingpad { i8*, i32 }
          cleanup
  %1171 = extractvalue { i8*, i32 } %1170, 0
  store i8* %1171, i8** %17, align 8
  %1172 = extractvalue { i8*, i32 } %1170, 1
  store i32 %1172, i32* %18, align 4
  br label %1191

; <label>:1173:                                   ; preds = %originalBBpart2183, %319, %290
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %19)
          to label %1174 unwind label %1230

; <label>:1174:                                   ; preds = %1173
  %1175 = load i32, i32* @x.99
  %1176 = load i32, i32* @y.100
  %1177 = sub i32 %1175, 1
  %1178 = mul i32 %1175, %1177
  %1179 = urem i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  %1181 = icmp slt i32 %1176, 10
  %1182 = or i1 %1180, %1181
  br i1 %1182, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %1174, %originalBB185alteredBB
  %1183 = load i32, i32* @x.99
  %1184 = load i32, i32* @y.100
  %1185 = sub i32 %1183, 1
  %1186 = mul i32 %1183, %1185
  %1187 = urem i32 %1186, 2
  %1188 = icmp eq i32 %1187, 0
  %1189 = icmp slt i32 %1184, 10
  %1190 = or i1 %1188, %1189
  br i1 %1190, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %1191

; <label>:1191:                                   ; preds = %originalBBpart2187, %1169, %originalBBpart228
  %1192 = load i32, i32* @x.99
  %1193 = load i32, i32* @y.100
  %1194 = sub i32 %1192, 1
  %1195 = mul i32 %1192, %1194
  %1196 = urem i32 %1195, 2
  %1197 = icmp eq i32 %1196, 0
  %1198 = icmp slt i32 %1193, 10
  %1199 = or i1 %1197, %1198
  br i1 %1199, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %1191, %originalBB189alteredBB
  %1200 = load i32, i32* @x.99
  %1201 = load i32, i32* @y.100
  %1202 = sub i32 %1200, 1
  %1203 = mul i32 %1200, %1202
  %1204 = urem i32 %1203, 2
  %1205 = icmp eq i32 %1204, 0
  %1206 = icmp slt i32 %1201, 10
  %1207 = or i1 %1205, %1206
  br i1 %1207, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %14)
          to label %1208 unwind label %1230

; <label>:1208:                                   ; preds = %originalBBpart2191
  br label %1209

; <label>:1209:                                   ; preds = %1208, %originalBBpart224
  %1210 = load i32, i32* @x.99
  %1211 = load i32, i32* @y.100
  %1212 = sub i32 %1210, 1
  %1213 = mul i32 %1210, %1212
  %1214 = urem i32 %1213, 2
  %1215 = icmp eq i32 %1214, 0
  %1216 = icmp slt i32 %1211, 10
  %1217 = or i1 %1215, %1216
  br i1 %1217, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %1209, %originalBB193alteredBB
  %1218 = load i8*, i8** %17, align 8
  %1219 = load i32, i32* %18, align 4
  %1220 = insertvalue { i8*, i32 } undef, i8* %1218, 0
  %1221 = insertvalue { i8*, i32 } %1220, i32 %1219, 1
  %1222 = load i32, i32* @x.99
  %1223 = load i32, i32* @y.100
  %1224 = sub i32 %1222, 1
  %1225 = mul i32 %1222, %1224
  %1226 = urem i32 %1225, 2
  %1227 = icmp eq i32 %1226, 0
  %1228 = icmp slt i32 %1223, 10
  %1229 = or i1 %1227, %1228
  br i1 %1229, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  resume { i8*, i32 } %1221

; <label>:1230:                                   ; preds = %originalBBpart2191, %1173, %originalBBpart2179, %originalBBpart2175, %621, %324, %298
  %1231 = load i32, i32* @x.99
  %1232 = load i32, i32* @y.100
  %1233 = sub i32 %1231, 1
  %1234 = mul i32 %1231, %1233
  %1235 = urem i32 %1234, 2
  %1236 = icmp eq i32 %1235, 0
  %1237 = icmp slt i32 %1232, 10
  %1238 = or i1 %1236, %1237
  br i1 %1238, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %1230, %originalBB197alteredBB
  %1239 = landingpad { i8*, i32 }
          catch i8* null
  %1240 = extractvalue { i8*, i32 } %1239, 0
  call void @__clang_call_terminate(i8* %1240) #9
  %1241 = load i32, i32* @x.99
  %1242 = load i32, i32* @y.100
  %1243 = sub i32 %1241, 1
  %1244 = mul i32 %1241, %1243
  %1245 = urem i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = icmp slt i32 %1242, 10
  %1248 = or i1 %1246, %1247
  br i1 %1248, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %77
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %21) #2
  %1249 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %1250 = load i32, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %113
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %32) #2
  store i32 0, i32* %34, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %135
  %1251 = load i32, i32* %35, align 4
  %1252 = load i32, i32* %13, align 4
  %1253 = icmp ult i32 %1251, %1252
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %155
  %1254 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %1255 = bitcast %class.MGDoFHandler* %1254 to %class.DoFHandler*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %175
  %1256 = bitcast %class.FiniteElement* %174 to %class.FiniteElementBase*
  %1257 = load i32, i32* %34, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %195
  %1258 = bitcast %"struct.std::pair.60"* %37 to i64*
  store i64 %194, i64* %1258, align 4
  %1259 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %37, i32 0, i32 0
  %1260 = load i32, i32* %1259, align 4
  store i32 %1260, i32* %36, align 4
  %1261 = load %class.MGDoFHandler*, %class.MGDoFHandler** %6, align 8
  %1262 = bitcast %class.MGDoFHandler* %1261 to %class.DoFHandler*
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %250
  %1263 = landingpad { i8*, i32 }
          cleanup
  %1264 = extractvalue { i8*, i32 } %1263, 0
  store i8* %1264, i8** %17, align 8
  %1265 = extractvalue { i8*, i32 } %1263, 1
  store i32 %1265, i32* %18, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %270
  %1266 = landingpad { i8*, i32 }
          cleanup
  %1267 = extractvalue { i8*, i32 } %1266, 0
  store i8* %1267, i8** %17, align 8
  %1268 = extractvalue { i8*, i32 } %1266, 1
  store i32 %1268, i32* %18, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %21) #2
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %302
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %328
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %345
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %32) #2
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %383
  %1269 = bitcast %"struct.std::_Bit_reference"* %41 to { i64*, i64 }*
  %1270 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1269, i32 0, i32 0
  %1271 = extractvalue { i64*, i64 } %382, 0
  store i64* %1271, i64** %1270, align 8
  %1272 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1269, i32 0, i32 1
  %1273 = extractvalue { i64*, i64 } %382, 1
  store i64 %1273, i64* %1272, align 8
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %406
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %424
  %1274 = load i32, i32* %35, align 4
  %_ = sub i32 %1274, 1
  %gen = mul i32 %_, 1
  %_51 = shl i32 %1274, 1
  %_52 = sub i32 0, %1274
  %gen53 = add i32 %_52, 1
  %_54 = shl i32 %1274, 1
  %_55 = shl i32 %1274, 1
  %1275 = add i32 %1274, 1
  store i32 %1275, i32* %35, align 4
  br label %originalBB50

originalBB59alteredBB:                            ; preds = %originalBB59, %444
  %1276 = load i32, i32* %34, align 4
  %_60 = sub i32 0, %1276
  %gen61 = add i32 %_60, 1
  %_62 = sub i32 %1276, 1
  %gen63 = mul i32 %_62, 1
  %_64 = sub i32 0, %1276
  %gen65 = add i32 %_64, 1
  %1277 = add i32 %1276, 1
  store i32 %1277, i32* %34, align 4
  br label %originalBB59

originalBB69alteredBB:                            ; preds = %originalBB69, %473
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %491
  %1278 = bitcast %class.TriaIterator* %22 to %class.TriaRawIterator*
  %1279 = bitcast %class.TriaIterator* %23 to %class.TriaRawIterator*
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %518
  %1280 = load i32, i32* %43, align 4
  %1281 = load i32, i32* %13, align 4
  %1282 = icmp ult i32 %1280, %1281
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %538
  store i32 0, i32* %44, align 4
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %574
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %602
  %1283 = load i32, i32* %601, align 4
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %633
  store i32 0, i32* %46, align 4
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %656
  %1284 = load i32, i32* %46, align 4
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %674
  %1285 = bitcast %class.TriaIterator.112* %47 to %class.TriaRawIterator.113*
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %699
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %719
  %1286 = bitcast %class.MGDoFCellAccessor* %718 to i8*
  %1287 = getelementptr inbounds i8, i8* %1286, i64 16
  %1288 = bitcast i8* %1287 to %class.CellAccessor*
  %1289 = load i32, i32* %46, align 4
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %750
  %1290 = bitcast %class.MGDoFCellAccessor* %749 to i8*
  %1291 = getelementptr inbounds i8, i8* %1290, i64 16
  %1292 = bitcast i8* %1291 to %class.TriaAccessor*
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %774
  %1293 = bitcast %class.MGDoFCellAccessor* %773 to i8*
  %1294 = getelementptr inbounds i8, i8* %1293, i64 16
  %1295 = bitcast i8* %1294 to %class.TriaAccessor*
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %801
  %1296 = bitcast %class.MGDoFCellAccessor* %800 to i8*
  %1297 = getelementptr inbounds i8, i8* %1296, i64 16
  %1298 = bitcast i8* %1297 to %class.CellAccessor*
  %1299 = load i32, i32* %46, align 4
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %828
  store i32 0, i32* %50, align 4
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %858
  %1300 = load i32, i32* %51, align 4
  %1301 = zext i32 %1300 to i64
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %897
  %1302 = load i32, i32* %896, align 4
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %929
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %949
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %969
  %1303 = bitcast %class.TriaIterator* %48 to %class.TriaRawIterator*
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %990
  %1304 = bitcast %class.TriaIterator.112* %53 to %class.TriaRawIterator.113*
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %1021
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %1043
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %1060
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %1080
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %1097
  %1305 = landingpad { i8*, i32 }
          cleanup
  %1306 = extractvalue { i8*, i32 } %1305, 0
  store i8* %1306, i8** %17, align 8
  %1307 = extractvalue { i8*, i32 } %1305, 1
  store i32 %1307, i32* %18, align 4
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %1117
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %1135
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %1152
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %1174
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %1191
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %1209
  %1308 = load i8*, i8** %17, align 8
  %1309 = load i32, i32* %18, align 4
  %1310 = insertvalue { i8*, i32 } undef, i8* %1308, 0
  %1311 = insertvalue { i8*, i32 } %1310, i32 %1309, 1
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %1230
  %1312 = landingpad { i8*, i32 }
          catch i8* null
  %1313 = extractvalue { i8*, i32 } %1312, 0
  call void @__clang_call_terminate(i8* %1313) #9
  br label %originalBB197
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools13reinit_vectorILi3EdEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI6VectorIT0_EE(%class.MGDoFHandler* dereferenceable(168), %class.MGLevelObject* dereferenceable(56)) #0 comdat align 2 {
  %3 = alloca %class.MGDoFHandler*, align 8
  %4 = alloca %class.MGLevelObject*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %3, align 8
  store %class.MGLevelObject* %1, %class.MGLevelObject** %4, align 8
  %7 = load %class.MGLevelObject*, %class.MGLevelObject** %4, align 8
  %8 = call i32 @_ZNK13MGLevelObjectI6VectorIdEE12get_minlevelEv(%class.MGLevelObject* %7)
  store i32 %8, i32* %5, align 4
  br label %9

; <label>:9:                                      ; preds = %originalBBpart29, %2
  %10 = load i32, i32* %5, align 4
  %11 = load %class.MGLevelObject*, %class.MGLevelObject** %4, align 8
  %12 = call i32 @_ZNK13MGLevelObjectI6VectorIdEE12get_maxlevelEv(%class.MGLevelObject* %11)
  %13 = icmp ule i32 %10, %12
  br i1 %13, label %14, label %57

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* @x.101
  %16 = load i32, i32* @y.102
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load %class.MGDoFHandler*, %class.MGDoFHandler** %3, align 8
  %24 = load i32, i32* %5, align 4
  %25 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %23, i32 %24)
  store i32 %25, i32* %6, align 4
  %26 = load %class.MGLevelObject*, %class.MGLevelObject** %4, align 8
  %27 = load i32, i32* %5, align 4
  %28 = call dereferenceable(24) %class.Vector* @_ZN13MGLevelObjectI6VectorIdEEixEj(%class.MGLevelObject* %26, i32 %27)
  %29 = load i32, i32* %6, align 4
  call void @_ZN6VectorIdE6reinitEjb(%class.Vector* %28, i32 %29, i1 zeroext false)
  %30 = load i32, i32* @x.101
  %31 = load i32, i32* @y.102
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %38

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* @x.101
  %40 = load i32, i32* @y.102
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = load i32, i32* %5, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %5, align 4
  %49 = load i32, i32* @x.101
  %50 = load i32, i32* @y.102
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br label %9

; <label>:57:                                     ; preds = %9
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %14
  %58 = load %class.MGDoFHandler*, %class.MGDoFHandler** %3, align 8
  %59 = load i32, i32* %5, align 4
  %60 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %58, i32 %59)
  store i32 %60, i32* %6, align 4
  %61 = load %class.MGLevelObject*, %class.MGLevelObject** %4, align 8
  %62 = load i32, i32* %5, align 4
  %63 = call dereferenceable(24) %class.Vector* @_ZN13MGLevelObjectI6VectorIdEEixEj(%class.MGLevelObject* %61, i32 %62)
  %64 = load i32, i32* %6, align 4
  call void @_ZN6VectorIdE6reinitEjb(%class.Vector* %63, i32 %64, i1 zeroext false)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %65 = load i32, i32* %5, align 4
  %_ = shl i32 %65, 1
  %_2 = shl i32 %65, 1
  %_3 = sub i32 %65, 1
  %gen = mul i32 %_3, 1
  %_4 = sub i32 0, %65
  %gen5 = add i32 %_4, 1
  %_6 = sub i32 0, %65
  %gen7 = add i32 %_6, 1
  %66 = add i32 %65, 1
  store i32 %66, i32* %5, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK13MGLevelObjectI6VectorIdEE12get_minlevelEv(%class.MGLevelObject*) #3 comdat align 2 {
  %2 = alloca %class.MGLevelObject*, align 8
  store %class.MGLevelObject* %0, %class.MGLevelObject** %2, align 8
  %3 = load %class.MGLevelObject*, %class.MGLevelObject** %2, align 8
  %4 = getelementptr inbounds %class.MGLevelObject, %class.MGLevelObject* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK13MGLevelObjectI6VectorIdEE12get_maxlevelEv(%class.MGLevelObject*) #0 comdat align 2 {
  %2 = alloca %class.MGLevelObject*, align 8
  store %class.MGLevelObject* %0, %class.MGLevelObject** %2, align 8
  %3 = load %class.MGLevelObject*, %class.MGLevelObject** %2, align 8
  %4 = getelementptr inbounds %class.MGLevelObject, %class.MGLevelObject* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %class.MGLevelObject, %class.MGLevelObject* %3, i32 0, i32 2
  %8 = call i64 @_ZNKSt6vectorIN5boost10shared_ptrI6VectorIdEEESaIS4_EE4sizeEv(%"class.std::vector.118"* %7)
  %9 = add i64 %6, %8
  %10 = sub i64 %9, 1
  %11 = trunc i64 %10 to i32
  ret i32 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZN13MGLevelObjectI6VectorIdEEixEj(%class.MGLevelObject*, i32) #0 comdat align 2 {
  %3 = alloca %class.MGLevelObject*, align 8
  %4 = alloca i32, align 4
  store %class.MGLevelObject* %0, %class.MGLevelObject** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.MGLevelObject*, %class.MGLevelObject** %3, align 8
  %6 = getelementptr inbounds %class.MGLevelObject, %class.MGLevelObject* %5, i32 0, i32 2
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.MGLevelObject, %class.MGLevelObject* %5, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sub i32 %7, %9
  %11 = zext i32 %10 to i64
  %12 = call dereferenceable(16) %"class.boost::shared_ptr"* @_ZNSt6vectorIN5boost10shared_ptrI6VectorIdEEESaIS4_EEixEm(%"class.std::vector.118"* %6, i64 %11)
  %13 = call dereferenceable(24) %class.Vector* @_ZNK5boost10shared_ptrI6VectorIdEEdeEv(%"class.boost::shared_ptr"* %12)
  ret %class.Vector* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6VectorIdE6reinitEjb(%class.Vector*, i32, i1 zeroext) #0 comdat align 2 {
  %4 = alloca %class.Vector*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store %class.Vector* %0, %class.Vector** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  %8 = load %class.Vector*, %class.Vector** %4, align 8
  %9 = load i32, i32* %5, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %42

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %13 = load double*, double** %12, align 8
  %14 = icmp ne double* %13, null
  br i1 %14, label %15, label %38

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %17 = load double*, double** %16, align 8
  %18 = icmp eq double* %17, null
  br i1 %18, label %21, label %19

; <label>:19:                                     ; preds = %15
  %20 = bitcast double* %17 to i8*
  call void @_ZdaPv(i8* %20) #12
  br label %21

; <label>:21:                                     ; preds = %19, %15
  %22 = load i32, i32* @x.109
  %23 = load i32, i32* @y.110
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i32, i32* @x.109
  %31 = load i32, i32* @y.110
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %38

; <label>:38:                                     ; preds = %originalBBpart2, %11
  %39 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  store double* null, double** %39, align 8
  %40 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 1
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  store i32 0, i32* %41, align 4
  br label %111

; <label>:42:                                     ; preds = %3
  %43 = load i32, i32* %5, align 4
  %44 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %43, %45
  br i1 %46, label %47, label %102

; <label>:47:                                     ; preds = %42
  %48 = load i32, i32* @x.109
  %49 = load i32, i32* @y.110
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %57 = load double*, double** %56, align 8
  %58 = icmp ne double* %57, null
  %59 = load i32, i32* @x.109
  %60 = load i32, i32* @y.110
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %58, label %67, label %74

; <label>:67:                                     ; preds = %originalBBpart24
  %68 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %69 = load double*, double** %68, align 8
  %70 = icmp eq double* %69, null
  br i1 %70, label %73, label %71

; <label>:71:                                     ; preds = %67
  %72 = bitcast double* %69 to i8*
  call void @_ZdaPv(i8* %72) #12
  br label %73

; <label>:73:                                     ; preds = %71, %67
  br label %74

; <label>:74:                                     ; preds = %73, %originalBBpart24
  %75 = load i32, i32* @x.109
  %76 = load i32, i32* @y.110
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %74, %originalBB6alteredBB
  %83 = load i32, i32* %5, align 4
  %84 = zext i32 %83 to i64
  %85 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %84, i64 8)
  %86 = extractvalue { i64, i1 } %85, 1
  %87 = extractvalue { i64, i1 } %85, 0
  %88 = select i1 %86, i64 -1, i64 %87
  %89 = call i8* @_Znam(i64 %88) #13
  %90 = bitcast i8* %89 to double*
  %91 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  store double* %90, double** %91, align 8
  %92 = load i32, i32* %5, align 4
  %93 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  store i32 %92, i32* %93, align 4
  %94 = load i32, i32* @x.109
  %95 = load i32, i32* @y.110
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %102

; <label>:102:                                    ; preds = %originalBBpart28, %42
  %103 = load i32, i32* %5, align 4
  %104 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 1
  store i32 %103, i32* %104, align 8
  %105 = load i8, i8* %6, align 1
  %106 = trunc i8 %105 to i1
  %107 = zext i1 %106 to i32
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

; <label>:109:                                    ; preds = %102
  %110 = call dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector* %8, double 0.000000e+00)
  br label %111

; <label>:111:                                    ; preds = %109, %102, %38
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %21
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %112 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  %113 = load double*, double** %112, align 8
  %114 = icmp ne double* %113, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  %115 = load i32, i32* %5, align 4
  %116 = zext i32 %115 to i64
  %117 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %116, i64 8)
  %118 = extractvalue { i64, i1 } %117, 1
  %119 = extractvalue { i64, i1 } %117, 0
  %120 = select i1 %118, i64 -1, i64 %119
  %121 = call i8* @_Znam(i64 %120) #13
  %122 = bitcast i8* %121 to double*
  %123 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 3
  store double* %122, double** %123, align 8
  %124 = load i32, i32* %5, align 4
  %125 = getelementptr inbounds %class.Vector, %class.Vector* %8, i32 0, i32 2
  store i32 %124, i32* %125, align 4
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools13reinit_vectorILi3EfEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI6VectorIT0_EE(%class.MGDoFHandler* dereferenceable(168), %class.MGLevelObject.123* dereferenceable(56)) #0 comdat align 2 {
  %3 = alloca %class.MGDoFHandler*, align 8
  %4 = alloca %class.MGLevelObject.123*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %3, align 8
  store %class.MGLevelObject.123* %1, %class.MGLevelObject.123** %4, align 8
  %7 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %4, align 8
  %8 = call i32 @_ZNK13MGLevelObjectI6VectorIfEE12get_minlevelEv(%class.MGLevelObject.123* %7)
  store i32 %8, i32* %5, align 4
  br label %9

; <label>:9:                                      ; preds = %originalBBpart28, %2
  %10 = load i32, i32* @x.111
  %11 = load i32, i32* @y.112
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = load i32, i32* %5, align 4
  %19 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %4, align 8
  %20 = call i32 @_ZNK13MGLevelObjectI6VectorIfEE12get_maxlevelEv(%class.MGLevelObject.123* %19)
  %21 = icmp ule i32 %18, %20
  %22 = load i32, i32* @x.111
  %23 = load i32, i32* @y.112
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %73

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.111
  %32 = load i32, i32* @y.112
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %class.MGDoFHandler*, %class.MGDoFHandler** %3, align 8
  %40 = load i32, i32* %5, align 4
  %41 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %39, i32 %40)
  store i32 %41, i32* %6, align 4
  %42 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %4, align 8
  %43 = load i32, i32* %5, align 4
  %44 = call dereferenceable(24) %class.Vector.130* @_ZN13MGLevelObjectI6VectorIfEEixEj(%class.MGLevelObject.123* %42, i32 %43)
  %45 = load i32, i32* %6, align 4
  call void @_ZN6VectorIfE6reinitEjb(%class.Vector.130* %44, i32 %45, i1 zeroext false)
  %46 = load i32, i32* @x.111
  %47 = load i32, i32* @y.112
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %54

; <label>:54:                                     ; preds = %originalBBpart24
  %55 = load i32, i32* @x.111
  %56 = load i32, i32* @y.112
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = load i32, i32* %5, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %5, align 4
  %65 = load i32, i32* @x.111
  %66 = load i32, i32* @y.112
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %9

; <label>:73:                                     ; preds = %originalBBpart2
  %74 = load i32, i32* @x.111
  %75 = load i32, i32* @y.112
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = load i32, i32* @x.111
  %83 = load i32, i32* @y.112
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %9
  %90 = load i32, i32* %5, align 4
  %91 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %4, align 8
  %92 = call i32 @_ZNK13MGLevelObjectI6VectorIfEE12get_maxlevelEv(%class.MGLevelObject.123* %91)
  %93 = icmp ule i32 %90, %92
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %94 = load %class.MGDoFHandler*, %class.MGDoFHandler** %3, align 8
  %95 = load i32, i32* %5, align 4
  %96 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %94, i32 %95)
  store i32 %96, i32* %6, align 4
  %97 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %4, align 8
  %98 = load i32, i32* %5, align 4
  %99 = call dereferenceable(24) %class.Vector.130* @_ZN13MGLevelObjectI6VectorIfEEixEj(%class.MGLevelObject.123* %97, i32 %98)
  %100 = load i32, i32* %6, align 4
  call void @_ZN6VectorIfE6reinitEjb(%class.Vector.130* %99, i32 %100, i1 zeroext false)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %101 = load i32, i32* %5, align 4
  %_ = sub i32 %101, 1
  %gen = mul i32 %_, 1
  %102 = add i32 %101, 1
  store i32 %102, i32* %5, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK13MGLevelObjectI6VectorIfEE12get_minlevelEv(%class.MGLevelObject.123*) #3 comdat align 2 {
  %2 = load i32, i32* @x.113
  %3 = load i32, i32* @y.114
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.MGLevelObject.123*, align 8
  store %class.MGLevelObject.123* %0, %class.MGLevelObject.123** %10, align 8
  %11 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %10, align 8
  %12 = getelementptr inbounds %class.MGLevelObject.123, %class.MGLevelObject.123* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i32, i32* @x.113
  %15 = load i32, i32* @y.114
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.MGLevelObject.123*, align 8
  store %class.MGLevelObject.123* %0, %class.MGLevelObject.123** %22, align 8
  %23 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %22, align 8
  %24 = getelementptr inbounds %class.MGLevelObject.123, %class.MGLevelObject.123* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK13MGLevelObjectI6VectorIfEE12get_maxlevelEv(%class.MGLevelObject.123*) #0 comdat align 2 {
  %2 = alloca %class.MGLevelObject.123*, align 8
  store %class.MGLevelObject.123* %0, %class.MGLevelObject.123** %2, align 8
  %3 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %2, align 8
  %4 = getelementptr inbounds %class.MGLevelObject.123, %class.MGLevelObject.123* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %class.MGLevelObject.123, %class.MGLevelObject.123* %3, i32 0, i32 2
  %8 = call i64 @_ZNKSt6vectorIN5boost10shared_ptrI6VectorIfEEESaIS4_EE4sizeEv(%"class.std::vector.124"* %7)
  %9 = add i64 %6, %8
  %10 = sub i64 %9, 1
  %11 = trunc i64 %10 to i32
  ret i32 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector.130* @_ZN13MGLevelObjectI6VectorIfEEixEj(%class.MGLevelObject.123*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.117
  %4 = load i32, i32* @y.118
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.MGLevelObject.123*, align 8
  %12 = alloca i32, align 4
  store %class.MGLevelObject.123* %0, %class.MGLevelObject.123** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %11, align 8
  %14 = getelementptr inbounds %class.MGLevelObject.123, %class.MGLevelObject.123* %13, i32 0, i32 2
  %15 = load i32, i32* %12, align 4
  %16 = getelementptr inbounds %class.MGLevelObject.123, %class.MGLevelObject.123* %13, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i32 %15, %17
  %19 = zext i32 %18 to i64
  %20 = call dereferenceable(16) %"class.boost::shared_ptr.129"* @_ZNSt6vectorIN5boost10shared_ptrI6VectorIfEEESaIS4_EEixEm(%"class.std::vector.124"* %14, i64 %19)
  %21 = call dereferenceable(24) %class.Vector.130* @_ZNK5boost10shared_ptrI6VectorIfEEdeEv(%"class.boost::shared_ptr.129"* %20)
  %22 = load i32, i32* @x.117
  %23 = load i32, i32* @y.118
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector.130* %21

originalBBalteredBB:                              ; preds = %originalBB, %2
  %30 = alloca %class.MGLevelObject.123*, align 8
  %31 = alloca i32, align 4
  store %class.MGLevelObject.123* %0, %class.MGLevelObject.123** %30, align 8
  store i32 %1, i32* %31, align 4
  %32 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %30, align 8
  %33 = getelementptr inbounds %class.MGLevelObject.123, %class.MGLevelObject.123* %32, i32 0, i32 2
  %34 = load i32, i32* %31, align 4
  %35 = getelementptr inbounds %class.MGLevelObject.123, %class.MGLevelObject.123* %32, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %_ = sub i32 %34, %36
  %gen = mul i32 %_, %36
  %37 = sub i32 %34, %36
  %38 = zext i32 %37 to i64
  %39 = call dereferenceable(16) %"class.boost::shared_ptr.129"* @_ZNSt6vectorIN5boost10shared_ptrI6VectorIfEEESaIS4_EEixEm(%"class.std::vector.124"* %33, i64 %38)
  %40 = call dereferenceable(24) %class.Vector.130* @_ZNK5boost10shared_ptrI6VectorIfEEdeEv(%"class.boost::shared_ptr.129"* %39)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6VectorIfE6reinitEjb(%class.Vector.130*, i32, i1 zeroext) #0 comdat align 2 {
  %4 = load i32, i32* @x.119
  %5 = load i32, i32* @y.120
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Vector.130*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  store %class.Vector.130* %0, %class.Vector.130** %12, align 8
  store i32 %1, i32* %13, align 4
  %15 = zext i1 %2 to i8
  store i8 %15, i8* %14, align 1
  %16 = load %class.Vector.130*, %class.Vector.130** %12, align 8
  %17 = load i32, i32* %13, align 4
  %18 = icmp eq i32 %17, 0
  %19 = load i32, i32* @x.119
  %20 = load i32, i32* @y.120
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %74

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.119
  %29 = load i32, i32* @y.120
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  %37 = load float*, float** %36, align 8
  %38 = icmp ne float* %37, null
  %39 = load i32, i32* @x.119
  %40 = load i32, i32* @y.120
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %54

; <label>:47:                                     ; preds = %originalBBpart24
  %48 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  %49 = load float*, float** %48, align 8
  %50 = icmp eq float* %49, null
  br i1 %50, label %53, label %51

; <label>:51:                                     ; preds = %47
  %52 = bitcast float* %49 to i8*
  call void @_ZdaPv(i8* %52) #12
  br label %53

; <label>:53:                                     ; preds = %51, %47
  br label %54

; <label>:54:                                     ; preds = %53, %originalBBpart24
  %55 = load i32, i32* @x.119
  %56 = load i32, i32* @y.120
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  %63 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  store float* null, float** %63, align 8
  %64 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 1
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 2
  store i32 0, i32* %65, align 4
  %66 = load i32, i32* @x.119
  %67 = load i32, i32* @y.120
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %175

; <label>:74:                                     ; preds = %originalBBpart2
  %75 = load i32, i32* %13, align 4
  %76 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp ugt i32 %75, %77
  br i1 %78, label %79, label %150

; <label>:79:                                     ; preds = %74
  %80 = load i32, i32* @x.119
  %81 = load i32, i32* @y.120
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  %89 = load float*, float** %88, align 8
  %90 = icmp ne float* %89, null
  %91 = load i32, i32* @x.119
  %92 = load i32, i32* @y.120
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %90, label %99, label %138

; <label>:99:                                     ; preds = %originalBBpart212
  %100 = load i32, i32* @x.119
  %101 = load i32, i32* @y.120
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %99, %originalBB14alteredBB
  %108 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  %109 = load float*, float** %108, align 8
  %110 = icmp eq float* %109, null
  %111 = load i32, i32* @x.119
  %112 = load i32, i32* @y.120
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %110, label %137, label %119

; <label>:119:                                    ; preds = %originalBBpart216
  %120 = load i32, i32* @x.119
  %121 = load i32, i32* @y.120
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %119, %originalBB18alteredBB
  %128 = bitcast float* %109 to i8*
  call void @_ZdaPv(i8* %128) #12
  %129 = load i32, i32* @x.119
  %130 = load i32, i32* @y.120
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %137

; <label>:137:                                    ; preds = %originalBBpart220, %originalBBpart216
  br label %138

; <label>:138:                                    ; preds = %137, %originalBBpart212
  %139 = load i32, i32* %13, align 4
  %140 = zext i32 %139 to i64
  %141 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %140, i64 4)
  %142 = extractvalue { i64, i1 } %141, 1
  %143 = extractvalue { i64, i1 } %141, 0
  %144 = select i1 %142, i64 -1, i64 %143
  %145 = call i8* @_Znam(i64 %144) #13
  %146 = bitcast i8* %145 to float*
  %147 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  store float* %146, float** %147, align 8
  %148 = load i32, i32* %13, align 4
  %149 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 2
  store i32 %148, i32* %149, align 4
  br label %150

; <label>:150:                                    ; preds = %138, %74
  %151 = load i32, i32* @x.119
  %152 = load i32, i32* @y.120
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %150, %originalBB22alteredBB
  %159 = load i32, i32* %13, align 4
  %160 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 1
  store i32 %159, i32* %160, align 8
  %161 = load i8, i8* %14, align 1
  %162 = trunc i8 %161 to i1
  %163 = zext i1 %162 to i32
  %164 = icmp eq i32 %163, 0
  %165 = load i32, i32* @x.119
  %166 = load i32, i32* @y.120
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %164, label %173, label %175

; <label>:173:                                    ; preds = %originalBBpart224
  %174 = call dereferenceable(24) %class.Vector.130* @_ZN6VectorIfEaSEf(%class.Vector.130* %16, float 0.000000e+00)
  br label %175

; <label>:175:                                    ; preds = %173, %originalBBpart224, %originalBBpart28
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %176 = alloca %class.Vector.130*, align 8
  %177 = alloca i32, align 4
  %178 = alloca i8, align 1
  store %class.Vector.130* %0, %class.Vector.130** %176, align 8
  store i32 %1, i32* %177, align 4
  %179 = zext i1 %2 to i8
  store i8 %179, i8* %178, align 1
  %180 = load %class.Vector.130*, %class.Vector.130** %176, align 8
  %181 = load i32, i32* %177, align 4
  %182 = icmp eq i32 %181, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %183 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  %184 = load float*, float** %183, align 8
  %185 = icmp ne float* %184, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  %186 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  store float* null, float** %186, align 8
  %187 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 1
  store i32 0, i32* %187, align 8
  %188 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 2
  store i32 0, i32* %188, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  %189 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  %190 = load float*, float** %189, align 8
  %191 = icmp ne float* %190, null
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %99
  %192 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 3
  %193 = load float*, float** %192, align 8
  %194 = icmp eq float* %193, null
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %119
  %195 = bitcast float* %109 to i8*
  call void @_ZdaPv(i8* %195) #12
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %150
  %196 = load i32, i32* %13, align 4
  %197 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %16, i32 0, i32 1
  store i32 %196, i32* %197, align 8
  %198 = load i8, i8* %14, align 1
  %199 = trunc i8 %198 to i1
  %200 = zext i1 %199 to i32
  %201 = icmp eq i32 %200, 0
  br label %originalBB22
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools13reinit_vectorILi3EdEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI11BlockVectorIT0_EERKSt6vectorIbSaIbEERKSB_IjSaIjEE(%class.MGDoFHandler* dereferenceable(168), %class.MGLevelObject.131* dereferenceable(56), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.12"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.121
  %6 = load i32, i32* @y.122
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.MGDoFHandler*, align 8
  %14 = alloca %class.MGLevelObject.131*, align 8
  %15 = alloca %"class.std::vector.3"*, align 8
  %16 = alloca %"class.std::vector.12"*, align 8
  %17 = alloca %"class.std::vector.3", align 8
  %18 = alloca %"class.std::vector.12", align 8
  %19 = alloca i8*
  %20 = alloca i32
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %"struct.std::_Bit_iterator", align 8
  %24 = alloca i8, align 1
  %25 = alloca %"struct.std::_Bit_iterator", align 8
  %26 = alloca i32, align 4
  %27 = alloca %"struct.std::_Bit_reference", align 8
  %28 = alloca i32, align 4
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = alloca %"struct.std::_Bit_iterator", align 8
  %31 = alloca %"class.std::vector.138", align 8
  %32 = alloca %"class.std::vector.12", align 8
  %33 = alloca i32, align 4
  %34 = alloca %"class.std::allocator.14", align 1
  %35 = alloca %"class.std::allocator.140", align 1
  %36 = alloca %"class.std::vector.12", align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca %"struct.std::_Bit_reference", align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %13, align 8
  store %class.MGLevelObject.131* %1, %class.MGLevelObject.131** %14, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %15, align 8
  store %"class.std::vector.12"* %3, %"class.std::vector.12"** %16, align 8
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %15, align 8
  call void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.3"* %17, %"class.std::vector.3"* dereferenceable(40) %41)
  %42 = load %"class.std::vector.12"*, %"class.std::vector.12"** %16, align 8
  %43 = load i32, i32* @x.121
  %44 = load i32, i32* @y.122
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector.12"* %18, %"class.std::vector.12"* dereferenceable(24) %42)
          to label %51 unwind label %145

; <label>:51:                                     ; preds = %originalBBpart2
  %52 = load i32, i32* @x.121
  %53 = load i32, i32* @y.122
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %51, %originalBB1alteredBB
  %60 = load %class.MGDoFHandler*, %class.MGDoFHandler** %13, align 8
  %61 = bitcast %class.MGDoFHandler* %60 to %class.DoFHandler*
  %62 = load i32, i32* @x.121
  %63 = load i32, i32* @y.122
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %70 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %61)
          to label %71 unwind label %149

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = bitcast %class.FiniteElement* %70 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 24
  %74 = bitcast i8* %73 to %class.FiniteElementData*
  %75 = invoke i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %74)
          to label %76 unwind label %149

; <label>:76:                                     ; preds = %71
  store i32 %75, i32* %21, align 4
  %77 = invoke i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %18)
          to label %78 unwind label %149

; <label>:78:                                     ; preds = %76
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %154

; <label>:80:                                     ; preds = %78
  %81 = load i32, i32* @x.121
  %82 = load i32, i32* @y.122
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %80, %originalBB6alteredBB
  %89 = load i32, i32* %21, align 4
  %90 = zext i32 %89 to i64
  %91 = load i32, i32* @x.121
  %92 = load i32, i32* @y.122
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.12"* %18, i64 %90, i32 0)
          to label %99 unwind label %149

; <label>:99:                                     ; preds = %originalBBpart28
  %100 = load i32, i32* @x.121
  %101 = load i32, i32* @y.122
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %99, %originalBB10alteredBB
  store i32 0, i32* %22, align 4
  %108 = load i32, i32* @x.121
  %109 = load i32, i32* @y.122
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %116

; <label>:116:                                    ; preds = %originalBBpart216, %originalBBpart212
  %117 = load i32, i32* %22, align 4
  %118 = load i32, i32* %21, align 4
  %119 = icmp ult i32 %117, %118
  br i1 %119, label %120, label %153

; <label>:120:                                    ; preds = %116
  %121 = load i32, i32* %22, align 4
  %122 = load i32, i32* %22, align 4
  %123 = zext i32 %122 to i64
  %124 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %18, i64 %123)
          to label %125 unwind label %149

; <label>:125:                                    ; preds = %120
  store i32 %121, i32* %124, align 4
  br label %126

; <label>:126:                                    ; preds = %125
  %127 = load i32, i32* @x.121
  %128 = load i32, i32* @y.122
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %126, %originalBB14alteredBB
  %135 = load i32, i32* %22, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %22, align 4
  %137 = load i32, i32* @x.121
  %138 = load i32, i32* @y.122
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %116

; <label>:145:                                    ; preds = %620, %originalBBpart2
  %146 = landingpad { i8*, i32 }
          cleanup
  %147 = extractvalue { i8*, i32 } %146, 0
  store i8* %147, i8** %19, align 8
  %148 = extractvalue { i8*, i32 } %146, 1
  store i32 %148, i32* %20, align 4
  br label %642

; <label>:149:                                    ; preds = %originalBBpart284, %304, %302, %298, %281, %274, %originalBBpart232, %244, %240, %236, %230, %211, %209, %208, %originalBBpart228, %originalBBpart220, %120, %originalBBpart28, %76, %71, %originalBBpart24
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %19, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %20, align 4
  br label %640

; <label>:153:                                    ; preds = %116
  br label %154

; <label>:154:                                    ; preds = %153, %78
  %155 = load i32, i32* @x.121
  %156 = load i32, i32* @y.122
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %154, %originalBB18alteredBB
  %163 = load i32, i32* @x.121
  %164 = load i32, i32* @y.122
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  %171 = invoke i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %17)
          to label %172 unwind label %149

; <label>:172:                                    ; preds = %originalBBpart220
  %173 = load i32, i32* @x.121
  %174 = load i32, i32* @y.122
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %172, %originalBB22alteredBB
  %181 = icmp eq i64 %171, 0
  %182 = load i32, i32* @x.121
  %183 = load i32, i32* @y.122
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %181, label %190, label %256

; <label>:190:                                    ; preds = %originalBBpart224
  %191 = load i32, i32* @x.121
  %192 = load i32, i32* @y.122
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %190, %originalBB26alteredBB
  %199 = load i32, i32* @x.121
  %200 = load i32, i32* @y.122
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %207 = invoke i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %18)
          to label %208 unwind label %149

; <label>:208:                                    ; preds = %originalBBpart228
  invoke void @_ZNSt6vectorIbSaIbEE6resizeEmb(%"class.std::vector.3"* %17, i64 %207, i1 zeroext false)
          to label %209 unwind label %149

; <label>:209:                                    ; preds = %208
  %210 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %17)
          to label %211 unwind label %149

; <label>:211:                                    ; preds = %209
  %212 = bitcast %"struct.std::_Bit_iterator"* %23 to { i64*, i32 }*
  %213 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %212, i32 0, i32 0
  %214 = extractvalue { i64*, i32 } %210, 0
  store i64* %214, i64** %213, align 8
  %215 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %212, i32 0, i32 1
  %216 = extractvalue { i64*, i32 } %210, 1
  store i32 %216, i32* %215, align 8
  %217 = load i32, i32* %21, align 4
  store i8 0, i8* %24, align 1
  %218 = bitcast %"struct.std::_Bit_iterator"* %23 to { i64*, i32 }*
  %219 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %218, i32 0, i32 0
  %220 = load i64*, i64** %219, align 8
  %221 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %218, i32 0, i32 1
  %222 = load i32, i32* %221, align 8
  %223 = invoke { i64*, i32 } @_ZSt6fill_nISt13_Bit_iteratorjbET_S1_T0_RKT1_(i64* %220, i32 %222, i32 %217, i8* dereferenceable(1) %24)
          to label %224 unwind label %149

; <label>:224:                                    ; preds = %211
  %225 = bitcast %"struct.std::_Bit_iterator"* %25 to { i64*, i32 }*
  %226 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %225, i32 0, i32 0
  %227 = extractvalue { i64*, i32 } %223, 0
  store i64* %227, i64** %226, align 8
  %228 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %225, i32 0, i32 1
  %229 = extractvalue { i64*, i32 } %223, 1
  store i32 %229, i32* %228, align 8
  store i32 0, i32* %26, align 4
  br label %230

; <label>:230:                                    ; preds = %252, %224
  %231 = load i32, i32* %26, align 4
  %232 = zext i32 %231 to i64
  %233 = invoke i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %18)
          to label %234 unwind label %149

; <label>:234:                                    ; preds = %230
  %235 = icmp ult i64 %232, %233
  br i1 %235, label %236, label %255

; <label>:236:                                    ; preds = %234
  %237 = load i32, i32* %26, align 4
  %238 = zext i32 %237 to i64
  %239 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %18, i64 %238)
          to label %240 unwind label %149

; <label>:240:                                    ; preds = %236
  %241 = load i32, i32* %239, align 4
  %242 = zext i32 %241 to i64
  %243 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %17, i64 %242)
          to label %244 unwind label %149

; <label>:244:                                    ; preds = %240
  %245 = bitcast %"struct.std::_Bit_reference"* %27 to { i64*, i64 }*
  %246 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %245, i32 0, i32 0
  %247 = extractvalue { i64*, i64 } %243, 0
  store i64* %247, i64** %246, align 8
  %248 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %245, i32 0, i32 1
  %249 = extractvalue { i64*, i64 } %243, 1
  store i64 %249, i64* %248, align 8
  %250 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %27, i1 zeroext true)
          to label %251 unwind label %149

; <label>:251:                                    ; preds = %244
  br label %252

; <label>:252:                                    ; preds = %251
  %253 = load i32, i32* %26, align 4
  %254 = add i32 %253, 1
  store i32 %254, i32* %26, align 4
  br label %230

; <label>:255:                                    ; preds = %234
  br label %256

; <label>:256:                                    ; preds = %255, %originalBBpart224
  %257 = load i32, i32* @x.121
  %258 = load i32, i32* @y.122
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %256, %originalBB30alteredBB
  %265 = load i32, i32* @x.121
  %266 = load i32, i32* @y.122
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  %273 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %17)
          to label %274 unwind label %149

; <label>:274:                                    ; preds = %originalBBpart232
  %275 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %276 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %275, i32 0, i32 0
  %277 = extractvalue { i64*, i32 } %273, 0
  store i64* %277, i64** %276, align 8
  %278 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %275, i32 0, i32 1
  %279 = extractvalue { i64*, i32 } %273, 1
  store i32 %279, i32* %278, align 8
  %280 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %17)
          to label %281 unwind label %149

; <label>:281:                                    ; preds = %274
  %282 = bitcast %"struct.std::_Bit_iterator"* %30 to { i64*, i32 }*
  %283 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %282, i32 0, i32 0
  %284 = extractvalue { i64*, i32 } %280, 0
  store i64* %284, i64** %283, align 8
  %285 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %282, i32 0, i32 1
  %286 = extractvalue { i64*, i32 } %280, 1
  store i32 %286, i32* %285, align 8
  %287 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %288 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %287, i32 0, i32 0
  %289 = load i64*, i64** %288, align 8
  %290 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %287, i32 0, i32 1
  %291 = load i32, i32* %290, align 8
  %292 = bitcast %"struct.std::_Bit_iterator"* %30 to { i64*, i32 }*
  %293 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %292, i32 0, i32 0
  %294 = load i64*, i64** %293, align 8
  %295 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %292, i32 0, i32 1
  %296 = load i32, i32* %295, align 8
  %297 = invoke i32 @_ZSt10accumulateISt13_Bit_iteratorjET0_T_S2_S1_(i64* %289, i32 %291, i64* %294, i32 %296, i32 0)
          to label %298 unwind label %149

; <label>:298:                                    ; preds = %281
  store i32 %297, i32* %28, align 4
  %299 = load %class.MGDoFHandler*, %class.MGDoFHandler** %13, align 8
  %300 = bitcast %class.MGDoFHandler* %299 to %class.DoFHandler*
  %301 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %300)
          to label %302 unwind label %149

; <label>:302:                                    ; preds = %298
  %303 = invoke i32 @_ZNK13TriangulationILi3EE8n_levelsEv(%class.Triangulation* %301)
          to label %304 unwind label %149

; <label>:304:                                    ; preds = %302
  %305 = zext i32 %303 to i64
  %306 = invoke i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %18)
          to label %307 unwind label %149

; <label>:307:                                    ; preds = %304
  store i32 0, i32* %33, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %34) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %32, i64 %306, i32* dereferenceable(4) %33, %"class.std::allocator.14"* dereferenceable(1) %34)
          to label %308 unwind label %507

; <label>:308:                                    ; preds = %307
  %309 = load i32, i32* @x.121
  %310 = load i32, i32* @y.122
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %308, %originalBB34alteredBB
  call void @_ZNSaISt6vectorIjSaIjEEEC2Ev(%"class.std::allocator.140"* %35) #2
  %317 = load i32, i32* @x.121
  %318 = load i32, i32* @y.122
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.138"* %31, i64 %305, %"class.std::vector.12"* dereferenceable(24) %32, %"class.std::allocator.140"* dereferenceable(1) %35)
          to label %325 unwind label %527

; <label>:325:                                    ; preds = %originalBBpart236
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %35) #2
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %32)
          to label %326 unwind label %507

; <label>:326:                                    ; preds = %325
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %34) #2
  %327 = load %class.MGDoFHandler*, %class.MGDoFHandler** %13, align 8
  invoke void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector.12"* %36, %"class.std::vector.12"* dereferenceable(24) %18)
          to label %328 unwind label %533

; <label>:328:                                    ; preds = %326
  invoke void @_ZN7MGTools24count_dofs_per_componentILi3EEEvRK12MGDoFHandlerIXT_EERSt6vectorIS5_IjSaIjEESaIS7_EES7_(%class.MGDoFHandler* dereferenceable(168) %327, %"class.std::vector.138"* dereferenceable(24) %31, %"class.std::vector.12"* %36)
          to label %329 unwind label %537

; <label>:329:                                    ; preds = %328
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %36)
          to label %330 unwind label %533

; <label>:330:                                    ; preds = %329
  %331 = load i32, i32* @x.121
  %332 = load i32, i32* @y.122
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %330, %originalBB38alteredBB
  %339 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  %340 = load i32, i32* @x.121
  %341 = load i32, i32* @y.122
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  %348 = invoke i32 @_ZNK13MGLevelObjectI11BlockVectorIdEE12get_minlevelEv(%class.MGLevelObject.131* %339)
          to label %349 unwind label %533

; <label>:349:                                    ; preds = %originalBBpart240
  store i32 %348, i32* %37, align 4
  br label %350

; <label>:350:                                    ; preds = %600, %349
  %351 = load i32, i32* %37, align 4
  %352 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  %353 = invoke i32 @_ZNK13MGLevelObjectI11BlockVectorIdEE12get_maxlevelEv(%class.MGLevelObject.131* %352)
          to label %354 unwind label %533

; <label>:354:                                    ; preds = %350
  %355 = icmp ule i32 %351, %353
  br i1 %355, label %356, label %603

; <label>:356:                                    ; preds = %354
  %357 = load i32, i32* @x.121
  %358 = load i32, i32* @y.122
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %356, %originalBB42alteredBB
  %365 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  %366 = load i32, i32* %37, align 4
  %367 = load i32, i32* @x.121
  %368 = load i32, i32* @y.122
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  %375 = invoke dereferenceable(64) %class.BlockVector* @_ZN13MGLevelObjectI11BlockVectorIdEEixEj(%class.MGLevelObject.131* %365, i32 %366)
          to label %376 unwind label %533

; <label>:376:                                    ; preds = %originalBBpart244
  %377 = load i32, i32* %28, align 4
  invoke void @_ZN11BlockVectorIdE6reinitEjjb(%class.BlockVector* %375, i32 %377, i32 0, i1 zeroext false)
          to label %378 unwind label %533

; <label>:378:                                    ; preds = %376
  store i32 0, i32* %38, align 4
  store i32 0, i32* %39, align 4
  br label %379

; <label>:379:                                    ; preds = %580, %378
  %380 = load i32, i32* %39, align 4
  %381 = zext i32 %380 to i64
  %382 = invoke i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %17)
          to label %383 unwind label %533

; <label>:383:                                    ; preds = %379
  %384 = load i32, i32* @x.121
  %385 = load i32, i32* @y.122
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %383, %originalBB46alteredBB
  %392 = icmp ult i64 %381, %382
  %393 = load i32, i32* @x.121
  %394 = load i32, i32* @y.122
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %392, label %401, label %442

; <label>:401:                                    ; preds = %originalBBpart248
  %402 = load i32, i32* @x.121
  %403 = load i32, i32* @y.122
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %401, %originalBB50alteredBB
  %410 = load i32, i32* %38, align 4
  %411 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  %412 = load i32, i32* %37, align 4
  %413 = load i32, i32* @x.121
  %414 = load i32, i32* @y.122
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  %421 = invoke dereferenceable(64) %class.BlockVector* @_ZN13MGLevelObjectI11BlockVectorIdEEixEj(%class.MGLevelObject.131* %411, i32 %412)
          to label %422 unwind label %533

; <label>:422:                                    ; preds = %originalBBpart252
  %423 = invoke i32 @_ZNK11BlockVectorIdE8n_blocksEv(%class.BlockVector* %421)
          to label %424 unwind label %533

; <label>:424:                                    ; preds = %422
  %425 = load i32, i32* @x.121
  %426 = load i32, i32* @y.122
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %424, %originalBB54alteredBB
  %433 = icmp ult i32 %410, %423
  %434 = load i32, i32* @x.121
  %435 = load i32, i32* @y.122
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %442

; <label>:442:                                    ; preds = %originalBBpart256, %originalBBpart248
  %443 = phi i1 [ false, %originalBBpart248 ], [ %433, %originalBBpart256 ]
  br i1 %443, label %444, label %583

; <label>:444:                                    ; preds = %442
  %445 = load i32, i32* %39, align 4
  %446 = zext i32 %445 to i64
  %447 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %17, i64 %446)
          to label %448 unwind label %533

; <label>:448:                                    ; preds = %444
  %449 = bitcast %"struct.std::_Bit_reference"* %40 to { i64*, i64 }*
  %450 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %449, i32 0, i32 0
  %451 = extractvalue { i64*, i64 } %447, 0
  store i64* %451, i64** %450, align 8
  %452 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %449, i32 0, i32 1
  %453 = extractvalue { i64*, i64 } %447, 1
  store i64 %453, i64* %452, align 8
  %454 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %40)
          to label %455 unwind label %533

; <label>:455:                                    ; preds = %448
  %456 = load i32, i32* @x.121
  %457 = load i32, i32* @y.122
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %455, %originalBB58alteredBB
  %464 = load i32, i32* @x.121
  %465 = load i32, i32* @y.122
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %454, label %472, label %542

; <label>:472:                                    ; preds = %originalBBpart260
  %473 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  %474 = load i32, i32* %37, align 4
  %475 = invoke dereferenceable(64) %class.BlockVector* @_ZN13MGLevelObjectI11BlockVectorIdEEixEj(%class.MGLevelObject.131* %473, i32 %474)
          to label %476 unwind label %533

; <label>:476:                                    ; preds = %472
  %477 = load i32, i32* %38, align 4
  %478 = add i32 %477, 1
  store i32 %478, i32* %38, align 4
  %479 = invoke dereferenceable(24) %class.Vector* @_ZN11BlockVectorIdE5blockEj(%class.BlockVector* %475, i32 %477)
          to label %480 unwind label %533

; <label>:480:                                    ; preds = %476
  %481 = load i32, i32* @x.121
  %482 = load i32, i32* @y.122
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %480, %originalBB62alteredBB
  %489 = load i32, i32* %37, align 4
  %490 = zext i32 %489 to i64
  %491 = load i32, i32* @x.121
  %492 = load i32, i32* @y.122
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  %499 = invoke dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %31, i64 %490)
          to label %500 unwind label %533

; <label>:500:                                    ; preds = %originalBBpart264
  %501 = load i32, i32* %39, align 4
  %502 = zext i32 %501 to i64
  %503 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %499, i64 %502)
          to label %504 unwind label %533

; <label>:504:                                    ; preds = %500
  %505 = load i32, i32* %503, align 4
  invoke void @_ZN6VectorIdE6reinitEjb(%class.Vector* %479, i32 %505, i1 zeroext false)
          to label %506 unwind label %533

; <label>:506:                                    ; preds = %504
  br label %542

; <label>:507:                                    ; preds = %325, %307
  %508 = load i32, i32* @x.121
  %509 = load i32, i32* @y.122
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %507, %originalBB66alteredBB
  %516 = landingpad { i8*, i32 }
          cleanup
  %517 = extractvalue { i8*, i32 } %516, 0
  store i8* %517, i8** %19, align 8
  %518 = extractvalue { i8*, i32 } %516, 1
  store i32 %518, i32* %20, align 4
  %519 = load i32, i32* @x.121
  %520 = load i32, i32* @y.122
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %532

; <label>:527:                                    ; preds = %originalBBpart236
  %528 = landingpad { i8*, i32 }
          cleanup
  %529 = extractvalue { i8*, i32 } %528, 0
  store i8* %529, i8** %19, align 8
  %530 = extractvalue { i8*, i32 } %528, 1
  store i32 %530, i32* %20, align 4
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %35) #2
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %32)
          to label %531 unwind label %681

; <label>:531:                                    ; preds = %527
  br label %532

; <label>:532:                                    ; preds = %531, %originalBBpart268
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %34) #2
  br label %640

; <label>:533:                                    ; preds = %originalBBpart272, %542, %504, %500, %originalBBpart264, %476, %472, %448, %444, %422, %originalBBpart252, %379, %376, %originalBBpart244, %350, %originalBBpart240, %329, %326
  %534 = landingpad { i8*, i32 }
          cleanup
  %535 = extractvalue { i8*, i32 } %534, 0
  store i8* %535, i8** %19, align 8
  %536 = extractvalue { i8*, i32 } %534, 1
  store i32 %536, i32* %20, align 4
  br label %638

; <label>:537:                                    ; preds = %328
  %538 = landingpad { i8*, i32 }
          cleanup
  %539 = extractvalue { i8*, i32 } %538, 0
  store i8* %539, i8** %19, align 8
  %540 = extractvalue { i8*, i32 } %538, 1
  store i32 %540, i32* %20, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %36)
          to label %541 unwind label %681

; <label>:541:                                    ; preds = %537
  br label %638

; <label>:542:                                    ; preds = %506, %originalBBpart260
  %543 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  %544 = load i32, i32* %37, align 4
  %545 = invoke dereferenceable(64) %class.BlockVector* @_ZN13MGLevelObjectI11BlockVectorIdEEixEj(%class.MGLevelObject.131* %543, i32 %544)
          to label %546 unwind label %533

; <label>:546:                                    ; preds = %542
  %547 = load i32, i32* @x.121
  %548 = load i32, i32* @y.122
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %546, %originalBB70alteredBB
  %555 = load i32, i32* @x.121
  %556 = load i32, i32* @y.122
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  invoke void @_ZN11BlockVectorIdE13collect_sizesEv(%class.BlockVector* %545)
          to label %563 unwind label %533

; <label>:563:                                    ; preds = %originalBBpart272
  %564 = load i32, i32* @x.121
  %565 = load i32, i32* @y.122
  %566 = sub i32 %564, 1
  %567 = mul i32 %564, %566
  %568 = urem i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %569, %570
  br i1 %571, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %563, %originalBB74alteredBB
  %572 = load i32, i32* @x.121
  %573 = load i32, i32* @y.122
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %580

; <label>:580:                                    ; preds = %originalBBpart276
  %581 = load i32, i32* %39, align 4
  %582 = add i32 %581, 1
  store i32 %582, i32* %39, align 4
  br label %379

; <label>:583:                                    ; preds = %442
  %584 = load i32, i32* @x.121
  %585 = load i32, i32* @y.122
  %586 = sub i32 %584, 1
  %587 = mul i32 %584, %586
  %588 = urem i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = icmp slt i32 %585, 10
  %591 = or i1 %589, %590
  br i1 %591, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %583, %originalBB78alteredBB
  %592 = load i32, i32* @x.121
  %593 = load i32, i32* @y.122
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %600

; <label>:600:                                    ; preds = %originalBBpart280
  %601 = load i32, i32* %37, align 4
  %602 = add i32 %601, 1
  store i32 %602, i32* %37, align 4
  br label %350

; <label>:603:                                    ; preds = %354
  %604 = load i32, i32* @x.121
  %605 = load i32, i32* @y.122
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %603, %originalBB82alteredBB
  %612 = load i32, i32* @x.121
  %613 = load i32, i32* @y.122
  %614 = sub i32 %612, 1
  %615 = mul i32 %612, %614
  %616 = urem i32 %615, 2
  %617 = icmp eq i32 %616, 0
  %618 = icmp slt i32 %613, 10
  %619 = or i1 %617, %618
  br i1 %619, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %31)
          to label %620 unwind label %149

; <label>:620:                                    ; preds = %originalBBpart284
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %18)
          to label %621 unwind label %145

; <label>:621:                                    ; preds = %620
  %622 = load i32, i32* @x.121
  %623 = load i32, i32* @y.122
  %624 = sub i32 %622, 1
  %625 = mul i32 %622, %624
  %626 = urem i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = icmp slt i32 %623, 10
  %629 = or i1 %627, %628
  br i1 %629, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %621, %originalBB86alteredBB
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %17)
  %630 = load i32, i32* @x.121
  %631 = load i32, i32* @y.122
  %632 = sub i32 %630, 1
  %633 = mul i32 %630, %632
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %631, 10
  %637 = or i1 %635, %636
  br i1 %637, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  ret void

; <label>:638:                                    ; preds = %541, %533
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %31)
          to label %639 unwind label %681

; <label>:639:                                    ; preds = %638
  br label %640

; <label>:640:                                    ; preds = %639, %532, %149
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %18)
          to label %641 unwind label %681

; <label>:641:                                    ; preds = %640
  br label %642

; <label>:642:                                    ; preds = %641, %145
  %643 = load i32, i32* @x.121
  %644 = load i32, i32* @y.122
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %642, %originalBB90alteredBB
  %651 = load i32, i32* @x.121
  %652 = load i32, i32* @y.122
  %653 = sub i32 %651, 1
  %654 = mul i32 %651, %653
  %655 = urem i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = icmp slt i32 %652, 10
  %658 = or i1 %656, %657
  br i1 %658, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %17)
          to label %659 unwind label %681

; <label>:659:                                    ; preds = %originalBBpart292
  %660 = load i32, i32* @x.121
  %661 = load i32, i32* @y.122
  %662 = sub i32 %660, 1
  %663 = mul i32 %660, %662
  %664 = urem i32 %663, 2
  %665 = icmp eq i32 %664, 0
  %666 = icmp slt i32 %661, 10
  %667 = or i1 %665, %666
  br i1 %667, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %659, %originalBB94alteredBB
  %668 = load i32, i32* @x.121
  %669 = load i32, i32* @y.122
  %670 = sub i32 %668, 1
  %671 = mul i32 %668, %670
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %669, 10
  %675 = or i1 %673, %674
  br i1 %675, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %676

; <label>:676:                                    ; preds = %originalBBpart296
  %677 = load i8*, i8** %19, align 8
  %678 = load i32, i32* %20, align 4
  %679 = insertvalue { i8*, i32 } undef, i8* %677, 0
  %680 = insertvalue { i8*, i32 } %679, i32 %678, 1
  resume { i8*, i32 } %680

; <label>:681:                                    ; preds = %originalBBpart292, %640, %638, %537, %527
  %682 = landingpad { i8*, i32 }
          catch i8* null
  %683 = extractvalue { i8*, i32 } %682, 0
  call void @__clang_call_terminate(i8* %683) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %684 = alloca %class.MGDoFHandler*, align 8
  %685 = alloca %class.MGLevelObject.131*, align 8
  %686 = alloca %"class.std::vector.3"*, align 8
  %687 = alloca %"class.std::vector.12"*, align 8
  %688 = alloca %"class.std::vector.3", align 8
  %689 = alloca %"class.std::vector.12", align 8
  %690 = alloca i8*
  %691 = alloca i32
  %692 = alloca i32, align 4
  %693 = alloca i32, align 4
  %694 = alloca %"struct.std::_Bit_iterator", align 8
  %695 = alloca i8, align 1
  %696 = alloca %"struct.std::_Bit_iterator", align 8
  %697 = alloca i32, align 4
  %698 = alloca %"struct.std::_Bit_reference", align 8
  %699 = alloca i32, align 4
  %700 = alloca %"struct.std::_Bit_iterator", align 8
  %701 = alloca %"struct.std::_Bit_iterator", align 8
  %702 = alloca %"class.std::vector.138", align 8
  %703 = alloca %"class.std::vector.12", align 8
  %704 = alloca i32, align 4
  %705 = alloca %"class.std::allocator.14", align 1
  %706 = alloca %"class.std::allocator.140", align 1
  %707 = alloca %"class.std::vector.12", align 8
  %708 = alloca i32, align 4
  %709 = alloca i32, align 4
  %710 = alloca i32, align 4
  %711 = alloca %"struct.std::_Bit_reference", align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %684, align 8
  store %class.MGLevelObject.131* %1, %class.MGLevelObject.131** %685, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %686, align 8
  store %"class.std::vector.12"* %3, %"class.std::vector.12"** %687, align 8
  %712 = load %"class.std::vector.3"*, %"class.std::vector.3"** %686, align 8
  call void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.3"* %688, %"class.std::vector.3"* dereferenceable(40) %712)
  %713 = load %"class.std::vector.12"*, %"class.std::vector.12"** %687, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %51
  %714 = load %class.MGDoFHandler*, %class.MGDoFHandler** %13, align 8
  %715 = bitcast %class.MGDoFHandler* %714 to %class.DoFHandler*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %80
  %716 = load i32, i32* %21, align 4
  %717 = zext i32 %716 to i64
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %99
  store i32 0, i32* %22, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %126
  %718 = load i32, i32* %22, align 4
  %_ = sub i32 %718, 1
  %gen = mul i32 %_, 1
  %719 = add i32 %718, 1
  store i32 %719, i32* %22, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %154
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %172
  %720 = icmp eq i64 %171, 0
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %190
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %256
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %308
  call void @_ZNSaISt6vectorIjSaIjEEEC2Ev(%"class.std::allocator.140"* %35) #2
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %330
  %721 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %356
  %722 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  %723 = load i32, i32* %37, align 4
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %383
  %724 = icmp ult i64 %381, %382
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %401
  %725 = load i32, i32* %38, align 4
  %726 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %14, align 8
  %727 = load i32, i32* %37, align 4
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %424
  %728 = icmp ult i32 %410, %423
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %455
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %480
  %729 = load i32, i32* %37, align 4
  %730 = zext i32 %729 to i64
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %507
  %731 = landingpad { i8*, i32 }
          cleanup
  %732 = extractvalue { i8*, i32 } %731, 0
  store i8* %732, i8** %19, align 8
  %733 = extractvalue { i8*, i32 } %731, 1
  store i32 %733, i32* %20, align 4
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %546
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %563
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %583
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %603
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %621
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %17)
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %642
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %659
  br label %originalBB94
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(40)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca %"class.std::allocator.109", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %12 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %13 = bitcast %"class.std::vector.3"* %12 to %"struct.std::_Bvector_base"*
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %15 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Bvector_base"*
  %16 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"* %15)
  %17 = call dereferenceable(1) %"class.std::allocator.4"* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_(%"class.std::allocator.4"* dereferenceable(1) %16)
  call void @_ZNSaIbEC2ImEERKSaIT_E(%"class.std::allocator.109"* %5, %"class.std::allocator.4"* dereferenceable(1) %17) #2
  invoke void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %13, %"class.std::allocator.109"* dereferenceable(1) %5)
          to label %18 unwind label %78

; <label>:18:                                     ; preds = %2
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %5) #2
  %19 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %20 = invoke i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %19)
          to label %21 unwind label %82

; <label>:21:                                     ; preds = %18
  %22 = load i32, i32* @x.123
  %23 = load i32, i32* @y.124
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i32, i32* @x.123
  %31 = load i32, i32* @y.124
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.3"* %12, i64 %20)
          to label %38 unwind label %82

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %40 = invoke { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %39)
          to label %41 unwind label %82

; <label>:41:                                     ; preds = %38
  %42 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 0
  %44 = extractvalue { i64*, i32 } %40, 0
  store i64* %44, i64** %43, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 1
  %46 = extractvalue { i64*, i32 } %40, 1
  store i32 %46, i32* %45, align 8
  %47 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %48 = invoke { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %47)
          to label %49 unwind label %82

; <label>:49:                                     ; preds = %41
  %50 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %50, i32 0, i32 0
  %52 = extractvalue { i64*, i32 } %48, 0
  store i64* %52, i64** %51, align 8
  %53 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %50, i32 0, i32 1
  %54 = extractvalue { i64*, i32 } %48, 1
  store i32 %54, i32* %53, align 8
  %55 = bitcast %"class.std::vector.3"* %12 to %"struct.std::_Bvector_base"*
  %56 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %55, i32 0, i32 0
  %57 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %56 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %58 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  %60 = bitcast %"struct.std::_Bit_iterator"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 16, i32 8, i1 false)
  %61 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.3"* %12, i64* %63, i32 %65, i64* %68, i32 %70, %"struct.std::_Bit_iterator"* byval align 8 %10)
          to label %72 unwind label %82

; <label>:72:                                     ; preds = %49
  %73 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %73, i32 0, i32 0
  %75 = extractvalue { i64*, i32 } %71, 0
  store i64* %75, i64** %74, align 8
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %73, i32 0, i32 1
  %77 = extractvalue { i64*, i32 } %71, 1
  store i32 %77, i32* %76, align 8
  ret void

; <label>:78:                                     ; preds = %2
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %6, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %7, align 4
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %5) #2
  br label %104

; <label>:82:                                     ; preds = %49, %41, %38, %originalBBpart2, %18
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %6, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %7, align 4
  %86 = bitcast %"class.std::vector.3"* %12 to %"struct.std::_Bvector_base"*
  invoke void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %86)
          to label %87 unwind label %109

; <label>:87:                                     ; preds = %82
  %88 = load i32, i32* @x.123
  %89 = load i32, i32* @y.124
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %87, %originalBB1alteredBB
  %96 = load i32, i32* @x.123
  %97 = load i32, i32* @y.124
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %104

; <label>:104:                                    ; preds = %originalBBpart24, %78
  %105 = load i8*, i8** %6, align 8
  %106 = load i32, i32* %7, align 4
  %107 = insertvalue { i8*, i32 } undef, i8* %105, 0
  %108 = insertvalue { i8*, i32 } %107, i32 %106, 1
  resume { i8*, i32 } %108

; <label>:109:                                    ; preds = %82
  %110 = load i32, i32* @x.123
  %111 = load i32, i32* @y.124
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %109, %originalBB6alteredBB
  %118 = landingpad { i8*, i32 }
          catch i8* null
  %119 = extractvalue { i8*, i32 } %118, 0
  call void @__clang_call_terminate(i8* %119) #9
  %120 = load i32, i32* @x.123
  %121 = load i32, i32* @y.124
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %87
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %109
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  call void @__clang_call_terminate(i8* %129) #9
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector.12"*, %"class.std::vector.12"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca %"class.std::vector.12"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %4, align 8
  %9 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %10 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  %11 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  %12 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %11)
  %13 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  %14 = bitcast %"class.std::vector.12"* %13 to %"struct.std::_Vector_base.13"*
  %15 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %14)
  %16 = call dereferenceable(1) %"class.std::allocator.14"* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE17_S_select_on_copyERKS1_(%"class.std::allocator.14"* dereferenceable(1) %15)
  call void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.13"* %10, i64 %12, %"class.std::allocator.14"* dereferenceable(1) %16)
  %17 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  %18 = invoke i32* @_ZNKSt6vectorIjSaIjEE5beginEv(%"class.std::vector.12"* %17)
          to label %19 unwind label %75

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.125
  %21 = load i32, i32* @y.126
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %5, i32 0, i32 0
  store i32* %18, i32** %28, align 8
  %29 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  %30 = load i32, i32* @x.125
  %31 = load i32, i32* @y.126
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %38 = invoke i32* @_ZNKSt6vectorIjSaIjEE3endEv(%"class.std::vector.12"* %29)
          to label %39 unwind label %75

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i32, i32* @x.125
  %41 = load i32, i32* @y.126
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %8, i32 0, i32 0
  store i32* %38, i32** %48, align 8
  %49 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %50 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %51, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  %55 = load i32, i32* @x.125
  %56 = load i32, i32* @y.126
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %63 = invoke dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %54)
          to label %64 unwind label %75

; <label>:64:                                     ; preds = %originalBBpart24
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %5, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %8, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = invoke i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E(i32* %66, i32* %68, i32* %53, %"class.std::allocator.14"* dereferenceable(1) %63)
          to label %70 unwind label %75

; <label>:70:                                     ; preds = %64
  %71 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %72 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %73, i32 0, i32 1
  store i32* %69, i32** %74, align 8
  ret void

; <label>:75:                                     ; preds = %64, %originalBBpart24, %originalBBpart2, %2
  %76 = load i32, i32* @x.125
  %77 = load i32, i32* @y.126
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %75, %originalBB6alteredBB
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %6, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %7, align 4
  %87 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  %88 = load i32, i32* @x.125
  %89 = load i32, i32* @y.126
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.13"* %87)
          to label %96 unwind label %118

; <label>:96:                                     ; preds = %originalBBpart28
  %97 = load i32, i32* @x.125
  %98 = load i32, i32* @y.126
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %96, %originalBB10alteredBB
  %105 = load i32, i32* @x.125
  %106 = load i32, i32* @y.126
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %113

; <label>:113:                                    ; preds = %originalBBpart212
  %114 = load i8*, i8** %6, align 8
  %115 = load i32, i32* %7, align 4
  %116 = insertvalue { i8*, i32 } undef, i8* %114, 0
  %117 = insertvalue { i8*, i32 } %116, i32 %115, 1
  resume { i8*, i32 } %117

; <label>:118:                                    ; preds = %originalBBpart28
  %119 = load i32, i32* @x.125
  %120 = load i32, i32* @y.126
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %118, %originalBB14alteredBB
  %127 = landingpad { i8*, i32 }
          catch i8* null
  %128 = extractvalue { i8*, i32 } %127, 0
  call void @__clang_call_terminate(i8* %128) #9
  %129 = load i32, i32* @x.125
  %130 = load i32, i32* @y.126
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %137 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %5, i32 0, i32 0
  store i32* %18, i32** %137, align 8
  %138 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %8, i32 0, i32 0
  store i32* %38, i32** %139, align 8
  %140 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %140, i32 0, i32 0
  %142 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %141 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %142, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %75
  %146 = landingpad { i8*, i32 }
          cleanup
  %147 = extractvalue { i8*, i32 } %146, 0
  store i8* %147, i8** %6, align 8
  %148 = extractvalue { i8*, i32 } %146, 1
  store i32 %148, i32* %7, align 4
  %149 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %96
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %118
  %150 = landingpad { i8*, i32 }
          catch i8* null
  %151 = extractvalue { i8*, i32 } %150, 0
  call void @__clang_call_terminate(i8* %151) #9
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %3 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  %4 = bitcast %"class.std::vector.12"* %3 to %"struct.std::_Vector_base.13"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::vector.12"* %3 to %"struct.std::_Vector_base.13"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = ptrtoint i32* %8 to i64
  %15 = ptrtoint i32* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 4
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.12"*, i64, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.129
  %5 = load i32, i32* @y.130
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.12"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32 %2, i32* %14, align 4
  %16 = load %"class.std::vector.12"*, %"class.std::vector.12"** %12, align 8
  %17 = load i64, i64* %13, align 8
  %18 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %16)
  %19 = icmp ugt i64 %17, %18
  %20 = load i32, i32* @x.129
  %21 = load i32, i32* @y.130
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %36

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.12"* %16)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store i32* %29, i32** %30, align 8
  %31 = load i64, i64* %13, align 8
  %32 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %16)
  %33 = sub i64 %31, %32
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  call void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector.12"* %16, i32* %35, i64 %33, i32* dereferenceable(4) %14)
  br label %65

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i64, i64* %13, align 8
  %38 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %16)
  %39 = icmp ult i64 %37, %38
  br i1 %39, label %40, label %64

; <label>:40:                                     ; preds = %36
  %41 = load i32, i32* @x.129
  %42 = load i32, i32* @y.130
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %40, %originalBB1alteredBB
  %49 = bitcast %"class.std::vector.12"* %16 to %"struct.std::_Vector_base.13"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %50 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %51, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = load i64, i64* %13, align 8
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  call void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector.12"* %16, i32* %55)
  %56 = load i32, i32* @x.129
  %57 = load i32, i32* @y.130
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %64

; <label>:64:                                     ; preds = %originalBBpart24, %36
  br label %65

; <label>:65:                                     ; preds = %64, %28
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %66 = alloca %"class.std::vector.12"*, align 8
  %67 = alloca i64, align 8
  %68 = alloca i32, align 4
  %69 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %66, align 8
  store i64 %1, i64* %67, align 8
  store i32 %2, i32* %68, align 4
  %70 = load %"class.std::vector.12"*, %"class.std::vector.12"** %66, align 8
  %71 = load i64, i64* %67, align 8
  %72 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %70)
  %73 = icmp ugt i64 %71, %72
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %40
  %74 = bitcast %"class.std::vector.12"* %16 to %"struct.std::_Vector_base.13"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %75 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %76, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = load i64, i64* %13, align 8
  %80 = getelementptr inbounds i32, i32* %78, i64 %79
  call void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector.12"* %16, i32* %80)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %6 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %5)
  %7 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 0
  %9 = extractvalue { i64*, i32 } %6, 0
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 1
  %11 = extractvalue { i64*, i32 } %6, 1
  store i32 %11, i32* %10, align 8
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  %13 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %5)
  %14 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 0
  %16 = extractvalue { i64*, i32 } %13, 0
  store i64* %16, i64** %15, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 1
  %18 = extractvalue { i64*, i32 } %13, 1
  store i32 %18, i32* %17, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %20 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %12, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %19)
  ret i64 %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE6resizeEmb(%"class.std::vector.3"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  %10 = zext i1 %2 to i8
  store i8 %10, i8* %6, align 1
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %12 = load i64, i64* %5, align 8
  %13 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %11)
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %34

; <label>:15:                                     ; preds = %3
  %16 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %11)
  %17 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  %19 = extractvalue { i64*, i32 } %16, 0
  store i64* %19, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  %21 = extractvalue { i64*, i32 } %16, 1
  store i32 %21, i32* %20, align 8
  %22 = load i64, i64* %5, align 8
  %23 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %8, i64 %22)
  %24 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 0
  %26 = extractvalue { i64*, i32 } %23, 0
  store i64* %26, i64** %25, align 8
  %27 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 1
  %28 = extractvalue { i64*, i32 } %23, 1
  store i32 %28, i32* %27, align 8
  %29 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  call void @_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator(%"class.std::vector.3"* %11, i64* %31, i32 %33)
  br label %49

; <label>:34:                                     ; preds = %3
  %35 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %11)
  %36 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %36, i32 0, i32 0
  %38 = extractvalue { i64*, i32 } %35, 0
  store i64* %38, i64** %37, align 8
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %36, i32 0, i32 1
  %40 = extractvalue { i64*, i32 } %35, 1
  store i32 %40, i32* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %11)
  %43 = sub i64 %41, %42
  %44 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  call void @_ZNSt6vectorIbSaIbEE6insertESt13_Bit_iteratormRKb(%"class.std::vector.3"* %11, i64* %46, i32 %48, i64 %43, i8* dereferenceable(1) %6)
  br label %49

; <label>:49:                                     ; preds = %34, %15
  %50 = load i32, i32* @x.133
  %51 = load i32, i32* @y.134
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %49, %originalBBalteredBB
  %58 = load i32, i32* @x.133
  %59 = load i32, i32* @y.134
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %49
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt6fill_nISt13_Bit_iteratorjbET_S1_T0_RKT1_(i64*, i32, i32, i8* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %13 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 0
  store i64* %0, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 1
  store i32 %1, i32* %14, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %15 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  %16 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 16, i32 8, i1 false)
  %17 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %19, i32 %21)
  %23 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  %25 = extractvalue { i64*, i32 } %22, 0
  store i64* %25, i64** %24, align 8
  %26 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  %27 = extractvalue { i64*, i32 } %22, 1
  store i32 %27, i32* %26, align 8
  %28 = load i32, i32* %7, align 4
  %29 = load i8*, i8** %8, align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = call { i64*, i32 } @_ZSt10__fill_n_aISt13_Bit_iteratorjbEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %32, i32 %34, i32 %28, i8* dereferenceable(1) %29)
  %36 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %36, i32 0, i32 0
  %38 = extractvalue { i64*, i32 } %35, 0
  store i64* %38, i64** %37, align 8
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %36, i32 0, i32 1
  %40 = extractvalue { i64*, i32 } %35, 1
  store i32 %40, i32* %39, align 8
  %41 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = call { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16) %6, i64* %43, i32 %45)
  %47 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i32 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i32 } %46, 1
  store i32 %51, i32* %50, align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %53 = load { i64*, i32 }, { i64*, i32 }* %52, align 8
  ret { i64*, i32 } %53
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %10 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %2, i64* %11, i32 0)
  %12 = bitcast %"struct.std::_Bit_iterator"* %2 to { i64*, i32 }*
  %13 = load { i64*, i32 }, { i64*, i32 }* %12, align 8
  ret { i64*, i32 } %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZSt10accumulateISt13_Bit_iteratorjET0_T_S2_S1_(i64*, i32, i64*, i32, i32) #0 comdat {
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"struct.std::_Bit_reference", align 8
  %10 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %11 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %10, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %10, i32 0, i32 1
  store i32 %1, i32* %12, align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %3, i32* %15, align 8
  store i32 %4, i32* %8, align 4
  br label %16

; <label>:16:                                     ; preds = %63, %5
  %17 = load i32, i32* @x.139
  %18 = load i32, i32* @y.140
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %26 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %27 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"* %25, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %26)
  %28 = load i32, i32* @x.139
  %29 = load i32, i32* @y.140
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %65

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i32, i32* @x.139
  %38 = load i32, i32* @y.140
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i32, i32* %8, align 4
  %46 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %47 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %48 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i64 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i64 } %46, 1
  store i64 %51, i64* %50, align 8
  %52 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %9)
  %53 = zext i1 %52 to i32
  %54 = add i32 %45, %53
  store i32 %54, i32* %8, align 4
  %55 = load i32, i32* @x.139
  %56 = load i32, i32* @y.140
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63

; <label>:63:                                     ; preds = %originalBBpart24
  %64 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %6)
  br label %16

; <label>:65:                                     ; preds = %originalBBpart2
  %66 = load i32, i32* %8, align 4
  ret i32 %66

originalBBalteredBB:                              ; preds = %originalBB, %16
  %67 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %68 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %69 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"* %67, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %68)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %70 = load i32, i32* %8, align 4
  %71 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %72 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %73 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %72, i32 0, i32 0
  %74 = extractvalue { i64*, i64 } %71, 0
  store i64* %74, i64** %73, align 8
  %75 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %72, i32 0, i32 1
  %76 = extractvalue { i64*, i64 } %71, 1
  store i64 %76, i64* %75, align 8
  %77 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %9)
  %78 = zext i1 %77 to i32
  %79 = add i32 %70, %78
  store i32 %79, i32* %8, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %7, i32 0, i32 1
  %9 = bitcast %"struct.std::_Bit_iterator"* %2 to i8*
  %10 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Bit_iterator"* %2 to { i64*, i32 }*
  %12 = load { i64*, i32 }, { i64*, i32 }* %11, align 8
  ret { i64*, i32 } %12
}

declare i32 @_ZNK13TriangulationILi3EE8n_levelsEv(%class.Triangulation*) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIjSaIjEEEC2Ev(%"class.std::allocator.140"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.143
  %3 = load i32, i32* @y.144
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.140"*, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %10, align 8
  %11 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %10, align 8
  %12 = bitcast %"class.std::allocator.140"* %11 to %"class.__gnu_cxx::new_allocator.141"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEEC2Ev(%"class.__gnu_cxx::new_allocator.141"* %12) #2
  %13 = load i32, i32* @x.143
  %14 = load i32, i32* @y.144
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.140"*, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %21, align 8
  %22 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %21, align 8
  %23 = bitcast %"class.std::allocator.140"* %22 to %"class.__gnu_cxx::new_allocator.141"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEEC2Ev(%"class.__gnu_cxx::new_allocator.141"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IjSaIjEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.138"*, i64, %"class.std::vector.12"* dereferenceable(24), %"class.std::allocator.140"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.138"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.12"*, align 8
  %8 = alloca %"class.std::allocator.140"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.138"* %0, %"class.std::vector.138"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.12"* %2, %"class.std::vector.12"** %7, align 8
  store %"class.std::allocator.140"* %3, %"class.std::allocator.140"** %8, align 8
  %11 = load %"class.std::vector.138"*, %"class.std::vector.138"** %5, align 8
  %12 = bitcast %"class.std::vector.138"* %11 to %"struct.std::_Vector_base.139"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %8, align 8
  %15 = call i64 @_ZNSt6vectorIS_IjSaIjEESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %13, %"class.std::allocator.140"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.139"* %12, i64 %15, %"class.std::allocator.140"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load %"class.std::vector.12"*, %"class.std::vector.12"** %7, align 8
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.138"* %11, i64 %17, %"class.std::vector.12"* dereferenceable(24) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %4
  ret void

; <label>:20:                                     ; preds = %4
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %9, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %10, align 4
  %24 = bitcast %"class.std::vector.138"* %11 to %"struct.std::_Vector_base.139"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EED2Ev(%"struct.std::_Vector_base.139"* %24)
          to label %25 unwind label %31

; <label>:25:                                     ; preds = %20
  br label %26

; <label>:26:                                     ; preds = %25
  %27 = load i8*, i8** %9, align 8
  %28 = load i32, i32* %10, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30

; <label>:31:                                     ; preds = %20
  %32 = landingpad { i8*, i32 }
          catch i8* null
  %33 = extractvalue { i8*, i32 } %32, 0
  call void @__clang_call_terminate(i8* %33) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.140"*, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %2, align 8
  %3 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %2, align 8
  %4 = bitcast %"class.std::allocator.140"* %3 to %"class.__gnu_cxx::new_allocator.141"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEED2Ev(%"class.__gnu_cxx::new_allocator.141"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools24count_dofs_per_componentILi3EEEvRK12MGDoFHandlerIXT_EERSt6vectorIS5_IjSaIjEESaIS7_EES7_(%class.MGDoFHandler* dereferenceable(168), %"class.std::vector.138"* dereferenceable(24), %"class.std::vector.12"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MGDoFHandler*, align 8
  %5 = alloca %"class.std::vector.138"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector.75", align 8
  %14 = alloca %"class.std::vector.3", align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.std::allocator.109", align 1
  %17 = alloca i8*
  %18 = alloca i32
  %19 = alloca %"class.std::allocator.77", align 1
  %20 = alloca %"class.std::vector.75", align 8
  %21 = alloca %"class.std::vector.3", align 8
  %22 = alloca i8, align 1
  %23 = alloca %"class.std::allocator.109", align 1
  %24 = alloca %"class.std::allocator.77", align 1
  %25 = alloca %"class.Threads::ThreadGroup", align 8
  %26 = alloca i32, align 4
  %27 = alloca void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, align 8
  %28 = alloca %"struct.std::_Bit_reference", align 8
  %29 = alloca %"class.Threads::Thread", align 1
  %30 = alloca %"class.Threads::internal::fun_forwarder", align 8
  %31 = alloca %"class.Threads::Thread", align 1
  %32 = alloca i32, align 4
  %33 = alloca %"struct.std::_Bit_iterator", align 8
  %34 = alloca %"struct.std::_Bit_iterator", align 8
  %35 = alloca i8, align 1
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %4, align 8
  store %"class.std::vector.138"* %1, %"class.std::vector.138"** %5, align 8
  %36 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %37 = bitcast %class.MGDoFHandler* %36 to %class.DoFHandler*
  %38 = call dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %37)
  %39 = call i32 @_ZNK13TriangulationILi3EE8n_levelsEv(%class.Triangulation* %38)
  store i32 %39, i32* %6, align 4
  %40 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %41 = bitcast %class.MGDoFHandler* %40 to %class.DoFHandler*
  %42 = call dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %41)
  %43 = bitcast %class.FiniteElement* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 24
  %45 = bitcast i8* %44 to %class.FiniteElementData*
  %46 = call i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %45)
  store i32 %46, i32* %7, align 4
  %47 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %2)
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %129

; <label>:49:                                     ; preds = %3
  %50 = load i32, i32* @x.149
  %51 = load i32, i32* @y.150
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %49, %originalBBalteredBB
  %58 = load i32, i32* %7, align 4
  %59 = zext i32 %58 to i64
  call void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.12"* %2, i64 %59, i32 0)
  store i32 0, i32* %8, align 4
  %60 = load i32, i32* @x.149
  %61 = load i32, i32* @y.150
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %68

; <label>:68:                                     ; preds = %originalBBpart216, %originalBBpart2
  %69 = load i32, i32* @x.149
  %70 = load i32, i32* @y.150
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %68, %originalBB1alteredBB
  %77 = load i32, i32* %8, align 4
  %78 = load i32, i32* %7, align 4
  %79 = icmp ult i32 %77, %78
  %80 = load i32, i32* @x.149
  %81 = load i32, i32* @y.150
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %79, label %88, label %128

; <label>:88:                                     ; preds = %originalBBpart24
  %89 = load i32, i32* @x.149
  %90 = load i32, i32* @y.150
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %88, %originalBB6alteredBB
  %97 = load i32, i32* %8, align 4
  %98 = load i32, i32* %8, align 4
  %99 = zext i32 %98 to i64
  %100 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %2, i64 %99)
  store i32 %97, i32* %100, align 4
  %101 = load i32, i32* @x.149
  %102 = load i32, i32* @y.150
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %109

; <label>:109:                                    ; preds = %originalBBpart28
  %110 = load i32, i32* @x.149
  %111 = load i32, i32* @y.150
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %109, %originalBB10alteredBB
  %118 = load i32, i32* %8, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %8, align 4
  %120 = load i32, i32* @x.149
  %121 = load i32, i32* @y.150
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart216, label %originalBB10alteredBB

originalBBpart216:                                ; preds = %originalBB10
  br label %68

; <label>:128:                                    ; preds = %originalBBpart24
  br label %129

; <label>:129:                                    ; preds = %128, %3
  %130 = load i32, i32* @x.149
  %131 = load i32, i32* @y.150
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %129, %originalBB18alteredBB
  store i32 0, i32* %9, align 4
  %138 = load i32, i32* @x.149
  %139 = load i32, i32* @y.150
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %146

; <label>:146:                                    ; preds = %632, %originalBBpart220
  %147 = load i32, i32* @x.149
  %148 = load i32, i32* @y.150
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %146, %originalBB22alteredBB
  %155 = load i32, i32* %9, align 4
  %156 = load i32, i32* %6, align 4
  %157 = icmp ult i32 %155, %156
  %158 = load i32, i32* @x.149
  %159 = load i32, i32* @y.150
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %157, label %166, label %635

; <label>:166:                                    ; preds = %originalBBpart224
  %167 = load %"class.std::vector.138"*, %"class.std::vector.138"** %5, align 8
  %168 = load i32, i32* %9, align 4
  %169 = zext i32 %168 to i64
  %170 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %167, i64 %169)
  %171 = load i32, i32* %7, align 4
  %172 = zext i32 %171 to i64
  call void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.12"* %170, i64 %172, i32 0)
  %173 = load %"class.std::vector.138"*, %"class.std::vector.138"** %5, align 8
  %174 = load i32, i32* %9, align 4
  %175 = zext i32 %174 to i64
  %176 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %173, i64 %175)
  %177 = call i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.12"* %176)
  %178 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store i32* %177, i32** %178, align 8
  %179 = load %"class.std::vector.138"*, %"class.std::vector.138"** %5, align 8
  %180 = load i32, i32* %9, align 4
  %181 = zext i32 %180 to i64
  %182 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %179, i64 %181)
  %183 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.12"* %182)
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store i32* %183, i32** %184, align 8
  store i32 0, i32* %12, align 4
  %185 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %186 = load i32*, i32** %185, align 8
  %187 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %188 = load i32*, i32** %187, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEjEvT_S7_RKT0_(i32* %186, i32* %188, i32* dereferenceable(4) %12)
  %189 = load i32, i32* %7, align 4
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %216

; <label>:191:                                    ; preds = %166
  %192 = load i32, i32* @x.149
  %193 = load i32, i32* @y.150
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %191, %originalBB26alteredBB
  %200 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %201 = load i32, i32* %9, align 4
  %202 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %200, i32 %201)
  %203 = load %"class.std::vector.138"*, %"class.std::vector.138"** %5, align 8
  %204 = load i32, i32* %9, align 4
  %205 = zext i32 %204 to i64
  %206 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %203, i64 %205)
  %207 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %206, i64 0)
  store i32 %202, i32* %207, align 4
  %208 = load i32, i32* @x.149
  %209 = load i32, i32* @y.150
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %631

; <label>:216:                                    ; preds = %166
  %217 = load i32, i32* %7, align 4
  %218 = zext i32 %217 to i64
  %219 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %220 = load i32, i32* %9, align 4
  %221 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %219, i32 %220)
  %222 = zext i32 %221 to i64
  store i8 0, i8* %15, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %16) #2
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %14, i64 %222, i8* dereferenceable(1) %15, %"class.std::allocator.109"* dereferenceable(1) %16)
          to label %223 unwind label %434

; <label>:223:                                    ; preds = %216
  %224 = load i32, i32* @x.149
  %225 = load i32, i32* @y.150
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %223, %originalBB30alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %19) #2
  %232 = load i32, i32* @x.149
  %233 = load i32, i32* @y.150
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %13, i64 %218, %"class.std::vector.3"* dereferenceable(40) %14, %"class.std::allocator.77"* dereferenceable(1) %19)
          to label %240 unwind label %454

; <label>:240:                                    ; preds = %originalBBpart232
  %241 = load i32, i32* @x.149
  %242 = load i32, i32* @y.150
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %240, %originalBB34alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %19) #2
  %249 = load i32, i32* @x.149
  %250 = load i32, i32* @y.150
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %14)
          to label %257 unwind label %434

; <label>:257:                                    ; preds = %originalBBpart236
  %258 = load i32, i32* @x.149
  %259 = load i32, i32* @y.150
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %257, %originalBB38alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %16) #2
  %266 = load i32, i32* %7, align 4
  %267 = zext i32 %266 to i64
  %268 = load i32, i32* %7, align 4
  %269 = zext i32 %268 to i64
  store i8 0, i8* %22, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %23) #2
  %270 = load i32, i32* @x.149
  %271 = load i32, i32* @y.150
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.3"* %21, i64 %269, i8* dereferenceable(1) %22, %"class.std::allocator.109"* dereferenceable(1) %23)
          to label %278 unwind label %460

; <label>:278:                                    ; preds = %originalBBpart240
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %24) #2
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.75"* %20, i64 %267, %"class.std::vector.3"* dereferenceable(40) %21, %"class.std::allocator.77"* dereferenceable(1) %24)
          to label %279 unwind label %464

; <label>:279:                                    ; preds = %278
  %280 = load i32, i32* @x.149
  %281 = load i32, i32* @y.150
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %279, %originalBB42alteredBB
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %24) #2
  %288 = load i32, i32* @x.149
  %289 = load i32, i32* @y.150
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %21)
          to label %296 unwind label %460

; <label>:296:                                    ; preds = %originalBBpart244
  %297 = load i32, i32* @x.149
  %298 = load i32, i32* @y.150
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %296, %originalBB46alteredBB
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %23) #2
  %305 = load i32, i32* @x.149
  %306 = load i32, i32* @y.150
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  invoke void @_ZN7Threads11ThreadGroupIvEC2Ev(%"class.Threads::ThreadGroup"* %25)
          to label %313 unwind label %486

; <label>:313:                                    ; preds = %originalBBpart248
  %314 = load i32, i32* @x.149
  %315 = load i32, i32* @y.150
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %313, %originalBB50alteredBB
  store i32 0, i32* %26, align 4
  %322 = load i32, i32* @x.149
  %323 = load i32, i32* @y.150
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %330

; <label>:330:                                    ; preds = %431, %originalBBpart252
  %331 = load i32, i32* @x.149
  %332 = load i32, i32* @y.150
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %330, %originalBB54alteredBB
  %339 = load i32, i32* %26, align 4
  %340 = load i32, i32* %7, align 4
  %341 = icmp ult i32 %339, %340
  %342 = load i32, i32* @x.149
  %343 = load i32, i32* @y.150
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %341, label %350, label %494

; <label>:350:                                    ; preds = %originalBBpart256
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* @_ZN8DoFTools18extract_level_dofsILi3EEEvjRK12MGDoFHandlerIXT_EERKSt6vectorIbSaIbEERS7_, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %27, align 8
  %351 = load i32, i32* %26, align 4
  %352 = zext i32 %351 to i64
  %353 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %20, i64 %352)
          to label %354 unwind label %490

; <label>:354:                                    ; preds = %350
  %355 = load i32, i32* %26, align 4
  %356 = zext i32 %355 to i64
  %357 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %353, i64 %356)
          to label %358 unwind label %490

; <label>:358:                                    ; preds = %354
  %359 = load i32, i32* @x.149
  %360 = load i32, i32* @y.150
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %358, %originalBB58alteredBB
  %367 = bitcast %"struct.std::_Bit_reference"* %28 to { i64*, i64 }*
  %368 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %367, i32 0, i32 0
  %369 = extractvalue { i64*, i64 } %357, 0
  store i64* %369, i64** %368, align 8
  %370 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %367, i32 0, i32 1
  %371 = extractvalue { i64*, i64 } %357, 1
  store i64 %371, i64* %370, align 8
  %372 = load i32, i32* @x.149
  %373 = load i32, i32* @y.150
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  %380 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %28, i1 zeroext true)
          to label %381 unwind label %490

; <label>:381:                                    ; preds = %originalBBpart260
  %382 = load i32, i32* @x.149
  %383 = load i32, i32* @y.150
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %381, %originalBB62alteredBB
  %390 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %27, align 8
  %391 = load i32, i32* @x.149
  %392 = load i32, i32* @y.150
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  %399 = invoke void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* @_ZN7Threads5spawnIvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS7_EENS_8internal13fun_forwarderIT_N5boost6tuples5tupleIT0_T1_T2_T3_NSF_9null_typeESL_SL_SL_SL_SL_EEXsr5boost6tuples6lengthISM_EE5valueEEEPFSD_SH_SI_SJ_SK_E(void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %390)
          to label %400 unwind label %490

; <label>:400:                                    ; preds = %originalBBpart264
  %401 = getelementptr inbounds %"class.Threads::internal::fun_forwarder", %"class.Threads::internal::fun_forwarder"* %30, i32 0, i32 0
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %399, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %401, align 8
  %402 = load i32, i32* %9, align 4
  %403 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %404 = load i32, i32* %26, align 4
  %405 = zext i32 %404 to i64
  %406 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %20, i64 %405)
          to label %407 unwind label %490

; <label>:407:                                    ; preds = %400
  %408 = load i32, i32* %26, align 4
  %409 = zext i32 %408 to i64
  %410 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %13, i64 %409)
          to label %411 unwind label %490

; <label>:411:                                    ; preds = %407
  invoke void @_ZN7Threads8internal13fun_forwarderIvN5boost6tuples5tupleIjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSB_NS3_9null_typeESF_SF_SF_SF_SF_EELi4EEclEjS8_SD_SE_(%"class.Threads::internal::fun_forwarder"* %30, i32 %402, %class.MGDoFHandler* dereferenceable(168) %403, %"class.std::vector.3"* dereferenceable(40) %406, %"class.std::vector.3"* dereferenceable(40) %410)
          to label %412 unwind label %490

; <label>:412:                                    ; preds = %411
  %413 = invoke dereferenceable(24) %"class.Threads::ThreadGroup"* @_ZN7Threads11ThreadGroupIvEpLERKNS_6ThreadIvEE(%"class.Threads::ThreadGroup"* %25, %"class.Threads::Thread"* dereferenceable(1) %29)
          to label %414 unwind label %490

; <label>:414:                                    ; preds = %412
  %415 = load i32, i32* @x.149
  %416 = load i32, i32* @y.150
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %414, %originalBB66alteredBB
  %423 = load i32, i32* @x.149
  %424 = load i32, i32* @y.150
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %431

; <label>:431:                                    ; preds = %originalBBpart268
  %432 = load i32, i32* %26, align 4
  %433 = add i32 %432, 1
  store i32 %433, i32* %26, align 4
  br label %330

; <label>:434:                                    ; preds = %originalBBpart236, %216
  %435 = load i32, i32* @x.149
  %436 = load i32, i32* @y.150
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %434, %originalBB70alteredBB
  %443 = landingpad { i8*, i32 }
          cleanup
  %444 = extractvalue { i8*, i32 } %443, 0
  store i8* %444, i8** %17, align 8
  %445 = extractvalue { i8*, i32 } %443, 1
  store i32 %445, i32* %18, align 4
  %446 = load i32, i32* @x.149
  %447 = load i32, i32* @y.150
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %459

; <label>:454:                                    ; preds = %originalBBpart232
  %455 = landingpad { i8*, i32 }
          cleanup
  %456 = extractvalue { i8*, i32 } %455, 0
  store i8* %456, i8** %17, align 8
  %457 = extractvalue { i8*, i32 } %455, 1
  store i32 %457, i32* %18, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %19) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %14)
          to label %458 unwind label %673

; <label>:458:                                    ; preds = %454
  br label %459

; <label>:459:                                    ; preds = %458, %originalBBpart272
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %16) #2
  br label %652

; <label>:460:                                    ; preds = %originalBBpart244, %originalBBpart240
  %461 = landingpad { i8*, i32 }
          cleanup
  %462 = extractvalue { i8*, i32 } %461, 0
  store i8* %462, i8** %17, align 8
  %463 = extractvalue { i8*, i32 } %461, 1
  store i32 %463, i32* %18, align 4
  br label %485

; <label>:464:                                    ; preds = %278
  %465 = landingpad { i8*, i32 }
          cleanup
  %466 = extractvalue { i8*, i32 } %465, 0
  store i8* %466, i8** %17, align 8
  %467 = extractvalue { i8*, i32 } %465, 1
  store i32 %467, i32* %18, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %24) #2
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %21)
          to label %468 unwind label %673

; <label>:468:                                    ; preds = %464
  %469 = load i32, i32* @x.149
  %470 = load i32, i32* @y.150
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %468, %originalBB74alteredBB
  %477 = load i32, i32* @x.149
  %478 = load i32, i32* @y.150
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %485

; <label>:485:                                    ; preds = %originalBBpart276, %460
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %23) #2
  br label %629

; <label>:486:                                    ; preds = %603, %originalBBpart248
  %487 = landingpad { i8*, i32 }
          cleanup
  %488 = extractvalue { i8*, i32 } %487, 0
  store i8* %488, i8** %17, align 8
  %489 = extractvalue { i8*, i32 } %487, 1
  store i32 %489, i32* %18, align 4
  br label %627

; <label>:490:                                    ; preds = %591, %587, %582, %565, %563, %originalBBpart288, %originalBBpart284, %516, %494, %412, %411, %407, %400, %originalBBpart264, %originalBBpart260, %354, %350
  %491 = landingpad { i8*, i32 }
          cleanup
  %492 = extractvalue { i8*, i32 } %491, 0
  store i8* %492, i8** %17, align 8
  %493 = extractvalue { i8*, i32 } %491, 1
  store i32 %493, i32* %18, align 4
  invoke void @_ZN7Threads11ThreadGroupIvED2Ev(%"class.Threads::ThreadGroup"* %25)
          to label %622 unwind label %673

; <label>:494:                                    ; preds = %originalBBpart256
  invoke void @_ZNK7Threads11ThreadGroupIvE8join_allEv(%"class.Threads::ThreadGroup"* %25)
          to label %495 unwind label %490

; <label>:495:                                    ; preds = %494
  %496 = load i32, i32* @x.149
  %497 = load i32, i32* @y.150
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %495, %originalBB78alteredBB
  store i32 0, i32* %32, align 4
  %504 = load i32, i32* @x.149
  %505 = load i32, i32* @y.150
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %512

; <label>:512:                                    ; preds = %600, %originalBBpart280
  %513 = load i32, i32* %32, align 4
  %514 = load i32, i32* %7, align 4
  %515 = icmp ult i32 %513, %514
  br i1 %515, label %516, label %603

; <label>:516:                                    ; preds = %512
  %517 = load i32, i32* %32, align 4
  %518 = zext i32 %517 to i64
  %519 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %13, i64 %518)
          to label %520 unwind label %490

; <label>:520:                                    ; preds = %516
  %521 = load i32, i32* @x.149
  %522 = load i32, i32* @y.150
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %520, %originalBB82alteredBB
  %529 = load i32, i32* @x.149
  %530 = load i32, i32* @y.150
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  %537 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %519)
          to label %538 unwind label %490

; <label>:538:                                    ; preds = %originalBBpart284
  %539 = load i32, i32* @x.149
  %540 = load i32, i32* @y.150
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %538, %originalBB86alteredBB
  %547 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %548 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %547, i32 0, i32 0
  %549 = extractvalue { i64*, i32 } %537, 0
  store i64* %549, i64** %548, align 8
  %550 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %547, i32 0, i32 1
  %551 = extractvalue { i64*, i32 } %537, 1
  store i32 %551, i32* %550, align 8
  %552 = load i32, i32* %32, align 4
  %553 = zext i32 %552 to i64
  %554 = load i32, i32* @x.149
  %555 = load i32, i32* @y.150
  %556 = sub i32 %554, 1
  %557 = mul i32 %554, %556
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %559, %560
  br i1 %561, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  %562 = invoke dereferenceable(40) %"class.std::vector.3"* @_ZNSt6vectorIS_IbSaIbEESaIS1_EEixEm(%"class.std::vector.75"* %13, i64 %553)
          to label %563 unwind label %490

; <label>:563:                                    ; preds = %originalBBpart288
  %564 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %562)
          to label %565 unwind label %490

; <label>:565:                                    ; preds = %563
  %566 = bitcast %"struct.std::_Bit_iterator"* %34 to { i64*, i32 }*
  %567 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %566, i32 0, i32 0
  %568 = extractvalue { i64*, i32 } %564, 0
  store i64* %568, i64** %567, align 8
  %569 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %566, i32 0, i32 1
  %570 = extractvalue { i64*, i32 } %564, 1
  store i32 %570, i32* %569, align 8
  store i8 1, i8* %35, align 1
  %571 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %572 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %571, i32 0, i32 0
  %573 = load i64*, i64** %572, align 8
  %574 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %571, i32 0, i32 1
  %575 = load i32, i32* %574, align 8
  %576 = bitcast %"struct.std::_Bit_iterator"* %34 to { i64*, i32 }*
  %577 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %576, i32 0, i32 0
  %578 = load i64*, i64** %577, align 8
  %579 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %576, i32 0, i32 1
  %580 = load i32, i32* %579, align 8
  %581 = invoke i64 @_ZSt5countISt13_Bit_iteratorbENSt15iterator_traitsIT_E15difference_typeES2_S2_RKT0_(i64* %573, i32 %575, i64* %578, i32 %580, i8* dereferenceable(1) %35)
          to label %582 unwind label %490

; <label>:582:                                    ; preds = %565
  %583 = load %"class.std::vector.138"*, %"class.std::vector.138"** %5, align 8
  %584 = load i32, i32* %9, align 4
  %585 = zext i32 %584 to i64
  %586 = invoke dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %583, i64 %585)
          to label %587 unwind label %490

; <label>:587:                                    ; preds = %582
  %588 = load i32, i32* %32, align 4
  %589 = zext i32 %588 to i64
  %590 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %2, i64 %589)
          to label %591 unwind label %490

; <label>:591:                                    ; preds = %587
  %592 = load i32, i32* %590, align 4
  %593 = zext i32 %592 to i64
  %594 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %586, i64 %593)
          to label %595 unwind label %490

; <label>:595:                                    ; preds = %591
  %596 = load i32, i32* %594, align 4
  %597 = zext i32 %596 to i64
  %598 = add nsw i64 %597, %581
  %599 = trunc i64 %598 to i32
  store i32 %599, i32* %594, align 4
  br label %600

; <label>:600:                                    ; preds = %595
  %601 = load i32, i32* %32, align 4
  %602 = add i32 %601, 1
  store i32 %602, i32* %32, align 4
  br label %512

; <label>:603:                                    ; preds = %512
  invoke void @_ZN7Threads11ThreadGroupIvED2Ev(%"class.Threads::ThreadGroup"* %25)
          to label %604 unwind label %486

; <label>:604:                                    ; preds = %603
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %20)
          to label %605 unwind label %623

; <label>:605:                                    ; preds = %604
  %606 = load i32, i32* @x.149
  %607 = load i32, i32* @y.150
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %605, %originalBB90alteredBB
  call void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %13)
  %614 = load i32, i32* @x.149
  %615 = load i32, i32* @y.150
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %631

; <label>:622:                                    ; preds = %490
  br label %627

; <label>:623:                                    ; preds = %604
  %624 = landingpad { i8*, i32 }
          cleanup
  %625 = extractvalue { i8*, i32 } %624, 0
  store i8* %625, i8** %17, align 8
  %626 = extractvalue { i8*, i32 } %624, 1
  store i32 %626, i32* %18, align 4
  br label %629

; <label>:627:                                    ; preds = %622, %486
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %20)
          to label %628 unwind label %673

; <label>:628:                                    ; preds = %627
  br label %629

; <label>:629:                                    ; preds = %628, %623, %485
  invoke void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %13)
          to label %630 unwind label %673

; <label>:630:                                    ; preds = %629
  br label %652

; <label>:631:                                    ; preds = %originalBBpart292, %originalBBpart228
  br label %632

; <label>:632:                                    ; preds = %631
  %633 = load i32, i32* %9, align 4
  %634 = add i32 %633, 1
  store i32 %634, i32* %9, align 4
  br label %146

; <label>:635:                                    ; preds = %originalBBpart224
  %636 = load i32, i32* @x.149
  %637 = load i32, i32* @y.150
  %638 = sub i32 %636, 1
  %639 = mul i32 %636, %638
  %640 = urem i32 %639, 2
  %641 = icmp eq i32 %640, 0
  %642 = icmp slt i32 %637, 10
  %643 = or i1 %641, %642
  br i1 %643, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %635, %originalBB94alteredBB
  %644 = load i32, i32* @x.149
  %645 = load i32, i32* @y.150
  %646 = sub i32 %644, 1
  %647 = mul i32 %644, %646
  %648 = urem i32 %647, 2
  %649 = icmp eq i32 %648, 0
  %650 = icmp slt i32 %645, 10
  %651 = or i1 %649, %650
  br i1 %651, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  ret void

; <label>:652:                                    ; preds = %630, %459
  %653 = load i32, i32* @x.149
  %654 = load i32, i32* @y.150
  %655 = sub i32 %653, 1
  %656 = mul i32 %653, %655
  %657 = urem i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = icmp slt i32 %654, 10
  %660 = or i1 %658, %659
  br i1 %660, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %652, %originalBB98alteredBB
  %661 = load i8*, i8** %17, align 8
  %662 = load i32, i32* %18, align 4
  %663 = insertvalue { i8*, i32 } undef, i8* %661, 0
  %664 = insertvalue { i8*, i32 } %663, i32 %662, 1
  %665 = load i32, i32* @x.149
  %666 = load i32, i32* @y.150
  %667 = sub i32 %665, 1
  %668 = mul i32 %665, %667
  %669 = urem i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = icmp slt i32 %666, 10
  %672 = or i1 %670, %671
  br i1 %672, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  resume { i8*, i32 } %664

; <label>:673:                                    ; preds = %629, %627, %490, %464, %454
  %674 = landingpad { i8*, i32 }
          catch i8* null
  %675 = extractvalue { i8*, i32 } %674, 0
  call void @__clang_call_terminate(i8* %675) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %49
  %676 = load i32, i32* %7, align 4
  %677 = zext i32 %676 to i64
  call void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.12"* %2, i64 %677, i32 0)
  store i32 0, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  %678 = load i32, i32* %8, align 4
  %679 = load i32, i32* %7, align 4
  %680 = icmp ult i32 %678, %679
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  %681 = load i32, i32* %8, align 4
  %682 = load i32, i32* %8, align 4
  %683 = zext i32 %682 to i64
  %684 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %2, i64 %683)
  store i32 %681, i32* %684, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %109
  %685 = load i32, i32* %8, align 4
  %_ = sub i32 %685, 1
  %gen = mul i32 %_, 1
  %_11 = sub i32 %685, 1
  %gen12 = mul i32 %_11, 1
  %_13 = sub i32 0, %685
  %gen14 = add i32 %_13, 1
  %686 = add i32 %685, 1
  store i32 %686, i32* %8, align 4
  br label %originalBB10

originalBB18alteredBB:                            ; preds = %originalBB18, %129
  store i32 0, i32* %9, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %146
  %687 = load i32, i32* %9, align 4
  %688 = load i32, i32* %6, align 4
  %689 = icmp ult i32 %687, %688
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %191
  %690 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  %691 = load i32, i32* %9, align 4
  %692 = call i32 @_ZNK12MGDoFHandlerILi3EE6n_dofsEj(%class.MGDoFHandler* %690, i32 %691)
  %693 = load %"class.std::vector.138"*, %"class.std::vector.138"** %5, align 8
  %694 = load i32, i32* %9, align 4
  %695 = zext i32 %694 to i64
  %696 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %693, i64 %695)
  %697 = call dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %696, i64 0)
  store i32 %692, i32* %697, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %223
  call void @_ZNSaISt6vectorIbSaIbEEEC2Ev(%"class.std::allocator.77"* %19) #2
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %240
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %19) #2
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %257
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %16) #2
  %698 = load i32, i32* %7, align 4
  %699 = zext i32 %698 to i64
  %700 = load i32, i32* %7, align 4
  %701 = zext i32 %700 to i64
  store i8 0, i8* %22, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.109"* %23) #2
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %279
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %24) #2
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %296
  call void @_ZNSaIbED2Ev(%"class.std::allocator.109"* %23) #2
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %313
  store i32 0, i32* %26, align 4
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %330
  %702 = load i32, i32* %26, align 4
  %703 = load i32, i32* %7, align 4
  %704 = icmp ult i32 %702, %703
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %358
  %705 = bitcast %"struct.std::_Bit_reference"* %28 to { i64*, i64 }*
  %706 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %705, i32 0, i32 0
  %707 = extractvalue { i64*, i64 } %357, 0
  store i64* %707, i64** %706, align 8
  %708 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %705, i32 0, i32 1
  %709 = extractvalue { i64*, i64 } %357, 1
  store i64 %709, i64* %708, align 8
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %381
  %710 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %27, align 8
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %414
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %434
  %711 = landingpad { i8*, i32 }
          cleanup
  %712 = extractvalue { i8*, i32 } %711, 0
  store i8* %712, i8** %17, align 8
  %713 = extractvalue { i8*, i32 } %711, 1
  store i32 %713, i32* %18, align 4
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %468
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %495
  store i32 0, i32* %32, align 4
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %520
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %538
  %714 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %715 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %714, i32 0, i32 0
  %716 = extractvalue { i64*, i32 } %537, 0
  store i64* %716, i64** %715, align 8
  %717 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %714, i32 0, i32 1
  %718 = extractvalue { i64*, i32 } %537, 1
  store i32 %718, i32* %717, align 8
  %719 = load i32, i32* %32, align 4
  %720 = zext i32 %719 to i64
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %605
  call void @_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev(%"class.std::vector.75"* %13)
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %635
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %652
  %721 = load i8*, i8** %17, align 8
  %722 = load i32, i32* %18, align 4
  %723 = insertvalue { i8*, i32 } undef, i8* %721, 0
  %724 = insertvalue { i8*, i32 } %723, i32 %722, 1
  br label %originalBB98
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK13MGLevelObjectI11BlockVectorIdEE12get_minlevelEv(%class.MGLevelObject.131*) #3 comdat align 2 {
  %2 = load i32, i32* @x.151
  %3 = load i32, i32* @y.152
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.MGLevelObject.131*, align 8
  store %class.MGLevelObject.131* %0, %class.MGLevelObject.131** %10, align 8
  %11 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %10, align 8
  %12 = getelementptr inbounds %class.MGLevelObject.131, %class.MGLevelObject.131* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i32, i32* @x.151
  %15 = load i32, i32* @y.152
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.MGLevelObject.131*, align 8
  store %class.MGLevelObject.131* %0, %class.MGLevelObject.131** %22, align 8
  %23 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %22, align 8
  %24 = getelementptr inbounds %class.MGLevelObject.131, %class.MGLevelObject.131* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK13MGLevelObjectI11BlockVectorIdEE12get_maxlevelEv(%class.MGLevelObject.131*) #0 comdat align 2 {
  %2 = load i32, i32* @x.153
  %3 = load i32, i32* @y.154
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.MGLevelObject.131*, align 8
  store %class.MGLevelObject.131* %0, %class.MGLevelObject.131** %10, align 8
  %11 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %10, align 8
  %12 = getelementptr inbounds %class.MGLevelObject.131, %class.MGLevelObject.131* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.MGLevelObject.131, %class.MGLevelObject.131* %11, i32 0, i32 2
  %16 = call i64 @_ZNKSt6vectorIN5boost10shared_ptrI11BlockVectorIdEEESaIS4_EE4sizeEv(%"class.std::vector.132"* %15)
  %17 = add i64 %14, %16
  %18 = sub i64 %17, 1
  %19 = trunc i64 %18 to i32
  %20 = load i32, i32* @x.153
  %21 = load i32, i32* @y.154
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %19

originalBBalteredBB:                              ; preds = %originalBB, %1
  %28 = alloca %class.MGLevelObject.131*, align 8
  store %class.MGLevelObject.131* %0, %class.MGLevelObject.131** %28, align 8
  %29 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %28, align 8
  %30 = getelementptr inbounds %class.MGLevelObject.131, %class.MGLevelObject.131* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %class.MGLevelObject.131, %class.MGLevelObject.131* %29, i32 0, i32 2
  %34 = call i64 @_ZNKSt6vectorIN5boost10shared_ptrI11BlockVectorIdEEESaIS4_EE4sizeEv(%"class.std::vector.132"* %33)
  %_ = sub i64 0, %32
  %gen = add i64 %_, %34
  %_1 = shl i64 %32, %34
  %_2 = sub i64 0, %32
  %gen3 = add i64 %_2, %34
  %_4 = sub i64 %32, %34
  %gen5 = mul i64 %_4, %34
  %_6 = shl i64 %32, %34
  %_7 = shl i64 %32, %34
  %_8 = sub i64 0, %32
  %gen9 = add i64 %_8, %34
  %_10 = sub i64 0, %32
  %gen11 = add i64 %_10, %34
  %35 = add i64 %32, %34
  %_12 = sub i64 0, %35
  %gen13 = add i64 %_12, 1
  %36 = sub i64 %35, 1
  %37 = trunc i64 %36 to i32
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(64) %class.BlockVector* @_ZN13MGLevelObjectI11BlockVectorIdEEixEj(%class.MGLevelObject.131*, i32) #0 comdat align 2 {
  %3 = alloca %class.MGLevelObject.131*, align 8
  %4 = alloca i32, align 4
  store %class.MGLevelObject.131* %0, %class.MGLevelObject.131** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.MGLevelObject.131*, %class.MGLevelObject.131** %3, align 8
  %6 = getelementptr inbounds %class.MGLevelObject.131, %class.MGLevelObject.131* %5, i32 0, i32 2
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %class.MGLevelObject.131, %class.MGLevelObject.131* %5, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sub i32 %7, %9
  %11 = zext i32 %10 to i64
  %12 = call dereferenceable(16) %"class.boost::shared_ptr.137"* @_ZNSt6vectorIN5boost10shared_ptrI11BlockVectorIdEEESaIS4_EEixEm(%"class.std::vector.132"* %6, i64 %11)
  %13 = call dereferenceable(64) %class.BlockVector* @_ZNK5boost10shared_ptrI11BlockVectorIdEEdeEv(%"class.boost::shared_ptr.137"* %12)
  ret %class.BlockVector* %13
}

declare void @_ZN11BlockVectorIdE6reinitEjjb(%class.BlockVector*, i32, i32, i1 zeroext) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK11BlockVectorIdE8n_blocksEv(%class.BlockVector*) #3 comdat align 2 {
  %2 = alloca %class.BlockVector*, align 8
  store %class.BlockVector* %0, %class.BlockVector** %2, align 8
  %3 = load %class.BlockVector*, %class.BlockVector** %2, align 8
  %4 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZN11BlockVectorIdE5blockEj(%class.BlockVector*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.159
  %4 = load i32, i32* @y.160
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.BlockVector*, align 8
  %12 = alloca i32, align 4
  store %class.BlockVector* %0, %class.BlockVector** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.BlockVector*, %class.BlockVector** %11, align 8
  %14 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = call dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.143"* %14, i64 %16)
  %18 = load i32, i32* @x.159
  %19 = load i32, i32* @y.160
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Vector* %17

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %class.BlockVector*, align 8
  %27 = alloca i32, align 4
  store %class.BlockVector* %0, %class.BlockVector** %26, align 8
  store i32 %1, i32* %27, align 4
  %28 = load %class.BlockVector*, %class.BlockVector** %26, align 8
  %29 = getelementptr inbounds %class.BlockVector, %class.BlockVector* %28, i32 0, i32 0
  %30 = load i32, i32* %27, align 4
  %31 = zext i32 %30 to i64
  %32 = call dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.143"* %29, i64 %31)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"*, i64) #3 comdat align 2 {
  %3 = load i32, i32* @x.161
  %4 = load i32, i32* @y.162
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.138"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.138"* %0, %"class.std::vector.138"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.138"*, %"class.std::vector.138"** %11, align 8
  %14 = bitcast %"class.std::vector.138"* %13 to %"struct.std::_Vector_base.139"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %"class.std::vector.12"*, %"class.std::vector.12"** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %"class.std::vector.12", %"class.std::vector.12"* %18, i64 %19
  %21 = load i32, i32* @x.161
  %22 = load i32, i32* @y.162
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.12"* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.138"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.138"* %0, %"class.std::vector.138"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.138"*, %"class.std::vector.138"** %29, align 8
  %32 = bitcast %"class.std::vector.138"* %31 to %"struct.std::_Vector_base.139"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %"class.std::vector.12"*, %"class.std::vector.12"** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %"class.std::vector.12", %"class.std::vector.12"* %36, i64 %37
  br label %originalBB
}

declare void @_ZN11BlockVectorIdE13collect_sizesEv(%class.BlockVector*) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.138"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.138"* %0, %"class.std::vector.138"** %2, align 8
  %5 = load %"class.std::vector.138"*, %"class.std::vector.138"** %2, align 8
  %6 = bitcast %"class.std::vector.138"* %5 to %"struct.std::_Vector_base.139"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.std::vector.12"*, %"class.std::vector.12"** %9, align 8
  %11 = bitcast %"class.std::vector.138"* %5 to %"struct.std::_Vector_base.139"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"class.std::vector.12"*, %"class.std::vector.12"** %14, align 8
  %16 = bitcast %"class.std::vector.138"* %5 to %"struct.std::_Vector_base.139"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.140"* @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.139"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.163
  %20 = load i32, i32* @y.164
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.163
  %28 = load i32, i32* @y.164
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZSt8_DestroyIPSt6vectorIjSaIjEES2_EvT_S4_RSaIT0_E(%"class.std::vector.12"* %10, %"class.std::vector.12"* %15, %"class.std::allocator.140"* dereferenceable(1) %17)
          to label %35 unwind label %37

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = bitcast %"class.std::vector.138"* %5 to %"struct.std::_Vector_base.139"*
  call void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EED2Ev(%"struct.std::_Vector_base.139"* %36)
  ret void

; <label>:37:                                     ; preds = %originalBBpart2, %1
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %3, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %4, align 4
  %41 = bitcast %"class.std::vector.138"* %5 to %"struct.std::_Vector_base.139"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EED2Ev(%"struct.std::_Vector_base.139"* %41)
          to label %42 unwind label %48

; <label>:42:                                     ; preds = %37
  br label %43

; <label>:43:                                     ; preds = %42
  %44 = load i8*, i8** %3, align 8
  %45 = load i32, i32* %4, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47

; <label>:48:                                     ; preds = %37
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools13reinit_vectorILi3EfEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI11BlockVectorIT0_EERKSt6vectorIbSaIbEERKSB_IjSaIjEE(%class.MGDoFHandler* dereferenceable(168), %class.MGLevelObject.148* dereferenceable(56), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.12"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.MGDoFHandler*, align 8
  %6 = alloca %class.MGLevelObject.148*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::vector.12"*, align 8
  %9 = alloca %"class.std::vector.3", align 8
  %10 = alloca %"class.std::vector.12", align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca i8, align 1
  %17 = alloca %"struct.std::_Bit_iterator", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"struct.std::_Bit_reference", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"struct.std::_Bit_iterator", align 8
  %22 = alloca %"struct.std::_Bit_iterator", align 8
  %23 = alloca %"class.std::vector.138", align 8
  %24 = alloca %"class.std::vector.12", align 8
  %25 = alloca i32, align 4
  %26 = alloca %"class.std::allocator.14", align 1
  %27 = alloca %"class.std::allocator.140", align 1
  %28 = alloca %"class.std::vector.12", align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca %"struct.std::_Bit_reference", align 8
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %5, align 8
  store %class.MGLevelObject.148* %1, %class.MGLevelObject.148** %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.12"* %3, %"class.std::vector.12"** %8, align 8
  %33 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  call void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.3"* %9, %"class.std::vector.3"* dereferenceable(40) %33)
  %34 = load %"class.std::vector.12"*, %"class.std::vector.12"** %8, align 8
  invoke void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector.12"* %10, %"class.std::vector.12"* dereferenceable(24) %34)
          to label %35 unwind label %129

; <label>:35:                                     ; preds = %4
  %36 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  %37 = bitcast %class.MGDoFHandler* %36 to %class.DoFHandler*
  %38 = invoke dereferenceable(1160) %class.FiniteElement* @_ZNK10DoFHandlerILi3EE6get_feEv(%class.DoFHandler* %37)
          to label %39 unwind label %133

; <label>:39:                                     ; preds = %35
  %40 = bitcast %class.FiniteElement* %38 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 24
  %42 = bitcast i8* %41 to %class.FiniteElementData*
  %43 = invoke i32 @_ZNK17FiniteElementDataILi3EE12n_componentsEv(%class.FiniteElementData* %42)
          to label %44 unwind label %133

; <label>:44:                                     ; preds = %39
  store i32 %43, i32* %13, align 4
  %45 = invoke i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %10)
          to label %46 unwind label %133

; <label>:46:                                     ; preds = %44
  %47 = load i32, i32* @x.165
  %48 = load i32, i32* @y.166
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %46, %originalBBalteredBB
  %55 = icmp eq i64 %45, 0
  %56 = load i32, i32* @x.165
  %57 = load i32, i32* @y.166
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %55, label %64, label %138

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = load i32, i32* %13, align 4
  %66 = zext i32 %65 to i64
  invoke void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.12"* %10, i64 %66, i32 0)
          to label %67 unwind label %133

; <label>:67:                                     ; preds = %64
  %68 = load i32, i32* @x.165
  %69 = load i32, i32* @y.166
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %67, %originalBB1alteredBB
  store i32 0, i32* %14, align 4
  %76 = load i32, i32* @x.165
  %77 = load i32, i32* @y.166
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %84

; <label>:84:                                     ; preds = %originalBBpart222, %originalBBpart24
  %85 = load i32, i32* %14, align 4
  %86 = load i32, i32* %13, align 4
  %87 = icmp ult i32 %85, %86
  br i1 %87, label %88, label %137

; <label>:88:                                     ; preds = %84
  %89 = load i32, i32* @x.165
  %90 = load i32, i32* @y.166
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %88, %originalBB6alteredBB
  %97 = load i32, i32* %14, align 4
  %98 = load i32, i32* %14, align 4
  %99 = zext i32 %98 to i64
  %100 = load i32, i32* @x.165
  %101 = load i32, i32* @y.166
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %108 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %99)
          to label %109 unwind label %133

; <label>:109:                                    ; preds = %originalBBpart28
  store i32 %97, i32* %108, align 4
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i32, i32* @x.165
  %112 = load i32, i32* @y.166
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %110, %originalBB10alteredBB
  %119 = load i32, i32* %14, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %14, align 4
  %121 = load i32, i32* @x.165
  %122 = load i32, i32* @y.166
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart222, label %originalBB10alteredBB

originalBBpart222:                                ; preds = %originalBB10
  br label %84

; <label>:129:                                    ; preds = %636, %4
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %11, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %12, align 4
  br label %690

; <label>:133:                                    ; preds = %635, %352, %350, %originalBBpart255, %313, %306, %originalBBpart251, %260, %originalBBpart243, %originalBBpart239, %214, %originalBBpart235, %originalBBpart231, %160, %originalBBpart227, %138, %originalBBpart28, %64, %44, %39, %35
  %134 = landingpad { i8*, i32 }
          cleanup
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %11, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %12, align 4
  br label %672

; <label>:137:                                    ; preds = %84
  br label %138

; <label>:138:                                    ; preds = %137, %originalBBpart2
  %139 = invoke i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
          to label %140 unwind label %133

; <label>:140:                                    ; preds = %138
  %141 = icmp eq i64 %139, 0
  br i1 %141, label %142, label %288

; <label>:142:                                    ; preds = %140
  %143 = load i32, i32* @x.165
  %144 = load i32, i32* @y.166
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %142, %originalBB24alteredBB
  %151 = load i32, i32* @x.165
  %152 = load i32, i32* @y.166
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  %159 = invoke i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %10)
          to label %160 unwind label %133

; <label>:160:                                    ; preds = %originalBBpart227
  invoke void @_ZNSt6vectorIbSaIbEE6resizeEmb(%"class.std::vector.3"* %9, i64 %159, i1 zeroext false)
          to label %161 unwind label %133

; <label>:161:                                    ; preds = %160
  %162 = load i32, i32* @x.165
  %163 = load i32, i32* @y.166
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %161, %originalBB29alteredBB
  %170 = load i32, i32* @x.165
  %171 = load i32, i32* @y.166
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  %178 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %9)
          to label %179 unwind label %133

; <label>:179:                                    ; preds = %originalBBpart231
  %180 = load i32, i32* @x.165
  %181 = load i32, i32* @y.166
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %179, %originalBB33alteredBB
  %188 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %189 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %188, i32 0, i32 0
  %190 = extractvalue { i64*, i32 } %178, 0
  store i64* %190, i64** %189, align 8
  %191 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %188, i32 0, i32 1
  %192 = extractvalue { i64*, i32 } %178, 1
  store i32 %192, i32* %191, align 8
  %193 = load i32, i32* %13, align 4
  store i8 0, i8* %16, align 1
  %194 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %195 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %194, i32 0, i32 0
  %196 = load i64*, i64** %195, align 8
  %197 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %194, i32 0, i32 1
  %198 = load i32, i32* %197, align 8
  %199 = load i32, i32* @x.165
  %200 = load i32, i32* @y.166
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  %207 = invoke { i64*, i32 } @_ZSt6fill_nISt13_Bit_iteratorjbET_S1_T0_RKT1_(i64* %196, i32 %198, i32 %193, i8* dereferenceable(1) %16)
          to label %208 unwind label %133

; <label>:208:                                    ; preds = %originalBBpart235
  %209 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %210 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %209, i32 0, i32 0
  %211 = extractvalue { i64*, i32 } %207, 0
  store i64* %211, i64** %210, align 8
  %212 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %209, i32 0, i32 1
  %213 = extractvalue { i64*, i32 } %207, 1
  store i32 %213, i32* %212, align 8
  store i32 0, i32* %18, align 4
  br label %214

; <label>:214:                                    ; preds = %268, %208
  %215 = load i32, i32* %18, align 4
  %216 = zext i32 %215 to i64
  %217 = invoke i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %10)
          to label %218 unwind label %133

; <label>:218:                                    ; preds = %214
  %219 = icmp ult i64 %216, %217
  br i1 %219, label %220, label %271

; <label>:220:                                    ; preds = %218
  %221 = load i32, i32* @x.165
  %222 = load i32, i32* @y.166
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %220, %originalBB37alteredBB
  %229 = load i32, i32* %18, align 4
  %230 = zext i32 %229 to i64
  %231 = load i32, i32* @x.165
  %232 = load i32, i32* @y.166
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  %239 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %10, i64 %230)
          to label %240 unwind label %133

; <label>:240:                                    ; preds = %originalBBpart239
  %241 = load i32, i32* @x.165
  %242 = load i32, i32* @y.166
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %240, %originalBB41alteredBB
  %249 = load i32, i32* %239, align 4
  %250 = zext i32 %249 to i64
  %251 = load i32, i32* @x.165
  %252 = load i32, i32* @y.166
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  %259 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %9, i64 %250)
          to label %260 unwind label %133

; <label>:260:                                    ; preds = %originalBBpart243
  %261 = bitcast %"struct.std::_Bit_reference"* %19 to { i64*, i64 }*
  %262 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %261, i32 0, i32 0
  %263 = extractvalue { i64*, i64 } %259, 0
  store i64* %263, i64** %262, align 8
  %264 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %261, i32 0, i32 1
  %265 = extractvalue { i64*, i64 } %259, 1
  store i64 %265, i64* %264, align 8
  %266 = invoke dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %19, i1 zeroext true)
          to label %267 unwind label %133

; <label>:267:                                    ; preds = %260
  br label %268

; <label>:268:                                    ; preds = %267
  %269 = load i32, i32* %18, align 4
  %270 = add i32 %269, 1
  store i32 %270, i32* %18, align 4
  br label %214

; <label>:271:                                    ; preds = %218
  %272 = load i32, i32* @x.165
  %273 = load i32, i32* @y.166
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %271, %originalBB45alteredBB
  %280 = load i32, i32* @x.165
  %281 = load i32, i32* @y.166
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %288

; <label>:288:                                    ; preds = %originalBBpart247, %140
  %289 = load i32, i32* @x.165
  %290 = load i32, i32* @y.166
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %288, %originalBB49alteredBB
  %297 = load i32, i32* @x.165
  %298 = load i32, i32* @y.166
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  %305 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %9)
          to label %306 unwind label %133

; <label>:306:                                    ; preds = %originalBBpart251
  %307 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %308 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %307, i32 0, i32 0
  %309 = extractvalue { i64*, i32 } %305, 0
  store i64* %309, i64** %308, align 8
  %310 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %307, i32 0, i32 1
  %311 = extractvalue { i64*, i32 } %305, 1
  store i32 %311, i32* %310, align 8
  %312 = invoke { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %9)
          to label %313 unwind label %133

; <label>:313:                                    ; preds = %306
  %314 = bitcast %"struct.std::_Bit_iterator"* %22 to { i64*, i32 }*
  %315 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %314, i32 0, i32 0
  %316 = extractvalue { i64*, i32 } %312, 0
  store i64* %316, i64** %315, align 8
  %317 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %314, i32 0, i32 1
  %318 = extractvalue { i64*, i32 } %312, 1
  store i32 %318, i32* %317, align 8
  %319 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %320 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %319, i32 0, i32 0
  %321 = load i64*, i64** %320, align 8
  %322 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %319, i32 0, i32 1
  %323 = load i32, i32* %322, align 8
  %324 = bitcast %"struct.std::_Bit_iterator"* %22 to { i64*, i32 }*
  %325 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %324, i32 0, i32 0
  %326 = load i64*, i64** %325, align 8
  %327 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %324, i32 0, i32 1
  %328 = load i32, i32* %327, align 8
  %329 = invoke i32 @_ZSt10accumulateISt13_Bit_iteratorjET0_T_S2_S1_(i64* %321, i32 %323, i64* %326, i32 %328, i32 0)
          to label %330 unwind label %133

; <label>:330:                                    ; preds = %313
  %331 = load i32, i32* @x.165
  %332 = load i32, i32* @y.166
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %330, %originalBB53alteredBB
  store i32 %329, i32* %20, align 4
  %339 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  %340 = bitcast %class.MGDoFHandler* %339 to %class.DoFHandler*
  %341 = load i32, i32* @x.165
  %342 = load i32, i32* @y.166
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  %349 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %340)
          to label %350 unwind label %133

; <label>:350:                                    ; preds = %originalBBpart255
  %351 = invoke i32 @_ZNK13TriangulationILi3EE8n_levelsEv(%class.Triangulation* %349)
          to label %352 unwind label %133

; <label>:352:                                    ; preds = %350
  %353 = zext i32 %351 to i64
  %354 = invoke i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %10)
          to label %355 unwind label %133

; <label>:355:                                    ; preds = %352
  store i32 0, i32* %25, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %26) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %24, i64 %354, i32* dereferenceable(4) %25, %"class.std::allocator.14"* dereferenceable(1) %26)
          to label %356 unwind label %587

; <label>:356:                                    ; preds = %355
  call void @_ZNSaISt6vectorIjSaIjEEEC2Ev(%"class.std::allocator.140"* %27) #2
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.138"* %23, i64 %353, %"class.std::vector.12"* dereferenceable(24) %24, %"class.std::allocator.140"* dereferenceable(1) %27)
          to label %357 unwind label %591

; <label>:357:                                    ; preds = %356
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %27) #2
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %24)
          to label %358 unwind label %587

; <label>:358:                                    ; preds = %357
  %359 = load i32, i32* @x.165
  %360 = load i32, i32* @y.166
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %358, %originalBB57alteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %26) #2
  %367 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  %368 = load i32, i32* @x.165
  %369 = load i32, i32* @y.166
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  invoke void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector.12"* %28, %"class.std::vector.12"* dereferenceable(24) %10)
          to label %376 unwind label %597

; <label>:376:                                    ; preds = %originalBBpart259
  invoke void @_ZN7MGTools24count_dofs_per_componentILi3EEEvRK12MGDoFHandlerIXT_EERSt6vectorIS5_IjSaIjEESaIS7_EES7_(%class.MGDoFHandler* dereferenceable(168) %367, %"class.std::vector.138"* dereferenceable(24) %23, %"class.std::vector.12"* %28)
          to label %377 unwind label %601

; <label>:377:                                    ; preds = %376
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %28)
          to label %378 unwind label %597

; <label>:378:                                    ; preds = %377
  %379 = load i32, i32* @x.165
  %380 = load i32, i32* @y.166
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %378, %originalBB61alteredBB
  %387 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %388 = load i32, i32* @x.165
  %389 = load i32, i32* @y.166
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  %396 = invoke i32 @_ZNK13MGLevelObjectI11BlockVectorIfEE12get_minlevelEv(%class.MGLevelObject.148* %387)
          to label %397 unwind label %597

; <label>:397:                                    ; preds = %originalBBpart263
  store i32 %396, i32* %29, align 4
  br label %398

; <label>:398:                                    ; preds = %632, %397
  %399 = load i32, i32* %29, align 4
  %400 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %401 = invoke i32 @_ZNK13MGLevelObjectI11BlockVectorIfEE12get_maxlevelEv(%class.MGLevelObject.148* %400)
          to label %402 unwind label %597

; <label>:402:                                    ; preds = %398
  %403 = icmp ule i32 %399, %401
  br i1 %403, label %404, label %635

; <label>:404:                                    ; preds = %402
  %405 = load i32, i32* @x.165
  %406 = load i32, i32* @y.166
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %404, %originalBB65alteredBB
  %413 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %414 = load i32, i32* %29, align 4
  %415 = load i32, i32* @x.165
  %416 = load i32, i32* @y.166
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  %423 = invoke dereferenceable(64) %class.BlockVector.155* @_ZN13MGLevelObjectI11BlockVectorIfEEixEj(%class.MGLevelObject.148* %413, i32 %414)
          to label %424 unwind label %597

; <label>:424:                                    ; preds = %originalBBpart267
  %425 = load i32, i32* %20, align 4
  invoke void @_ZN11BlockVectorIfE6reinitEjjb(%class.BlockVector.155* %423, i32 %425, i32 0, i1 zeroext false)
          to label %426 unwind label %597

; <label>:426:                                    ; preds = %424
  %427 = load i32, i32* @x.165
  %428 = load i32, i32* @y.166
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %426, %originalBB69alteredBB
  store i32 0, i32* %30, align 4
  store i32 0, i32* %31, align 4
  %435 = load i32, i32* @x.165
  %436 = load i32, i32* @y.166
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %443

; <label>:443:                                    ; preds = %628, %originalBBpart271
  %444 = load i32, i32* %31, align 4
  %445 = zext i32 %444 to i64
  %446 = invoke i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
          to label %447 unwind label %597

; <label>:447:                                    ; preds = %443
  %448 = icmp ult i64 %445, %446
  br i1 %448, label %449, label %458

; <label>:449:                                    ; preds = %447
  %450 = load i32, i32* %30, align 4
  %451 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %452 = load i32, i32* %29, align 4
  %453 = invoke dereferenceable(64) %class.BlockVector.155* @_ZN13MGLevelObjectI11BlockVectorIfEEixEj(%class.MGLevelObject.148* %451, i32 %452)
          to label %454 unwind label %597

; <label>:454:                                    ; preds = %449
  %455 = invoke i32 @_ZNK11BlockVectorIfE8n_blocksEv(%class.BlockVector.155* %453)
          to label %456 unwind label %597

; <label>:456:                                    ; preds = %454
  %457 = icmp ult i32 %450, %455
  br label %458

; <label>:458:                                    ; preds = %456, %447
  %459 = phi i1 [ false, %447 ], [ %457, %456 ]
  %460 = load i32, i32* @x.165
  %461 = load i32, i32* @y.166
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %458, %originalBB73alteredBB
  %468 = load i32, i32* @x.165
  %469 = load i32, i32* @y.166
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br i1 %459, label %476, label %631

; <label>:476:                                    ; preds = %originalBBpart275
  %477 = load i32, i32* @x.165
  %478 = load i32, i32* @y.166
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %476, %originalBB77alteredBB
  %485 = load i32, i32* %31, align 4
  %486 = zext i32 %485 to i64
  %487 = load i32, i32* @x.165
  %488 = load i32, i32* @y.166
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  %495 = invoke { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %9, i64 %486)
          to label %496 unwind label %597

; <label>:496:                                    ; preds = %originalBBpart279
  %497 = load i32, i32* @x.165
  %498 = load i32, i32* @y.166
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %496, %originalBB81alteredBB
  %505 = bitcast %"struct.std::_Bit_reference"* %32 to { i64*, i64 }*
  %506 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %505, i32 0, i32 0
  %507 = extractvalue { i64*, i64 } %495, 0
  store i64* %507, i64** %506, align 8
  %508 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %505, i32 0, i32 1
  %509 = extractvalue { i64*, i64 } %495, 1
  store i64 %509, i64* %508, align 8
  %510 = load i32, i32* @x.165
  %511 = load i32, i32* @y.166
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  %518 = invoke zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %32)
          to label %519 unwind label %597

; <label>:519:                                    ; preds = %originalBBpart283
  %520 = load i32, i32* @x.165
  %521 = load i32, i32* @y.166
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %519, %originalBB85alteredBB
  %528 = load i32, i32* @x.165
  %529 = load i32, i32* @y.166
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %518, label %536, label %606

; <label>:536:                                    ; preds = %originalBBpart287
  %537 = load i32, i32* @x.165
  %538 = load i32, i32* @y.166
  %539 = sub i32 %537, 1
  %540 = mul i32 %537, %539
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %542, %543
  br i1 %544, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %536, %originalBB89alteredBB
  %545 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %546 = load i32, i32* %29, align 4
  %547 = load i32, i32* @x.165
  %548 = load i32, i32* @y.166
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  %555 = invoke dereferenceable(64) %class.BlockVector.155* @_ZN13MGLevelObjectI11BlockVectorIfEEixEj(%class.MGLevelObject.148* %545, i32 %546)
          to label %556 unwind label %597

; <label>:556:                                    ; preds = %originalBBpart291
  %557 = load i32, i32* %30, align 4
  %558 = add i32 %557, 1
  store i32 %558, i32* %30, align 4
  %559 = invoke dereferenceable(24) %class.Vector.130* @_ZN11BlockVectorIfE5blockEj(%class.BlockVector.155* %555, i32 %557)
          to label %560 unwind label %597

; <label>:560:                                    ; preds = %556
  %561 = load i32, i32* %29, align 4
  %562 = zext i32 %561 to i64
  %563 = invoke dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %23, i64 %562)
          to label %564 unwind label %597

; <label>:564:                                    ; preds = %560
  %565 = load i32, i32* @x.165
  %566 = load i32, i32* @y.166
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %564, %originalBB93alteredBB
  %573 = load i32, i32* %31, align 4
  %574 = zext i32 %573 to i64
  %575 = load i32, i32* @x.165
  %576 = load i32, i32* @y.166
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  %583 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %563, i64 %574)
          to label %584 unwind label %597

; <label>:584:                                    ; preds = %originalBBpart295
  %585 = load i32, i32* %583, align 4
  invoke void @_ZN6VectorIfE6reinitEjb(%class.Vector.130* %559, i32 %585, i1 zeroext false)
          to label %586 unwind label %597

; <label>:586:                                    ; preds = %584
  br label %606

; <label>:587:                                    ; preds = %357, %355
  %588 = landingpad { i8*, i32 }
          cleanup
  %589 = extractvalue { i8*, i32 } %588, 0
  store i8* %589, i8** %11, align 8
  %590 = extractvalue { i8*, i32 } %588, 1
  store i32 %590, i32* %12, align 4
  br label %596

; <label>:591:                                    ; preds = %356
  %592 = landingpad { i8*, i32 }
          cleanup
  %593 = extractvalue { i8*, i32 } %592, 0
  store i8* %593, i8** %11, align 8
  %594 = extractvalue { i8*, i32 } %592, 1
  store i32 %594, i32* %12, align 4
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %27) #2
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %24)
          to label %595 unwind label %697

; <label>:595:                                    ; preds = %591
  br label %596

; <label>:596:                                    ; preds = %595, %587
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %26) #2
  br label %672

; <label>:597:                                    ; preds = %626, %originalBBpart299, %584, %originalBBpart295, %560, %556, %originalBBpart291, %originalBBpart283, %originalBBpart279, %454, %449, %443, %424, %originalBBpart267, %398, %originalBBpart263, %377, %originalBBpart259
  %598 = landingpad { i8*, i32 }
          cleanup
  %599 = extractvalue { i8*, i32 } %598, 0
  store i8* %599, i8** %11, align 8
  %600 = extractvalue { i8*, i32 } %598, 1
  store i32 %600, i32* %12, align 4
  br label %654

; <label>:601:                                    ; preds = %376
  %602 = landingpad { i8*, i32 }
          cleanup
  %603 = extractvalue { i8*, i32 } %602, 0
  store i8* %603, i8** %11, align 8
  %604 = extractvalue { i8*, i32 } %602, 1
  store i32 %604, i32* %12, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %28)
          to label %605 unwind label %697

; <label>:605:                                    ; preds = %601
  br label %654

; <label>:606:                                    ; preds = %586, %originalBBpart287
  %607 = load i32, i32* @x.165
  %608 = load i32, i32* @y.166
  %609 = sub i32 %607, 1
  %610 = mul i32 %607, %609
  %611 = urem i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = icmp slt i32 %608, 10
  %614 = or i1 %612, %613
  br i1 %614, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %606, %originalBB97alteredBB
  %615 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %616 = load i32, i32* %29, align 4
  %617 = load i32, i32* @x.165
  %618 = load i32, i32* @y.166
  %619 = sub i32 %617, 1
  %620 = mul i32 %617, %619
  %621 = urem i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = icmp slt i32 %618, 10
  %624 = or i1 %622, %623
  br i1 %624, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  %625 = invoke dereferenceable(64) %class.BlockVector.155* @_ZN13MGLevelObjectI11BlockVectorIfEEixEj(%class.MGLevelObject.148* %615, i32 %616)
          to label %626 unwind label %597

; <label>:626:                                    ; preds = %originalBBpart299
  invoke void @_ZN11BlockVectorIfE13collect_sizesEv(%class.BlockVector.155* %625)
          to label %627 unwind label %597

; <label>:627:                                    ; preds = %626
  br label %628

; <label>:628:                                    ; preds = %627
  %629 = load i32, i32* %31, align 4
  %630 = add i32 %629, 1
  store i32 %630, i32* %31, align 4
  br label %443

; <label>:631:                                    ; preds = %originalBBpart275
  br label %632

; <label>:632:                                    ; preds = %631
  %633 = load i32, i32* %29, align 4
  %634 = add i32 %633, 1
  store i32 %634, i32* %29, align 4
  br label %398

; <label>:635:                                    ; preds = %402
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %23)
          to label %636 unwind label %133

; <label>:636:                                    ; preds = %635
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
          to label %637 unwind label %129

; <label>:637:                                    ; preds = %636
  %638 = load i32, i32* @x.165
  %639 = load i32, i32* @y.166
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %637, %originalBB101alteredBB
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %9)
  %646 = load i32, i32* @x.165
  %647 = load i32, i32* @y.166
  %648 = sub i32 %646, 1
  %649 = mul i32 %646, %648
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %651, %652
  br i1 %653, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  ret void

; <label>:654:                                    ; preds = %605, %597
  %655 = load i32, i32* @x.165
  %656 = load i32, i32* @y.166
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %654, %originalBB105alteredBB
  %663 = load i32, i32* @x.165
  %664 = load i32, i32* @y.166
  %665 = sub i32 %663, 1
  %666 = mul i32 %663, %665
  %667 = urem i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %664, 10
  %670 = or i1 %668, %669
  br i1 %670, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %23)
          to label %671 unwind label %697

; <label>:671:                                    ; preds = %originalBBpart2107
  br label %672

; <label>:672:                                    ; preds = %671, %596, %133
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %10)
          to label %673 unwind label %697

; <label>:673:                                    ; preds = %672
  %674 = load i32, i32* @x.165
  %675 = load i32, i32* @y.166
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %673, %originalBB109alteredBB
  %682 = load i32, i32* @x.165
  %683 = load i32, i32* @y.166
  %684 = sub i32 %682, 1
  %685 = mul i32 %682, %684
  %686 = urem i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = icmp slt i32 %683, 10
  %689 = or i1 %687, %688
  br i1 %689, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %690

; <label>:690:                                    ; preds = %originalBBpart2111, %129
  invoke void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %9)
          to label %691 unwind label %697

; <label>:691:                                    ; preds = %690
  br label %692

; <label>:692:                                    ; preds = %691
  %693 = load i8*, i8** %11, align 8
  %694 = load i32, i32* %12, align 4
  %695 = insertvalue { i8*, i32 } undef, i8* %693, 0
  %696 = insertvalue { i8*, i32 } %695, i32 %694, 1
  resume { i8*, i32 } %696

; <label>:697:                                    ; preds = %690, %672, %originalBBpart2107, %601, %591
  %698 = load i32, i32* @x.165
  %699 = load i32, i32* @y.166
  %700 = sub i32 %698, 1
  %701 = mul i32 %698, %700
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %699, 10
  %705 = or i1 %703, %704
  br i1 %705, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %697, %originalBB113alteredBB
  %706 = landingpad { i8*, i32 }
          catch i8* null
  %707 = extractvalue { i8*, i32 } %706, 0
  call void @__clang_call_terminate(i8* %707) #9
  %708 = load i32, i32* @x.165
  %709 = load i32, i32* @y.166
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %46
  %716 = icmp eq i64 %45, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  store i32 0, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  %717 = load i32, i32* %14, align 4
  %718 = load i32, i32* %14, align 4
  %719 = zext i32 %718 to i64
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %110
  %720 = load i32, i32* %14, align 4
  %_ = sub i32 %720, 1
  %gen = mul i32 %_, 1
  %_11 = sub i32 0, %720
  %gen12 = add i32 %_11, 1
  %_13 = sub i32 0, %720
  %gen14 = add i32 %_13, 1
  %_15 = sub i32 %720, 1
  %gen16 = mul i32 %_15, 1
  %_17 = sub i32 0, %720
  %gen18 = add i32 %_17, 1
  %_19 = sub i32 0, %720
  %gen20 = add i32 %_19, 1
  %721 = add i32 %720, 1
  store i32 %721, i32* %14, align 4
  br label %originalBB10

originalBB24alteredBB:                            ; preds = %originalBB24, %142
  br label %originalBB24

originalBB29alteredBB:                            ; preds = %originalBB29, %161
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %179
  %722 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %723 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %722, i32 0, i32 0
  %724 = extractvalue { i64*, i32 } %178, 0
  store i64* %724, i64** %723, align 8
  %725 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %722, i32 0, i32 1
  %726 = extractvalue { i64*, i32 } %178, 1
  store i32 %726, i32* %725, align 8
  %727 = load i32, i32* %13, align 4
  store i8 0, i8* %16, align 1
  %728 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %729 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %728, i32 0, i32 0
  %730 = load i64*, i64** %729, align 8
  %731 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %728, i32 0, i32 1
  %732 = load i32, i32* %731, align 8
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %220
  %733 = load i32, i32* %18, align 4
  %734 = zext i32 %733 to i64
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %240
  %735 = load i32, i32* %239, align 4
  %736 = zext i32 %735 to i64
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %271
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %288
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %330
  store i32 %329, i32* %20, align 4
  %737 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  %738 = bitcast %class.MGDoFHandler* %737 to %class.DoFHandler*
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %358
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %26) #2
  %739 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %378
  %740 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %404
  %741 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %742 = load i32, i32* %29, align 4
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %426
  store i32 0, i32* %30, align 4
  store i32 0, i32* %31, align 4
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %458
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %476
  %743 = load i32, i32* %31, align 4
  %744 = zext i32 %743 to i64
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %496
  %745 = bitcast %"struct.std::_Bit_reference"* %32 to { i64*, i64 }*
  %746 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %745, i32 0, i32 0
  %747 = extractvalue { i64*, i64 } %495, 0
  store i64* %747, i64** %746, align 8
  %748 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %745, i32 0, i32 1
  %749 = extractvalue { i64*, i64 } %495, 1
  store i64 %749, i64* %748, align 8
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %519
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %536
  %750 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %751 = load i32, i32* %29, align 4
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %564
  %752 = load i32, i32* %31, align 4
  %753 = zext i32 %752 to i64
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %606
  %754 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %6, align 8
  %755 = load i32, i32* %29, align 4
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %637
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %9)
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %654
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %673
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %697
  %756 = landingpad { i8*, i32 }
          catch i8* null
  %757 = extractvalue { i8*, i32 } %756, 0
  call void @__clang_call_terminate(i8* %757) #9
  br label %originalBB113
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK13MGLevelObjectI11BlockVectorIfEE12get_minlevelEv(%class.MGLevelObject.148*) #3 comdat align 2 {
  %2 = alloca %class.MGLevelObject.148*, align 8
  store %class.MGLevelObject.148* %0, %class.MGLevelObject.148** %2, align 8
  %3 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %2, align 8
  %4 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK13MGLevelObjectI11BlockVectorIfEE12get_maxlevelEv(%class.MGLevelObject.148*) #0 comdat align 2 {
  %2 = load i32, i32* @x.169
  %3 = load i32, i32* @y.170
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.MGLevelObject.148*, align 8
  store %class.MGLevelObject.148* %0, %class.MGLevelObject.148** %10, align 8
  %11 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %10, align 8
  %12 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %11, i32 0, i32 2
  %16 = call i64 @_ZNKSt6vectorIN5boost10shared_ptrI11BlockVectorIfEEESaIS4_EE4sizeEv(%"class.std::vector.149"* %15)
  %17 = add i64 %14, %16
  %18 = sub i64 %17, 1
  %19 = trunc i64 %18 to i32
  %20 = load i32, i32* @x.169
  %21 = load i32, i32* @y.170
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %19

originalBBalteredBB:                              ; preds = %originalBB, %1
  %28 = alloca %class.MGLevelObject.148*, align 8
  store %class.MGLevelObject.148* %0, %class.MGLevelObject.148** %28, align 8
  %29 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %28, align 8
  %30 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %29, i32 0, i32 2
  %34 = call i64 @_ZNKSt6vectorIN5boost10shared_ptrI11BlockVectorIfEEESaIS4_EE4sizeEv(%"class.std::vector.149"* %33)
  %_ = sub i64 %32, %34
  %gen = mul i64 %_, %34
  %_1 = sub i64 %32, %34
  %gen2 = mul i64 %_1, %34
  %_3 = sub i64 %32, %34
  %gen4 = mul i64 %_3, %34
  %_5 = sub i64 %32, %34
  %gen6 = mul i64 %_5, %34
  %_7 = sub i64 0, %32
  %gen8 = add i64 %_7, %34
  %35 = add i64 %32, %34
  %_9 = sub i64 0, %35
  %gen10 = add i64 %_9, 1
  %36 = sub i64 %35, 1
  %37 = trunc i64 %36 to i32
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(64) %class.BlockVector.155* @_ZN13MGLevelObjectI11BlockVectorIfEEixEj(%class.MGLevelObject.148*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.171
  %4 = load i32, i32* @y.172
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.MGLevelObject.148*, align 8
  %12 = alloca i32, align 4
  store %class.MGLevelObject.148* %0, %class.MGLevelObject.148** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %11, align 8
  %14 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %13, i32 0, i32 2
  %15 = load i32, i32* %12, align 4
  %16 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %13, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i32 %15, %17
  %19 = zext i32 %18 to i64
  %20 = call dereferenceable(16) %"class.boost::shared_ptr.154"* @_ZNSt6vectorIN5boost10shared_ptrI11BlockVectorIfEEESaIS4_EEixEm(%"class.std::vector.149"* %14, i64 %19)
  %21 = call dereferenceable(64) %class.BlockVector.155* @_ZNK5boost10shared_ptrI11BlockVectorIfEEdeEv(%"class.boost::shared_ptr.154"* %20)
  %22 = load i32, i32* @x.171
  %23 = load i32, i32* @y.172
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.BlockVector.155* %21

originalBBalteredBB:                              ; preds = %originalBB, %2
  %30 = alloca %class.MGLevelObject.148*, align 8
  %31 = alloca i32, align 4
  store %class.MGLevelObject.148* %0, %class.MGLevelObject.148** %30, align 8
  store i32 %1, i32* %31, align 4
  %32 = load %class.MGLevelObject.148*, %class.MGLevelObject.148** %30, align 8
  %33 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %32, i32 0, i32 2
  %34 = load i32, i32* %31, align 4
  %35 = getelementptr inbounds %class.MGLevelObject.148, %class.MGLevelObject.148* %32, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %_ = sub i32 0, %34
  %gen = add i32 %_, %36
  %_1 = sub i32 0, %34
  %gen2 = add i32 %_1, %36
  %_3 = shl i32 %34, %36
  %37 = sub i32 %34, %36
  %38 = zext i32 %37 to i64
  %39 = call dereferenceable(16) %"class.boost::shared_ptr.154"* @_ZNSt6vectorIN5boost10shared_ptrI11BlockVectorIfEEESaIS4_EEixEm(%"class.std::vector.149"* %33, i64 %38)
  %40 = call dereferenceable(64) %class.BlockVector.155* @_ZNK5boost10shared_ptrI11BlockVectorIfEEdeEv(%"class.boost::shared_ptr.154"* %39)
  br label %originalBB
}

declare void @_ZN11BlockVectorIfE6reinitEjjb(%class.BlockVector.155*, i32, i32, i1 zeroext) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK11BlockVectorIfE8n_blocksEv(%class.BlockVector.155*) #3 comdat align 2 {
  %2 = alloca %class.BlockVector.155*, align 8
  store %class.BlockVector.155* %0, %class.BlockVector.155** %2, align 8
  %3 = load %class.BlockVector.155*, %class.BlockVector.155** %2, align 8
  %4 = getelementptr inbounds %class.BlockVector.155, %class.BlockVector.155* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector.130* @_ZN11BlockVectorIfE5blockEj(%class.BlockVector.155*, i32) #0 comdat align 2 {
  %3 = alloca %class.BlockVector.155*, align 8
  %4 = alloca i32, align 4
  store %class.BlockVector.155* %0, %class.BlockVector.155** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.BlockVector.155*, %class.BlockVector.155** %3, align 8
  %6 = getelementptr inbounds %class.BlockVector.155, %class.BlockVector.155* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = call dereferenceable(24) %class.Vector.130* @_ZNSt6vectorI6VectorIfESaIS1_EEixEm(%"class.std::vector.156"* %6, i64 %8)
  ret %class.Vector.130* %9
}

declare void @_ZN11BlockVectorIfE13collect_sizesEv(%class.BlockVector.155*) #1

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools13reinit_vectorILi3EdEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI6VectorIT0_EERKSt6vectorIbSaIbEERKSB_IjSaIjEE(%class.MGDoFHandler* dereferenceable(168), %class.MGLevelObject* dereferenceable(56), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.12"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.MGDoFHandler*, align 8
  %6 = alloca %class.MGLevelObject*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::vector.12"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.138", align 8
  %11 = alloca %"class.std::vector.12", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::allocator.14", align 1
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca %"class.std::allocator.140", align 1
  %17 = alloca %"class.std::vector.12", align 8
  %18 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %5, align 8
  store %class.MGLevelObject* %1, %class.MGLevelObject** %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.12"* %3, %"class.std::vector.12"** %8, align 8
  store i32 0, i32* %9, align 4
  br label %19

; <label>:19:                                     ; preds = %41, %4
  %20 = load i32, i32* @x.177
  %21 = load i32, i32* @y.178
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %29 = load i32, i32* %9, align 4
  %30 = zext i32 %29 to i64
  %31 = call zeroext i1 @_ZNKSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %28, i64 %30)
  %32 = xor i1 %31, true
  %33 = load i32, i32* @x.177
  %34 = load i32, i32* @y.178
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %41, label %44

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i32, i32* %9, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %9, align 4
  br label %19

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  %46 = bitcast %class.MGDoFHandler* %45 to %class.DoFHandler*
  %47 = call dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %46)
  %48 = call i32 @_ZNK13TriangulationILi3EE8n_levelsEv(%class.Triangulation* %47)
  %49 = zext i32 %48 to i64
  %50 = load %"class.std::vector.12"*, %"class.std::vector.12"** %8, align 8
  %51 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %50)
  store i32 0, i32* %12, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %13) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %11, i64 %51, i32* dereferenceable(4) %12, %"class.std::allocator.14"* dereferenceable(1) %13)
          to label %52 unwind label %167

; <label>:52:                                     ; preds = %44
  call void @_ZNSaISt6vectorIjSaIjEEEC2Ev(%"class.std::allocator.140"* %16) #2
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.138"* %10, i64 %49, %"class.std::vector.12"* dereferenceable(24) %11, %"class.std::allocator.140"* dereferenceable(1) %16)
          to label %53 unwind label %171

; <label>:53:                                     ; preds = %52
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %16) #2
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %11)
          to label %54 unwind label %167

; <label>:54:                                     ; preds = %53
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %13) #2
  %55 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  %56 = load %"class.std::vector.12"*, %"class.std::vector.12"** %8, align 8
  invoke void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector.12"* %17, %"class.std::vector.12"* dereferenceable(24) %56)
          to label %57 unwind label %193

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* @x.177
  %59 = load i32, i32* @y.178
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %57, %originalBB3alteredBB
  %66 = load i32, i32* @x.177
  %67 = load i32, i32* @y.178
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  invoke void @_ZN7MGTools24count_dofs_per_componentILi3EEEvRK12MGDoFHandlerIXT_EERSt6vectorIS5_IjSaIjEESaIS7_EES7_(%class.MGDoFHandler* dereferenceable(168) %55, %"class.std::vector.138"* dereferenceable(24) %10, %"class.std::vector.12"* %17)
          to label %74 unwind label %197

; <label>:74:                                     ; preds = %originalBBpart25
  %75 = load i32, i32* @x.177
  %76 = load i32, i32* @y.178
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %74, %originalBB7alteredBB
  %83 = load i32, i32* @x.177
  %84 = load i32, i32* @y.178
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
          to label %91 unwind label %193

; <label>:91:                                     ; preds = %originalBBpart29
  %92 = load i32, i32* @x.177
  %93 = load i32, i32* @y.178
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %91, %originalBB11alteredBB
  %100 = load %class.MGLevelObject*, %class.MGLevelObject** %6, align 8
  %101 = load i32, i32* @x.177
  %102 = load i32, i32* @y.178
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  %109 = invoke i32 @_ZNK13MGLevelObjectI6VectorIdEE12get_minlevelEv(%class.MGLevelObject* %100)
          to label %110 unwind label %193

; <label>:110:                                    ; preds = %originalBBpart213
  store i32 %109, i32* %18, align 4
  br label %111

; <label>:111:                                    ; preds = %164, %110
  %112 = load i32, i32* @x.177
  %113 = load i32, i32* @y.178
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %111, %originalBB15alteredBB
  %120 = load i32, i32* %18, align 4
  %121 = load %class.MGLevelObject*, %class.MGLevelObject** %6, align 8
  %122 = load i32, i32* @x.177
  %123 = load i32, i32* @y.178
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  %130 = invoke i32 @_ZNK13MGLevelObjectI6VectorIdEE12get_maxlevelEv(%class.MGLevelObject* %121)
          to label %131 unwind label %193

; <label>:131:                                    ; preds = %originalBBpart217
  %132 = icmp ule i32 %120, %130
  br i1 %132, label %133, label %202

; <label>:133:                                    ; preds = %131
  %134 = load i32, i32* @x.177
  %135 = load i32, i32* @y.178
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %133, %originalBB19alteredBB
  %142 = load %class.MGLevelObject*, %class.MGLevelObject** %6, align 8
  %143 = load i32, i32* %18, align 4
  %144 = load i32, i32* @x.177
  %145 = load i32, i32* @y.178
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  %152 = invoke dereferenceable(24) %class.Vector* @_ZN13MGLevelObjectI6VectorIdEEixEj(%class.MGLevelObject* %142, i32 %143)
          to label %153 unwind label %193

; <label>:153:                                    ; preds = %originalBBpart221
  %154 = load i32, i32* %18, align 4
  %155 = zext i32 %154 to i64
  %156 = invoke dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %10, i64 %155)
          to label %157 unwind label %193

; <label>:157:                                    ; preds = %153
  %158 = load i32, i32* %9, align 4
  %159 = zext i32 %158 to i64
  %160 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %156, i64 %159)
          to label %161 unwind label %193

; <label>:161:                                    ; preds = %157
  %162 = load i32, i32* %160, align 4
  invoke void @_ZN6VectorIdE6reinitEjb(%class.Vector* %152, i32 %162, i1 zeroext false)
          to label %163 unwind label %193

; <label>:163:                                    ; preds = %161
  br label %164

; <label>:164:                                    ; preds = %163
  %165 = load i32, i32* %18, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %18, align 4
  br label %111

; <label>:167:                                    ; preds = %53, %44
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %14, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %15, align 4
  br label %192

; <label>:171:                                    ; preds = %52
  %172 = load i32, i32* @x.177
  %173 = load i32, i32* @y.178
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %171, %originalBB23alteredBB
  %180 = landingpad { i8*, i32 }
          cleanup
  %181 = extractvalue { i8*, i32 } %180, 0
  store i8* %181, i8** %14, align 8
  %182 = extractvalue { i8*, i32 } %180, 1
  store i32 %182, i32* %15, align 4
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %16) #2
  %183 = load i32, i32* @x.177
  %184 = load i32, i32* @y.178
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %11)
          to label %191 unwind label %242

; <label>:191:                                    ; preds = %originalBBpart225
  br label %192

; <label>:192:                                    ; preds = %191, %167
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %13) #2
  br label %237

; <label>:193:                                    ; preds = %161, %157, %153, %originalBBpart221, %originalBBpart217, %originalBBpart213, %originalBBpart29, %54
  %194 = landingpad { i8*, i32 }
          cleanup
  %195 = extractvalue { i8*, i32 } %194, 0
  store i8* %195, i8** %14, align 8
  %196 = extractvalue { i8*, i32 } %194, 1
  store i32 %196, i32* %15, align 4
  br label %219

; <label>:197:                                    ; preds = %originalBBpart25
  %198 = landingpad { i8*, i32 }
          cleanup
  %199 = extractvalue { i8*, i32 } %198, 0
  store i8* %199, i8** %14, align 8
  %200 = extractvalue { i8*, i32 } %198, 1
  store i32 %200, i32* %15, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
          to label %201 unwind label %242

; <label>:201:                                    ; preds = %197
  br label %219

; <label>:202:                                    ; preds = %131
  %203 = load i32, i32* @x.177
  %204 = load i32, i32* @y.178
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %202, %originalBB27alteredBB
  call void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %10)
  %211 = load i32, i32* @x.177
  %212 = load i32, i32* @y.178
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  ret void

; <label>:219:                                    ; preds = %201, %193
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %10)
          to label %220 unwind label %242

; <label>:220:                                    ; preds = %219
  %221 = load i32, i32* @x.177
  %222 = load i32, i32* @y.178
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %220, %originalBB31alteredBB
  %229 = load i32, i32* @x.177
  %230 = load i32, i32* @y.178
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %237

; <label>:237:                                    ; preds = %originalBBpart233, %192
  %238 = load i8*, i8** %14, align 8
  %239 = load i32, i32* %15, align 4
  %240 = insertvalue { i8*, i32 } undef, i8* %238, 0
  %241 = insertvalue { i8*, i32 } %240, i32 %239, 1
  resume { i8*, i32 } %241

; <label>:242:                                    ; preds = %219, %197, %originalBBpart225
  %243 = load i32, i32* @x.177
  %244 = load i32, i32* @y.178
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %242, %originalBB35alteredBB
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  call void @__clang_call_terminate(i8* %252) #9
  %253 = load i32, i32* @x.177
  %254 = load i32, i32* @y.178
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %261 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %262 = load i32, i32* %9, align 4
  %263 = zext i32 %262 to i64
  %264 = call zeroext i1 @_ZNKSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %261, i64 %263)
  %_ = sub i1 false, %264
  %gen = add i1 %_, true
  %_1 = sub i1 %264, true
  %gen2 = mul i1 %_1, true
  %265 = xor i1 %264, true
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %57
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %74
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %91
  %266 = load %class.MGLevelObject*, %class.MGLevelObject** %6, align 8
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %111
  %267 = load i32, i32* %18, align 4
  %268 = load %class.MGLevelObject*, %class.MGLevelObject** %6, align 8
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %133
  %269 = load %class.MGLevelObject*, %class.MGLevelObject** %6, align 8
  %270 = load i32, i32* %18, align 4
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %171
  %271 = landingpad { i8*, i32 }
          cleanup
  %272 = extractvalue { i8*, i32 } %271, 0
  store i8* %272, i8** %14, align 8
  %273 = extractvalue { i8*, i32 } %271, 1
  store i32 %273, i32* %15, align 4
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %16) #2
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %202
  call void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %10)
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %220
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %242
  %274 = landingpad { i8*, i32 }
          catch i8* null
  %275 = extractvalue { i8*, i32 } %274, 0
  call void @__clang_call_terminate(i8* %275) #9
  br label %originalBB35
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorIbSaIbEEixEm(%"class.std::vector.3"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.179
  %4 = load i32, i32* @y.180
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.3"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %11, align 8
  store i64 %1, i64* %12, align 8
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %11, align 8
  %15 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Bvector_base"*
  %16 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %16 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Bit_iterator"* %18 to %"struct.std::_Bit_iterator_base"*
  %20 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %19, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %12, align 8
  %23 = udiv i64 %22, 64
  %24 = getelementptr inbounds i64, i64* %21, i64 %23
  %25 = load i64, i64* %12, align 8
  %26 = urem i64 %25, 64
  %27 = trunc i64 %26 to i32
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %13, i64* %24, i32 %27)
  %28 = call zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"* %13)
  %29 = load i32, i32* @x.179
  %30 = load i32, i32* @y.180
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %28

originalBBalteredBB:                              ; preds = %originalBB, %2
  %37 = alloca %"class.std::vector.3"*, align 8
  %38 = alloca i64, align 8
  %39 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %37, align 8
  store i64 %1, i64* %38, align 8
  %40 = load %"class.std::vector.3"*, %"class.std::vector.3"** %37, align 8
  %41 = bitcast %"class.std::vector.3"* %40 to %"struct.std::_Bvector_base"*
  %42 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %42 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %43, i32 0, i32 0
  %45 = bitcast %"struct.std::_Bit_iterator"* %44 to %"struct.std::_Bit_iterator_base"*
  %46 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = load i64, i64* %38, align 8
  %49 = udiv i64 %48, 64
  %50 = getelementptr inbounds i64, i64* %47, i64 %49
  %51 = load i64, i64* %38, align 8
  %_ = sub i64 %51, 64
  %gen = mul i64 %_, 64
  %_1 = shl i64 %51, 64
  %_2 = sub i64 %51, 64
  %gen3 = mul i64 %_2, 64
  %_4 = sub i64 0, %51
  %gen5 = add i64 %_4, 64
  %_6 = shl i64 %51, 64
  %52 = urem i64 %51, 64
  %53 = trunc i64 %52 to i32
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %39, i64* %50, i32 %53)
  %54 = call zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"* %39)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN7MGTools13reinit_vectorILi3EfEEvRK12MGDoFHandlerIXT_EER13MGLevelObjectI6VectorIT0_EERKSt6vectorIbSaIbEERKSB_IjSaIjEE(%class.MGDoFHandler* dereferenceable(168), %class.MGLevelObject.123* dereferenceable(56), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.12"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.MGDoFHandler*, align 8
  %6 = alloca %class.MGLevelObject.123*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::vector.12"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::vector.138", align 8
  %11 = alloca %"class.std::vector.12", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::allocator.14", align 1
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca %"class.std::allocator.140", align 1
  %17 = alloca %"class.std::vector.12", align 8
  %18 = alloca i32, align 4
  store %class.MGDoFHandler* %0, %class.MGDoFHandler** %5, align 8
  store %class.MGLevelObject.123* %1, %class.MGLevelObject.123** %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.12"* %3, %"class.std::vector.12"** %8, align 8
  store i32 0, i32* %9, align 4
  br label %19

; <label>:19:                                     ; preds = %originalBBpart216, %4
  %20 = load i32, i32* @x.181
  %21 = load i32, i32* @y.182
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %29 = load i32, i32* %9, align 4
  %30 = zext i32 %29 to i64
  %31 = call zeroext i1 @_ZNKSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %28, i64 %30)
  %32 = xor i1 %31, true
  %33 = load i32, i32* @x.181
  %34 = load i32, i32* @y.182
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %41, label %60

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i32, i32* @x.181
  %43 = load i32, i32* @y.182
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB4, label %originalBB4alteredBB

originalBB4:                                      ; preds = %41, %originalBB4alteredBB
  %50 = load i32, i32* %9, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %9, align 4
  %52 = load i32, i32* @x.181
  %53 = load i32, i32* @y.182
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart216, label %originalBB4alteredBB

originalBBpart216:                                ; preds = %originalBB4
  br label %19

; <label>:60:                                     ; preds = %originalBBpart2
  %61 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  %62 = bitcast %class.MGDoFHandler* %61 to %class.DoFHandler*
  %63 = call dereferenceable(2352) %class.Triangulation* @_ZNK10DoFHandlerILi3EE8get_triaEv(%class.DoFHandler* %62)
  %64 = call i32 @_ZNK13TriangulationILi3EE8n_levelsEv(%class.Triangulation* %63)
  %65 = zext i32 %64 to i64
  %66 = load %"class.std::vector.12"*, %"class.std::vector.12"** %8, align 8
  %67 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %66)
  store i32 0, i32* %12, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.14"* %13) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.12"* %11, i64 %67, i32* dereferenceable(4) %12, %"class.std::allocator.14"* dereferenceable(1) %13)
          to label %68 unwind label %183

; <label>:68:                                     ; preds = %60
  call void @_ZNSaISt6vectorIjSaIjEEEC2Ev(%"class.std::allocator.140"* %16) #2
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.138"* %10, i64 %65, %"class.std::vector.12"* dereferenceable(24) %11, %"class.std::allocator.140"* dereferenceable(1) %16)
          to label %69 unwind label %187

; <label>:69:                                     ; preds = %68
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %16) #2
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %11)
          to label %70 unwind label %183

; <label>:70:                                     ; preds = %69
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %13) #2
  %71 = load %class.MGDoFHandler*, %class.MGDoFHandler** %5, align 8
  %72 = load %"class.std::vector.12"*, %"class.std::vector.12"** %8, align 8
  invoke void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector.12"* %17, %"class.std::vector.12"* dereferenceable(24) %72)
          to label %73 unwind label %209

; <label>:73:                                     ; preds = %70
  %74 = load i32, i32* @x.181
  %75 = load i32, i32* @y.182
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %73, %originalBB18alteredBB
  %82 = load i32, i32* @x.181
  %83 = load i32, i32* @y.182
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZN7MGTools24count_dofs_per_componentILi3EEEvRK12MGDoFHandlerIXT_EERSt6vectorIS5_IjSaIjEESaIS7_EES7_(%class.MGDoFHandler* dereferenceable(168) %71, %"class.std::vector.138"* dereferenceable(24) %10, %"class.std::vector.12"* %17)
          to label %90 unwind label %229

; <label>:90:                                     ; preds = %originalBBpart220
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
          to label %91 unwind label %209

; <label>:91:                                     ; preds = %90
  %92 = load i32, i32* @x.181
  %93 = load i32, i32* @y.182
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %91, %originalBB22alteredBB
  %100 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %6, align 8
  %101 = load i32, i32* @x.181
  %102 = load i32, i32* @y.182
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %109 = invoke i32 @_ZNK13MGLevelObjectI6VectorIfEE12get_minlevelEv(%class.MGLevelObject.123* %100)
          to label %110 unwind label %209

; <label>:110:                                    ; preds = %originalBBpart224
  store i32 %109, i32* %18, align 4
  br label %111

; <label>:111:                                    ; preds = %originalBBpart249, %110
  %112 = load i32, i32* %18, align 4
  %113 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %6, align 8
  %114 = invoke i32 @_ZNK13MGLevelObjectI6VectorIfEE12get_maxlevelEv(%class.MGLevelObject.123* %113)
          to label %115 unwind label %209

; <label>:115:                                    ; preds = %111
  %116 = load i32, i32* @x.181
  %117 = load i32, i32* @y.182
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %115, %originalBB26alteredBB
  %124 = icmp ule i32 %112, %114
  %125 = load i32, i32* @x.181
  %126 = load i32, i32* @y.182
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %124, label %133, label %266

; <label>:133:                                    ; preds = %originalBBpart228
  %134 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %6, align 8
  %135 = load i32, i32* %18, align 4
  %136 = invoke dereferenceable(24) %class.Vector.130* @_ZN13MGLevelObjectI6VectorIfEEixEj(%class.MGLevelObject.123* %134, i32 %135)
          to label %137 unwind label %209

; <label>:137:                                    ; preds = %133
  %138 = load i32, i32* %18, align 4
  %139 = zext i32 %138 to i64
  %140 = invoke dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIS_IjSaIjEESaIS1_EEixEm(%"class.std::vector.138"* %10, i64 %139)
          to label %141 unwind label %209

; <label>:141:                                    ; preds = %137
  %142 = load i32, i32* @x.181
  %143 = load i32, i32* @y.182
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %141, %originalBB30alteredBB
  %150 = load i32, i32* %9, align 4
  %151 = zext i32 %150 to i64
  %152 = load i32, i32* @x.181
  %153 = load i32, i32* @y.182
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  %160 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %140, i64 %151)
          to label %161 unwind label %209

; <label>:161:                                    ; preds = %originalBBpart232
  %162 = load i32, i32* %160, align 4
  invoke void @_ZN6VectorIfE6reinitEjb(%class.Vector.130* %136, i32 %162, i1 zeroext false)
          to label %163 unwind label %209

; <label>:163:                                    ; preds = %161
  br label %164

; <label>:164:                                    ; preds = %163
  %165 = load i32, i32* @x.181
  %166 = load i32, i32* @y.182
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %164, %originalBB34alteredBB
  %173 = load i32, i32* %18, align 4
  %174 = add i32 %173, 1
  store i32 %174, i32* %18, align 4
  %175 = load i32, i32* @x.181
  %176 = load i32, i32* @y.182
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart249, label %originalBB34alteredBB

originalBBpart249:                                ; preds = %originalBB34
  br label %111

; <label>:183:                                    ; preds = %69, %60
  %184 = landingpad { i8*, i32 }
          cleanup
  %185 = extractvalue { i8*, i32 } %184, 0
  store i8* %185, i8** %14, align 8
  %186 = extractvalue { i8*, i32 } %184, 1
  store i32 %186, i32* %15, align 4
  br label %208

; <label>:187:                                    ; preds = %68
  %188 = load i32, i32* @x.181
  %189 = load i32, i32* @y.182
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %187, %originalBB51alteredBB
  %196 = landingpad { i8*, i32 }
          cleanup
  %197 = extractvalue { i8*, i32 } %196, 0
  store i8* %197, i8** %14, align 8
  %198 = extractvalue { i8*, i32 } %196, 1
  store i32 %198, i32* %15, align 4
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %16) #2
  %199 = load i32, i32* @x.181
  %200 = load i32, i32* @y.182
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %11)
          to label %207 unwind label %306

; <label>:207:                                    ; preds = %originalBBpart253
  br label %208

; <label>:208:                                    ; preds = %207, %183
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %13) #2
  br label %301

; <label>:209:                                    ; preds = %161, %originalBBpart232, %137, %133, %111, %originalBBpart224, %90, %70
  %210 = load i32, i32* @x.181
  %211 = load i32, i32* @y.182
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %209, %originalBB55alteredBB
  %218 = landingpad { i8*, i32 }
          cleanup
  %219 = extractvalue { i8*, i32 } %218, 0
  store i8* %219, i8** %14, align 8
  %220 = extractvalue { i8*, i32 } %218, 1
  store i32 %220, i32* %15, align 4
  %221 = load i32, i32* @x.181
  %222 = load i32, i32* @y.182
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %267

; <label>:229:                                    ; preds = %originalBBpart220
  %230 = load i32, i32* @x.181
  %231 = load i32, i32* @y.182
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %229, %originalBB59alteredBB
  %238 = landingpad { i8*, i32 }
          cleanup
  %239 = extractvalue { i8*, i32 } %238, 0
  store i8* %239, i8** %14, align 8
  %240 = extractvalue { i8*, i32 } %238, 1
  store i32 %240, i32* %15, align 4
  %241 = load i32, i32* @x.181
  %242 = load i32, i32* @y.182
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %17)
          to label %249 unwind label %306

; <label>:249:                                    ; preds = %originalBBpart261
  %250 = load i32, i32* @x.181
  %251 = load i32, i32* @y.182
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %249, %originalBB63alteredBB
  %258 = load i32, i32* @x.181
  %259 = load i32, i32* @y.182
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %267

; <label>:266:                                    ; preds = %originalBBpart228
  call void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %10)
  ret void

; <label>:267:                                    ; preds = %originalBBpart265, %originalBBpart257
  %268 = load i32, i32* @x.181
  %269 = load i32, i32* @y.182
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %267, %originalBB67alteredBB
  %276 = load i32, i32* @x.181
  %277 = load i32, i32* @y.182
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  invoke void @_ZNSt6vectorIS_IjSaIjEESaIS1_EED2Ev(%"class.std::vector.138"* %10)
          to label %284 unwind label %306

; <label>:284:                                    ; preds = %originalBBpart269
  %285 = load i32, i32* @x.181
  %286 = load i32, i32* @y.182
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %284, %originalBB71alteredBB
  %293 = load i32, i32* @x.181
  %294 = load i32, i32* @y.182
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %301

; <label>:301:                                    ; preds = %originalBBpart273, %208
  %302 = load i8*, i8** %14, align 8
  %303 = load i32, i32* %15, align 4
  %304 = insertvalue { i8*, i32 } undef, i8* %302, 0
  %305 = insertvalue { i8*, i32 } %304, i32 %303, 1
  resume { i8*, i32 } %305

; <label>:306:                                    ; preds = %originalBBpart269, %originalBBpart261, %originalBBpart253
  %307 = landingpad { i8*, i32 }
          catch i8* null
  %308 = extractvalue { i8*, i32 } %307, 0
  call void @__clang_call_terminate(i8* %308) #9
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %309 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %310 = load i32, i32* %9, align 4
  %311 = zext i32 %310 to i64
  %312 = call zeroext i1 @_ZNKSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %309, i64 %311)
  %_ = sub i1 false, %312
  %gen = add i1 %_, true
  %_1 = shl i1 %312, true
  %_2 = sub i1 false, %312
  %gen3 = add i1 %_2, true
  %313 = xor i1 %312, true
  br label %originalBB

originalBB4alteredBB:                             ; preds = %originalBB4, %41
  %314 = load i32, i32* %9, align 4
  %_5 = shl i32 %314, 1
  %_6 = sub i32 0, %314
  %gen7 = add i32 %_6, 1
  %_8 = shl i32 %314, 1
  %_9 = sub i32 %314, 1
  %gen10 = mul i32 %_9, 1
  %_11 = sub i32 0, %314
  %gen12 = add i32 %_11, 1
  %_13 = sub i32 0, %314
  %gen14 = add i32 %_13, 1
  %315 = add i32 %314, 1
  store i32 %315, i32* %9, align 4
  br label %originalBB4

originalBB18alteredBB:                            ; preds = %originalBB18, %73
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %91
  %316 = load %class.MGLevelObject.123*, %class.MGLevelObject.123** %6, align 8
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %115
  %317 = icmp ule i32 %112, %114
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %141
  %318 = load i32, i32* %9, align 4
  %319 = zext i32 %318 to i64
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %164
  %320 = load i32, i32* %18, align 4
  %_35 = sub i32 %320, 1
  %gen36 = mul i32 %_35, 1
  %_37 = sub i32 %320, 1
  %gen38 = mul i32 %_37, 1
  %_39 = shl i32 %320, 1
  %_40 = sub i32 %320, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 %320, 1
  %gen43 = mul i32 %_42, 1
  %_44 = sub i32 0, %320
  %gen45 = add i32 %_44, 1
  %_46 = shl i32 %320, 1
  %_47 = shl i32 %320, 1
  %321 = add i32 %320, 1
  store i32 %321, i32* %18, align 4
  br label %originalBB34

originalBB51alteredBB:                            ; preds = %originalBB51, %187
  %322 = landingpad { i8*, i32 }
          cleanup
  %323 = extractvalue { i8*, i32 } %322, 0
  store i8* %323, i8** %14, align 8
  %324 = extractvalue { i8*, i32 } %322, 1
  store i32 %324, i32* %15, align 4
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %16) #2
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %209
  %325 = landingpad { i8*, i32 }
          cleanup
  %326 = extractvalue { i8*, i32 } %325, 0
  store i8* %326, i8** %14, align 8
  %327 = extractvalue { i8*, i32 } %325, 1
  store i32 %327, i32* %15, align 4
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %229
  %328 = landingpad { i8*, i32 }
          cleanup
  %329 = extractvalue { i8*, i32 } %328, 0
  store i8* %329, i8** %14, align 8
  %330 = extractvalue { i8*, i32 } %328, 1
  store i32 %330, i32* %15, align 4
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %249
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %267
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %284
  br label %originalBB71
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEjEvT_S7_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(i32* %19)
  %21 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %15, i32* %20, i32* dereferenceable(4) %21)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.12"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  %4 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %5 = bitcast %"class.std::vector.12"* %4 to %"struct.std::_Vector_base.13"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %2, i32** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.12"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  %4 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %5 = bitcast %"class.std::vector.12"* %4 to %"struct.std::_Vector_base.13"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %2, i32** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7Threads11ThreadGroupIvEC2Ev(%"class.Threads::ThreadGroup"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.189
  %3 = load i32, i32* @y.190
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.Threads::ThreadGroup"*, align 8
  store %"class.Threads::ThreadGroup"* %0, %"class.Threads::ThreadGroup"** %10, align 8
  %11 = load %"class.Threads::ThreadGroup"*, %"class.Threads::ThreadGroup"** %10, align 8
  %12 = getelementptr inbounds %"class.Threads::ThreadGroup", %"class.Threads::ThreadGroup"* %11, i32 0, i32 0
  call void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EEC2Ev(%"class.std::__cxx11::list"* %12)
  %13 = load i32, i32* @x.189
  %14 = load i32, i32* @y.190
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.Threads::ThreadGroup"*, align 8
  store %"class.Threads::ThreadGroup"* %0, %"class.Threads::ThreadGroup"** %21, align 8
  %22 = load %"class.Threads::ThreadGroup"*, %"class.Threads::ThreadGroup"** %21, align 8
  %23 = getelementptr inbounds %"class.Threads::ThreadGroup", %"class.Threads::ThreadGroup"* %22, i32 0, i32 0
  call void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EEC2Ev(%"class.std::__cxx11::list"* %23)
  br label %originalBB
}

declare void @_ZN8DoFTools18extract_level_dofsILi3EEEvjRK12MGDoFHandlerIXT_EERKSt6vectorIbSaIbEERS7_(i32, %class.MGDoFHandler* dereferenceable(168), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.3"* dereferenceable(40)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* @_ZN7Threads5spawnIvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS7_EENS_8internal13fun_forwarderIT_N5boost6tuples5tupleIT0_T1_T2_T3_NSF_9null_typeESL_SL_SL_SL_SL_EEXsr5boost6tuples6lengthISM_EE5valueEEEPFSD_SH_SI_SJ_SK_E(void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*) #0 comdat {
  %2 = load i32, i32* @x.191
  %3 = load i32, i32* @y.192
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.Threads::internal::fun_forwarder", align 8
  %11 = alloca void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, align 8
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %0, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %11, align 8
  %12 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %11, align 8
  call void @_ZN7Threads8internal13fun_forwarderIvN5boost6tuples5tupleIjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSB_NS3_9null_typeESF_SF_SF_SF_SF_EELi4EEC2EPFvjS8_SD_SE_E(%"class.Threads::internal::fun_forwarder"* %10, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %12)
  %13 = getelementptr inbounds %"class.Threads::internal::fun_forwarder", %"class.Threads::internal::fun_forwarder"* %10, i32 0, i32 0
  %14 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %13, align 8
  %15 = load i32, i32* @x.191
  %16 = load i32, i32* @y.192
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"class.Threads::internal::fun_forwarder", align 8
  %24 = alloca void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, align 8
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %0, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %24, align 8
  %25 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %24, align 8
  call void @_ZN7Threads8internal13fun_forwarderIvN5boost6tuples5tupleIjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSB_NS3_9null_typeESF_SF_SF_SF_SF_EELi4EEC2EPFvjS8_SD_SE_E(%"class.Threads::internal::fun_forwarder"* %23, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %25)
  %26 = getelementptr inbounds %"class.Threads::internal::fun_forwarder", %"class.Threads::internal::fun_forwarder"* %23, i32 0, i32 0
  %27 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %26, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7Threads8internal13fun_forwarderIvN5boost6tuples5tupleIjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSB_NS3_9null_typeESF_SF_SF_SF_SF_EELi4EEclEjS8_SD_SE_(%"class.Threads::internal::fun_forwarder"*, i32, %class.MGDoFHandler* dereferenceable(168), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.3"* dereferenceable(40)) #0 comdat align 2 {
  %6 = alloca %"class.Threads::Thread", align 1
  %7 = alloca %"class.Threads::internal::fun_forwarder"*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.MGDoFHandler*, align 8
  %10 = alloca %"class.std::vector.3"*, align 8
  %11 = alloca %"class.std::vector.3"*, align 8
  %12 = alloca %"class.boost::tuples::tuple", align 8
  store %"class.Threads::internal::fun_forwarder"* %0, %"class.Threads::internal::fun_forwarder"** %7, align 8
  store i32 %1, i32* %8, align 4
  store %class.MGDoFHandler* %2, %class.MGDoFHandler** %9, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %10, align 8
  store %"class.std::vector.3"* %4, %"class.std::vector.3"** %11, align 8
  %13 = load %"class.Threads::internal::fun_forwarder"*, %"class.Threads::internal::fun_forwarder"** %7, align 8
  %14 = getelementptr inbounds %"class.Threads::internal::fun_forwarder", %"class.Threads::internal::fun_forwarder"* %13, i32 0, i32 0
  %15 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %14, align 8
  %16 = load %class.MGDoFHandler*, %class.MGDoFHandler** %9, align 8
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %18 = load %"class.std::vector.3"*, %"class.std::vector.3"** %11, align 8
  call void @_ZN5boost6tuples3tieIjK12MGDoFHandlerILi3EEKSt6vectorIbSaIbEES7_EENS0_5tupleIRT_RT0_RT1_RT2_NS0_9null_typeESI_SI_SI_SI_SI_EESB_SD_SF_SH_(%"class.boost::tuples::tuple"* sret %12, i32* dereferenceable(4) %8, %class.MGDoFHandler* dereferenceable(168) %16, %"class.std::vector.3"* dereferenceable(40) %17, %"class.std::vector.3"* dereferenceable(40) %18)
  call void @_ZN7Threads6ThreadIvEC2IPFvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS9_EN5boost6tuples5tupleIRjS6_SB_SC_NSG_9null_typeESJ_SJ_SJ_SJ_SJ_EEEET_T0_(%"class.Threads::Thread"* %6, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %15, %"class.boost::tuples::tuple"* byval align 8 %12)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.Threads::ThreadGroup"* @_ZN7Threads11ThreadGroupIvEpLERKNS_6ThreadIvEE(%"class.Threads::ThreadGroup"*, %"class.Threads::Thread"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.Threads::ThreadGroup"*, align 8
  %4 = alloca %"class.Threads::Thread"*, align 8
  store %"class.Threads::ThreadGroup"* %0, %"class.Threads::ThreadGroup"** %3, align 8
  store %"class.Threads::Thread"* %1, %"class.Threads::Thread"** %4, align 8
  %5 = load %"class.Threads::ThreadGroup"*, %"class.Threads::ThreadGroup"** %3, align 8
  %6 = getelementptr inbounds %"class.Threads::ThreadGroup", %"class.Threads::ThreadGroup"* %5, i32 0, i32 0
  %7 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %4, align 8
  call void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE9push_backERKS3_(%"class.std::__cxx11::list"* %6, %"class.Threads::Thread"* dereferenceable(1) %7)
  ret %"class.Threads::ThreadGroup"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK7Threads11ThreadGroupIvE8join_allEv(%"class.Threads::ThreadGroup"*) #0 comdat align 2 {
  %2 = alloca %"class.Threads::ThreadGroup"*, align 8
  %3 = alloca %"struct.std::_List_const_iterator", align 8
  %4 = alloca %"struct.std::_List_const_iterator", align 8
  store %"class.Threads::ThreadGroup"* %0, %"class.Threads::ThreadGroup"** %2, align 8
  %5 = load %"class.Threads::ThreadGroup"*, %"class.Threads::ThreadGroup"** %2, align 8
  %6 = getelementptr inbounds %"class.Threads::ThreadGroup", %"class.Threads::ThreadGroup"* %5, i32 0, i32 0
  %7 = call %"struct.std::__detail::_List_node_base"* @_ZNKSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE5beginEv(%"class.std::__cxx11::list"* %6)
  %8 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %8, align 8
  br label %9

; <label>:9:                                      ; preds = %16, %1
  %10 = getelementptr inbounds %"class.Threads::ThreadGroup", %"class.Threads::ThreadGroup"* %5, i32 0, i32 0
  %11 = call %"struct.std::__detail::_List_node_base"* @_ZNKSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE3endEv(%"class.std::__cxx11::list"* %10)
  %12 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %11, %"struct.std::__detail::_List_node_base"** %12, align 8
  %13 = call zeroext i1 @_ZStneRKSt20_List_const_iteratorIN7Threads6ThreadIvEEES5_(%"struct.std::_List_const_iterator"* dereferenceable(8) %3, %"struct.std::_List_const_iterator"* dereferenceable(8) %4)
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %9
  %15 = call %"class.Threads::Thread"* @_ZNKSt20_List_const_iteratorIN7Threads6ThreadIvEEEptEv(%"struct.std::_List_const_iterator"* %3)
  call void @_ZNK7Threads6ThreadIvE4joinEv(%"class.Threads::Thread"* %15)
  br label %16

; <label>:16:                                     ; preds = %14
  %17 = call dereferenceable(8) %"struct.std::_List_const_iterator"* @_ZNSt20_List_const_iteratorIN7Threads6ThreadIvEEEppEv(%"struct.std::_List_const_iterator"* %3)
  br label %9

; <label>:18:                                     ; preds = %9
  %19 = load i32, i32* @x.197
  %20 = load i32, i32* @y.198
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.197
  %28 = load i32, i32* @y.198
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt5countISt13_Bit_iteratorbENSt15iterator_traitsIT_E15difference_typeES2_S2_RKT0_(i64*, i32, i64*, i32, i8* dereferenceable(1)) #0 comdat {
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca i8*, align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %12 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %13 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 0
  store i64* %0, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 1
  store i32 %1, i32* %14, align 8
  %15 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %2, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %3, i32* %17, align 8
  store i8* %4, i8** %8, align 8
  %18 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  %19 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 16, i32 8, i1 false)
  %20 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  %21 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 8, i1 false)
  %22 = load i8*, i8** %8, align 8
  %23 = call i8* @_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_(i8* dereferenceable(1) %22)
  %24 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %11, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %26 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %25, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %11, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = call i64 @_ZSt10__count_ifISt13_Bit_iteratorN9__gnu_cxx5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeES7_S7_T0_(i64* %27, i32 %29, i64* %32, i32 %34, i8* %36)
  ret i64 %37
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7Threads11ThreadGroupIvED2Ev(%"class.Threads::ThreadGroup"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.Threads::ThreadGroup"*, align 8
  store %"class.Threads::ThreadGroup"* %0, %"class.Threads::ThreadGroup"** %2, align 8
  %3 = load %"class.Threads::ThreadGroup"*, %"class.Threads::ThreadGroup"** %2, align 8
  %4 = getelementptr inbounds %"class.Threads::ThreadGroup", %"class.Threads::ThreadGroup"* %3, i32 0, i32 0
  call void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EED2Ev(%"class.std::__cxx11::list"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EEC2Ev(%"class.std::__cxx11::list"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %2, align 8
  %3 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::list"* %3 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EEC2Ev(%"class.std::__cxx11::_List_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EEC2Ev(%"class.std::__cxx11::_List_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %3, i32 0, i32 0
  call void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE10_List_implC2Ev(%"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE10_List_implC2Ev(%"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.207
  %3 = load i32, i32* @y.208
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %0, %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"** %10, align 8
  %13 = load %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"*, %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"** %10, align 8
  %14 = bitcast %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %13 to %"class.std::allocator.162"*
  call void @_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEEC2Ev(%"class.std::allocator.162"* %14) #2
  %15 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %13, i32 0, i32 0
  %16 = load i32, i32* @x.207
  %17 = load i32, i32* @y.208
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt8__detail17_List_node_headerC2Ev(%"struct.std::__detail::_List_node_header"* %15)
          to label %24 unwind label %25

; <label>:24:                                     ; preds = %originalBBpart2
  ret void

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.207
  %27 = load i32, i32* @y.208
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %11, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %12, align 4
  %37 = bitcast %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %13 to %"class.std::allocator.162"*
  call void @_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEED2Ev(%"class.std::allocator.162"* %37) #2
  %38 = load i32, i32* @x.207
  %39 = load i32, i32* @y.208
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24
  %47 = load i8*, i8** %11, align 8
  %48 = load i32, i32* %12, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

originalBBalteredBB:                              ; preds = %originalBB, %1
  %51 = alloca %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"*, align 8
  %52 = alloca i8*
  %53 = alloca i32
  store %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %0, %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"** %51, align 8
  %54 = load %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"*, %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"** %51, align 8
  %55 = bitcast %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %54 to %"class.std::allocator.162"*
  call void @_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEEC2Ev(%"class.std::allocator.162"* %55) #2
  %56 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %54, i32 0, i32 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %11, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %12, align 4
  %60 = bitcast %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %13 to %"class.std::allocator.162"*
  call void @_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEED2Ev(%"class.std::allocator.162"* %60) #2
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEEC2Ev(%"class.std::allocator.162"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.162"*, align 8
  store %"class.std::allocator.162"* %0, %"class.std::allocator.162"** %2, align 8
  %3 = load %"class.std::allocator.162"*, %"class.std::allocator.162"** %2, align 8
  %4 = bitcast %"class.std::allocator.162"* %3 to %"class.__gnu_cxx::new_allocator.163"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEEC2Ev(%"class.__gnu_cxx::new_allocator.163"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8__detail17_List_node_headerC2Ev(%"struct.std::__detail::_List_node_header"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.211
  %3 = load i32, i32* @y.212
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::__detail::_List_node_header"*, align 8
  store %"struct.std::__detail::_List_node_header"* %0, %"struct.std::__detail::_List_node_header"** %10, align 8
  %11 = load %"struct.std::__detail::_List_node_header"*, %"struct.std::__detail::_List_node_header"** %10, align 8
  %12 = bitcast %"struct.std::__detail::_List_node_header"* %11 to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt8__detail17_List_node_header7_M_initEv(%"struct.std::__detail::_List_node_header"* %11)
  %13 = load i32, i32* @x.211
  %14 = load i32, i32* @y.212
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::__detail::_List_node_header"*, align 8
  store %"struct.std::__detail::_List_node_header"* %0, %"struct.std::__detail::_List_node_header"** %21, align 8
  %22 = load %"struct.std::__detail::_List_node_header"*, %"struct.std::__detail::_List_node_header"** %21, align 8
  %23 = bitcast %"struct.std::__detail::_List_node_header"* %22 to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt8__detail17_List_node_header7_M_initEv(%"struct.std::__detail::_List_node_header"* %22)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEED2Ev(%"class.std::allocator.162"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.162"*, align 8
  store %"class.std::allocator.162"* %0, %"class.std::allocator.162"** %2, align 8
  %3 = load %"class.std::allocator.162"*, %"class.std::allocator.162"** %2, align 8
  %4 = bitcast %"class.std::allocator.162"* %3 to %"class.__gnu_cxx::new_allocator.163"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEED2Ev(%"class.__gnu_cxx::new_allocator.163"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEEC2Ev(%"class.__gnu_cxx::new_allocator.163"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.215
  %3 = load i32, i32* @y.216
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %10, align 8
  %12 = load i32, i32* @x.215
  %13 = load i32, i32* @y.216
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8__detail17_List_node_header7_M_initEv(%"struct.std::__detail::_List_node_header"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::__detail::_List_node_header"*, align 8
  store %"struct.std::__detail::_List_node_header"* %0, %"struct.std::__detail::_List_node_header"** %2, align 8
  %3 = load %"struct.std::__detail::_List_node_header"*, %"struct.std::__detail::_List_node_header"** %2, align 8
  %4 = bitcast %"struct.std::__detail::_List_node_header"* %3 to %"struct.std::__detail::_List_node_base"*
  %5 = bitcast %"struct.std::__detail::_List_node_header"* %3 to %"struct.std::__detail::_List_node_base"*
  %6 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %5, i32 0, i32 1
  store %"struct.std::__detail::_List_node_base"* %4, %"struct.std::__detail::_List_node_base"** %6, align 8
  %7 = bitcast %"struct.std::__detail::_List_node_header"* %3 to %"struct.std::__detail::_List_node_base"*
  %8 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %7, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %4, %"struct.std::__detail::_List_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__detail::_List_node_header", %"struct.std::__detail::_List_node_header"* %3, i32 0, i32 1
  store i64 0, i64* %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEED2Ev(%"class.__gnu_cxx::new_allocator.163"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EED2Ev(%"class.std::__cxx11::list"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %2, align 8
  %3 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::list"* %3 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EED2Ev(%"class.std::__cxx11::_List_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EED2Ev(%"class.std::__cxx11::_List_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  invoke void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE8_M_clearEv(%"class.std::__cxx11::_List_base"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  call void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE10_List_implD2Ev(%"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %7) #2
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  call void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE10_List_implD2Ev(%"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %12) #2
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE8_M_clearEv(%"class.std::__cxx11::_List_base"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %3 = alloca %"struct.std::__detail::_List_node_base"*, align 8
  %4 = alloca %"struct.std::_List_node"*, align 8
  %5 = alloca %"class.Threads::Thread"*, align 8
  %6 = alloca %"class.std::allocator.166", align 1
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %9 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  %10 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %10, i32 0, i32 0
  %12 = bitcast %"struct.std::__detail::_List_node_header"* %11 to %"struct.std::__detail::_List_node_base"*
  %13 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %12, i32 0, i32 0
  %14 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %13, align 8
  store %"struct.std::__detail::_List_node_base"* %14, %"struct.std::__detail::_List_node_base"** %3, align 8
  br label %15

; <label>:15:                                     ; preds = %originalBBpart2, %1
  %16 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
  %17 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %9, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::__detail::_List_node_header"* %18 to %"struct.std::__detail::_List_node_base"*
  %20 = icmp ne %"struct.std::__detail::_List_node_base"* %16, %19
  br i1 %20, label %21, label %71

; <label>:21:                                     ; preds = %15
  %22 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
  %23 = bitcast %"struct.std::__detail::_List_node_base"* %22 to %"struct.std::_List_node"*
  store %"struct.std::_List_node"* %23, %"struct.std::_List_node"** %4, align 8
  %24 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %4, align 8
  %25 = bitcast %"struct.std::_List_node"* %24 to %"struct.std::__detail::_List_node_base"*
  %26 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %25, i32 0, i32 0
  %27 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %26, align 8
  store %"struct.std::__detail::_List_node_base"* %27, %"struct.std::__detail::_List_node_base"** %3, align 8
  %28 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %4, align 8
  %29 = call %"class.Threads::Thread"* @_ZNSt10_List_nodeIN7Threads6ThreadIvEEE9_M_valptrEv(%"struct.std::_List_node"* %28)
  store %"class.Threads::Thread"* %29, %"class.Threads::Thread"** %5, align 8
  %30 = call dereferenceable(1) %"class.std::allocator.162"* @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* %9)
  call void @_ZNSaIN7Threads6ThreadIvEEEC2ISt10_List_nodeIS1_EEERKSaIT_E(%"class.std::allocator.166"* %6, %"class.std::allocator.162"* dereferenceable(1) %30) #2
  %31 = bitcast %"class.std::allocator.166"* %6 to %"class.__gnu_cxx::new_allocator.167"*
  %32 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %5, align 8
  invoke void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEE7destroyEPS3_(%"class.__gnu_cxx::new_allocator.167"* %31, %"class.Threads::Thread"* %32)
          to label %33 unwind label %51

; <label>:33:                                     ; preds = %21
  %34 = load i32, i32* @x.225
  %35 = load i32, i32* @y.226
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %33, %originalBBalteredBB
  call void @_ZNSaIN7Threads6ThreadIvEEED2Ev(%"class.std::allocator.166"* %6) #2
  %42 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %4, align 8
  call void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_put_nodeEPSt10_List_nodeIS3_E(%"class.std::__cxx11::_List_base"* %9, %"struct.std::_List_node"* %42)
  %43 = load i32, i32* @x.225
  %44 = load i32, i32* @y.226
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %15

; <label>:51:                                     ; preds = %21
  %52 = load i32, i32* @x.225
  %53 = load i32, i32* @y.226
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %51, %originalBB1alteredBB
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %7, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %8, align 4
  call void @_ZNSaIN7Threads6ThreadIvEEED2Ev(%"class.std::allocator.166"* %6) #2
  %63 = load i32, i32* @x.225
  %64 = load i32, i32* @y.226
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %72

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %originalBBpart24
  %73 = load i8*, i8** %7, align 8
  %74 = load i32, i32* %8, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  resume { i8*, i32 } %76

originalBBalteredBB:                              ; preds = %originalBB, %33
  call void @_ZNSaIN7Threads6ThreadIvEEED2Ev(%"class.std::allocator.166"* %6) #2
  %77 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %4, align 8
  call void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_put_nodeEPSt10_List_nodeIS3_E(%"class.std::__cxx11::_List_base"* %9, %"struct.std::_List_node"* %77)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %51
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %7, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %8, align 4
  call void @_ZNSaIN7Threads6ThreadIvEEED2Ev(%"class.std::allocator.166"* %6) #2
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE10_List_implD2Ev(%"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"*, align 8
  store %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %0, %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"** %2, align 8
  %3 = load %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"*, %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"** %2, align 8
  %4 = bitcast %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %3 to %"class.std::allocator.162"*
  call void @_ZNSaISt10_List_nodeIN7Threads6ThreadIvEEEED2Ev(%"class.std::allocator.162"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Threads::Thread"* @_ZNSt10_List_nodeIN7Threads6ThreadIvEEE9_M_valptrEv(%"struct.std::_List_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_List_node"*, align 8
  store %"struct.std::_List_node"* %0, %"struct.std::_List_node"** %2, align 8
  %3 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %3, i32 0, i32 1
  %5 = call %"class.Threads::Thread"* @_ZSt11__addressofIN7Threads6ThreadIvEEEPT_RS3_(%"class.Threads::Thread"* dereferenceable(1) %4)
  ret %"class.Threads::Thread"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.162"* @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"*) #3 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %4 to %"class.std::allocator.162"*
  ret %"class.std::allocator.162"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7Threads6ThreadIvEEEC2ISt10_List_nodeIS1_EEERKSaIT_E(%"class.std::allocator.166"*, %"class.std::allocator.162"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.233
  %4 = load i32, i32* @y.234
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.166"*, align 8
  %12 = alloca %"class.std::allocator.162"*, align 8
  store %"class.std::allocator.166"* %0, %"class.std::allocator.166"** %11, align 8
  store %"class.std::allocator.162"* %1, %"class.std::allocator.162"** %12, align 8
  %13 = load %"class.std::allocator.166"*, %"class.std::allocator.166"** %11, align 8
  %14 = bitcast %"class.std::allocator.166"* %13 to %"class.__gnu_cxx::new_allocator.167"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEEC2Ev(%"class.__gnu_cxx::new_allocator.167"* %14) #2
  %15 = load i32, i32* @x.233
  %16 = load i32, i32* @y.234
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"class.std::allocator.166"*, align 8
  %24 = alloca %"class.std::allocator.162"*, align 8
  store %"class.std::allocator.166"* %0, %"class.std::allocator.166"** %23, align 8
  store %"class.std::allocator.162"* %1, %"class.std::allocator.162"** %24, align 8
  %25 = load %"class.std::allocator.166"*, %"class.std::allocator.166"** %23, align 8
  %26 = bitcast %"class.std::allocator.166"* %25 to %"class.__gnu_cxx::new_allocator.167"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEEC2Ev(%"class.__gnu_cxx::new_allocator.167"* %26) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEE7destroyEPS3_(%"class.__gnu_cxx::new_allocator.167"*, %"class.Threads::Thread"*) #3 comdat align 2 {
  %3 = load i32, i32* @x.235
  %4 = load i32, i32* @y.236
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator.167"*, align 8
  %12 = alloca %"class.Threads::Thread"*, align 8
  store %"class.__gnu_cxx::new_allocator.167"* %0, %"class.__gnu_cxx::new_allocator.167"** %11, align 8
  store %"class.Threads::Thread"* %1, %"class.Threads::Thread"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.167"*, %"class.__gnu_cxx::new_allocator.167"** %11, align 8
  %14 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %12, align 8
  %15 = load i32, i32* @x.235
  %16 = load i32, i32* @y.236
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"class.__gnu_cxx::new_allocator.167"*, align 8
  %24 = alloca %"class.Threads::Thread"*, align 8
  store %"class.__gnu_cxx::new_allocator.167"* %0, %"class.__gnu_cxx::new_allocator.167"** %23, align 8
  store %"class.Threads::Thread"* %1, %"class.Threads::Thread"** %24, align 8
  %25 = load %"class.__gnu_cxx::new_allocator.167"*, %"class.__gnu_cxx::new_allocator.167"** %23, align 8
  %26 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7Threads6ThreadIvEEED2Ev(%"class.std::allocator.166"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.166"*, align 8
  store %"class.std::allocator.166"* %0, %"class.std::allocator.166"** %2, align 8
  %3 = load %"class.std::allocator.166"*, %"class.std::allocator.166"** %2, align 8
  %4 = bitcast %"class.std::allocator.166"* %3 to %"class.__gnu_cxx::new_allocator.167"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEED2Ev(%"class.__gnu_cxx::new_allocator.167"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_put_nodeEPSt10_List_nodeIS3_E(%"class.std::__cxx11::_List_base"*, %"struct.std::_List_node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %4 = alloca %"struct.std::_List_node"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
  store %"struct.std::_List_node"* %1, %"struct.std::_List_node"** %4, align 8
  %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %6 to %"class.std::allocator.162"*
  %8 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %4, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt10_List_nodeIN7Threads6ThreadIvEEEES5_E10deallocateERS6_PS5_m(%"class.std::allocator.162"* dereferenceable(1) %7, %"struct.std::_List_node"* %8, i64 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.Threads::Thread"* @_ZSt11__addressofIN7Threads6ThreadIvEEEPT_RS3_(%"class.Threads::Thread"* dereferenceable(1)) #3 comdat {
  %2 = load i32, i32* @x.241
  %3 = load i32, i32* @y.242
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.Threads::Thread"*, align 8
  store %"class.Threads::Thread"* %0, %"class.Threads::Thread"** %10, align 8
  %11 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %10, align 8
  %12 = load i32, i32* @x.241
  %13 = load i32, i32* @y.242
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Threads::Thread"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.Threads::Thread"*, align 8
  store %"class.Threads::Thread"* %0, %"class.Threads::Thread"** %20, align 8
  %21 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEEC2Ev(%"class.__gnu_cxx::new_allocator.167"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.167"*, align 8
  store %"class.__gnu_cxx::new_allocator.167"* %0, %"class.__gnu_cxx::new_allocator.167"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.167"*, %"class.__gnu_cxx::new_allocator.167"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEED2Ev(%"class.__gnu_cxx::new_allocator.167"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.167"*, align 8
  store %"class.__gnu_cxx::new_allocator.167"* %0, %"class.__gnu_cxx::new_allocator.167"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.167"*, %"class.__gnu_cxx::new_allocator.167"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt10_List_nodeIN7Threads6ThreadIvEEEES5_E10deallocateERS6_PS5_m(%"class.std::allocator.162"* dereferenceable(1), %"struct.std::_List_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.162"*, align 8
  %5 = alloca %"struct.std::_List_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.162"* %0, %"class.std::allocator.162"** %4, align 8
  store %"struct.std::_List_node"* %1, %"struct.std::_List_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.162"*, %"class.std::allocator.162"** %4, align 8
  %8 = bitcast %"class.std::allocator.162"* %7 to %"class.__gnu_cxx::new_allocator.163"*
  %9 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.163"* %8, %"struct.std::_List_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.163"*, %"struct.std::_List_node"*, i64) #3 comdat align 2 {
  %4 = load i32, i32* @x.249
  %5 = load i32, i32* @y.250
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  %13 = alloca %"struct.std::_List_node"*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %12, align 8
  store %"struct.std::_List_node"* %1, %"struct.std::_List_node"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %12, align 8
  %16 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %13, align 8
  %17 = bitcast %"struct.std::_List_node"* %16 to i8*
  call void @_ZdlPv(i8* %17) #2
  %18 = load i32, i32* @x.249
  %19 = load i32, i32* @y.250
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  %27 = alloca %"struct.std::_List_node"*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %26, align 8
  store %"struct.std::_List_node"* %1, %"struct.std::_List_node"** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %26, align 8
  %30 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %27, align 8
  %31 = bitcast %"struct.std::_List_node"* %30 to i8*
  call void @_ZdlPv(i8* %31) #2
  br label %originalBB
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.14"*, align 8
  %5 = alloca %"class.std::allocator.14", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %4, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.14"* %5, %"class.std::allocator.14"* dereferenceable(1) %9) #2
  %10 = invoke i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.14"* dereferenceable(1) %5)
          to label %11 unwind label %14

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %5) #2
  br i1 %12, label %13, label %18

; <label>:13:                                     ; preds = %11
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0)) #14
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %6, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %7, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %5) #2
  br label %20

; <label>:18:                                     ; preds = %11
  %19 = load i64, i64* %3, align 8
  ret i64 %19

; <label>:20:                                     ; preds = %14
  %21 = load i8*, i8** %6, align 8
  %22 = load i32, i32* %7, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.13"*, i64, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.13"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.14"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.14"* %2, %"class.std::allocator.14"** %6, align 8
  %9 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %6, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10, %"class.std::allocator.14"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base.13"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10) #2
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.257
  %20 = load i32, i32* @y.258
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i8*, i8** %7, align 8
  %28 = load i32, i32* %8, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  %31 = load i32, i32* @x.257
  %32 = load i32, i32* @y.258
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %30

originalBBalteredBB:                              ; preds = %originalBB, %18
  %39 = load i8*, i8** %7, align 8
  %40 = load i32, i32* %8, align 4
  %41 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector.12"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.12"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  %8 = bitcast %"class.std::vector.12"* %7 to %"struct.std::_Vector_base.13"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %9 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = bitcast %"class.std::vector.12"* %7 to %"struct.std::_Vector_base.13"*
  %16 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %15)
  %17 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %12, i64 %13, i32* dereferenceable(4) %14, %"class.std::allocator.14"* dereferenceable(1) %16)
  %18 = bitcast %"class.std::vector.12"* %7 to %"struct.std::_Vector_base.13"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %19 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %20, i32 0, i32 1
  store i32* %17, i32** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.13"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.13"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %2, align 8
  %5 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = ptrtoint i32* %13 to i64
  %19 = ptrtoint i32* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 4
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.13"* %5, i32* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %23) #2
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %28) #2
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.14"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  store i64 2305843009213693951, i64* %3, align 8
  %5 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.14"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2ERKS_(%"class.std::allocator.14"*, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::allocator.14"*, align 8
  %4 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %3, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %4, align 8
  %5 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %3, align 8
  %6 = bitcast %"class.std::allocator.14"* %5 to %"class.__gnu_cxx::new_allocator.15"*
  %7 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %4, align 8
  %8 = bitcast %"class.std::allocator.14"* %7 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator.15"* %6, %"class.__gnu_cxx::new_allocator.15"* dereferenceable(1) %8) #2
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.14"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  %4 = bitcast %"class.std::allocator.14"* %3 to %"class.__gnu_cxx::new_allocator.15"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #3 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %15

; <label>:13:                                     ; preds = %2
  %14 = load i64*, i64** %4, align 8
  store i64* %14, i64** %3, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %11
  %16 = load i64*, i64** %3, align 8
  ret i64* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"*) #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.273
  %4 = load i32, i32* @y.274
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %12 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %11, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %1, %"class.__gnu_cxx::new_allocator.15"** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %11, align 8
  %14 = load i32, i32* @x.273
  %15 = load i32, i32* @y.274
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %23 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %22, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %1, %"class.__gnu_cxx::new_allocator.15"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.14"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %4, align 8
  %7 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"class.std::allocator.14"*
  %9 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %4, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.14"* %8, %"class.std::allocator.14"* dereferenceable(1) %9) #2
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"class.std::allocator.14"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %16) #2
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base.13"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.277
  %4 = load i32, i32* @y.278
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.13"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.13"* %13, i64 %14)
  %16 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %13, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %16 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %17, i32 0, i32 0
  store i32* %15, i32** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %13, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %19 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %20, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %13, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %23 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 1
  store i32* %22, i32** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %13, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i64, i64* %12, align 8
  %31 = getelementptr inbounds i32, i32* %29, i64 %30
  %32 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %13, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %32 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %33, i32 0, i32 2
  store i32* %31, i32** %34, align 8
  %35 = load i32, i32* @x.277
  %36 = load i32, i32* @y.278
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca %"struct.std::_Vector_base.13"*, align 8
  %44 = alloca i64, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %43, align 8
  store i64 %1, i64* %44, align 8
  %45 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %43, align 8
  %46 = load i64, i64* %44, align 8
  %47 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.13"* %45, i64 %46)
  %48 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %45, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %49, i32 0, i32 0
  store i32* %47, i32** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %45, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %51 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %45, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %55 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %56, i32 0, i32 1
  store i32* %54, i32** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %45, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %58 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i64, i64* %44, align 8
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %45, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %64 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %65, i32 0, i32 2
  store i32* %63, i32** %66, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.279
  %3 = load i32, i32* @y.280
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %10, align 8
  %11 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %10, align 8
  %12 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %11 to %"class.std::allocator.14"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %12) #2
  %13 = load i32, i32* @x.279
  %14 = load i32, i32* @y.280
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %21, align 8
  %22 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %21, align 8
  %23 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %22 to %"class.std::allocator.14"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.14"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %3, i32 0, i32 1
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %3, i32 0, i32 2
  store i32* null, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.13"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.13"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %9 to %"class.std::allocator.14"*
  %11 = load i64, i64* %4, align 8
  %12 = call i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.14"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi i32* [ %12, %8 ], [ null, %13 ]
  ret i32* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.14"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.285
  %4 = load i32, i32* @y.286
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.14"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %11, align 8
  %14 = bitcast %"class.std::allocator.14"* %13 to %"class.__gnu_cxx::new_allocator.15"*
  %15 = load i64, i64* %12, align 8
  %16 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.285
  %18 = load i32, i32* @y.286
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.14"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %25, align 8
  %28 = bitcast %"class.std::allocator.14"* %27 to %"class.__gnu_cxx::new_allocator.15"*
  %29 = load i64, i64* %26, align 8
  %30 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.287
  %14 = load i32, i32* @y.288
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 4
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* @x.287
  %26 = load i32, i32* @y.288
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = shl i64 %33, 4
  %_1 = sub i64 0, %33
  %gen = add i64 %_1, 4
  %34 = mul i64 %33, 4
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to i32*
  br label %originalBB
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #6

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #7

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.14"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.291
  %3 = load i32, i32* @y.292
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.13"*, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %10, align 8
  %11 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"class.std::allocator.14"*
  %14 = load i32, i32* @x.291
  %15 = load i32, i32* @y.292
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.14"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.13"*, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %22, align 8
  %23 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %24 to %"class.std::allocator.14"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = load i32, i32* @x.295
  %5 = load i32, i32* @y.296
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store i32* %0, i32** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load i32*, i32** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = load i32*, i32** %14, align 8
  %18 = call i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32* %15, i64 %16, i32* dereferenceable(4) %17)
  %19 = load i32, i32* @x.295
  %20 = load i32, i32* @y.296
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %18

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i32*, align 8
  store i32* %0, i32** %27, align 8
  store i64 %1, i64* %28, align 8
  store i32* %2, i32** %29, align 8
  %30 = load i32*, i32** %27, align 8
  %31 = load i64, i64* %28, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = call i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32* %30, i64 %31, i32* dereferenceable(4) %32)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  %12 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %4, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8), i32*) #3 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #3 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  br label %12

; <label>:12:                                     ; preds = %originalBBpart211, %3
  %13 = load i64, i64* %8, align 8
  %14 = icmp ugt i64 %13, 0
  br i1 %14, label %15, label %55

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* @x.301
  %17 = load i32, i32* @y.302
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i32, i32* %7, align 4
  %25 = load i32*, i32** %4, align 8
  store i32 %24, i32* %25, align 4
  %26 = load i32, i32* @x.301
  %27 = load i32, i32* @y.302
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.301
  %36 = load i32, i32* @y.302
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i64, i64* %8, align 8
  %44 = add i64 %43, -1
  store i64 %44, i64* %8, align 8
  %45 = load i32*, i32** %4, align 8
  %46 = getelementptr inbounds i32, i32* %45, i32 1
  store i32* %46, i32** %4, align 8
  %47 = load i32, i32* @x.301
  %48 = load i32, i32* @y.302
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br label %12

; <label>:55:                                     ; preds = %12
  %56 = load i32*, i32** %4, align 8
  ret i32* %56

originalBBalteredBB:                              ; preds = %originalBB, %15
  %57 = load i32, i32* %7, align 4
  %58 = load i32*, i32** %4, align 8
  store i32 %57, i32* %58, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %59 = load i64, i64* %8, align 8
  %_ = sub i64 0, %59
  %gen = add i64 %_, -1
  %_2 = sub i64 0, %59
  %gen3 = add i64 %_2, -1
  %_4 = sub i64 0, %59
  %gen5 = add i64 %_4, -1
  %_6 = shl i64 %59, -1
  %_7 = sub i64 0, %59
  %gen8 = add i64 %_7, -1
  %_9 = shl i64 %59, -1
  %60 = add i64 %59, -1
  store i64 %60, i64* %8, align 8
  %61 = load i32*, i32** %4, align 8
  %62 = getelementptr inbounds i32, i32* %61, i32 1
  store i32* %62, i32** %4, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPjET_S1_(i32*) #3 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.13"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.13"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.305
  %12 = load i32, i32* @y.306
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %19 to %"class.std::allocator.14"*
  %21 = load i32*, i32** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.14"* dereferenceable(1) %20, i32* %21, i64 %22)
  %23 = load i32, i32* @x.305
  %24 = load i32, i32* @y.306
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %32 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %7, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %32 to %"class.std::allocator.14"*
  %34 = load i32*, i32** %5, align 8
  %35 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.14"* dereferenceable(1) %33, i32* %34, i64 %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.14"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.307
  %5 = load i32, i32* @y.308
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.14"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %12, align 8
  %16 = bitcast %"class.std::allocator.14"* %15 to %"class.__gnu_cxx::new_allocator.15"*
  %17 = load i32*, i32** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.15"* %16, i32* %17, i64 %18)
  %19 = load i32, i32* @x.307
  %20 = load i32, i32* @y.308
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.14"*, align 8
  %28 = alloca i32*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %27, align 8
  store i32* %1, i32** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %27, align 8
  %31 = bitcast %"class.std::allocator.14"* %30 to %"class.__gnu_cxx::new_allocator.15"*
  %32 = load i32*, i32** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.15"* %31, i32* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.15"*, i32*, i64) #3 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.14"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.14"* %2, %"class.std::allocator.14"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPjEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjEvT_S1_(i32*, i32*) #0 comdat {
  %3 = load i32, i32* @x.313
  %4 = load i32, i32* @y.314
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store i32* %0, i32** %11, align 8
  store i32* %1, i32** %12, align 8
  %13 = load i32*, i32** %11, align 8
  %14 = load i32*, i32** %12, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32* %13, i32* %14)
  %15 = load i32, i32* @x.313
  %16 = load i32, i32* @y.314
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca i32*, align 8
  %24 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  store i32* %1, i32** %24, align 8
  %25 = load i32*, i32** %23, align 8
  %26 = load i32*, i32** %24, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32* %25, i32* %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32*, i32*) #3 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector.12"*, i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.std::vector.12"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %20, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32* %3, i32** %8, align 8
  %21 = load %"class.std::vector.12"*, %"class.std::vector.12"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %405

; <label>:24:                                     ; preds = %4
  %25 = load i32, i32* @x.317
  %26 = load i32, i32* @y.318
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %34 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %35, i32 0, i32 2
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %38, i32 0, i32 0
  %40 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %39 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %40, i32 0, i32 1
  %42 = load i32*, i32** %41, align 8
  %43 = ptrtoint i32* %37 to i64
  %44 = ptrtoint i32* %42 to i64
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 4
  %47 = load i64, i64* %7, align 8
  %48 = icmp uge i64 %46, %47
  %49 = load i32, i32* @x.317
  %50 = load i32, i32* @y.318
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %48, label %57, label %184

; <label>:57:                                     ; preds = %originalBBpart2
  %58 = load i32, i32* @x.317
  %59 = load i32, i32* @y.318
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %57, %originalBB10alteredBB
  %66 = load i32*, i32** %8, align 8
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %9, align 4
  %68 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.12"* %21)
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store i32* %68, i32** %69, align 8
  %70 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5)
  store i64 %70, i64* %10, align 8
  %71 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %72 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %73, i32 0, i32 1
  %75 = load i32*, i32** %74, align 8
  store i32* %75, i32** %12, align 8
  %76 = load i64, i64* %10, align 8
  %77 = load i64, i64* %7, align 8
  %78 = icmp ugt i64 %76, %77
  %79 = load i32, i32* @x.317
  %80 = load i32, i32* @y.318
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %78, label %87, label %130

; <label>:87:                                     ; preds = %originalBBpart212
  %88 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %89 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %90, i32 0, i32 1
  %92 = load i32*, i32** %91, align 8
  %93 = load i64, i64* %7, align 8
  %94 = sub i64 0, %93
  %95 = getelementptr inbounds i32, i32* %92, i64 %94
  %96 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %96, i32 0, i32 0
  %98 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %97 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %99 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %98, i32 0, i32 1
  %100 = load i32*, i32** %99, align 8
  %101 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %101, i32 0, i32 0
  %103 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %102 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %103, i32 0, i32 1
  %105 = load i32*, i32** %104, align 8
  %106 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %107 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %106)
  %108 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %95, i32* %100, i32* %105, %"class.std::allocator.14"* dereferenceable(1) %107)
  %109 = load i64, i64* %7, align 8
  %110 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %111 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %110, i32 0, i32 0
  %112 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %111 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %113 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %112, i32 0, i32 1
  %114 = load i32*, i32** %113, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 %109
  store i32* %115, i32** %113, align 8
  %116 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %117 = load i32*, i32** %116, align 8
  %118 = load i32*, i32** %12, align 8
  %119 = load i64, i64* %7, align 8
  %120 = sub i64 0, %119
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = load i32*, i32** %12, align 8
  %123 = call i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32* %117, i32* %121, i32* %122)
  %124 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %125 = load i32*, i32** %124, align 8
  %126 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %127 = load i32*, i32** %126, align 8
  %128 = load i64, i64* %7, align 8
  %129 = getelementptr inbounds i32, i32* %127, i64 %128
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %125, i32* %129, i32* dereferenceable(4) %9)
  br label %183

; <label>:130:                                    ; preds = %originalBBpart212
  %131 = load i32, i32* @x.317
  %132 = load i32, i32* @y.318
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %130, %originalBB14alteredBB
  %139 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %139, i32 0, i32 0
  %141 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %140 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %141, i32 0, i32 1
  %143 = load i32*, i32** %142, align 8
  %144 = load i64, i64* %7, align 8
  %145 = load i64, i64* %10, align 8
  %146 = sub i64 %144, %145
  %147 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %148 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %147)
  %149 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %143, i64 %146, i32* dereferenceable(4) %9, %"class.std::allocator.14"* dereferenceable(1) %148)
  %150 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %150, i32 0, i32 0
  %152 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %151 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %153 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %152, i32 0, i32 1
  store i32* %149, i32** %153, align 8
  %154 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %155 = load i32*, i32** %154, align 8
  %156 = load i32*, i32** %12, align 8
  %157 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %158 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %157, i32 0, i32 0
  %159 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %158 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %160 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %159, i32 0, i32 1
  %161 = load i32*, i32** %160, align 8
  %162 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %163 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %162)
  %164 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %155, i32* %156, i32* %161, %"class.std::allocator.14"* dereferenceable(1) %163)
  %165 = load i64, i64* %10, align 8
  %166 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %166, i32 0, i32 0
  %168 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %167 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %169 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %168, i32 0, i32 1
  %170 = load i32*, i32** %169, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 %165
  store i32* %171, i32** %169, align 8
  %172 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %173 = load i32*, i32** %172, align 8
  %174 = load i32*, i32** %12, align 8
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %173, i32* %174, i32* dereferenceable(4) %9)
  %175 = load i32, i32* @x.317
  %176 = load i32, i32* @y.318
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart220, label %originalBB14alteredBB

originalBBpart220:                                ; preds = %originalBB14
  br label %183

; <label>:183:                                    ; preds = %originalBBpart220, %87
  br label %404

; <label>:184:                                    ; preds = %originalBBpart2
  %185 = load i64, i64* %7, align 8
  %186 = call i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector.12"* %21, i64 %185, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  store i64 %186, i64* %13, align 8
  %187 = call i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.12"* %21)
  %188 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store i32* %187, i32** %188, align 8
  %189 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %15)
  store i64 %189, i64* %14, align 8
  %190 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %191 = load i64, i64* %13, align 8
  %192 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.13"* %190, i64 %191)
  store i32* %192, i32** %16, align 8
  %193 = load i32*, i32** %16, align 8
  store i32* %193, i32** %17, align 8
  %194 = load i32*, i32** %16, align 8
  %195 = load i64, i64* %14, align 8
  %196 = getelementptr inbounds i32, i32* %194, i64 %195
  %197 = load i64, i64* %7, align 8
  %198 = load i32*, i32** %8, align 8
  %199 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %200 = invoke dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %199)
          to label %201 unwind label %251

; <label>:201:                                    ; preds = %184
  %202 = invoke i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %196, i64 %197, i32* dereferenceable(4) %198, %"class.std::allocator.14"* dereferenceable(1) %200)
          to label %203 unwind label %251

; <label>:203:                                    ; preds = %201
  store i32* null, i32** %17, align 8
  %204 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %205 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %204, i32 0, i32 0
  %206 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %205 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %207 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %206, i32 0, i32 0
  %208 = load i32*, i32** %207, align 8
  %209 = invoke dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
          to label %210 unwind label %251

; <label>:210:                                    ; preds = %203
  %211 = load i32*, i32** %209, align 8
  %212 = load i32*, i32** %16, align 8
  %213 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %214 = invoke dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %213)
          to label %215 unwind label %251

; <label>:215:                                    ; preds = %210
  %216 = load i32, i32* @x.317
  %217 = load i32, i32* @y.318
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %215, %originalBB22alteredBB
  %224 = load i32, i32* @x.317
  %225 = load i32, i32* @y.318
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %232 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %208, i32* %211, i32* %212, %"class.std::allocator.14"* dereferenceable(1) %214)
          to label %233 unwind label %251

; <label>:233:                                    ; preds = %originalBBpart224
  store i32* %232, i32** %17, align 8
  %234 = load i64, i64* %7, align 8
  %235 = load i32*, i32** %17, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  store i32* %236, i32** %17, align 8
  %237 = invoke dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
          to label %238 unwind label %251

; <label>:238:                                    ; preds = %233
  %239 = load i32*, i32** %237, align 8
  %240 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %240, i32 0, i32 0
  %242 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %241 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %242, i32 0, i32 1
  %244 = load i32*, i32** %243, align 8
  %245 = load i32*, i32** %17, align 8
  %246 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %247 = invoke dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %246)
          to label %248 unwind label %251

; <label>:248:                                    ; preds = %238
  %249 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %239, i32* %244, i32* %245, %"class.std::allocator.14"* dereferenceable(1) %247)
          to label %250 unwind label %251

; <label>:250:                                    ; preds = %248
  store i32* %249, i32** %17, align 8
  br label %338

; <label>:251:                                    ; preds = %248, %238, %233, %originalBBpart224, %210, %203, %201, %184
  %252 = landingpad { i8*, i32 }
          catch i8* null
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %18, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %19, align 4
  br label %255

; <label>:255:                                    ; preds = %251
  %256 = load i8*, i8** %18, align 8
  %257 = call i8* @__cxa_begin_catch(i8* %256) #2
  %258 = load i32*, i32** %17, align 8
  %259 = icmp ne i32* %258, null
  br i1 %259, label %293, label %260

; <label>:260:                                    ; preds = %255
  %261 = load i32*, i32** %16, align 8
  %262 = load i64, i64* %14, align 8
  %263 = getelementptr inbounds i32, i32* %261, i64 %262
  %264 = load i32*, i32** %16, align 8
  %265 = load i64, i64* %14, align 8
  %266 = getelementptr inbounds i32, i32* %264, i64 %265
  %267 = load i64, i64* %7, align 8
  %268 = getelementptr inbounds i32, i32* %266, i64 %267
  %269 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %270 = invoke dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %269)
          to label %271 unwind label %273

; <label>:271:                                    ; preds = %260
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %263, i32* %268, %"class.std::allocator.14"* dereferenceable(1) %270)
          to label %272 unwind label %273

; <label>:272:                                    ; preds = %271
  br label %316

; <label>:273:                                    ; preds = %336, %originalBBpart236, %originalBBpart232, %293, %271, %260
  %274 = load i32, i32* @x.317
  %275 = load i32, i32* @y.318
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %273, %originalBB26alteredBB
  %282 = landingpad { i8*, i32 }
          cleanup
  %283 = extractvalue { i8*, i32 } %282, 0
  store i8* %283, i8** %18, align 8
  %284 = extractvalue { i8*, i32 } %282, 1
  store i32 %284, i32* %19, align 4
  %285 = load i32, i32* @x.317
  %286 = load i32, i32* @y.318
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  invoke void @__cxa_end_catch()
          to label %337 unwind label %411

; <label>:293:                                    ; preds = %255
  %294 = load i32*, i32** %16, align 8
  %295 = load i32*, i32** %17, align 8
  %296 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %297 = invoke dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %296)
          to label %298 unwind label %273

; <label>:298:                                    ; preds = %293
  %299 = load i32, i32* @x.317
  %300 = load i32, i32* @y.318
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %298, %originalBB30alteredBB
  %307 = load i32, i32* @x.317
  %308 = load i32, i32* @y.318
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %294, i32* %295, %"class.std::allocator.14"* dereferenceable(1) %297)
          to label %315 unwind label %273

; <label>:315:                                    ; preds = %originalBBpart232
  br label %316

; <label>:316:                                    ; preds = %315, %272
  %317 = load i32, i32* @x.317
  %318 = load i32, i32* @y.318
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %316, %originalBB34alteredBB
  %325 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %326 = load i32*, i32** %16, align 8
  %327 = load i64, i64* %13, align 8
  %328 = load i32, i32* @x.317
  %329 = load i32, i32* @y.318
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.13"* %325, i32* %326, i64 %327)
          to label %336 unwind label %273

; <label>:336:                                    ; preds = %originalBBpart236
  invoke void @__cxa_rethrow() #14
          to label %414 unwind label %273

; <label>:337:                                    ; preds = %originalBBpart228
  br label %406

; <label>:338:                                    ; preds = %250
  %339 = load i32, i32* @x.317
  %340 = load i32, i32* @y.318
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %338, %originalBB38alteredBB
  %347 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %348 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %347, i32 0, i32 0
  %349 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %348 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %350 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %349, i32 0, i32 0
  %351 = load i32*, i32** %350, align 8
  %352 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %353 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %352, i32 0, i32 0
  %354 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %353 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %355 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %354, i32 0, i32 1
  %356 = load i32*, i32** %355, align 8
  %357 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %358 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %357)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %351, i32* %356, %"class.std::allocator.14"* dereferenceable(1) %358)
  %359 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %360 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %361 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %360, i32 0, i32 0
  %362 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %361 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %363 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %362, i32 0, i32 0
  %364 = load i32*, i32** %363, align 8
  %365 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %366 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %365, i32 0, i32 0
  %367 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %366 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %368 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %367, i32 0, i32 2
  %369 = load i32*, i32** %368, align 8
  %370 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %371 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %370, i32 0, i32 0
  %372 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %371 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %372, i32 0, i32 0
  %374 = load i32*, i32** %373, align 8
  %375 = ptrtoint i32* %369 to i64
  %376 = ptrtoint i32* %374 to i64
  %377 = sub i64 %375, %376
  %378 = sdiv exact i64 %377, 4
  call void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.13"* %359, i32* %364, i64 %378)
  %379 = load i32*, i32** %16, align 8
  %380 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %381 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %380, i32 0, i32 0
  %382 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %381 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %382, i32 0, i32 0
  store i32* %379, i32** %383, align 8
  %384 = load i32*, i32** %17, align 8
  %385 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %386 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %385, i32 0, i32 0
  %387 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %386 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %388 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %387, i32 0, i32 1
  store i32* %384, i32** %388, align 8
  %389 = load i32*, i32** %16, align 8
  %390 = load i64, i64* %13, align 8
  %391 = getelementptr inbounds i32, i32* %389, i64 %390
  %392 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %393 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %392, i32 0, i32 0
  %394 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %393 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %395 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %394, i32 0, i32 2
  store i32* %391, i32** %395, align 8
  %396 = load i32, i32* @x.317
  %397 = load i32, i32* @y.318
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBBpart252, label %originalBB38alteredBB

originalBBpart252:                                ; preds = %originalBB38
  br label %404

; <label>:404:                                    ; preds = %originalBBpart252, %183
  br label %405

; <label>:405:                                    ; preds = %404, %4
  ret void

; <label>:406:                                    ; preds = %337
  %407 = load i8*, i8** %18, align 8
  %408 = load i32, i32* %19, align 4
  %409 = insertvalue { i8*, i32 } undef, i8* %407, 0
  %410 = insertvalue { i8*, i32 } %409, i32 %408, 1
  resume { i8*, i32 } %410

; <label>:411:                                    ; preds = %originalBBpart228
  %412 = landingpad { i8*, i32 }
          catch i8* null
  %413 = extractvalue { i8*, i32 } %412, 0
  call void @__clang_call_terminate(i8* %413) #9
  unreachable

; <label>:414:                                    ; preds = %336
  %415 = load i32, i32* @x.317
  %416 = load i32, i32* @y.318
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %414, %originalBB54alteredBB
  %423 = load i32, i32* @x.317
  %424 = load i32, i32* @y.318
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %24
  %431 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %432 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %431, i32 0, i32 0
  %433 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %432 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %434 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %433, i32 0, i32 2
  %435 = load i32*, i32** %434, align 8
  %436 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %437 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %436, i32 0, i32 0
  %438 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %437 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %439 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %438, i32 0, i32 1
  %440 = load i32*, i32** %439, align 8
  %441 = ptrtoint i32* %435 to i64
  %442 = ptrtoint i32* %440 to i64
  %_ = sub i64 %441, %442
  %gen = mul i64 %_, %442
  %_1 = shl i64 %441, %442
  %443 = sub i64 %441, %442
  %_2 = sub i64 0, %443
  %gen3 = add i64 %_2, 4
  %_4 = sub i64 0, %443
  %gen5 = add i64 %_4, 4
  %_6 = sub i64 %443, 4
  %gen7 = mul i64 %_6, 4
  %_8 = sub i64 0, %443
  %gen9 = add i64 %_8, 4
  %444 = sdiv exact i64 %443, 4
  %445 = load i64, i64* %7, align 8
  %446 = icmp uge i64 %444, %445
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %57
  %447 = load i32*, i32** %8, align 8
  %448 = load i32, i32* %447, align 4
  store i32 %448, i32* %9, align 4
  %449 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.12"* %21)
  %450 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store i32* %449, i32** %450, align 8
  %451 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5)
  store i64 %451, i64* %10, align 8
  %452 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %453 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %452, i32 0, i32 0
  %454 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %453 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %455 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %454, i32 0, i32 1
  %456 = load i32*, i32** %455, align 8
  store i32* %456, i32** %12, align 8
  %457 = load i64, i64* %10, align 8
  %458 = load i64, i64* %7, align 8
  %459 = icmp ugt i64 %457, %458
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %130
  %460 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %461 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %460, i32 0, i32 0
  %462 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %461 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %463 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %462, i32 0, i32 1
  %464 = load i32*, i32** %463, align 8
  %465 = load i64, i64* %7, align 8
  %466 = load i64, i64* %10, align 8
  %_15 = sub i64 0, %465
  %gen16 = add i64 %_15, %466
  %_17 = sub i64 0, %465
  %gen18 = add i64 %_17, %466
  %467 = sub i64 %465, %466
  %468 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %469 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %468)
  %470 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %464, i64 %467, i32* dereferenceable(4) %9, %"class.std::allocator.14"* dereferenceable(1) %469)
  %471 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %472 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %471, i32 0, i32 0
  %473 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %472 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %474 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %473, i32 0, i32 1
  store i32* %470, i32** %474, align 8
  %475 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %476 = load i32*, i32** %475, align 8
  %477 = load i32*, i32** %12, align 8
  %478 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %479 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %478, i32 0, i32 0
  %480 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %479 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %481 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %480, i32 0, i32 1
  %482 = load i32*, i32** %481, align 8
  %483 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %484 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %483)
  %485 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %476, i32* %477, i32* %482, %"class.std::allocator.14"* dereferenceable(1) %484)
  %486 = load i64, i64* %10, align 8
  %487 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %488 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %487, i32 0, i32 0
  %489 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %488 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %490 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %489, i32 0, i32 1
  %491 = load i32*, i32** %490, align 8
  %492 = getelementptr inbounds i32, i32* %491, i64 %486
  store i32* %492, i32** %490, align 8
  %493 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %494 = load i32*, i32** %493, align 8
  %495 = load i32*, i32** %12, align 8
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %494, i32* %495, i32* dereferenceable(4) %9)
  br label %originalBB14

originalBB22alteredBB:                            ; preds = %originalBB22, %215
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %273
  %496 = landingpad { i8*, i32 }
          cleanup
  %497 = extractvalue { i8*, i32 } %496, 0
  store i8* %497, i8** %18, align 8
  %498 = extractvalue { i8*, i32 } %496, 1
  store i32 %498, i32* %19, align 4
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %298
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %316
  %499 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %500 = load i32*, i32** %16, align 8
  %501 = load i64, i64* %13, align 8
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %338
  %502 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %503 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %502, i32 0, i32 0
  %504 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %503 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %505 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %504, i32 0, i32 0
  %506 = load i32*, i32** %505, align 8
  %507 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %508 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %507, i32 0, i32 0
  %509 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %508 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %510 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %509, i32 0, i32 1
  %511 = load i32*, i32** %510, align 8
  %512 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %513 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %512)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %506, i32* %511, %"class.std::allocator.14"* dereferenceable(1) %513)
  %514 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %515 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %516 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %515, i32 0, i32 0
  %517 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %516 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %518 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %517, i32 0, i32 0
  %519 = load i32*, i32** %518, align 8
  %520 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %521 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %520, i32 0, i32 0
  %522 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %521 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %523 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %522, i32 0, i32 2
  %524 = load i32*, i32** %523, align 8
  %525 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %526 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %525, i32 0, i32 0
  %527 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %526 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %528 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %527, i32 0, i32 0
  %529 = load i32*, i32** %528, align 8
  %530 = ptrtoint i32* %524 to i64
  %531 = ptrtoint i32* %529 to i64
  %_39 = shl i64 %530, %531
  %_40 = shl i64 %530, %531
  %_41 = sub i64 %530, %531
  %gen42 = mul i64 %_41, %531
  %_43 = sub i64 %530, %531
  %gen44 = mul i64 %_43, %531
  %532 = sub i64 %530, %531
  %_45 = sub i64 0, %532
  %gen46 = add i64 %_45, 4
  %_47 = shl i64 %532, 4
  %_48 = shl i64 %532, 4
  %_49 = sub i64 0, %532
  %gen50 = add i64 %_49, 4
  %533 = sdiv exact i64 %532, 4
  call void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.13"* %514, i32* %519, i64 %533)
  %534 = load i32*, i32** %16, align 8
  %535 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %536 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %535, i32 0, i32 0
  %537 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %536 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %538 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %537, i32 0, i32 0
  store i32* %534, i32** %538, align 8
  %539 = load i32*, i32** %17, align 8
  %540 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %541 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %540, i32 0, i32 0
  %542 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %541 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %543 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %542, i32 0, i32 1
  store i32* %539, i32** %543, align 8
  %544 = load i32*, i32** %16, align 8
  %545 = load i64, i64* %13, align 8
  %546 = getelementptr inbounds i32, i32* %544, i64 %545
  %547 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %548 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %547, i32 0, i32 0
  %549 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %548 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %550 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %549, i32 0, i32 2
  store i32* %546, i32** %550, align 8
  br label %originalBB38

originalBB54alteredBB:                            ; preds = %originalBB54, %414
  br label %originalBB54
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector.12"*, i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %7 = bitcast %"class.std::vector.12"* %6 to %"struct.std::_Vector_base.13"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = load i32*, i32** %4, align 8
  %13 = ptrtoint i32* %11 to i64
  %14 = ptrtoint i32* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 4
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %49

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.319
  %21 = load i32, i32* @y.320
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i32*, i32** %4, align 8
  %29 = bitcast %"class.std::vector.12"* %6 to %"struct.std::_Vector_base.13"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %30 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %31, i32 0, i32 1
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %"class.std::vector.12"* %6 to %"struct.std::_Vector_base.13"*
  %35 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %34)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %28, i32* %33, %"class.std::allocator.14"* dereferenceable(1) %35)
  %36 = load i32*, i32** %4, align 8
  %37 = bitcast %"class.std::vector.12"* %6 to %"struct.std::_Vector_base.13"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %38 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %39, i32 0, i32 1
  store i32* %36, i32** %40, align 8
  %41 = load i32, i32* @x.319
  %42 = load i32, i32* @y.320
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:49:                                     ; preds = %originalBBpart2, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %50 = load i32*, i32** %4, align 8
  %51 = bitcast %"class.std::vector.12"* %6 to %"struct.std::_Vector_base.13"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %52 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %53, i32 0, i32 1
  %55 = load i32*, i32** %54, align 8
  %56 = bitcast %"class.std::vector.12"* %6 to %"struct.std::_Vector_base.13"*
  %57 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %56)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %50, i32* %55, %"class.std::allocator.14"* dereferenceable(1) %57)
  %58 = load i32*, i32** %4, align 8
  %59 = bitcast %"class.std::vector.12"* %6 to %"struct.std::_Vector_base.13"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %60 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %61, i32 0, i32 1
  store i32* %58, i32** %62, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8)
  %10 = load i32*, i32** %9, align 8
  %11 = ptrtoint i32* %7 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 4
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.14"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %8, align 8
  %13 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %9, i32* %10, i32* %11, %"class.std::allocator.14"* dereferenceable(1) %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPjjEvT_S1_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %8, i32* %10, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector.12"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.331
  %5 = load i32, i32* @y.332
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.12"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %17 = load %"class.std::vector.12"*, %"class.std::vector.12"** %12, align 8
  %18 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.12"* %17)
  %19 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %17)
  %20 = sub i64 %18, %19
  %21 = load i64, i64* %13, align 8
  %22 = icmp ult i64 %20, %21
  %23 = load i32, i32* @x.331
  %24 = load i32, i32* @y.332
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %33

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i8*, i8** %14, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %32) #14
  unreachable

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %17)
  %35 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %17)
  store i64 %35, i64* %16, align 8
  %36 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %13)
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %34, %37
  store i64 %38, i64* %15, align 8
  %39 = load i64, i64* %15, align 8
  %40 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %17)
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %33
  %43 = load i64, i64* %15, align 8
  %44 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.12"* %17)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %64

; <label>:46:                                     ; preds = %42, %33
  %47 = load i32, i32* @x.331
  %48 = load i32, i32* @y.332
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %46, %originalBB3alteredBB
  %55 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.12"* %17)
  %56 = load i32, i32* @x.331
  %57 = load i32, i32* @y.332
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br label %66

; <label>:64:                                     ; preds = %42
  %65 = load i64, i64* %15, align 8
  br label %66

; <label>:66:                                     ; preds = %64, %originalBBpart25
  %67 = phi i64 [ %55, %originalBBpart25 ], [ %65, %64 ]
  ret i64 %67

originalBBalteredBB:                              ; preds = %originalBB, %3
  %68 = alloca %"class.std::vector.12"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i8*, align 8
  %71 = alloca i64, align 8
  %72 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %68, align 8
  store i64 %1, i64* %69, align 8
  store i8* %2, i8** %70, align 8
  %73 = load %"class.std::vector.12"*, %"class.std::vector.12"** %68, align 8
  %74 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.12"* %73)
  %75 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.12"* %73)
  %_ = shl i64 %74, %75
  %_1 = sub i64 %74, %75
  %gen = mul i64 %_1, %75
  %_2 = shl i64 %74, %75
  %76 = sub i64 %74, %75
  %77 = load i64, i64* %69, align 8
  %78 = icmp ult i64 %76, %77
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %46
  %79 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.12"* %17)
  br label %originalBB3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.14"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %8, align 8
  %13 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %9, i32* %10, i32* %11, %"class.std::allocator.14"* dereferenceable(1) %12)
  ret i32* %13
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.14"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32* %9, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32* %7, i32* %8, i32* %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  %14 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %6, i32* %13)
  ret i32* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIPjET_S1_(i32*) #3 comdat {
  %2 = load i32, i32* @x.345
  %3 = load i32, i32* @y.346
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* @x.345
  %13 = load i32, i32* @y.346
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i32*, align 8
  store i32* %0, i32** %20, align 8
  %21 = load i32*, i32** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.347
  %5 = load i32, i32* @y.348
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8, align 1
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load i32*, i32** %12, align 8
  %17 = load i32*, i32** %13, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %16, i32* %17, i32* %18)
  %20 = load i32, i32* @x.347
  %21 = load i32, i32* @y.348
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i8, align 1
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  store i32* %2, i32** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load i32*, i32** %28, align 8
  %33 = load i32*, i32** %29, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %32, i32* %33, i32* %34)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #3 comdat align 2 {
  %4 = load i32, i32* @x.349
  %5 = load i32, i32* @y.350
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i64, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %16 = load i32*, i32** %13, align 8
  %17 = load i32*, i32** %12, align 8
  %18 = ptrtoint i32* %16 to i64
  %19 = ptrtoint i32* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 4
  store i64 %21, i64* %15, align 8
  %22 = load i64, i64* %15, align 8
  %23 = icmp ne i64 %22, 0
  %24 = load i32, i32* @x.349
  %25 = load i32, i32* @y.350
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %55

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* @x.349
  %34 = load i32, i32* @y.350
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %32, %originalBB16alteredBB
  %41 = load i32*, i32** %14, align 8
  %42 = bitcast i32* %41 to i8*
  %43 = load i32*, i32** %12, align 8
  %44 = bitcast i32* %43 to i8*
  %45 = load i64, i64* %15, align 8
  %46 = mul i64 4, %45
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %42, i8* %44, i64 %46, i32 4, i1 false)
  %47 = load i32, i32* @x.349
  %48 = load i32, i32* @y.350
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart224, label %originalBB16alteredBB

originalBBpart224:                                ; preds = %originalBB16
  br label %55

; <label>:55:                                     ; preds = %originalBBpart224, %originalBBpart2
  %56 = load i32*, i32** %14, align 8
  %57 = load i64, i64* %15, align 8
  %58 = getelementptr inbounds i32, i32* %56, i64 %57
  ret i32* %58

originalBBalteredBB:                              ; preds = %originalBB, %3
  %59 = alloca i32*, align 8
  %60 = alloca i32*, align 8
  %61 = alloca i32*, align 8
  %62 = alloca i64, align 8
  store i32* %0, i32** %59, align 8
  store i32* %1, i32** %60, align 8
  store i32* %2, i32** %61, align 8
  %63 = load i32*, i32** %60, align 8
  %64 = load i32*, i32** %59, align 8
  %65 = ptrtoint i32* %63 to i64
  %66 = ptrtoint i32* %64 to i64
  %_ = sub i64 %65, %66
  %gen = mul i64 %_, %66
  %_1 = sub i64 %65, %66
  %gen2 = mul i64 %_1, %66
  %67 = sub i64 %65, %66
  %_3 = shl i64 %67, 4
  %_4 = sub i64 %67, 4
  %gen5 = mul i64 %_4, 4
  %_6 = sub i64 0, %67
  %gen7 = add i64 %_6, 4
  %_8 = sub i64 0, %67
  %gen9 = add i64 %_8, 4
  %_10 = sub i64 %67, 4
  %gen11 = mul i64 %_10, 4
  %_12 = sub i64 0, %67
  %gen13 = add i64 %_12, 4
  %_14 = sub i64 %67, 4
  %gen15 = mul i64 %_14, 4
  %68 = sdiv exact i64 %67, 4
  store i64 %68, i64* %62, align 8
  %69 = load i64, i64* %62, align 8
  %70 = icmp ne i64 %69, 0
  br label %originalBB

originalBB16alteredBB:                            ; preds = %originalBB16, %32
  %71 = load i32*, i32** %14, align 8
  %72 = bitcast i32* %71 to i8*
  %73 = load i32*, i32** %12, align 8
  %74 = bitcast i32* %73 to i8*
  %75 = load i64, i64* %15, align 8
  %_17 = shl i64 4, %75
  %_18 = sub i64 0, 4
  %gen19 = add i64 %_18, %75
  %_20 = shl i64 4, %75
  %_21 = sub i64 0, 4
  %gen22 = add i64 %_21, %75
  %76 = mul i64 4, %75
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %72, i8* %74, i64 %76, i32 4, i1 false)
  br label %originalBB16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %11)
  %13 = call i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  %14 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %6, i32* %13)
  ret i32* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #3 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = ptrtoint i32* %8 to i64
  %11 = ptrtoint i32* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %26

; <label>:16:                                     ; preds = %3
  %17 = load i32*, i32** %6, align 8
  %18 = load i64, i64* %7, align 8
  %19 = sub i64 0, %18
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = bitcast i32* %20 to i8*
  %22 = load i32*, i32** %4, align 8
  %23 = bitcast i32* %22 to i8*
  %24 = load i64, i64* %7, align 8
  %25 = mul i64 4, %24
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %21, i8* %23, i64 %25, i32 4, i1 false)
  br label %26

; <label>:26:                                     ; preds = %16, %3
  %27 = load i32*, i32** %6, align 8
  %28 = load i64, i64* %7, align 8
  %29 = sub i64 0, %28
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  ret i32* %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #3 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  br label %10

; <label>:10:                                     ; preds = %33, %3
  %11 = load i32*, i32** %4, align 8
  %12 = load i32*, i32** %5, align 8
  %13 = icmp ne i32* %11, %12
  br i1 %13, label %14, label %36

; <label>:14:                                     ; preds = %10
  %15 = load i32, i32* @x.357
  %16 = load i32, i32* @y.358
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i32, i32* %7, align 4
  %24 = load i32*, i32** %4, align 8
  store i32 %23, i32* %24, align 4
  %25 = load i32, i32* @x.357
  %26 = load i32, i32* @y.358
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32*, i32** %4, align 8
  %35 = getelementptr inbounds i32, i32* %34, i32 1
  store i32* %35, i32** %4, align 8
  br label %10

; <label>:36:                                     ; preds = %10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %14
  %37 = load i32, i32* %7, align 4
  %38 = load i32*, i32** %4, align 8
  store i32 %37, i32* %38, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.12"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %3 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  %4 = bitcast %"class.std::vector.12"* %3 to %"struct.std::_Vector_base.13"*
  %5 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %4)
  %6 = call i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.14"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #3 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %29

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.361
  %13 = load i32, i32* @y.362
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i64*, i64** %5, align 8
  store i64* %20, i64** %3, align 8
  %21 = load i32, i32* @x.361
  %22 = load i32, i32* @y.362
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %47

; <label>:29:                                     ; preds = %2
  %30 = load i32, i32* @x.361
  %31 = load i32, i32* @y.362
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i64*, i64** %4, align 8
  store i64* %38, i64** %3, align 8
  %39 = load i32, i32* @x.361
  %40 = load i32, i32* @y.362
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  %48 = load i32, i32* @x.361
  %49 = load i32, i32* @y.362
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i64*, i64** %3, align 8
  %57 = load i32, i32* @x.361
  %58 = load i32, i32* @y.362
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i64* %56

originalBBalteredBB:                              ; preds = %originalBB, %11
  %65 = load i64*, i64** %5, align 8
  store i64* %65, i64** %3, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %66 = load i64*, i64** %4, align 8
  store i64* %66, i64** %3, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %67 = load i64*, i64** %3, align 8
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.13"*, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %2, align 8
  %3 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %4 to %"class.std::allocator.14"*
  ret %"class.std::allocator.14"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.110"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.365
  %3 = load i32, i32* @y.366
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.110"*, align 8
  store %"class.__gnu_cxx::new_allocator.110"* %0, %"class.__gnu_cxx::new_allocator.110"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.110"*, %"class.__gnu_cxx::new_allocator.110"** %10, align 8
  %12 = load i32, i32* @x.365
  %13 = load i32, i32* @y.366
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.110"*, align 8
  store %"class.__gnu_cxx::new_allocator.110"* %0, %"class.__gnu_cxx::new_allocator.110"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.110"*, %"class.__gnu_cxx::new_allocator.110"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.110"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.110"*, align 8
  store %"class.__gnu_cxx::new_allocator.110"* %0, %"class.__gnu_cxx::new_allocator.110"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.110"*, %"class.__gnu_cxx::new_allocator.110"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev(%"class.__gnu_cxx::new_allocator.78"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.369
  %3 = load i32, i32* @y.370
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %10, align 8
  %12 = load i32, i32* @x.369
  %13 = load i32, i32* @y.370
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev(%"class.__gnu_cxx::new_allocator.78"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.371
  %3 = load i32, i32* @y.372
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %10, align 8
  %12 = load i32, i32* @x.371
  %13 = load i32, i32* @y.372
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1160) %class.FiniteElement* @_ZNK12SmartPointerIK13FiniteElementILi3EEEdeEv(%class.SmartPointer.54*) #3 comdat align 2 {
  %2 = load i32, i32* @x.373
  %3 = load i32, i32* @y.374
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.SmartPointer.54*, align 8
  store %class.SmartPointer.54* %0, %class.SmartPointer.54** %10, align 8
  %11 = load %class.SmartPointer.54*, %class.SmartPointer.54** %10, align 8
  %12 = getelementptr inbounds %class.SmartPointer.54, %class.SmartPointer.54* %11, i32 0, i32 0
  %13 = load %class.FiniteElement*, %class.FiniteElement** %12, align 8
  %14 = load i32, i32* @x.373
  %15 = load i32, i32* @y.374
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.FiniteElement* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %class.SmartPointer.54*, align 8
  store %class.SmartPointer.54* %0, %class.SmartPointer.54** %22, align 8
  %23 = load %class.SmartPointer.54*, %class.SmartPointer.54** %22, align 8
  %24 = getelementptr inbounds %class.SmartPointer.54, %class.SmartPointer.54* %23, i32 0, i32 0
  %25 = load %class.FiniteElement*, %class.FiniteElement** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIP8DoFLevelILi3EESaIS2_EE4sizeEv(%"class.std::vector.80"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.80"*, align 8
  store %"class.std::vector.80"* %0, %"class.std::vector.80"** %2, align 8
  %3 = load %"class.std::vector.80"*, %"class.std::vector.80"** %2, align 8
  %4 = bitcast %"class.std::vector.80"* %3 to %"struct.std::_Vector_base.81"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.81", %"struct.std::_Vector_base.81"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.DoFLevel**, %class.DoFLevel*** %7, align 8
  %9 = bitcast %"class.std::vector.80"* %3 to %"struct.std::_Vector_base.81"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.81", %"struct.std::_Vector_base.81"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.DoFLevel**, %class.DoFLevel*** %12, align 8
  %14 = ptrtoint %class.DoFLevel** %8 to i64
  %15 = ptrtoint %class.DoFLevel** %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

declare void @_ZNK12MGDoFHandlerILi3EE3endEv(%class.TriaRawIterator* sret, %class.MGDoFHandler*) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12TriaIteratorILi3E17MGDoFCellAccessorILi3EEEC2ERK15TriaRawIteratorILi3ES1_E(%class.TriaIterator*, %class.TriaRawIterator* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.TriaIterator*, align 8
  %4 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaIterator* %0, %class.TriaIterator** %3, align 8
  store %class.TriaRawIterator* %1, %class.TriaRawIterator** %4, align 8
  %5 = load %class.TriaIterator*, %class.TriaIterator** %3, align 8
  %6 = bitcast %class.TriaIterator* %5 to %class.TriaRawIterator*
  %7 = load %class.TriaRawIterator*, %class.TriaRawIterator** %4, align 8
  call void @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEC2ERKS2_(%class.TriaRawIterator* %6, %class.TriaRawIterator* dereferenceable(32) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEC2ERKS2_(%class.TriaRawIterator*, %class.TriaRawIterator* dereferenceable(32)) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.379
  %4 = load i32, i32* @y.380
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TriaRawIterator*, align 8
  %12 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %11, align 8
  store %class.TriaRawIterator* %1, %class.TriaRawIterator** %12, align 8
  %13 = load %class.TriaRawIterator*, %class.TriaRawIterator** %11, align 8
  %14 = bitcast %class.TriaRawIterator* %13 to %"struct.std::iterator.92"*
  %15 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %13, i32 0, i32 0
  %16 = load %class.TriaRawIterator*, %class.TriaRawIterator** %12, align 8
  %17 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %16, i32 0, i32 0
  %18 = bitcast %class.MGDoFCellAccessor* %15 to i8*
  %19 = bitcast %class.MGDoFCellAccessor* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 32, i32 8, i1 false)
  %20 = load i32, i32* @x.379
  %21 = load i32, i32* @y.380
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %class.TriaRawIterator*, align 8
  %29 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %28, align 8
  store %class.TriaRawIterator* %1, %class.TriaRawIterator** %29, align 8
  %30 = load %class.TriaRawIterator*, %class.TriaRawIterator** %28, align 8
  %31 = bitcast %class.TriaRawIterator* %30 to %"struct.std::iterator.92"*
  %32 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %30, i32 0, i32 0
  %33 = load %class.TriaRawIterator*, %class.TriaRawIterator** %29, align 8
  %34 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %33, i32 0, i32 0
  %35 = bitcast %class.MGDoFCellAccessor* %32 to i8*
  %36 = bitcast %class.MGDoFCellAccessor* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 32, i32 8, i1 false)
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK12TriaAccessorILi3EEneERKS0_(%class.TriaAccessor*, %class.TriaAccessor* dereferenceable(16)) #3 comdat align 2 {
  %3 = alloca %class.TriaAccessor*, align 8
  %4 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %3, align 8
  store %class.TriaAccessor* %1, %class.TriaAccessor** %4, align 8
  %5 = load %class.TriaAccessor*, %class.TriaAccessor** %3, align 8
  %6 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = load %class.TriaAccessor*, %class.TriaAccessor** %4, align 8
  %9 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %7, %10
  br i1 %11, label %35, label %12

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.381
  %14 = load i32, i32* @y.382
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %5, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = load %class.TriaAccessor*, %class.TriaAccessor** %4, align 8
  %24 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %22, %25
  %27 = load i32, i32* @x.381
  %28 = load i32, i32* @y.382
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %35

; <label>:35:                                     ; preds = %originalBBpart2, %2
  %36 = phi i1 [ true, %2 ], [ %26, %originalBBpart2 ]
  ret i1 %36

originalBBalteredBB:                              ; preds = %originalBB, %12
  %37 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %5, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = load %class.TriaAccessor*, %class.TriaAccessor** %4, align 8
  %40 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp ne i32 %38, %41
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(32) %class.TriaRawIterator* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEppEv(%class.TriaRawIterator*) #0 comdat align 2 {
  %2 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %2, align 8
  %3 = load %class.TriaRawIterator*, %class.TriaRawIterator** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %3, i32 0, i32 0
  %5 = bitcast %class.MGDoFCellAccessor* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %class.TriaObjectAccessor*
  call void @_ZN18TriaObjectAccessorILi3ELi3EEppEv(%class.TriaObjectAccessor* %7)
  ret %class.TriaRawIterator* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEE5stateEv(%class.TriaRawIterator*) #0 comdat align 2 {
  %2 = load i32, i32* @x.385
  %3 = load i32, i32* @y.386
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %10, align 8
  %11 = load %class.TriaRawIterator*, %class.TriaRawIterator** %10, align 8
  %12 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %11, i32 0, i32 0
  %13 = bitcast %class.MGDoFCellAccessor* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %class.TriaAccessor*
  %16 = call i32 @_ZNK12TriaAccessorILi3EE5stateEv(%class.TriaAccessor* %15)
  %17 = load i32, i32* @x.385
  %18 = load i32, i32* @y.386
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %25, align 8
  %26 = load %class.TriaRawIterator*, %class.TriaRawIterator** %25, align 8
  %27 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %26, i32 0, i32 0
  %28 = bitcast %class.MGDoFCellAccessor* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  %30 = bitcast i8* %29 to %class.TriaAccessor*
  %31 = call i32 @_ZNK12TriaAccessorILi3EE5stateEv(%class.TriaAccessor* %30)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE4usedEv(%class.TriaObjectAccessor*) #0 comdat align 2 {
  %2 = load i32, i32* @x.387
  %3 = load i32, i32* @y.388
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaObjectAccessor*, align 8
  %11 = alloca %"struct.std::_Bit_reference", align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %10, align 8
  %12 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %10, align 8
  %13 = bitcast %class.TriaObjectAccessor* %12 to %class.TriaAccessor*
  %14 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %13, i32 0, i32 2
  %15 = load %class.Triangulation*, %class.Triangulation** %14, align 8
  %16 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %15, i32 0, i32 1
  %17 = bitcast %class.TriaObjectAccessor* %12 to %class.TriaAccessor*
  %18 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %16, i64 %20)
  %22 = load %class.TriangulationLevel*, %class.TriangulationLevel** %21, align 8
  %23 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %22, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %23, i32 0, i32 2
  %25 = bitcast %class.TriaObjectAccessor* %12 to %class.TriaAccessor*
  %26 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %24, i64 %28)
  %30 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %31 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %30, i32 0, i32 0
  %32 = extractvalue { i64*, i64 } %29, 0
  store i64* %32, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %30, i32 0, i32 1
  %34 = extractvalue { i64*, i64 } %29, 1
  store i64 %34, i64* %33, align 8
  %35 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %11)
  %36 = load i32, i32* @x.387
  %37 = load i32, i32* @y.388
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %35

originalBBalteredBB:                              ; preds = %originalBB, %1
  %44 = alloca %class.TriaObjectAccessor*, align 8
  %45 = alloca %"struct.std::_Bit_reference", align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %44, align 8
  %46 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %44, align 8
  %47 = bitcast %class.TriaObjectAccessor* %46 to %class.TriaAccessor*
  %48 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %47, i32 0, i32 2
  %49 = load %class.Triangulation*, %class.Triangulation** %48, align 8
  %50 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %49, i32 0, i32 1
  %51 = bitcast %class.TriaObjectAccessor* %46 to %class.TriaAccessor*
  %52 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  %55 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %50, i64 %54)
  %56 = load %class.TriangulationLevel*, %class.TriangulationLevel** %55, align 8
  %57 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %56, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %57, i32 0, i32 2
  %59 = bitcast %class.TriaObjectAccessor* %46 to %class.TriaAccessor*
  %60 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.3"* %58, i64 %62)
  %64 = bitcast %"struct.std::_Bit_reference"* %45 to { i64*, i64 }*
  %65 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %64, i32 0, i32 0
  %66 = extractvalue { i64*, i64 } %63, 0
  store i64* %66, i64** %65, align 8
  %67 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %64, i32 0, i32 1
  %68 = extractvalue { i64*, i64 } %63, 1
  store i64 %68, i64* %67, align 8
  %69 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %45)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN18TriaObjectAccessorILi3ELi3EEppEv(%class.TriaObjectAccessor*) #0 comdat align 2 {
  %2 = load i32, i32* @x.389
  %3 = load i32, i32* @y.390
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaObjectAccessor*, align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %10, align 8
  %11 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %10, align 8
  %12 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %13 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 4
  %16 = load i32, i32* @x.389
  %17 = load i32, i32* @y.390
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24

; <label>:24:                                     ; preds = %originalBBpart225, %originalBBpart2
  %25 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %26 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %29 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %28, i32 0, i32 2
  %30 = load %class.Triangulation*, %class.Triangulation** %29, align 8
  %31 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %30, i32 0, i32 1
  %32 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %33 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"* %31, i64 %35)
  %37 = load %class.TriangulationLevel*, %class.TriangulationLevel** %36, align 8
  %38 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %37, i32 0, i32 1
  %39 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %38, i32 0, i32 0
  %40 = call i64 @_ZNKSt6vectorI10HexahedronSaIS0_EE4sizeEv(%"class.std::vector.42"* %39)
  %41 = trunc i64 %40 to i32
  %42 = icmp sge i32 %27, %41
  br i1 %42, label %43, label %114

; <label>:43:                                     ; preds = %24
  %44 = load i32, i32* @x.389
  %45 = load i32, i32* @y.390
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %43, %originalBB11alteredBB
  %52 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %53 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %53, align 8
  %56 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %57 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %56, i32 0, i32 1
  store i32 0, i32* %57, align 4
  %58 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %59 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %62 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %61, i32 0, i32 2
  %63 = load %class.Triangulation*, %class.Triangulation** %62, align 8
  %64 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %63, i32 0, i32 1
  %65 = call i64 @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EE4sizeEv(%"class.std::vector"* %64)
  %66 = trunc i64 %65 to i32
  %67 = icmp sge i32 %60, %66
  %68 = load i32, i32* @x.389
  %69 = load i32, i32* @y.390
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart217, label %originalBB11alteredBB

originalBBpart217:                                ; preds = %originalBB11
  br i1 %67, label %76, label %97

; <label>:76:                                     ; preds = %originalBBpart217
  %77 = load i32, i32* @x.389
  %78 = load i32, i32* @y.390
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %76, %originalBB19alteredBB
  %85 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %86 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %85, i32 0, i32 1
  store i32 -1, i32* %86, align 4
  %87 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %88 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %87, i32 0, i32 0
  store i32 -1, i32* %88, align 8
  %89 = load i32, i32* @x.389
  %90 = load i32, i32* @y.390
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %114

; <label>:97:                                     ; preds = %originalBBpart217
  %98 = load i32, i32* @x.389
  %99 = load i32, i32* @y.390
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %97, %originalBB23alteredBB
  %106 = load i32, i32* @x.389
  %107 = load i32, i32* @y.390
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %24

; <label>:114:                                    ; preds = %originalBBpart221, %24
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %115 = alloca %class.TriaObjectAccessor*, align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %115, align 8
  %116 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %115, align 8
  %117 = bitcast %class.TriaObjectAccessor* %116 to %class.TriaAccessor*
  %118 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %_ = shl i32 %119, 1
  %_1 = shl i32 %119, 1
  %_2 = shl i32 %119, 1
  %_3 = sub i32 0, %119
  %gen = add i32 %_3, 1
  %_4 = shl i32 %119, 1
  %_5 = sub i32 0, %119
  %gen6 = add i32 %_5, 1
  %_7 = sub i32 %119, 1
  %gen8 = mul i32 %_7, 1
  %_9 = sub i32 %119, 1
  %gen10 = mul i32 %_9, 1
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 4
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %43
  %121 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %122 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %121, i32 0, i32 0
  %123 = load i32, i32* %122, align 8
  %_12 = shl i32 %123, 1
  %_13 = sub i32 0, %123
  %gen14 = add i32 %_13, 1
  %_15 = shl i32 %123, 1
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %122, align 8
  %125 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %126 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %125, i32 0, i32 1
  store i32 0, i32* %126, align 4
  %127 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %128 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %127, i32 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %131 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %130, i32 0, i32 2
  %132 = load %class.Triangulation*, %class.Triangulation** %131, align 8
  %133 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %132, i32 0, i32 1
  %134 = call i64 @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EE4sizeEv(%"class.std::vector"* %133)
  %135 = trunc i64 %134 to i32
  %136 = icmp sge i32 %129, %135
  br label %originalBB11

originalBB19alteredBB:                            ; preds = %originalBB19, %76
  %137 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %138 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %137, i32 0, i32 1
  store i32 -1, i32* %138, align 4
  %139 = bitcast %class.TriaObjectAccessor* %11 to %class.TriaAccessor*
  %140 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %139, i32 0, i32 0
  store i32 -1, i32* %140, align 8
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %97
  br label %originalBB23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector"*, i64) #3 comdat align 2 {
  %3 = load i32, i32* @x.391
  %4 = load i32, i32* @y.392
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %14 = bitcast %"class.std::vector"* %13 to %"struct.std::_Vector_base"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %class.TriangulationLevel*, %class.TriangulationLevel** %18, i64 %19
  %21 = load i32, i32* @x.391
  %22 = load i32, i32* @y.392
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TriangulationLevel** %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %class.TriangulationLevel*, %class.TriangulationLevel** %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI10HexahedronSaIS0_EE4sizeEv(%"class.std::vector.42"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.42"*, align 8
  store %"class.std::vector.42"* %0, %"class.std::vector.42"** %2, align 8
  %3 = load %"class.std::vector.42"*, %"class.std::vector.42"** %2, align 8
  %4 = bitcast %"class.std::vector.42"* %3 to %"struct.std::_Vector_base.43"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.43", %"struct.std::_Vector_base.43"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data", %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Hexahedron*, %class.Hexahedron** %7, align 8
  %9 = bitcast %"class.std::vector.42"* %3 to %"struct.std::_Vector_base.43"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.43", %"struct.std::_Vector_base.43"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data", %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Hexahedron*, %class.Hexahedron** %12, align 8
  %14 = ptrtoint %class.Hexahedron* %8 to i64
  %15 = ptrtoint %class.Hexahedron* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EE4sizeEv(%"class.std::vector"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %7, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %12, align 8
  %14 = ptrtoint %class.TriangulationLevel** %8 to i64
  %15 = ptrtoint %class.TriangulationLevel** %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK12TriaAccessorILi3EE5stateEv(%class.TriaAccessor*) #3 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %3, align 8
  %4 = load %class.TriaAccessor*, %class.TriaAccessor** %3, align 8
  %5 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sge i32 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %4, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sge i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %8
  store i32 0, i32* %2, align 4
  br label %55

; <label>:13:                                     ; preds = %8, %1
  %14 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %4, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %38

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* @x.397
  %19 = load i32, i32* @y.398
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %4, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, -1
  %29 = load i32, i32* @x.397
  %30 = load i32, i32* @y.398
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %38

; <label>:37:                                     ; preds = %originalBBpart2
  store i32 1, i32* %2, align 4
  br label %55

; <label>:38:                                     ; preds = %originalBBpart2, %13
  %39 = load i32, i32* @x.397
  %40 = load i32, i32* @y.398
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  store i32 2, i32* %2, align 4
  %47 = load i32, i32* @x.397
  %48 = load i32, i32* @y.398
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %55

; <label>:55:                                     ; preds = %originalBBpart24, %37, %12
  %56 = load i32, i32* %2, align 4
  ret i32 %56

originalBBalteredBB:                              ; preds = %originalBB, %17
  %57 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %4, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, -1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  store i32 2, i32* %2, align 4
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %class.MGDoFCellAccessor* @_ZN15TriaRawIteratorILi3E17MGDoFCellAccessorILi3EEEdeEv(%class.TriaRawIterator*) #3 comdat align 2 {
  %2 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %2, align 8
  %3 = load %class.TriaRawIterator*, %class.TriaRawIterator** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %3, i32 0, i32 0
  ret %class.MGDoFCellAccessor* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNSt6vectorISt4pairIiiESaIS1_EEixEm(%"class.std::vector.7"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %6 = bitcast %"class.std::vector.7"* %5 to %"struct.std::_Vector_base.8"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %10, i64 %11
  ret %"struct.std::pair"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNK12BlockIndices15global_to_localEj(%class.BlockIndices*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.403
  %4 = load i32, i32* @y.404
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::pair.60", align 4
  %12 = alloca %class.BlockIndices*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.BlockIndices* %0, %class.BlockIndices** %12, align 8
  store i32 %1, i32* %13, align 4
  %15 = load %class.BlockIndices*, %class.BlockIndices** %12, align 8
  %16 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = sub i32 %17, 1
  store i32 %18, i32* %14, align 4
  %19 = load i32, i32* @x.403
  %20 = load i32, i32* @y.404
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %35, %originalBBpart2
  %28 = load i32, i32* %13, align 4
  %29 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %15, i32 0, i32 1
  %30 = load i32, i32* %14, align 4
  %31 = sext i32 %30 to i64
  %32 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %29, i64 %31)
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %28, %33
  br i1 %34, label %35, label %38

; <label>:35:                                     ; preds = %27
  %36 = load i32, i32* %14, align 4
  %37 = add nsw i32 %36, -1
  store i32 %37, i32* %14, align 4
  br label %27

; <label>:38:                                     ; preds = %27
  %39 = load i32, i32* @x.403
  %40 = load i32, i32* @y.404
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB4, label %originalBB4alteredBB

originalBB4:                                      ; preds = %38, %originalBB4alteredBB
  %47 = load i32, i32* %14, align 4
  %48 = load i32, i32* %13, align 4
  %49 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %15, i32 0, i32 1
  %50 = load i32, i32* %14, align 4
  %51 = sext i32 %50 to i64
  %52 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %49, i64 %51)
  %53 = load i32, i32* %52, align 4
  %54 = sub i32 %48, %53
  %55 = call i64 @_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_(i32 %47, i32 %54)
  %56 = bitcast %"struct.std::pair.60"* %11 to i64*
  store i64 %55, i64* %56, align 4
  %57 = bitcast %"struct.std::pair.60"* %11 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = load i32, i32* @x.403
  %60 = load i32, i32* @y.404
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart210, label %originalBB4alteredBB

originalBBpart210:                                ; preds = %originalBB4
  ret i64 %58

originalBBalteredBB:                              ; preds = %originalBB, %2
  %67 = alloca %"struct.std::pair.60", align 4
  %68 = alloca %class.BlockIndices*, align 8
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  store %class.BlockIndices* %0, %class.BlockIndices** %68, align 8
  store i32 %1, i32* %69, align 4
  %71 = load %class.BlockIndices*, %class.BlockIndices** %68, align 8
  %72 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %_ = sub i32 0, %73
  %gen = add i32 %_, 1
  %_1 = sub i32 0, %73
  %gen2 = add i32 %_1, 1
  %_3 = shl i32 %73, 1
  %74 = sub i32 %73, 1
  store i32 %74, i32* %70, align 4
  br label %originalBB

originalBB4alteredBB:                             ; preds = %originalBB4, %38
  %75 = load i32, i32* %14, align 4
  %76 = load i32, i32* %13, align 4
  %77 = getelementptr inbounds %class.BlockIndices, %class.BlockIndices* %15, i32 0, i32 1
  %78 = load i32, i32* %14, align 4
  %79 = sext i32 %78 to i64
  %80 = call dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.12"* %77, i64 %79)
  %81 = load i32, i32* %80, align 4
  %_5 = sub i32 0, %76
  %gen6 = add i32 %_5, %81
  %_7 = sub i32 %76, %81
  %gen8 = mul i32 %_7, %81
  %82 = sub i32 %76, %81
  %83 = call i64 @_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_(i32 %75, i32 %82)
  %84 = bitcast %"struct.std::pair.60"* %11 to i64*
  store i64 %83, i64* %84, align 4
  %85 = bitcast %"struct.std::pair.60"* %11 to i64*
  %86 = load i64, i64* %85, align 4
  br label %originalBB4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E12SmartPointerI15SparsityPatternEEixEj(%"class.internal::TableBaseAccessors::Accessor"* noalias sret, %class.Table.98*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table.98*, align 8
  %5 = alloca i32, align 4
  store %class.Table.98* %1, %class.Table.98** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table.98*, %class.Table.98** %4, align 8
  %7 = bitcast %class.Table.98* %6 to %class.TableBase.99*
  %8 = bitcast %class.Table.98* %6 to %class.TableBase.99*
  %9 = getelementptr inbounds %class.TableBase.99, %class.TableBase.99* %8, i32 0, i32 1
  %10 = load %class.SmartPointer.100*, %class.SmartPointer.100** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2E12SmartPointerI15SparsityPatternEE6n_colsEv(%class.Table.98* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.SmartPointer.100, %class.SmartPointer.100* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI15SparsityPatternELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_(%"class.internal::TableBaseAccessors::Accessor"* %0, %class.TableBase.99* dereferenceable(48) %7, %class.SmartPointer.100* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.SmartPointer.100* @_ZNK8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI15SparsityPatternELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"*, i32) #3 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %5, i32 0, i32 1
  %7 = load %class.SmartPointer.100*, %class.SmartPointer.100** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.SmartPointer.100, %class.SmartPointer.100* %7, i64 %9
  ret %class.SmartPointer.100* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.SparsityPattern* @_ZNK12SmartPointerI15SparsityPatternEptEv(%class.SmartPointer.100*) #3 comdat align 2 {
  %2 = alloca %class.SmartPointer.100*, align 8
  store %class.SmartPointer.100* %0, %class.SmartPointer.100** %2, align 8
  %3 = load %class.SmartPointer.100*, %class.SmartPointer.100** %2, align 8
  %4 = getelementptr inbounds %class.SmartPointer.100, %class.SmartPointer.100* %3, i32 0, i32 0
  %5 = load %class.SparsityPattern*, %class.SparsityPattern** %4, align 8
  ret %class.SparsityPattern* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.12"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %6 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt9make_pairIjjESt4pairIT_T0_ES1_S2_(i32, i32) #0 comdat {
  %3 = alloca %"struct.std::pair.60", align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  call void @_ZNSt4pairIjjEC2ERKjS2_(%"struct.std::pair.60"* %3, i32* dereferenceable(4) %4, i32* dereferenceable(4) %5)
  %6 = bitcast %"struct.std::pair.60"* %3 to i64*
  %7 = load i64, i64* %6, align 4
  ret i64 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIjjEC2ERKjS2_(%"struct.std::pair.60"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::pair.60"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair.60"* %0, %"struct.std::pair.60"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair.60"*, %"struct.std::pair.60"** %4, align 8
  %8 = bitcast %"struct.std::pair.60"* %7 to %"class.std::__pair_base"*
  %9 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %7, i32 0, i32 0
  %10 = load i32*, i32** %5, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK5TableILi2E12SmartPointerI15SparsityPatternEE6n_colsEv(%class.Table.98*) #0 comdat align 2 {
  %2 = load i32, i32* @x.417
  %3 = load i32, i32* @y.418
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Table.98*, align 8
  store %class.Table.98* %0, %class.Table.98** %10, align 8
  %11 = load %class.Table.98*, %class.Table.98** %10, align 8
  %12 = bitcast %class.Table.98* %11 to %class.TableBase.99*
  %13 = getelementptr inbounds %class.TableBase.99, %class.TableBase.99* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = load i32, i32* @x.417
  %17 = load i32, i32* @y.418
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %15

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %class.Table.98*, align 8
  store %class.Table.98* %0, %class.Table.98** %24, align 8
  %25 = load %class.Table.98*, %class.Table.98** %24, align 8
  %26 = bitcast %class.Table.98* %25 to %class.TableBase.99*
  %27 = getelementptr inbounds %class.TableBase.99, %class.TableBase.99* %26, i32 0, i32 3
  %28 = bitcast %class.TableIndices* %27 to %class.TableIndicesBase*
  %29 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %28, i32 1)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI15SparsityPatternELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_(%"class.internal::TableBaseAccessors::Accessor"*, %class.TableBase.99* dereferenceable(48), %class.SmartPointer.100*) unnamed_addr #3 comdat align 2 {
  %4 = load i32, i32* @x.419
  %5 = load i32, i32* @y.420
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %13 = alloca %class.TableBase.99*, align 8
  %14 = alloca %class.SmartPointer.100*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %12, align 8
  store %class.TableBase.99* %1, %class.TableBase.99** %13, align 8
  store %class.SmartPointer.100* %2, %class.SmartPointer.100** %14, align 8
  %15 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %12, align 8
  %16 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %15, i32 0, i32 0
  %17 = load %class.TableBase.99*, %class.TableBase.99** %13, align 8
  store %class.TableBase.99* %17, %class.TableBase.99** %16, align 8
  %18 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %15, i32 0, i32 1
  %19 = load %class.SmartPointer.100*, %class.SmartPointer.100** %14, align 8
  store %class.SmartPointer.100* %19, %class.SmartPointer.100** %18, align 8
  %20 = load i32, i32* @x.419
  %21 = load i32, i32* @y.420
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %29 = alloca %class.TableBase.99*, align 8
  %30 = alloca %class.SmartPointer.100*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %28, align 8
  store %class.TableBase.99* %1, %class.TableBase.99** %29, align 8
  store %class.SmartPointer.100* %2, %class.SmartPointer.100** %30, align 8
  %31 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %28, align 8
  %32 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %31, i32 0, i32 0
  %33 = load %class.TableBase.99*, %class.TableBase.99** %29, align 8
  store %class.TableBase.99* %33, %class.TableBase.99** %32, align 8
  %34 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %31, i32 0, i32 1
  %35 = load %class.SmartPointer.100*, %class.SmartPointer.100** %30, align 8
  store %class.SmartPointer.100* %35, %class.SmartPointer.100** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase*, i32) #3 comdat align 2 {
  %3 = alloca %class.TableIndicesBase*, align 8
  %4 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.TableIndicesBase*, %class.TableIndicesBase** %3, align 8
  %6 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E12SmartPointerI25CompressedSparsityPatternEEixEj(%"class.internal::TableBaseAccessors::Accessor.169"* noalias sret, %class.Table.104*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table.104*, align 8
  %5 = alloca i32, align 4
  store %class.Table.104* %1, %class.Table.104** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table.104*, %class.Table.104** %4, align 8
  %7 = bitcast %class.Table.104* %6 to %class.TableBase.105*
  %8 = bitcast %class.Table.104* %6 to %class.TableBase.105*
  %9 = getelementptr inbounds %class.TableBase.105, %class.TableBase.105* %8, i32 0, i32 1
  %10 = load %class.SmartPointer.106*, %class.SmartPointer.106** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2E12SmartPointerI25CompressedSparsityPatternEE6n_colsEv(%class.Table.104* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.SmartPointer.106, %class.SmartPointer.106* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI25CompressedSparsityPatternELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_(%"class.internal::TableBaseAccessors::Accessor.169"* %0, %class.TableBase.105* dereferenceable(48) %7, %class.SmartPointer.106* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.SmartPointer.106* @_ZNK8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI25CompressedSparsityPatternELb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.169"*, i32) #3 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor.169"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor.169"* %0, %"class.internal::TableBaseAccessors::Accessor.169"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor.169"*, %"class.internal::TableBaseAccessors::Accessor.169"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.169", %"class.internal::TableBaseAccessors::Accessor.169"* %5, i32 0, i32 1
  %7 = load %class.SmartPointer.106*, %class.SmartPointer.106** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.SmartPointer.106, %class.SmartPointer.106* %7, i64 %9
  ret %class.SmartPointer.106* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.CompressedSparsityPattern* @_ZNK12SmartPointerI25CompressedSparsityPatternEptEv(%class.SmartPointer.106*) #3 comdat align 2 {
  %2 = alloca %class.SmartPointer.106*, align 8
  store %class.SmartPointer.106* %0, %class.SmartPointer.106** %2, align 8
  %3 = load %class.SmartPointer.106*, %class.SmartPointer.106** %2, align 8
  %4 = getelementptr inbounds %class.SmartPointer.106, %class.SmartPointer.106* %3, i32 0, i32 0
  %5 = load %class.CompressedSparsityPattern*, %class.CompressedSparsityPattern** %4, align 8
  ret %class.CompressedSparsityPattern* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2E12SmartPointerI25CompressedSparsityPatternEE6n_colsEv(%class.Table.104*) #3 comdat align 2 {
  %2 = alloca %class.Table.104*, align 8
  store %class.Table.104* %0, %class.Table.104** %2, align 8
  %3 = load %class.Table.104*, %class.Table.104** %2, align 8
  %4 = bitcast %class.Table.104* %3 to %class.TableBase.105*
  %5 = getelementptr inbounds %class.TableBase.105, %class.TableBase.105* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 1)
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2E12SmartPointerI25CompressedSparsityPatternELb0ELj1EEC2ERK9TableBaseILi2ES4_EPS4_(%"class.internal::TableBaseAccessors::Accessor.169"*, %class.TableBase.105* dereferenceable(48), %class.SmartPointer.106*) unnamed_addr #3 comdat align 2 {
  %4 = load i32, i32* @x.431
  %5 = load i32, i32* @y.432
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.internal::TableBaseAccessors::Accessor.169"*, align 8
  %13 = alloca %class.TableBase.105*, align 8
  %14 = alloca %class.SmartPointer.106*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.169"* %0, %"class.internal::TableBaseAccessors::Accessor.169"** %12, align 8
  store %class.TableBase.105* %1, %class.TableBase.105** %13, align 8
  store %class.SmartPointer.106* %2, %class.SmartPointer.106** %14, align 8
  %15 = load %"class.internal::TableBaseAccessors::Accessor.169"*, %"class.internal::TableBaseAccessors::Accessor.169"** %12, align 8
  %16 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.169", %"class.internal::TableBaseAccessors::Accessor.169"* %15, i32 0, i32 0
  %17 = load %class.TableBase.105*, %class.TableBase.105** %13, align 8
  store %class.TableBase.105* %17, %class.TableBase.105** %16, align 8
  %18 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.169", %"class.internal::TableBaseAccessors::Accessor.169"* %15, i32 0, i32 1
  %19 = load %class.SmartPointer.106*, %class.SmartPointer.106** %14, align 8
  store %class.SmartPointer.106* %19, %class.SmartPointer.106** %18, align 8
  %20 = load i32, i32* @x.431
  %21 = load i32, i32* @y.432
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %"class.internal::TableBaseAccessors::Accessor.169"*, align 8
  %29 = alloca %class.TableBase.105*, align 8
  %30 = alloca %class.SmartPointer.106*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.169"* %0, %"class.internal::TableBaseAccessors::Accessor.169"** %28, align 8
  store %class.TableBase.105* %1, %class.TableBase.105** %29, align 8
  store %class.SmartPointer.106* %2, %class.SmartPointer.106** %30, align 8
  %31 = load %"class.internal::TableBaseAccessors::Accessor.169"*, %"class.internal::TableBaseAccessors::Accessor.169"** %28, align 8
  %32 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.169", %"class.internal::TableBaseAccessors::Accessor.169"* %31, i32 0, i32 0
  %33 = load %class.TableBase.105*, %class.TableBase.105** %29, align 8
  store %class.TableBase.105* %33, %class.TableBase.105** %32, align 8
  %34 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.169", %"class.internal::TableBaseAccessors::Accessor.169"* %31, i32 0, i32 1
  %35 = load %class.SmartPointer.106*, %class.SmartPointer.106** %30, align 8
  store %class.SmartPointer.106* %35, %class.SmartPointer.106** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"*, %"class.std::allocator.109"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Bvector_base"*, align 8
  %4 = alloca %"class.std::allocator.109"*, align 8
  %5 = alloca %"class.std::allocator.4", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %3, align 8
  store %"class.std::allocator.109"* %1, %"class.std::allocator.109"** %4, align 8
  %8 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3, align 8
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = load %"class.std::allocator.109"*, %"class.std::allocator.109"** %4, align 8
  call void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.4"* %5, %"class.std::allocator.109"* dereferenceable(1) %10) #2
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9, %"class.std::allocator.4"* dereferenceable(1) %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaImED2Ev(%"class.std::allocator.4"* %5) #2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.433
  %14 = load i32, i32* @y.434
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %6, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %7, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.4"* %5) #2
  %24 = load i32, i32* @x.433
  %25 = load i32, i32* @y.434
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %32

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i8*, i8** %6, align 8
  %34 = load i32, i32* %7, align 4
  %35 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36

originalBBalteredBB:                              ; preds = %originalBB, %12
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %6, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %7, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.4"* %5) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.3"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.435
  %4 = load i32, i32* @y.436
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.3"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64*, align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %11, align 8
  store i64 %1, i64* %12, align 8
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %11, align 8
  %18 = load i64, i64* %12, align 8
  %19 = icmp ne i64 %18, 0
  %20 = load i32, i32* @x.435
  %21 = load i32, i32* @y.436
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %64

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.435
  %30 = load i32, i32* @y.436
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %38 = load i64, i64* %12, align 8
  %39 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %37, i64 %38)
  store i64* %39, i64** %13, align 8
  %40 = load i64*, i64** %13, align 8
  %41 = load i64, i64* %12, align 8
  %42 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %41)
  %43 = getelementptr inbounds i64, i64* %40, i64 %42
  %44 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %45 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %44, i32 0, i32 0
  %46 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %45 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %47 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %46, i32 0, i32 2
  store i64* %43, i64** %47, align 8
  %48 = load i64*, i64** %13, align 8
  %49 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %48)
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %49, i32 0)
  %50 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %51 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %51 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Bit_iterator"* %53 to i8*
  %55 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 12, i32 8, i1 false)
  %56 = load i32, i32* @x.435
  %57 = load i32, i32* @y.436
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %75

; <label>:64:                                     ; preds = %originalBBpart2
  %65 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %66 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %65, i32 0, i32 0
  %67 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %66 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %68 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %67, i32 0, i32 2
  store i64* null, i64** %68, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %15, i64* null, i32 0)
  %69 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %70 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %70 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %72 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Bit_iterator"* %72 to i8*
  %74 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 12, i32 8, i1 false)
  br label %75

; <label>:75:                                     ; preds = %64, %originalBBpart24
  %76 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %77 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %76, i32 0, i32 0
  %78 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %77 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %79 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %78, i32 0, i32 0
  %80 = load i64, i64* %12, align 8
  %81 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %79, i64 %80)
  %82 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 0
  %84 = extractvalue { i64*, i32 } %81, 0
  store i64* %84, i64** %83, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 1
  %86 = extractvalue { i64*, i32 } %81, 1
  store i32 %86, i32* %85, align 8
  %87 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %88 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %88 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %90 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %89, i32 0, i32 1
  %91 = bitcast %"struct.std::_Bit_iterator"* %90 to i8*
  %92 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 12, i32 8, i1 false)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %93 = alloca %"class.std::vector.3"*, align 8
  %94 = alloca i64, align 8
  %95 = alloca i64*, align 8
  %96 = alloca %"struct.std::_Bit_iterator", align 8
  %97 = alloca %"struct.std::_Bit_iterator", align 8
  %98 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %93, align 8
  store i64 %1, i64* %94, align 8
  %99 = load %"class.std::vector.3"*, %"class.std::vector.3"** %93, align 8
  %100 = load i64, i64* %94, align 8
  %101 = icmp ne i64 %100, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %102 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %103 = load i64, i64* %12, align 8
  %104 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %102, i64 %103)
  store i64* %104, i64** %13, align 8
  %105 = load i64*, i64** %13, align 8
  %106 = load i64, i64* %12, align 8
  %107 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %106)
  %108 = getelementptr inbounds i64, i64* %105, i64 %107
  %109 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %110 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %109, i32 0, i32 0
  %111 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %110 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %112 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %111, i32 0, i32 2
  store i64* %108, i64** %112, align 8
  %113 = load i64*, i64** %13, align 8
  %114 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %113)
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %114, i32 0)
  %115 = bitcast %"class.std::vector.3"* %17 to %"struct.std::_Bvector_base"*
  %116 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %115, i32 0, i32 0
  %117 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %116 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %118 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %117, i32 0, i32 0
  %119 = bitcast %"struct.std::_Bit_iterator"* %118 to i8*
  %120 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 12, i32 8, i1 false)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE19_M_initialize_valueEb(%"class.std::vector.3"*, i1 zeroext) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %8 = bitcast %"class.std::vector.3"* %7 to %"struct.std::_Bvector_base"*
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10, i32 0, i32 0
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %13 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  store i64* %14, i64** %5, align 8
  %15 = load i64*, i64** %5, align 8
  %16 = icmp ne i64* %15, null
  br i1 %16, label %17, label %33

; <label>:17:                                     ; preds = %2
  %18 = load i64*, i64** %5, align 8
  %19 = bitcast i64* %18 to i8*
  %20 = load i8, i8* %4, align 1
  %21 = trunc i8 %20 to i1
  %22 = select i1 %21, i32 -1, i32 0
  %23 = trunc i32 %22 to i8
  %24 = bitcast %"class.std::vector.3"* %7 to %"struct.std::_Bvector_base"*
  %25 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %24, i32 0, i32 0
  %26 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %25)
  %27 = load i64*, i64** %5, align 8
  %28 = ptrtoint i64* %26 to i64
  %29 = ptrtoint i64* %27 to i64
  %30 = sub i64 %28, %29
  %31 = sdiv exact i64 %30, 8
  %32 = mul i64 %31, 8
  call void @llvm.memset.p0i8.i64(i8* %19, i8 %23, i64 %32, i32 8, i1 false)
  br label %33

; <label>:33:                                     ; preds = %17, %2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7) #2
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %12) #2
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.4"*, %"class.std::allocator.109"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::allocator.4"*, align 8
  %4 = alloca %"class.std::allocator.109"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %3, align 8
  store %"class.std::allocator.109"* %1, %"class.std::allocator.109"** %4, align 8
  %5 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %3, align 8
  %6 = bitcast %"class.std::allocator.4"* %5 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.5"* %6) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2ERKSaImE(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %4 = alloca %"class.std::allocator.4"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %4, align 8
  %7 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.4"*
  %9 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %4, align 8
  call void @_ZNSaImEC2ERKS_(%"class.std::allocator.4"* %8, %"class.std::allocator.4"* dereferenceable(1) %9) #2
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  invoke void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.4"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.4"* %16) #2
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImED2Ev(%"class.std::allocator.4"*) unnamed_addr #3 comdat align 2 {
  %2 = load i32, i32* @x.445
  %3 = load i32, i32* @y.446
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %10, align 8
  %11 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %10, align 8
  %12 = bitcast %"class.std::allocator.4"* %11 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.5"* %12) #2
  %13 = load i32, i32* @x.445
  %14 = load i32, i32* @y.446
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %21, align 8
  %22 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %21, align 8
  %23 = bitcast %"class.std::allocator.4"* %22 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.5"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.5"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2ERKS_(%"class.std::allocator.4"*, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::allocator.4"*, align 8
  %4 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %3, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %4, align 8
  %5 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %3, align 8
  %6 = bitcast %"class.std::allocator.4"* %5 to %"class.__gnu_cxx::new_allocator.5"*
  %7 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %4, align 8
  %8 = bitcast %"class.std::allocator.4"* %7 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.5"* %6, %"class.__gnu_cxx::new_allocator.5"* dereferenceable(1) %8) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 0
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %4)
  %5 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 1
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %5)
  %6 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %3, i32 0, i32 2
  store i64* null, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %1, %"class.__gnu_cxx::new_allocator.5"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %4, i64* null, i32 0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"*, i64*, i32) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator_base"* %7 to %"struct.std::iterator"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %7, i32 0, i32 0
  %10 = load i64*, i64** %5, align 8
  store i64* %10, i64** %9, align 8
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %7, i32 0, i32 1
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.5"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bvector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"class.std::allocator.4"*
  %8 = load i64, i64* %4, align 8
  %9 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %8)
  %10 = call i64* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m(%"class.std::allocator.4"* dereferenceable(1) %7, i64 %9)
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64) #3 comdat align 2 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 64
  %5 = sub i64 %4, 1
  %6 = udiv i64 %5, 64
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8)) #3 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"*, i64*, i32) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = load i64, i64* %5, align 8
  %11 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %6, i64 %10)
  %12 = bitcast %"struct.std::_Bit_iterator"* %3 to i8*
  %13 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 8, i1 false)
  %14 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %15 = load { i64*, i32 }, { i64*, i32 }* %14, align 8
  ret { i64*, i32 } %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8allocateERS1_m(%"class.std::allocator.4"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.471
  %4 = load i32, i32* @y.472
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.4"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %11, align 8
  %14 = bitcast %"class.std::allocator.4"* %13 to %"class.__gnu_cxx::new_allocator.5"*
  %15 = load i64, i64* %12, align 8
  %16 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.5"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.471
  %18 = load i32, i32* @y.472
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.4"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %25, align 8
  %28 = bitcast %"class.std::allocator.4"* %27 to %"class.__gnu_cxx::new_allocator.5"*
  %29 = load i64, i64* %26, align 8
  %30 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.5"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.5"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.5"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.473
  %14 = load i32, i32* @y.474
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 8
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to i64*
  %25 = load i32, i32* @x.473
  %26 = load i32, i32* @y.474
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = sub i64 0, %33
  %gen = add i64 %_, 8
  %_1 = shl i64 %33, 8
  %_2 = shl i64 %33, 8
  %34 = mul i64 %33, 8
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to i64*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.5"*) #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.477
  %4 = load i32, i32* @y.478
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_iterator"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11, align 8
  %14 = bitcast %"struct.std::_Bit_iterator"* %13 to %"struct.std::_Bit_iterator_base"*
  %15 = load i64, i64* %12, align 8
  call void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"* %14, i64 %15)
  %16 = load i32, i32* @x.477
  %17 = load i32, i32* @y.478
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.std::_Bit_iterator"* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %"struct.std::_Bit_iterator"*, align 8
  %25 = alloca i64, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %24, align 8
  store i64 %1, i64* %25, align 8
  %26 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %24, align 8
  %27 = bitcast %"struct.std::_Bit_iterator"* %26 to %"struct.std::_Bit_iterator_base"*
  %28 = load i64, i64* %25, align 8
  call void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"* %27, i64 %28)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"*, i64) #3 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = add nsw i64 %7, %10
  store i64 %11, i64* %5, align 8
  %12 = load i64, i64* %5, align 8
  %13 = sdiv i64 %12, 64
  %14 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 %13
  store i64* %16, i64** %14, align 8
  %17 = load i64, i64* %5, align 8
  %18 = srem i64 %17, 64
  store i64 %18, i64* %5, align 8
  %19 = load i64, i64* %5, align 8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %21, label %27

; <label>:21:                                     ; preds = %2
  %22 = load i64, i64* %5, align 8
  %23 = add nsw i64 %22, 64
  store i64 %23, i64* %5, align 8
  %24 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds i64, i64* %25, i32 -1
  store i64* %26, i64** %24, align 8
  br label %27

; <label>:27:                                     ; preds = %21, %2
  %28 = load i64, i64* %5, align 8
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  store i32 %29, i32* %30, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) #3 comdat align 2 {
  %2 = alloca i64*, align 8
  %3 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %4 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %5 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %5, i32 0, i32 2
  %7 = load i64*, i64** %6, align 8
  %8 = icmp ne i64* %7, null
  br i1 %8, label %9, label %16

; <label>:9:                                      ; preds = %1
  %10 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %10, i32 0, i32 2
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 -1
  %14 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %13)
  %15 = getelementptr inbounds i64, i64* %14, i64 1
  store i64* %15, i64** %2, align 8
  br label %17

; <label>:16:                                     ; preds = %1
  store i64* null, i64** %2, align 8
  br label %17

; <label>:17:                                     ; preds = %16, %9
  %18 = load i32, i32* @x.481
  %19 = load i32, i32* @y.482
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i64*, i64** %2, align 8
  %27 = load i32, i32* @x.481
  %28 = load i32, i32* @y.482
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %26

originalBBalteredBB:                              ; preds = %originalBB, %17
  %35 = load i64*, i64** %2, align 8
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %4 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %5 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ne i64* %10, null
  br i1 %11, label %12, label %37

; <label>:12:                                     ; preds = %1
  %13 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %14 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %13)
  %15 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %16 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %15 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Bit_iterator"* %17 to %"struct.std::_Bit_iterator_base"*
  %19 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = ptrtoint i64* %14 to i64
  %22 = ptrtoint i64* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 8
  store i64 %24, i64* %3, align 8
  %25 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %26 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %25 to %"class.std::allocator.4"*
  %27 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %28 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %27 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %28, i32 0, i32 2
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %3, align 8
  %32 = sub i64 0, %31
  %33 = getelementptr inbounds i64, i64* %30, i64 %32
  %34 = load i64, i64* %3, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm(%"class.std::allocator.4"* dereferenceable(1) %26, i64* %33, i64 %34)
  %35 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %4, i32 0, i32 0
  %36 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %35 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  call void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %36)
  br label %37

; <label>:37:                                     ; preds = %12, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %3 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %3 to %"class.std::allocator.4"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.4"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaImEmE10deallocateERS1_Pmm(%"class.std::allocator.4"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.487
  %5 = load i32, i32* @y.488
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.4"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %12, align 8
  store i64* %1, i64** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %12, align 8
  %16 = bitcast %"class.std::allocator.4"* %15 to %"class.__gnu_cxx::new_allocator.5"*
  %17 = load i64*, i64** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.5"* %16, i64* %17, i64 %18)
  %19 = load i32, i32* @x.487
  %20 = load i32, i32* @y.488
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.4"*, align 8
  %28 = alloca i64*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %27, align 8
  store i64* %1, i64** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %27, align 8
  %31 = bitcast %"class.std::allocator.4"* %30 to %"class.__gnu_cxx::new_allocator.5"*
  %32 = load i64*, i64** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.5"* %31, i64* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, align 8
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  %4 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"** %2, align 8
  call void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %3)
  %5 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  %7 = bitcast %"struct.std::_Bit_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 12, i32 8, i1 false)
  %8 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 0
  %9 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  %10 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 12, i32 8, i1 false)
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %4, i32 0, i32 2
  store i64* null, i64** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.5"*, i64*, i64) #3 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE17_S_check_init_lenEmRKS2_(i64, %"class.std::allocator.77"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.77"*, align 8
  %5 = alloca %"class.std::allocator.77", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.77"* %1, %"class.std::allocator.77"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %4, align 8
  call void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.77"* %5, %"class.std::allocator.77"* dereferenceable(1) %9) #2
  %10 = invoke i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.77"* dereferenceable(1) %5)
          to label %11 unwind label %30

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.493
  %13 = load i32, i32* @y.494
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = icmp ugt i64 %8, %10
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %5) #2
  %21 = load i32, i32* @x.493
  %22 = load i32, i32* @y.494
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %50

; <label>:29:                                     ; preds = %originalBBpart2
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0)) #14
  unreachable

; <label>:30:                                     ; preds = %2
  %31 = load i32, i32* @x.493
  %32 = load i32, i32* @y.494
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %6, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %7, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %5) #2
  %42 = load i32, i32* @x.493
  %43 = load i32, i32* @y.494
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i64, i64* %3, align 8
  ret i64 %51

; <label>:52:                                     ; preds = %originalBBpart24
  %53 = load i32, i32* @x.493
  %54 = load i32, i32* @y.494
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i8*, i8** %6, align 8
  %62 = load i32, i32* %7, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  %65 = load i32, i32* @x.493
  %66 = load i32, i32* @y.494
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %64

originalBBalteredBB:                              ; preds = %originalBB, %11
  %73 = icmp ugt i64 %8, %10
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %5) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %6, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %7, align 4
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %5) #2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %77 = load i8*, i8** %6, align 8
  %78 = load i32, i32* %7, align 4
  %79 = insertvalue { i8*, i32 } undef, i8* %77, 0
  %80 = insertvalue { i8*, i32 } %79, i32 %78, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.76"*, i64, %"class.std::allocator.77"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.76"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.77"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.76"* %0, %"struct.std::_Vector_base.76"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.77"* %2, %"class.std::allocator.77"** %6, align 8
  %9 = load %"struct.std::_Vector_base.76"*, %"struct.std::_Vector_base.76"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10, %"class.std::allocator.77"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.76"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10) #2
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IbSaIbEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.75"*, i64, %"class.std::vector.3"* dereferenceable(40)) #0 comdat align 2 {
  %4 = load i32, i32* @x.497
  %5 = load i32, i32* @y.498
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.75"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.75"* %0, %"class.std::vector.75"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %14, align 8
  %15 = load %"class.std::vector.75"*, %"class.std::vector.75"** %12, align 8
  %16 = bitcast %"class.std::vector.75"* %15 to %"struct.std::_Vector_base.76"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %17 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %18, i32 0, i32 0
  %20 = load %"class.std::vector.3"*, %"class.std::vector.3"** %19, align 8
  %21 = load i64, i64* %13, align 8
  %22 = load %"class.std::vector.3"*, %"class.std::vector.3"** %14, align 8
  %23 = bitcast %"class.std::vector.75"* %15 to %"struct.std::_Vector_base.76"*
  %24 = call dereferenceable(1) %"class.std::allocator.77"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.76"* %23)
  %25 = call %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.3"* %20, i64 %21, %"class.std::vector.3"* dereferenceable(40) %22, %"class.std::allocator.77"* dereferenceable(1) %24)
  %26 = bitcast %"class.std::vector.75"* %15 to %"struct.std::_Vector_base.76"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %27 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %28, i32 0, i32 1
  store %"class.std::vector.3"* %25, %"class.std::vector.3"** %29, align 8
  %30 = load i32, i32* @x.497
  %31 = load i32, i32* @y.498
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.std::vector.75"*, align 8
  %39 = alloca i64, align 8
  %40 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.75"* %0, %"class.std::vector.75"** %38, align 8
  store i64 %1, i64* %39, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %40, align 8
  %41 = load %"class.std::vector.75"*, %"class.std::vector.75"** %38, align 8
  %42 = bitcast %"class.std::vector.75"* %41 to %"struct.std::_Vector_base.76"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %43 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %44, i32 0, i32 0
  %46 = load %"class.std::vector.3"*, %"class.std::vector.3"** %45, align 8
  %47 = load i64, i64* %39, align 8
  %48 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %49 = bitcast %"class.std::vector.75"* %41 to %"struct.std::_Vector_base.76"*
  %50 = call dereferenceable(1) %"class.std::allocator.77"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.76"* %49)
  %51 = call %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.3"* %46, i64 %47, %"class.std::vector.3"* dereferenceable(40) %48, %"class.std::allocator.77"* dereferenceable(1) %50)
  %52 = bitcast %"class.std::vector.75"* %41 to %"struct.std::_Vector_base.76"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %53 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %54, i32 0, i32 1
  store %"class.std::vector.3"* %51, %"class.std::vector.3"** %55, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EED2Ev(%"struct.std::_Vector_base.76"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.499
  %3 = load i32, i32* @y.500
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.76"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base.76"* %0, %"struct.std::_Vector_base.76"** %10, align 8
  %13 = load %"struct.std::_Vector_base.76"*, %"struct.std::_Vector_base.76"** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %13, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %19, i32 0, i32 2
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %13, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %22 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %23, i32 0, i32 0
  %25 = load %"class.std::vector.3"*, %"class.std::vector.3"** %24, align 8
  %26 = ptrtoint %"class.std::vector.3"* %21 to i64
  %27 = ptrtoint %"class.std::vector.3"* %25 to i64
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 40
  %30 = load i32, i32* @x.499
  %31 = load i32, i32* @y.500
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.76"* %13, %"class.std::vector.3"* %17, i64 %29)
          to label %38 unwind label %56

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i32, i32* @x.499
  %40 = load i32, i32* @y.500
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %38, %originalBB11alteredBB
  %47 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %47) #2
  %48 = load i32, i32* @x.499
  %49 = load i32, i32* @y.500
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  ret void

; <label>:56:                                     ; preds = %originalBBpart2
  %57 = load i32, i32* @x.499
  %58 = load i32, i32* @y.500
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %56, %originalBB15alteredBB
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %11, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %12, align 4
  %68 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %68) #2
  %69 = load i32, i32* @x.499
  %70 = load i32, i32* @y.500
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %77

; <label>:77:                                     ; preds = %originalBBpart217
  %78 = load i8*, i8** %11, align 8
  %79 = load i32, i32* %12, align 4
  %80 = insertvalue { i8*, i32 } undef, i8* %78, 0
  %81 = insertvalue { i8*, i32 } %80, i32 %79, 1
  resume { i8*, i32 } %81

originalBBalteredBB:                              ; preds = %originalBB, %1
  %82 = alloca %"struct.std::_Vector_base.76"*, align 8
  %83 = alloca i8*
  %84 = alloca i32
  store %"struct.std::_Vector_base.76"* %0, %"struct.std::_Vector_base.76"** %82, align 8
  %85 = load %"struct.std::_Vector_base.76"*, %"struct.std::_Vector_base.76"** %82, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %85, i32 0, i32 0
  %87 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %86 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %87, i32 0, i32 0
  %89 = load %"class.std::vector.3"*, %"class.std::vector.3"** %88, align 8
  %90 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %85, i32 0, i32 0
  %91 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %90 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %91, i32 0, i32 2
  %93 = load %"class.std::vector.3"*, %"class.std::vector.3"** %92, align 8
  %94 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %85, i32 0, i32 0
  %95 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %94 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %95, i32 0, i32 0
  %97 = load %"class.std::vector.3"*, %"class.std::vector.3"** %96, align 8
  %98 = ptrtoint %"class.std::vector.3"* %93 to i64
  %99 = ptrtoint %"class.std::vector.3"* %97 to i64
  %_ = sub i64 %98, %99
  %gen = mul i64 %_, %99
  %_1 = sub i64 %98, %99
  %gen2 = mul i64 %_1, %99
  %_3 = sub i64 0, %98
  %gen4 = add i64 %_3, %99
  %_5 = shl i64 %98, %99
  %_6 = shl i64 %98, %99
  %_7 = shl i64 %98, %99
  %100 = sub i64 %98, %99
  %_8 = sub i64 0, %100
  %gen9 = add i64 %_8, 40
  %_10 = shl i64 %100, 40
  %101 = sdiv exact i64 %100, 40
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %38
  %102 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %102) #2
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %56
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %11, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %12, align 4
  %106 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %106) #2
  br label %originalBB15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIS_IbSaIbEESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.77"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.77"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %2, align 8
  store i64 230584300921369395, i64* %3, align 8
  %5 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_(%"class.std::allocator.77"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.77"*, %"class.std::allocator.77"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::allocator.77"*, align 8
  %4 = alloca %"class.std::allocator.77"*, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %3, align 8
  store %"class.std::allocator.77"* %1, %"class.std::allocator.77"** %4, align 8
  %5 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %3, align 8
  %6 = bitcast %"class.std::allocator.77"* %5 to %"class.__gnu_cxx::new_allocator.78"*
  %7 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %4, align 8
  %8 = bitcast %"class.std::allocator.77"* %7 to %"class.__gnu_cxx::new_allocator.78"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.78"* %6, %"class.__gnu_cxx::new_allocator.78"* dereferenceable(1) %8) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8max_sizeERKS4_(%"class.std::allocator.77"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.77"*, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %2, align 8
  %3 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %2, align 8
  %4 = bitcast %"class.std::allocator.77"* %3 to %"class.__gnu_cxx::new_allocator.78"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.78"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.78"*) #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %2, align 8
  ret i64 230584300921369395
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %1, %"class.__gnu_cxx::new_allocator.78"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"class.std::allocator.77"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.77"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.77"* %1, %"class.std::allocator.77"** %4, align 8
  %7 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"class.std::allocator.77"*
  %9 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %4, align 8
  call void @_ZNSaISt6vectorIbSaIbEEEC2ERKS2_(%"class.std::allocator.77"* %8, %"class.std::allocator.77"* dereferenceable(1) %9) #2
  %10 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %10)
          to label %11 unwind label %28

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.511
  %13 = load i32, i32* @y.512
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x.511
  %21 = load i32, i32* @y.512
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:28:                                     ; preds = %2
  %29 = load i32, i32* @x.511
  %30 = load i32, i32* @y.512
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %5, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %6, align 4
  %40 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"class.std::allocator.77"*
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %40) #2
  %41 = load i32, i32* @x.511
  %42 = load i32, i32* @y.512
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = load i32, i32* @x.511
  %51 = load i32, i32* @y.512
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %5, align 8
  %59 = load i32, i32* %6, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  %62 = load i32, i32* @x.511
  %63 = load i32, i32* @y.512
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %61

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %5, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %6, align 4
  %73 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7 to %"class.std::allocator.77"*
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %73) #2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %74 = load i8*, i8** %5, align 8
  %75 = load i32, i32* %6, align 4
  %76 = insertvalue { i8*, i32 } undef, i8* %74, 0
  %77 = insertvalue { i8*, i32 } %76, i32 %75, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.76"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.76"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.76"* %0, %"struct.std::_Vector_base.76"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.76"*, %"struct.std::_Vector_base.76"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.76"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %8 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %9, i32 0, i32 0
  store %"class.std::vector.3"* %7, %"class.std::vector.3"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %11 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %16, i32 0, i32 1
  store %"class.std::vector.3"* %14, %"class.std::vector.3"** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %24 to %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %25, i32 0, i32 2
  store %"class.std::vector.3"* %23, %"class.std::vector.3"** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %3 to %"class.std::allocator.77"*
  call void @_ZNSaISt6vectorIbSaIbEEED2Ev(%"class.std::allocator.77"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.76"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.76"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.76"* %0, %"struct.std::_Vector_base.76"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.76"*, %"struct.std::_Vector_base.76"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %29

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.519
  %10 = load i32, i32* @y.520
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %5, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %17 to %"class.std::allocator.77"*
  %19 = load i64, i64* %4, align 8
  %20 = call %"class.std::vector.3"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.77"* dereferenceable(1) %18, i64 %19)
  %21 = load i32, i32* @x.519
  %22 = load i32, i32* @y.520
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:29:                                     ; preds = %2
  br label %30

; <label>:30:                                     ; preds = %29, %originalBBpart2
  %31 = phi %"class.std::vector.3"* [ %20, %originalBBpart2 ], [ null, %29 ]
  ret %"class.std::vector.3"* %31

originalBBalteredBB:                              ; preds = %originalBB, %8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %5, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %32 to %"class.std::allocator.77"*
  %34 = load i64, i64* %4, align 8
  %35 = call %"class.std::vector.3"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.77"* dereferenceable(1) %33, i64 %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E8allocateERS4_m(%"class.std::allocator.77"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.77"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %3, align 8
  %6 = bitcast %"class.std::allocator.77"* %5 to %"class.__gnu_cxx::new_allocator.78"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.78"* %6, i64 %7, i8* null)
  ret %"class.std::vector.3"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.78"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.78"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.523
  %13 = load i32, i32* @y.524
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  call void @_ZSt17__throw_bad_allocv() #14
  %20 = load i32, i32* @x.523
  %21 = load i32, i32* @y.524
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:28:                                     ; preds = %3
  %29 = load i64, i64* %5, align 8
  %30 = mul i64 %29, 40
  %31 = call i8* @_Znwm(i64 %30)
  %32 = bitcast i8* %31 to %"class.std::vector.3"*
  ret %"class.std::vector.3"* %32

originalBBalteredBB:                              ; preds = %originalBB, %11
  call void @_ZSt17__throw_bad_allocv() #14
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIbSaIbEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(40), %"class.std::allocator.77"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::allocator.77"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::allocator.77"* %3, %"class.std::allocator.77"** %8, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %12 = call %"class.std::vector.3"* @_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.3"* %9, i64 %10, %"class.std::vector.3"* dereferenceable(40) %11)
  ret %"class.std::vector.3"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.77"* @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.76"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.527
  %3 = load i32, i32* @y.528
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.76"*, align 8
  store %"struct.std::_Vector_base.76"* %0, %"struct.std::_Vector_base.76"** %10, align 8
  %11 = load %"struct.std::_Vector_base.76"*, %"struct.std::_Vector_base.76"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %12 to %"class.std::allocator.77"*
  %14 = load i32, i32* @x.527
  %15 = load i32, i32* @y.528
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.77"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.76"*, align 8
  store %"struct.std::_Vector_base.76"* %0, %"struct.std::_Vector_base.76"** %22, align 8
  %23 = load %"struct.std::_Vector_base.76"*, %"struct.std::_Vector_base.76"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %24 to %"class.std::allocator.77"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt20uninitialized_fill_nIPSt6vectorIbSaIbEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(40)) #0 comdat {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %11 = call %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.3"* %8, i64 %9, %"class.std::vector.3"* dereferenceable(40) %10)
  ret %"class.std::vector.3"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(40)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  store %"class.std::vector.3"* %10, %"class.std::vector.3"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %36, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %99

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.531
  %16 = load i32, i32* @y.532
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %24 = load i32, i32* @x.531
  %25 = load i32, i32* @y.532
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %32 = invoke %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.3"* dereferenceable(40) %23)
          to label %33 unwind label %41

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_(%"class.std::vector.3"* %32, %"class.std::vector.3"* dereferenceable(40) %34)
          to label %35 unwind label %41

; <label>:35:                                     ; preds = %33
  br label %36

; <label>:36:                                     ; preds = %35
  %37 = load i64, i64* %5, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %5, align 8
  %39 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %40 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %39, i32 1
  store %"class.std::vector.3"* %40, %"class.std::vector.3"** %7, align 8
  br label %11

; <label>:41:                                     ; preds = %33, %originalBBpart2
  %42 = load i32, i32* @x.531
  %43 = load i32, i32* @y.532
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %8, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %9, align 4
  %53 = load i32, i32* @x.531
  %54 = load i32, i32* @y.532
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %61

; <label>:61:                                     ; preds = %originalBBpart24
  %62 = load i32, i32* @x.531
  %63 = load i32, i32* @y.532
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  %70 = load i8*, i8** %8, align 8
  %71 = call i8* @__cxa_begin_catch(i8* %70) #2
  %72 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %73 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %74 = load i32, i32* @x.531
  %75 = load i32, i32* @y.532
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.3"* %72, %"class.std::vector.3"* %73)
          to label %82 unwind label %101

; <label>:82:                                     ; preds = %originalBBpart28
  %83 = load i32, i32* @x.531
  %84 = load i32, i32* @y.532
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  %91 = load i32, i32* @x.531
  %92 = load i32, i32* @y.532
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @__cxa_rethrow() #14
          to label %131 unwind label %101

; <label>:99:                                     ; preds = %11
  %100 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  ret %"class.std::vector.3"* %100

; <label>:101:                                    ; preds = %originalBBpart212, %originalBBpart28
  %102 = load i32, i32* @x.531
  %103 = load i32, i32* @y.532
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %101, %originalBB14alteredBB
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %8, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %9, align 4
  %113 = load i32, i32* @x.531
  %114 = load i32, i32* @y.532
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @__cxa_end_catch()
          to label %121 unwind label %128

; <label>:121:                                    ; preds = %originalBBpart216
  br label %123
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:123:                                    ; preds = %121
  %124 = load i8*, i8** %8, align 8
  %125 = load i32, i32* %9, align 4
  %126 = insertvalue { i8*, i32 } undef, i8* %124, 0
  %127 = insertvalue { i8*, i32 } %126, i32 %125, 1
  resume { i8*, i32 } %127

; <label>:128:                                    ; preds = %originalBBpart216
  %129 = landingpad { i8*, i32 }
          catch i8* null
  %130 = extractvalue { i8*, i32 } %129, 0
  call void @__clang_call_terminate(i8* %130) #9
  unreachable

; <label>:131:                                    ; preds = %originalBBpart212
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %14
  %132 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %133 = landingpad { i8*, i32 }
          catch i8* null
  %134 = extractvalue { i8*, i32 } %133, 0
  store i8* %134, i8** %8, align 8
  %135 = extractvalue { i8*, i32 } %133, 1
  store i32 %135, i32* %9, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %136 = load i8*, i8** %8, align 8
  %137 = call i8* @__cxa_begin_catch(i8* %136) #2
  %138 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %139 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %101
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %8, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %9, align 4
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIbSaIbEES2_EvPT_RKT0_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(40)) #0 comdat {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.3"*
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  call void @_ZNSt6vectorIbSaIbEEC2ERKS1_(%"class.std::vector.3"* %7, %"class.std::vector.3"* dereferenceable(40) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.3"* dereferenceable(40)) #3 comdat {
  %2 = load i32, i32* @x.535
  %3 = load i32, i32* @y.536
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %12 = load i32, i32* @x.535
  %13 = load i32, i32* @y.536
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.3"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %20, align 8
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_(%"class.std::vector.3"* %5, %"class.std::vector.3"* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIbSaIbEEEEvT_S6_(%"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %28, %2
  %6 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %8 = icmp ne %"class.std::vector.3"* %6, %7
  br i1 %8, label %9, label %31

; <label>:9:                                      ; preds = %5
  %10 = load i32, i32* @x.539
  %11 = load i32, i32* @y.540
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %19 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.3"* dereferenceable(40) %18)
  call void @_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_(%"class.std::vector.3"* %19)
  %20 = load i32, i32* @x.539
  %21 = load i32, i32* @y.540
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %30 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %29, i32 1
  store %"class.std::vector.3"* %30, %"class.std::vector.3"** %3, align 8
  br label %5

; <label>:31:                                     ; preds = %5
  %32 = load i32, i32* @x.539
  %33 = load i32, i32* @y.540
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* @x.539
  %41 = load i32, i32* @y.540
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %9
  %48 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %49 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_(%"class.std::vector.3"* dereferenceable(40) %48)
  call void @_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_(%"class.std::vector.3"* %49)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_(%"class.std::vector.3"*) #0 comdat {
  %2 = load i32, i32* @x.541
  %3 = load i32, i32* @y.542
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %11)
  %12 = load i32, i32* @x.541
  %13 = load i32, i32* @y.542
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %20, align 8
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %20, align 8
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.3"* %21)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.76"*, %"class.std::vector.3"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.76"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.76"* %0, %"struct.std::_Vector_base.76"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.76"*, %"struct.std::_Vector_base.76"** %4, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %9 = icmp ne %"class.std::vector.3"* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.543
  %12 = load i32, i32* @y.544
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %19 to %"class.std::allocator.77"*
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.77"* dereferenceable(1) %20, %"class.std::vector.3"* %21, i64 %22)
  %23 = load i32, i32* @x.543
  %24 = load i32, i32* @y.544
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %32 = getelementptr inbounds %"struct.std::_Vector_base.76", %"struct.std::_Vector_base.76"* %7, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %32 to %"class.std::allocator.77"*
  %34 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %35 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.77"* dereferenceable(1) %33, %"class.std::vector.3"* %34, i64 %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIbSaIbEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.77"* dereferenceable(1), %"class.std::vector.3"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.77"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.77"* %0, %"class.std::allocator.77"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.77"*, %"class.std::allocator.77"** %4, align 8
  %8 = bitcast %"class.std::allocator.77"* %7 to %"class.__gnu_cxx::new_allocator.78"*
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.78"* %8, %"class.std::vector.3"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.78"*, %"class.std::vector.3"*, i64) #3 comdat align 2 {
  %4 = load i32, i32* @x.547
  %5 = load i32, i32* @y.548
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  %13 = alloca %"class.std::vector.3"*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %12, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %12, align 8
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %17 = bitcast %"class.std::vector.3"* %16 to i8*
  call void @_ZdlPv(i8* %17) #2
  %18 = load i32, i32* @x.547
  %19 = load i32, i32* @y.548
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.78"*, align 8
  %27 = alloca %"class.std::vector.3"*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.78"* %0, %"class.__gnu_cxx::new_allocator.78"** %26, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.78"*, %"class.__gnu_cxx::new_allocator.78"** %26, align 8
  %30 = load %"class.std::vector.3"*, %"class.std::vector.3"** %27, align 8
  %31 = bitcast %"class.std::vector.3"* %30 to i8*
  call void @_ZdlPv(i8* %31) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIbSaIbEES2_EvT_S4_RSaIT0_E(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::allocator.77"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca %"class.std::allocator.77"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store %"class.std::allocator.77"* %2, %"class.std::allocator.77"** %6, align 8
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIbSaIbEEEvT_S4_(%"class.std::vector.3"* %7, %"class.std::vector.3"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair.60"* @_ZNKSt6vectorISt4pairIjjESaIS1_EEixEm(%"class.std::vector.55"*, i64) #3 comdat align 2 {
  %3 = load i32, i32* @x.551
  %4 = load i32, i32* @y.552
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.55"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.55"* %0, %"class.std::vector.55"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.55"*, %"class.std::vector.55"** %11, align 8
  %14 = bitcast %"class.std::vector.55"* %13 to %"struct.std::_Vector_base.56"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.56", %"struct.std::_Vector_base.56"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %"struct.std::pair.60"*, %"struct.std::pair.60"** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %18, i64 %19
  %21 = load i32, i32* @x.551
  %22 = load i32, i32* @y.552
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.std::pair.60"* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.55"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.55"* %0, %"class.std::vector.55"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.55"*, %"class.std::vector.55"** %29, align 8
  %32 = bitcast %"class.std::vector.55"* %31 to %"struct.std::_Vector_base.56"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.56", %"struct.std::_Vector_base.56"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data", %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %"struct.std::pair.60"*, %"struct.std::pair.60"** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %"struct.std::pair.60", %"struct.std::pair.60"* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference", align 8
  %3 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %3, align 8
  %4 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %3, align 8
  %5 = bitcast %"struct.std::_Bit_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %2, i64* %7, i64 %12)
  %13 = bitcast %"struct.std::_Bit_reference"* %2 to { i64*, i64 }*
  %14 = load { i64*, i64 }, { i64*, i64 }* %13, align 8
  ret { i64*, i64 } %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"*, i64*, i64) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEEC2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %3 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %3, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.559
  %3 = load i32, i32* @y.560
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %10, align 8
  %13 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %10, align 8
  %14 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %13 to %"class.std::allocator.4"*
  call void @_ZNSaImEC2Ev(%"class.std::allocator.4"* %14) #2
  %15 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %13 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %16 = load i32, i32* @x.559
  %17 = load i32, i32* @y.560
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %15)
          to label %24 unwind label %25

; <label>:24:                                     ; preds = %originalBBpart2
  ret void

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %11, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %12, align 4
  %29 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %13 to %"class.std::allocator.4"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.4"* %29) #2
  br label %30

; <label>:30:                                     ; preds = %25
  %31 = load i8*, i8** %11, align 8
  %32 = load i32, i32* %12, align 4
  %33 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

originalBBalteredBB:                              ; preds = %originalBB, %1
  %35 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %35, align 8
  %38 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %35, align 8
  %39 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %38 to %"class.std::allocator.4"*
  call void @_ZNSaImEC2Ev(%"class.std::allocator.4"* %39) #2
  %40 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %38 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2Ev(%"class.std::allocator.4"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %2, align 8
  %3 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %2, align 8
  %4 = bitcast %"class.std::allocator.4"* %3 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.5"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %class.MGDoFObjectAccessor.115* @_ZN15TriaRawIteratorILi3E19MGDoFObjectAccessorILi2ELi3EEEdeEv(%class.TriaRawIterator.113*) #3 comdat align 2 {
  %2 = alloca %class.TriaRawIterator.113*, align 8
  store %class.TriaRawIterator.113* %0, %class.TriaRawIterator.113** %2, align 8
  %3 = load %class.TriaRawIterator.113*, %class.TriaRawIterator.113** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator.113, %class.TriaRawIterator.113* %3, i32 0, i32 0
  ret %class.MGDoFObjectAccessor.115* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5boost10shared_ptrI6VectorIdEEESaIS4_EE4sizeEv(%"class.std::vector.118"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.118"*, align 8
  store %"class.std::vector.118"* %0, %"class.std::vector.118"** %2, align 8
  %3 = load %"class.std::vector.118"*, %"class.std::vector.118"** %2, align 8
  %4 = bitcast %"class.std::vector.118"* %3 to %"struct.std::_Vector_base.119"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.119", %"struct.std::_Vector_base.119"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"** %7, align 8
  %9 = bitcast %"class.std::vector.118"* %3 to %"struct.std::_Vector_base.119"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.119", %"struct.std::_Vector_base.119"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"** %12, align 8
  %14 = ptrtoint %"class.boost::shared_ptr"* %8 to i64
  %15 = ptrtoint %"class.boost::shared_ptr"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 16
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.boost::shared_ptr"* @_ZNSt6vectorIN5boost10shared_ptrI6VectorIdEEESaIS4_EEixEm(%"class.std::vector.118"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.118"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.118"* %0, %"class.std::vector.118"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.118"*, %"class.std::vector.118"** %3, align 8
  %6 = bitcast %"class.std::vector.118"* %5 to %"struct.std::_Vector_base.119"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.119", %"struct.std::_Vector_base.119"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<Vector<double> >, std::allocator<boost::shared_ptr<Vector<double> > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"class.boost::shared_ptr", %"class.boost::shared_ptr"* %10, i64 %11
  ret %"class.boost::shared_ptr"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZNK5boost10shared_ptrI6VectorIdEEdeEv(%"class.boost::shared_ptr"*) #3 comdat align 2 {
  %2 = alloca %"class.boost::shared_ptr"*, align 8
  store %"class.boost::shared_ptr"* %0, %"class.boost::shared_ptr"** %2, align 8
  %3 = load %"class.boost::shared_ptr"*, %"class.boost::shared_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.boost::shared_ptr", %"class.boost::shared_ptr"* %3, i32 0, i32 0
  %5 = load %class.Vector*, %class.Vector** %4, align 8
  ret %class.Vector* %5
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #5

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #7

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZN6VectorIdEaSEd(%class.Vector*, double) #0 comdat align 2 {
  %3 = alloca %class.Vector*, align 8
  %4 = alloca double, align 8
  store %class.Vector* %0, %class.Vector** %3, align 8
  store double %1, double* %4, align 8
  %5 = load %class.Vector*, %class.Vector** %3, align 8
  %6 = call double* @_ZN6VectorIdE5beginEv(%class.Vector* %5)
  %7 = call double* @_ZN6VectorIdE3endEv(%class.Vector* %5)
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %6, double* %7, double* dereferenceable(8) %4)
  ret %class.Vector* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPddEvT_S1_RKT0_(double*, double*, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  call void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double* %8, double* %10, double* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZN6VectorIdE5beginEv(%class.Vector*) #3 comdat align 2 {
  %2 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %2, align 8
  %3 = load %class.Vector*, %class.Vector** %2, align 8
  %4 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 3
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds double, double* %5, i64 0
  ret double* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZN6VectorIdE3endEv(%class.Vector*) #3 comdat align 2 {
  %2 = alloca %class.Vector*, align 8
  store %class.Vector* %0, %class.Vector** %2, align 8
  %3 = load %class.Vector*, %class.Vector** %2, align 8
  %4 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 3
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds %class.Vector, %class.Vector* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds double, double* %5, i64 %8
  ret double* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double*, double*, double* dereferenceable(8)) #3 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %6, align 8
  %9 = load double, double* %8, align 8
  store double %9, double* %7, align 8
  br label %10

; <label>:10:                                     ; preds = %33, %3
  %11 = load i32, i32* @x.579
  %12 = load i32, i32* @y.580
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load double*, double** %4, align 8
  %20 = load double*, double** %5, align 8
  %21 = icmp ne double* %19, %20
  %22 = load i32, i32* @x.579
  %23 = load i32, i32* @y.580
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %36

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load double, double* %7, align 8
  %32 = load double*, double** %4, align 8
  store double %31, double* %32, align 8
  br label %33

; <label>:33:                                     ; preds = %30
  %34 = load double*, double** %4, align 8
  %35 = getelementptr inbounds double, double* %34, i32 1
  store double* %35, double** %4, align 8
  br label %10

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i32, i32* @x.579
  %38 = load i32, i32* @y.580
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = load i32, i32* @x.579
  %46 = load i32, i32* @y.580
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %53 = load double*, double** %4, align 8
  %54 = load double*, double** %5, align 8
  %55 = icmp ne double* %53, %54
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdET_S1_(double*) #3 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5boost10shared_ptrI6VectorIfEEESaIS4_EE4sizeEv(%"class.std::vector.124"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.124"*, align 8
  store %"class.std::vector.124"* %0, %"class.std::vector.124"** %2, align 8
  %3 = load %"class.std::vector.124"*, %"class.std::vector.124"** %2, align 8
  %4 = bitcast %"class.std::vector.124"* %3 to %"struct.std::_Vector_base.125"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.125", %"struct.std::_Vector_base.125"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"class.boost::shared_ptr.129"*, %"class.boost::shared_ptr.129"** %7, align 8
  %9 = bitcast %"class.std::vector.124"* %3 to %"struct.std::_Vector_base.125"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.125", %"struct.std::_Vector_base.125"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.boost::shared_ptr.129"*, %"class.boost::shared_ptr.129"** %12, align 8
  %14 = ptrtoint %"class.boost::shared_ptr.129"* %8 to i64
  %15 = ptrtoint %"class.boost::shared_ptr.129"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 16
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.boost::shared_ptr.129"* @_ZNSt6vectorIN5boost10shared_ptrI6VectorIfEEESaIS4_EEixEm(%"class.std::vector.124"*, i64) #3 comdat align 2 {
  %3 = load i32, i32* @x.585
  %4 = load i32, i32* @y.586
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.124"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.124"* %0, %"class.std::vector.124"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.124"*, %"class.std::vector.124"** %11, align 8
  %14 = bitcast %"class.std::vector.124"* %13 to %"struct.std::_Vector_base.125"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.125", %"struct.std::_Vector_base.125"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %"class.boost::shared_ptr.129"*, %"class.boost::shared_ptr.129"** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %"class.boost::shared_ptr.129", %"class.boost::shared_ptr.129"* %18, i64 %19
  %21 = load i32, i32* @x.585
  %22 = load i32, i32* @y.586
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.boost::shared_ptr.129"* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.124"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.124"* %0, %"class.std::vector.124"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.124"*, %"class.std::vector.124"** %29, align 8
  %32 = bitcast %"class.std::vector.124"* %31 to %"struct.std::_Vector_base.125"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.125", %"struct.std::_Vector_base.125"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<Vector<float> >, std::allocator<boost::shared_ptr<Vector<float> > > >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %"class.boost::shared_ptr.129"*, %"class.boost::shared_ptr.129"** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %"class.boost::shared_ptr.129", %"class.boost::shared_ptr.129"* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector.130* @_ZNK5boost10shared_ptrI6VectorIfEEdeEv(%"class.boost::shared_ptr.129"*) #3 comdat align 2 {
  %2 = alloca %"class.boost::shared_ptr.129"*, align 8
  store %"class.boost::shared_ptr.129"* %0, %"class.boost::shared_ptr.129"** %2, align 8
  %3 = load %"class.boost::shared_ptr.129"*, %"class.boost::shared_ptr.129"** %2, align 8
  %4 = getelementptr inbounds %"class.boost::shared_ptr.129", %"class.boost::shared_ptr.129"* %3, i32 0, i32 0
  %5 = load %class.Vector.130*, %class.Vector.130** %4, align 8
  ret %class.Vector.130* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Vector.130* @_ZN6VectorIfEaSEf(%class.Vector.130*, float) #0 comdat align 2 {
  %3 = alloca %class.Vector.130*, align 8
  %4 = alloca float, align 4
  store %class.Vector.130* %0, %class.Vector.130** %3, align 8
  store float %1, float* %4, align 4
  %5 = load %class.Vector.130*, %class.Vector.130** %3, align 8
  %6 = call float* @_ZN6VectorIfE5beginEv(%class.Vector.130* %5)
  %7 = call float* @_ZN6VectorIfE3endEv(%class.Vector.130* %5)
  call void @_ZSt4fillIPffEvT_S1_RKT0_(float* %6, float* %7, float* dereferenceable(4) %4)
  ret %class.Vector.130* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPffEvT_S1_RKT0_(float*, float*, float* dereferenceable(4)) #0 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  %7 = load float*, float** %4, align 8
  %8 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %7)
  %9 = load float*, float** %5, align 8
  %10 = call float* @_ZSt12__niter_baseIPfET_S1_(float* %9)
  %11 = load float*, float** %6, align 8
  call void @_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(float* %8, float* %10, float* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZN6VectorIfE5beginEv(%class.Vector.130*) #3 comdat align 2 {
  %2 = alloca %class.Vector.130*, align 8
  store %class.Vector.130* %0, %class.Vector.130** %2, align 8
  %3 = load %class.Vector.130*, %class.Vector.130** %2, align 8
  %4 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %3, i32 0, i32 3
  %5 = load float*, float** %4, align 8
  %6 = getelementptr inbounds float, float* %5, i64 0
  ret float* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZN6VectorIfE3endEv(%class.Vector.130*) #3 comdat align 2 {
  %2 = load i32, i32* @x.595
  %3 = load i32, i32* @y.596
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Vector.130*, align 8
  store %class.Vector.130* %0, %class.Vector.130** %10, align 8
  %11 = load %class.Vector.130*, %class.Vector.130** %10, align 8
  %12 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %11, i32 0, i32 3
  %13 = load float*, float** %12, align 8
  %14 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds float, float* %13, i64 %16
  %18 = load i32, i32* @x.595
  %19 = load i32, i32* @y.596
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret float* %17

originalBBalteredBB:                              ; preds = %originalBB, %1
  %26 = alloca %class.Vector.130*, align 8
  store %class.Vector.130* %0, %class.Vector.130** %26, align 8
  %27 = load %class.Vector.130*, %class.Vector.130** %26, align 8
  %28 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %27, i32 0, i32 3
  %29 = load float*, float** %28, align 8
  %30 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %29, i64 %32
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(float*, float*, float* dereferenceable(4)) #3 comdat {
  %4 = alloca float*, align 8
  %5 = alloca float*, align 8
  %6 = alloca float*, align 8
  %7 = alloca float, align 4
  store float* %0, float** %4, align 8
  store float* %1, float** %5, align 8
  store float* %2, float** %6, align 8
  %8 = load float*, float** %6, align 8
  %9 = load float, float* %8, align 4
  store float %9, float* %7, align 4
  br label %10

; <label>:10:                                     ; preds = %33, %3
  %11 = load i32, i32* @x.597
  %12 = load i32, i32* @y.598
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load float*, float** %4, align 8
  %20 = load float*, float** %5, align 8
  %21 = icmp ne float* %19, %20
  %22 = load i32, i32* @x.597
  %23 = load i32, i32* @y.598
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %36

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load float, float* %7, align 4
  %32 = load float*, float** %4, align 8
  store float %31, float* %32, align 4
  br label %33

; <label>:33:                                     ; preds = %30
  %34 = load float*, float** %4, align 8
  %35 = getelementptr inbounds float, float* %34, i32 1
  store float* %35, float** %4, align 8
  br label %10

; <label>:36:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %37 = load float*, float** %4, align 8
  %38 = load float*, float** %5, align 8
  %39 = icmp ne float* %37, %38
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr float* @_ZSt12__niter_baseIPfET_S1_(float*) #3 comdat {
  %2 = alloca float*, align 8
  store float* %0, float** %2, align 8
  %3 = load float*, float** %2, align 8
  ret float* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.4"* @_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_(%"class.std::allocator.4"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %2, align 8
  %3 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %2, align 8
  ret %"class.std::allocator.4"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.4"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.603
  %3 = load i32, i32* @y.604
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %10, align 8
  %11 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %12 to %"class.std::allocator.4"*
  %14 = load i32, i32* @x.603
  %15 = load i32, i32* @y.604
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.4"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %22, align 8
  %23 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %24 to %"class.std::allocator.4"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2ImEERKSaIT_E(%"class.std::allocator.109"*, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.605
  %4 = load i32, i32* @y.606
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.109"*, align 8
  %12 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.109"* %0, %"class.std::allocator.109"** %11, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %12, align 8
  %13 = load %"class.std::allocator.109"*, %"class.std::allocator.109"** %11, align 8
  %14 = bitcast %"class.std::allocator.109"* %13 to %"class.__gnu_cxx::new_allocator.110"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.110"* %14) #2
  %15 = load i32, i32* @x.605
  %16 = load i32, i32* @y.606
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %"class.std::allocator.109"*, align 8
  %24 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.109"* %0, %"class.std::allocator.109"** %23, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %24, align 8
  %25 = load %"class.std::allocator.109"*, %"class.std::allocator.109"** %23, align 8
  %26 = bitcast %"class.std::allocator.109"* %25 to %"class.__gnu_cxx::new_allocator.110"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.110"* %26) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.3"*, i64*, i32, i64*, i32, %"struct.std::_Bit_iterator"* byval align 8) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"class.std::vector.3"*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %2, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %3, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %4, i32* %20, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %23 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %26 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %29 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = call i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64* %24, i64* %27, i64* %30)
  store i64* %31, i64** %11, align 8
  %32 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %33 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %12, i64* %34, i32 0)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = load i64*, i64** %11, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %37, i32 0)
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64* %40, i32 %42, i64* %45, i32 %47, i64* %50, i32 %52)
  %54 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  ret { i64*, i32 } %60
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %10 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %2, i64* %11, i32 0)
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %13 = load { i64*, i32 }, { i64*, i32 }* %12, align 8
  ret { i64*, i32 } %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %7, i32 0, i32 1
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %2, %"struct.std::_Bit_iterator"* dereferenceable(16) %8)
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %10 = load { i64*, i32 }, { i64*, i32 }* %9, align 8
  ret { i64*, i32 } %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = load i32, i32* @x.613
  %5 = load i32, i32* @y.614
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  store i64* %2, i64** %14, align 8
  %15 = load i64*, i64** %12, align 8
  %16 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %15)
  %17 = load i64*, i64** %13, align 8
  %18 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %17)
  %19 = load i64*, i64** %14, align 8
  %20 = call i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64* %16, i64* %18, i64* %19)
  %21 = load i32, i32* @x.613
  %22 = load i32, i32* @y.614
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca i64*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  store i64* %0, i64** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  %32 = load i64*, i64** %29, align 8
  %33 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %32)
  %34 = load i64*, i64** %30, align 8
  %35 = call i64* @_ZSt12__miter_baseIPmET_S1_(i64* %34)
  %36 = load i64*, i64** %31, align 8
  %37 = call i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64* %33, i64* %35, i64* %36)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %1, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %2, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %3, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  store i64* %4, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  store i32 %5, i32* %24, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64* %29, i32 %31)
  %33 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 0
  %35 = extractvalue { i64*, i32 } %32, 0
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 1
  %37 = extractvalue { i64*, i32 } %32, 1
  store i32 %37, i32* %36, align 8
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %14 to i8*
  %39 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %55, i32 %57, i64* %60, i32 %62, i64* %65, i32 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = extractvalue { i64*, i32 } %68, 0
  store i64* %71, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = extractvalue { i64*, i32 } %68, 1
  store i32 %73, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %75 = load { i64*, i32 }, { i64*, i32 }* %74, align 8
  ret { i64*, i32 } %75
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"*, i64*, i32) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = load i32, i32* @x.619
  %5 = load i32, i32* @y.620
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  store i64* %2, i64** %14, align 8
  %15 = load i64*, i64** %12, align 8
  %16 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %15)
  %17 = load i64*, i64** %13, align 8
  %18 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %17)
  %19 = load i64*, i64** %14, align 8
  %20 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %19)
  %21 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %16, i64* %18, i64* %20)
  %22 = call i64* @_ZSt12__niter_wrapIPmET_RKS1_S1_(i64** dereferenceable(8) %14, i64* %21)
  %23 = load i32, i32* @x.619
  %24 = load i32, i32* @y.620
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64* %22

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i64*, align 8
  store i64* %0, i64** %31, align 8
  store i64* %1, i64** %32, align 8
  store i64* %2, i64** %33, align 8
  %34 = load i64*, i64** %31, align 8
  %35 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %34)
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %36)
  %38 = load i64*, i64** %33, align 8
  %39 = call i64* @_ZSt12__niter_baseIPmET_S1_(i64* %38)
  %40 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %35, i64* %37, i64* %39)
  %41 = call i64* @_ZSt12__niter_wrapIPmET_RKS1_S1_(i64** dereferenceable(8) %33, i64* %40)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPmET_S1_(i64*) #3 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__niter_wrapIPmET_RKS1_S1_(i64** dereferenceable(8), i64*) #3 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64*, align 8
  store i64** %0, i64*** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPmET_S1_(i64*) #3 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #3 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = ptrtoint i64* %8 to i64
  %11 = ptrtoint i64* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %39

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.629
  %18 = load i32, i32* @y.630
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i64*, i64** %6, align 8
  %26 = bitcast i64* %25 to i8*
  %27 = load i64*, i64** %4, align 8
  %28 = bitcast i64* %27 to i8*
  %29 = load i64, i64* %7, align 8
  %30 = mul i64 8, %29
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %26, i8* %28, i64 %30, i32 8, i1 false)
  %31 = load i32, i32* @x.629
  %32 = load i32, i32* @y.630
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

; <label>:39:                                     ; preds = %originalBBpart2, %3
  %40 = load i64*, i64** %6, align 8
  %41 = load i64, i64* %7, align 8
  %42 = getelementptr inbounds i64, i64* %40, i64 %41
  ret i64* %42

originalBBalteredBB:                              ; preds = %originalBB, %16
  %43 = load i64*, i64** %6, align 8
  %44 = bitcast i64* %43 to i8*
  %45 = load i64*, i64** %4, align 8
  %46 = bitcast i64* %45 to i8*
  %47 = load i64, i64* %7, align 8
  %_ = sub i64 0, 8
  %gen = add i64 %_, %47
  %48 = mul i64 8, %47
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %44, i8* %46, i64 %48, i32 8, i1 false)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = load i32, i32* @x.631
  %8 = load i32, i32* @y.632
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_const_iterator", align 8
  %17 = alloca %"struct.std::_Bit_const_iterator", align 8
  %18 = alloca %"struct.std::_Bit_iterator", align 8
  %19 = alloca %"struct.std::_Bit_iterator", align 8
  %20 = alloca %"struct.std::_Bit_const_iterator", align 8
  %21 = alloca %"struct.std::_Bit_const_iterator", align 8
  %22 = alloca %"struct.std::_Bit_const_iterator", align 8
  %23 = alloca %"struct.std::_Bit_const_iterator", align 8
  %24 = alloca %"struct.std::_Bit_iterator", align 8
  %25 = alloca %"struct.std::_Bit_iterator", align 8
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %16 to { i64*, i32 }*
  %27 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %26, i32 0, i32 0
  store i64* %0, i64** %27, align 8
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %26, i32 0, i32 1
  store i32 %1, i32* %28, align 8
  %29 = bitcast %"struct.std::_Bit_const_iterator"* %17 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  store i64* %2, i64** %30, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  store i32 %3, i32* %31, align 8
  %32 = bitcast %"struct.std::_Bit_iterator"* %18 to { i64*, i32 }*
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %32, i32 0, i32 0
  store i64* %4, i64** %33, align 8
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %32, i32 0, i32 1
  store i32 %5, i32* %34, align 8
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %21 to i8*
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = bitcast %"struct.std::_Bit_const_iterator"* %21 to { i64*, i32 }*
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %37, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %37, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64* %39, i32 %41)
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %20 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = extractvalue { i64*, i32 } %42, 0
  store i64* %45, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = extractvalue { i64*, i32 } %42, 1
  store i32 %47, i32* %46, align 8
  %48 = bitcast %"struct.std::_Bit_const_iterator"* %23 to i8*
  %49 = bitcast %"struct.std::_Bit_const_iterator"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 16, i32 8, i1 false)
  %50 = bitcast %"struct.std::_Bit_const_iterator"* %23 to { i64*, i32 }*
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %50, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %50, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64* %52, i32 %54)
  %56 = bitcast %"struct.std::_Bit_const_iterator"* %22 to { i64*, i32 }*
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %56, i32 0, i32 0
  %58 = extractvalue { i64*, i32 } %55, 0
  store i64* %58, i64** %57, align 8
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %56, i32 0, i32 1
  %60 = extractvalue { i64*, i32 } %55, 1
  store i32 %60, i32* %59, align 8
  %61 = bitcast %"struct.std::_Bit_iterator"* %25 to i8*
  %62 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 16, i32 8, i1 false)
  %63 = bitcast %"struct.std::_Bit_iterator"* %25 to { i64*, i32 }*
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %65, i32 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %24 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = extractvalue { i64*, i32 } %68, 0
  store i64* %71, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = extractvalue { i64*, i32 } %68, 1
  store i32 %73, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_const_iterator"* %20 to { i64*, i32 }*
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %74, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %74, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = bitcast %"struct.std::_Bit_const_iterator"* %22 to { i64*, i32 }*
  %80 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %79, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %79, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = bitcast %"struct.std::_Bit_iterator"* %24 to { i64*, i32 }*
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %84, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %84, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %76, i32 %78, i64* %81, i32 %83, i64* %86, i32 %88)
  %90 = bitcast %"struct.std::_Bit_iterator"* %19 to { i64*, i32 }*
  %91 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %90, i32 0, i32 0
  %92 = extractvalue { i64*, i32 } %89, 0
  store i64* %92, i64** %91, align 8
  %93 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %90, i32 0, i32 1
  %94 = extractvalue { i64*, i32 } %89, 1
  store i32 %94, i32* %93, align 8
  %95 = bitcast %"struct.std::_Bit_iterator"* %19 to { i64*, i32 }*
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %95, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %95, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = call { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16) %18, i64* %97, i32 %99)
  %101 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %102 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %101, i32 0, i32 0
  %103 = extractvalue { i64*, i32 } %100, 0
  store i64* %103, i64** %102, align 8
  %104 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %101, i32 0, i32 1
  %105 = extractvalue { i64*, i32 } %100, 1
  store i32 %105, i32* %104, align 8
  %106 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %107 = load { i64*, i32 }, { i64*, i32 }* %106, align 8
  %108 = load i32, i32* @x.631
  %109 = load i32, i32* @y.632
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %107

originalBBalteredBB:                              ; preds = %originalBB, %6
  %116 = alloca %"struct.std::_Bit_iterator", align 8
  %117 = alloca %"struct.std::_Bit_const_iterator", align 8
  %118 = alloca %"struct.std::_Bit_const_iterator", align 8
  %119 = alloca %"struct.std::_Bit_iterator", align 8
  %120 = alloca %"struct.std::_Bit_iterator", align 8
  %121 = alloca %"struct.std::_Bit_const_iterator", align 8
  %122 = alloca %"struct.std::_Bit_const_iterator", align 8
  %123 = alloca %"struct.std::_Bit_const_iterator", align 8
  %124 = alloca %"struct.std::_Bit_const_iterator", align 8
  %125 = alloca %"struct.std::_Bit_iterator", align 8
  %126 = alloca %"struct.std::_Bit_iterator", align 8
  %127 = bitcast %"struct.std::_Bit_const_iterator"* %117 to { i64*, i32 }*
  %128 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %127, i32 0, i32 0
  store i64* %0, i64** %128, align 8
  %129 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %127, i32 0, i32 1
  store i32 %1, i32* %129, align 8
  %130 = bitcast %"struct.std::_Bit_const_iterator"* %118 to { i64*, i32 }*
  %131 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %130, i32 0, i32 0
  store i64* %2, i64** %131, align 8
  %132 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %130, i32 0, i32 1
  store i32 %3, i32* %132, align 8
  %133 = bitcast %"struct.std::_Bit_iterator"* %119 to { i64*, i32 }*
  %134 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %133, i32 0, i32 0
  store i64* %4, i64** %134, align 8
  %135 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %133, i32 0, i32 1
  store i32 %5, i32* %135, align 8
  %136 = bitcast %"struct.std::_Bit_const_iterator"* %122 to i8*
  %137 = bitcast %"struct.std::_Bit_const_iterator"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 16, i32 8, i1 false)
  %138 = bitcast %"struct.std::_Bit_const_iterator"* %122 to { i64*, i32 }*
  %139 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %138, i32 0, i32 0
  %140 = load i64*, i64** %139, align 8
  %141 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %138, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64* %140, i32 %142)
  %144 = bitcast %"struct.std::_Bit_const_iterator"* %121 to { i64*, i32 }*
  %145 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %144, i32 0, i32 0
  %146 = extractvalue { i64*, i32 } %143, 0
  store i64* %146, i64** %145, align 8
  %147 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %144, i32 0, i32 1
  %148 = extractvalue { i64*, i32 } %143, 1
  store i32 %148, i32* %147, align 8
  %149 = bitcast %"struct.std::_Bit_const_iterator"* %124 to i8*
  %150 = bitcast %"struct.std::_Bit_const_iterator"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 16, i32 8, i1 false)
  %151 = bitcast %"struct.std::_Bit_const_iterator"* %124 to { i64*, i32 }*
  %152 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %151, i32 0, i32 0
  %153 = load i64*, i64** %152, align 8
  %154 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %151, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64* %153, i32 %155)
  %157 = bitcast %"struct.std::_Bit_const_iterator"* %123 to { i64*, i32 }*
  %158 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 0
  %159 = extractvalue { i64*, i32 } %156, 0
  store i64* %159, i64** %158, align 8
  %160 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 1
  %161 = extractvalue { i64*, i32 } %156, 1
  store i32 %161, i32* %160, align 8
  %162 = bitcast %"struct.std::_Bit_iterator"* %126 to i8*
  %163 = bitcast %"struct.std::_Bit_iterator"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 16, i32 8, i1 false)
  %164 = bitcast %"struct.std::_Bit_iterator"* %126 to { i64*, i32 }*
  %165 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %166, i32 %168)
  %170 = bitcast %"struct.std::_Bit_iterator"* %125 to { i64*, i32 }*
  %171 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %170, i32 0, i32 0
  %172 = extractvalue { i64*, i32 } %169, 0
  store i64* %172, i64** %171, align 8
  %173 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %170, i32 0, i32 1
  %174 = extractvalue { i64*, i32 } %169, 1
  store i32 %174, i32* %173, align 8
  %175 = bitcast %"struct.std::_Bit_const_iterator"* %121 to { i64*, i32 }*
  %176 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %175, i32 0, i32 0
  %177 = load i64*, i64** %176, align 8
  %178 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %175, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = bitcast %"struct.std::_Bit_const_iterator"* %123 to { i64*, i32 }*
  %181 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %180, i32 0, i32 0
  %182 = load i64*, i64** %181, align 8
  %183 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %180, i32 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = bitcast %"struct.std::_Bit_iterator"* %125 to { i64*, i32 }*
  %186 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %185, i32 0, i32 0
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %185, i32 0, i32 1
  %189 = load i32, i32* %188, align 8
  %190 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %177, i32 %179, i64* %182, i32 %184, i64* %187, i32 %189)
  %191 = bitcast %"struct.std::_Bit_iterator"* %120 to { i64*, i32 }*
  %192 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %191, i32 0, i32 0
  %193 = extractvalue { i64*, i32 } %190, 0
  store i64* %193, i64** %192, align 8
  %194 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %191, i32 0, i32 1
  %195 = extractvalue { i64*, i32 } %190, 1
  store i32 %195, i32* %194, align 8
  %196 = bitcast %"struct.std::_Bit_iterator"* %120 to { i64*, i32 }*
  %197 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %196, i32 0, i32 0
  %198 = load i64*, i64** %197, align 8
  %199 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %196, i32 0, i32 1
  %200 = load i32, i32* %199, align 8
  %201 = call { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16) %119, i64* %198, i32 %200)
  %202 = bitcast %"struct.std::_Bit_iterator"* %116 to { i64*, i32 }*
  %203 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %202, i32 0, i32 0
  %204 = extractvalue { i64*, i32 } %201, 0
  store i64* %204, i64** %203, align 8
  %205 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %202, i32 0, i32 1
  %206 = extractvalue { i64*, i32 } %201, 1
  store i32 %206, i32* %205, align 8
  %207 = bitcast %"struct.std::_Bit_iterator"* %116 to { i64*, i32 }*
  %208 = load { i64*, i32 }, { i64*, i32 }* %207, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_(i64*, i32) #3 comdat {
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %6 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 0
  store i64* %0, i64** %6, align 8
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %3 to i8*
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16), i64*, i32) #3 comdat {
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = alloca %"struct.std::_Bit_iterator"*, align 8
  %7 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 0
  store i64* %1, i64** %8, align 8
  %9 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 1
  store i32 %2, i32* %9, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %6, align 8
  %10 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  %11 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  %12 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %13 = load { i64*, i32 }, { i64*, i32 }* %12, align 8
  ret { i64*, i32 } %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %0, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %1, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %3, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %4, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %5, i32* %23, align 8
  store i8 0, i8* %11, align 1
  %24 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %29 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64* %32, i32 %34, i64* %37, i32 %39, i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_(i64*, i32) #3 comdat {
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %6 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 0
  store i64* %0, i64** %6, align 8
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %3 to i8*
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64*, i32) #3 comdat {
  %3 = load i32, i32* @x.641
  %4 = load i32, i32* @y.642
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  %17 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false)
  %18 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %19 = load { i64*, i32 }, { i64*, i32 }* %18, align 8
  %20 = load i32, i32* @x.641
  %21 = load i32, i32* @y.642
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %19

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"struct.std::_Bit_iterator", align 8
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  store i64* %0, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  store i32 %1, i32* %32, align 8
  %33 = bitcast %"struct.std::_Bit_iterator"* %28 to i8*
  %34 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 16, i32 8, i1 false)
  %35 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %36 = load { i64*, i32 }, { i64*, i32 }* %35, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::_Bit_reference", align 8
  %13 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %2, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %3, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %4, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %5, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %23 = bitcast %"struct.std::_Bit_const_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %24 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %22, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %23)
  store i64 %24, i64* %11, align 8
  br label %25

; <label>:25:                                     ; preds = %39, %6
  %26 = load i64, i64* %11, align 8
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %42

; <label>:28:                                     ; preds = %25
  %29 = call zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"* %8)
  %30 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %10)
  %31 = bitcast %"struct.std::_Bit_reference"* %12 to { i64*, i64 }*
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 0
  %33 = extractvalue { i64*, i64 } %30, 0
  store i64* %33, i64** %32, align 8
  %34 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 1
  %35 = extractvalue { i64*, i64 } %30, 1
  store i64 %35, i64* %34, align 8
  %36 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %12, i1 zeroext %29)
  %37 = call dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"* %8)
  %38 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %10)
  br label %39

; <label>:39:                                     ; preds = %28
  %40 = load i64, i64* %11, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %11, align 8
  br label %25

; <label>:42:                                     ; preds = %25
  %43 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  %44 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false)
  %45 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %46 = load { i64*, i32 }, { i64*, i32 }* %45, align 8
  ret { i64*, i32 } %46
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16), %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #3 comdat {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %7 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  %15 = mul nsw i64 64, %14
  %16 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = add nsw i64 %15, %19
  %21 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %22 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = sub nsw i64 %20, %24
  ret i64 %25
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %3 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %2, align 8
  %4 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %2, align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %3, i64* %7, i64 %12)
  %13 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %3)
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.649
  %3 = load i32, i32* @y.650
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %10, align 8
  %11 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %10, align 8
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %12)
  %13 = load i32, i32* @x.649
  %14 = load i32, i32* @y.650
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.std::_Bit_const_iterator"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %21, align 8
  %22 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %21, align 8
  %23 = bitcast %"struct.std::_Bit_const_iterator"* %22 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %23)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %5, 63
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i32 1
  store i64* %12, i64** %10, align 8
  br label %13

; <label>:13:                                     ; preds = %8, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_iterator"* dereferenceable(16)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %3, align 8
  store %"struct.std::_Bit_iterator"* %1, %"struct.std::_Bit_iterator"** %4, align 8
  %5 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %3, align 8
  %6 = bitcast %"struct.std::_Bit_const_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %12 = bitcast %"struct.std::_Bit_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %13 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %6, i64* %10, i32 %14)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.14"* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE17_S_select_on_copyERKS1_(%"class.std::allocator.14"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  ret %"class.std::allocator.14"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjjET0_T_SA_S9_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.14"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNKSt6vectorIjSaIjEE5beginEv(%"class.std::vector.12"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %6 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.170"* %2, i32** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNKSt6vectorIjSaIjEE3endEv(%"class.std::vector.12"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %6 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  store i32* %10, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.170"* %2, i32** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjEET0_T_SC_SB_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %4, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %5, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %8, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %7, i32 0, i32 0
  store i32* %17, i32** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %9, i32 0, i32 0
  store i32* %23, i32** %24, align 8
  %25 = load i32*, i32** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %7, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %9, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_(i32* %27, i32* %29, i32* %25)
  ret i32* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEPjET1_T0_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = load i32, i32* @x.671
  %5 = load i32, i32* @y.672
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %12, i32 0, i32 0
  store i32* %0, i32** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %13, i32 0, i32 0
  store i32* %1, i32** %18, align 8
  store i32* %2, i32** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %15, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %22)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %16 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %16, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %27)
  %29 = load i32*, i32** %14, align 8
  %30 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %29)
  %31 = call i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32* %23, i32* %28, i32* %30)
  %32 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %14, i32* %31)
  %33 = load i32, i32* @x.671
  %34 = load i32, i32* @y.672
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %43 = alloca i32*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %41, i32 0, i32 0
  store i32* %0, i32** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %42, i32 0, i32 0
  store i32* %1, i32** %47, align 8
  store i32* %2, i32** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %44, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %45, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32* %56)
  %58 = load i32*, i32** %43, align 8
  %59 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %58)
  %60 = call i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32* %52, i32* %57, i32* %59)
  %61 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %43, i32* %60)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEEET_S8_(i32*) #3 comdat {
  %2 = load i32, i32* @x.673
  %3 = load i32, i32* @y.674
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %11, i32 0, i32 0
  store i32* %0, i32** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %10 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %10, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = load i32, i32* @x.673
  %18 = load i32, i32* @y.674
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %26, i32 0, i32 0
  store i32* %0, i32** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %25 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.170"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %25, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_(i32*, i32*, i32*) #3 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPKjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.170", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.170"* %2)
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.170"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.679
  %3 = load i32, i32* @y.680
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.170"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.170"* %0, %"class.__gnu_cxx::__normal_iterator.170"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.170"*, %"class.__gnu_cxx::__normal_iterator.170"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.679
  %14 = load i32, i32* @y.680
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.170"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.170"* %0, %"class.__gnu_cxx::__normal_iterator.170"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator.170"*, %"class.__gnu_cxx::__normal_iterator.170"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKjSt6vectorIjSaIjEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.170"*, i32** dereferenceable(8)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.170"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.170"* %0, %"class.__gnu_cxx::__normal_iterator.170"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.170"*, %"class.__gnu_cxx::__normal_iterator.170"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.170", %"class.__gnu_cxx::__normal_iterator.170"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator(%"class.std::vector.3"*, i64*, i32) #3 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %1, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %2, i32* %8, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = bitcast %"class.std::vector.3"* %9 to %"struct.std::_Bvector_base"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %10, i32 0, i32 0
  %12 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %11 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %12, i32 0, i32 1
  %14 = bitcast %"struct.std::_Bit_iterator"* %13 to i8*
  %15 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 12, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE6insertESt13_Bit_iteratormRKb(%"class.std::vector.3"*, i64*, i32, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %6 = load i32, i32* @x.685
  %7 = load i32, i32* @y.686
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"class.std::vector.3"*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %"struct.std::_Bit_iterator", align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %1, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %2, i32* %21, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %15, align 8
  store i64 %3, i64* %16, align 8
  store i8* %4, i8** %17, align 8
  %22 = load %"class.std::vector.3"*, %"class.std::vector.3"** %15, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  %24 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 16, i32 8, i1 false)
  %25 = load i64, i64* %16, align 8
  %26 = load i8*, i8** %17, align 8
  %27 = load i8, i8* %26, align 1
  %28 = trunc i8 %27 to i1
  %29 = bitcast %"struct.std::_Bit_iterator"* %18 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  call void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(%"class.std::vector.3"* %22, i64* %31, i32 %33, i64 %25, i1 zeroext %28)
  %34 = load i32, i32* @x.685
  %35 = load i32, i32* @y.686
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %42 = alloca %"struct.std::_Bit_iterator", align 8
  %43 = alloca %"class.std::vector.3"*, align 8
  %44 = alloca i64, align 8
  %45 = alloca i8*, align 8
  %46 = alloca %"struct.std::_Bit_iterator", align 8
  %47 = bitcast %"struct.std::_Bit_iterator"* %42 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  store i32 %2, i32* %49, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %43, align 8
  store i64 %3, i64* %44, align 8
  store i8* %4, i8** %45, align 8
  %50 = load %"class.std::vector.3"*, %"class.std::vector.3"** %43, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %46 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = load i64, i64* %44, align 8
  %54 = load i8*, i8** %45, align 8
  %55 = load i8, i8* %54, align 1
  %56 = trunc i8 %55 to i1
  %57 = bitcast %"struct.std::_Bit_iterator"* %46 to { i64*, i32 }*
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %57, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %57, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  call void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(%"class.std::vector.3"* %50, i64* %59, i32 %61, i64 %53, i1 zeroext %56)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(%"class.std::vector.3"*, i64*, i32, i64, i1 zeroext) #0 comdat align 2 {
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca i64, align 8
  %17 = alloca i64*, align 8
  %18 = alloca %"struct.std::_Bit_iterator", align 8
  %19 = alloca %"struct.std::_Bit_iterator", align 8
  %20 = alloca %"struct.std::_Bit_const_iterator", align 8
  %21 = alloca %"struct.std::_Bit_iterator", align 8
  %22 = alloca %"struct.std::_Bit_const_iterator", align 8
  %23 = alloca %"struct.std::_Bit_iterator", align 8
  %24 = alloca %"struct.std::_Bit_iterator", align 8
  %25 = alloca %"struct.std::_Bit_iterator", align 8
  %26 = alloca %"struct.std::_Bit_iterator", align 8
  %27 = alloca %"struct.std::_Bit_iterator", align 8
  %28 = alloca %"struct.std::_Bit_iterator", align 8
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  store i64* %1, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  store i32 %2, i32* %32, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %7, align 8
  store i64 %3, i64* %8, align 8
  %33 = zext i1 %4 to i8
  store i8 %33, i8* %9, align 1
  %34 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %5
  br label %234

; <label>:38:                                     ; preds = %5
  %39 = call i64 @_ZNKSt6vectorIbSaIbEE8capacityEv(%"class.std::vector.3"* %34)
  %40 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %34)
  %41 = sub i64 %39, %40
  %42 = load i64, i64* %8, align 8
  %43 = icmp uge i64 %41, %42
  br i1 %43, label %44, label %110

; <label>:44:                                     ; preds = %38
  %45 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  %46 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 16, i32 8, i1 false)
  %47 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %34)
  %48 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = extractvalue { i64*, i32 } %47, 0
  store i64* %50, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = extractvalue { i64*, i32 } %47, 1
  store i32 %52, i32* %51, align 8
  %53 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %54 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %53, i32 0, i32 0
  %55 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %54 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %56 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %55, i32 0, i32 1
  %57 = load i64, i64* %8, align 8
  %58 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %56, i64 %57)
  %59 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %59, i32 0, i32 0
  %61 = extractvalue { i64*, i32 } %58, 0
  store i64* %61, i64** %60, align 8
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %59, i32 0, i32 1
  %63 = extractvalue { i64*, i32 } %58, 1
  store i32 %63, i32* %62, align 8
  %64 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %65 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %64, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %64, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %74, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %74, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = call { i64*, i32 } @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %66, i32 %68, i64* %71, i32 %73, i64* %76, i32 %78)
  %80 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %81 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %80, i32 0, i32 0
  %82 = extractvalue { i64*, i32 } %79, 0
  store i64* %82, i64** %81, align 8
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %80, i32 0, i32 1
  %84 = extractvalue { i64*, i32 } %79, 1
  store i32 %84, i32* %83, align 8
  %85 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %86 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 16, i32 8, i1 false)
  %87 = load i64, i64* %8, align 8
  %88 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %6, i64 %87)
  %89 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %90 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %89, i32 0, i32 0
  %91 = extractvalue { i64*, i32 } %88, 0
  store i64* %91, i64** %90, align 8
  %92 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %89, i32 0, i32 1
  %93 = extractvalue { i64*, i32 } %88, 1
  store i32 %93, i32* %92, align 8
  %94 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %100 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %99, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %99, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %96, i32 %98, i64* %101, i32 %103, i8* dereferenceable(1) %9)
  %104 = load i64, i64* %8, align 8
  %105 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %106 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %105, i32 0, i32 0
  %107 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %106 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %108 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %107, i32 0, i32 1
  %109 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %108, i64 %104)
  br label %234

; <label>:110:                                    ; preds = %38
  %111 = load i32, i32* @x.687
  %112 = load i32, i32* @y.688
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %110, %originalBBalteredBB
  %119 = load i64, i64* %8, align 8
  %120 = call i64 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc(%"class.std::vector.3"* %34, i64 %119, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0))
  store i64 %120, i64* %16, align 8
  %121 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %122 = load i64, i64* %16, align 8
  %123 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %121, i64 %122)
  store i64* %123, i64** %17, align 8
  %124 = load i64*, i64** %17, align 8
  %125 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %124)
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %18, i64* %125, i32 0)
  %126 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %34)
  %127 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %128 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %127, i32 0, i32 0
  %129 = extractvalue { i64*, i32 } %126, 0
  store i64* %129, i64** %128, align 8
  %130 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %127, i32 0, i32 1
  %131 = extractvalue { i64*, i32 } %126, 1
  store i32 %131, i32* %130, align 8
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %20, %"struct.std::_Bit_iterator"* dereferenceable(16) %21)
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %22, %"struct.std::_Bit_iterator"* dereferenceable(16) %6)
  %132 = bitcast %"struct.std::_Bit_iterator"* %23 to i8*
  %133 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 16, i32 8, i1 false)
  %134 = bitcast %"struct.std::_Bit_const_iterator"* %20 to { i64*, i32 }*
  %135 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %134, i32 0, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %134, i32 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = bitcast %"struct.std::_Bit_const_iterator"* %22 to { i64*, i32 }*
  %140 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %139, i32 0, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %139, i32 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.3"* %34, i64* %136, i32 %138, i64* %141, i32 %143, %"struct.std::_Bit_iterator"* byval align 8 %23)
  %145 = bitcast %"struct.std::_Bit_iterator"* %19 to { i64*, i32 }*
  %146 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %145, i32 0, i32 0
  %147 = extractvalue { i64*, i32 } %144, 0
  store i64* %147, i64** %146, align 8
  %148 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %145, i32 0, i32 1
  %149 = extractvalue { i64*, i32 } %144, 1
  store i32 %149, i32* %148, align 8
  %150 = bitcast %"struct.std::_Bit_iterator"* %24 to i8*
  %151 = bitcast %"struct.std::_Bit_iterator"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 16, i32 8, i1 false)
  %152 = load i64, i64* %8, align 8
  %153 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %19, i64 %152)
  %154 = bitcast %"struct.std::_Bit_iterator"* %25 to { i64*, i32 }*
  %155 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %154, i32 0, i32 0
  %156 = extractvalue { i64*, i32 } %153, 0
  store i64* %156, i64** %155, align 8
  %157 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %154, i32 0, i32 1
  %158 = extractvalue { i64*, i32 } %153, 1
  store i32 %158, i32* %157, align 8
  %159 = bitcast %"struct.std::_Bit_iterator"* %24 to { i64*, i32 }*
  %160 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %159, i32 0, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %159, i32 0, i32 1
  %163 = load i32, i32* %162, align 8
  %164 = bitcast %"struct.std::_Bit_iterator"* %25 to { i64*, i32 }*
  %165 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %161, i32 %163, i64* %166, i32 %168, i8* dereferenceable(1) %9)
  %169 = bitcast %"struct.std::_Bit_iterator"* %27 to i8*
  %170 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 16, i32 8, i1 false)
  %171 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %34)
  %172 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %173 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %172, i32 0, i32 0
  %174 = extractvalue { i64*, i32 } %171, 0
  store i64* %174, i64** %173, align 8
  %175 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %172, i32 0, i32 1
  %176 = extractvalue { i64*, i32 } %171, 1
  store i32 %176, i32* %175, align 8
  %177 = load i64, i64* %8, align 8
  %178 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %19, i64 %177)
  %179 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %180 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %179, i32 0, i32 0
  %181 = extractvalue { i64*, i32 } %178, 0
  store i64* %181, i64** %180, align 8
  %182 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %179, i32 0, i32 1
  %183 = extractvalue { i64*, i32 } %178, 1
  store i32 %183, i32* %182, align 8
  %184 = bitcast %"struct.std::_Bit_iterator"* %27 to { i64*, i32 }*
  %185 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %184, i32 0, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %184, i32 0, i32 1
  %188 = load i32, i32* %187, align 8
  %189 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %190 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %189, i32 0, i32 0
  %191 = load i64*, i64** %190, align 8
  %192 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %189, i32 0, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %195 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %194, i32 0, i32 0
  %196 = load i64*, i64** %195, align 8
  %197 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %194, i32 0, i32 1
  %198 = load i32, i32* %197, align 8
  %199 = call { i64*, i32 } @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %186, i32 %188, i64* %191, i32 %193, i64* %196, i32 %198)
  %200 = bitcast %"struct.std::_Bit_iterator"* %26 to { i64*, i32 }*
  %201 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %200, i32 0, i32 0
  %202 = extractvalue { i64*, i32 } %199, 0
  store i64* %202, i64** %201, align 8
  %203 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %200, i32 0, i32 1
  %204 = extractvalue { i64*, i32 } %199, 1
  store i32 %204, i32* %203, align 8
  %205 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %205)
  %206 = load i64*, i64** %17, align 8
  %207 = load i64, i64* %16, align 8
  %208 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %207)
  %209 = getelementptr inbounds i64, i64* %206, i64 %208
  %210 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %211 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %210, i32 0, i32 0
  %212 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %211 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %213 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %212, i32 0, i32 2
  store i64* %209, i64** %213, align 8
  %214 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %215 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %214, i32 0, i32 0
  %216 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %215 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %217 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %216, i32 0, i32 0
  %218 = bitcast %"struct.std::_Bit_iterator"* %217 to i8*
  %219 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %218, i8* %219, i64 12, i32 8, i1 false)
  %220 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %221 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %220, i32 0, i32 0
  %222 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %221 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %223 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %222, i32 0, i32 1
  %224 = bitcast %"struct.std::_Bit_iterator"* %223 to i8*
  %225 = bitcast %"struct.std::_Bit_iterator"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %224, i8* %225, i64 12, i32 8, i1 false)
  %226 = load i32, i32* @x.687
  %227 = load i32, i32* @y.688
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %234

; <label>:234:                                    ; preds = %originalBBpart2, %44, %37
  %235 = load i32, i32* @x.687
  %236 = load i32, i32* @y.688
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %234, %originalBB1alteredBB
  %243 = load i32, i32* @x.687
  %244 = load i32, i32* @y.688
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %110
  %251 = load i64, i64* %8, align 8
  %252 = call i64 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc(%"class.std::vector.3"* %34, i64 %251, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0))
  store i64 %252, i64* %16, align 8
  %253 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %254 = load i64, i64* %16, align 8
  %255 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %253, i64 %254)
  store i64* %255, i64** %17, align 8
  %256 = load i64*, i64** %17, align 8
  %257 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %256)
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %18, i64* %257, i32 0)
  %258 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %34)
  %259 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %260 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %259, i32 0, i32 0
  %261 = extractvalue { i64*, i32 } %258, 0
  store i64* %261, i64** %260, align 8
  %262 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %259, i32 0, i32 1
  %263 = extractvalue { i64*, i32 } %258, 1
  store i32 %263, i32* %262, align 8
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %20, %"struct.std::_Bit_iterator"* dereferenceable(16) %21)
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %22, %"struct.std::_Bit_iterator"* dereferenceable(16) %6)
  %264 = bitcast %"struct.std::_Bit_iterator"* %23 to i8*
  %265 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %264, i8* %265, i64 16, i32 8, i1 false)
  %266 = bitcast %"struct.std::_Bit_const_iterator"* %20 to { i64*, i32 }*
  %267 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %266, i32 0, i32 0
  %268 = load i64*, i64** %267, align 8
  %269 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %266, i32 0, i32 1
  %270 = load i32, i32* %269, align 8
  %271 = bitcast %"struct.std::_Bit_const_iterator"* %22 to { i64*, i32 }*
  %272 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %271, i32 0, i32 0
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %271, i32 0, i32 1
  %275 = load i32, i32* %274, align 8
  %276 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.3"* %34, i64* %268, i32 %270, i64* %273, i32 %275, %"struct.std::_Bit_iterator"* byval align 8 %23)
  %277 = bitcast %"struct.std::_Bit_iterator"* %19 to { i64*, i32 }*
  %278 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %277, i32 0, i32 0
  %279 = extractvalue { i64*, i32 } %276, 0
  store i64* %279, i64** %278, align 8
  %280 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %277, i32 0, i32 1
  %281 = extractvalue { i64*, i32 } %276, 1
  store i32 %281, i32* %280, align 8
  %282 = bitcast %"struct.std::_Bit_iterator"* %24 to i8*
  %283 = bitcast %"struct.std::_Bit_iterator"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %282, i8* %283, i64 16, i32 8, i1 false)
  %284 = load i64, i64* %8, align 8
  %285 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %19, i64 %284)
  %286 = bitcast %"struct.std::_Bit_iterator"* %25 to { i64*, i32 }*
  %287 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %286, i32 0, i32 0
  %288 = extractvalue { i64*, i32 } %285, 0
  store i64* %288, i64** %287, align 8
  %289 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %286, i32 0, i32 1
  %290 = extractvalue { i64*, i32 } %285, 1
  store i32 %290, i32* %289, align 8
  %291 = bitcast %"struct.std::_Bit_iterator"* %24 to { i64*, i32 }*
  %292 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %291, i32 0, i32 0
  %293 = load i64*, i64** %292, align 8
  %294 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %291, i32 0, i32 1
  %295 = load i32, i32* %294, align 8
  %296 = bitcast %"struct.std::_Bit_iterator"* %25 to { i64*, i32 }*
  %297 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %296, i32 0, i32 0
  %298 = load i64*, i64** %297, align 8
  %299 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %296, i32 0, i32 1
  %300 = load i32, i32* %299, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %293, i32 %295, i64* %298, i32 %300, i8* dereferenceable(1) %9)
  %301 = bitcast %"struct.std::_Bit_iterator"* %27 to i8*
  %302 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %301, i8* %302, i64 16, i32 8, i1 false)
  %303 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.3"* %34)
  %304 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %305 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %304, i32 0, i32 0
  %306 = extractvalue { i64*, i32 } %303, 0
  store i64* %306, i64** %305, align 8
  %307 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %304, i32 0, i32 1
  %308 = extractvalue { i64*, i32 } %303, 1
  store i32 %308, i32* %307, align 8
  %309 = load i64, i64* %8, align 8
  %310 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %19, i64 %309)
  %311 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %312 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %311, i32 0, i32 0
  %313 = extractvalue { i64*, i32 } %310, 0
  store i64* %313, i64** %312, align 8
  %314 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %311, i32 0, i32 1
  %315 = extractvalue { i64*, i32 } %310, 1
  store i32 %315, i32* %314, align 8
  %316 = bitcast %"struct.std::_Bit_iterator"* %27 to { i64*, i32 }*
  %317 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %316, i32 0, i32 0
  %318 = load i64*, i64** %317, align 8
  %319 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %316, i32 0, i32 1
  %320 = load i32, i32* %319, align 8
  %321 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %322 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %321, i32 0, i32 0
  %323 = load i64*, i64** %322, align 8
  %324 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %321, i32 0, i32 1
  %325 = load i32, i32* %324, align 8
  %326 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %327 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %326, i32 0, i32 0
  %328 = load i64*, i64** %327, align 8
  %329 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %326, i32 0, i32 1
  %330 = load i32, i32* %329, align 8
  %331 = call { i64*, i32 } @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %318, i32 %320, i64* %323, i32 %325, i64* %328, i32 %330)
  %332 = bitcast %"struct.std::_Bit_iterator"* %26 to { i64*, i32 }*
  %333 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %332, i32 0, i32 0
  %334 = extractvalue { i64*, i32 } %331, 0
  store i64* %334, i64** %333, align 8
  %335 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %332, i32 0, i32 1
  %336 = extractvalue { i64*, i32 } %331, 1
  store i32 %336, i32* %335, align 8
  %337 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %337)
  %338 = load i64*, i64** %17, align 8
  %339 = load i64, i64* %16, align 8
  %340 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %339)
  %341 = getelementptr inbounds i64, i64* %338, i64 %340
  %342 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %343 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %342, i32 0, i32 0
  %344 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %343 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %345 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %344, i32 0, i32 2
  store i64* %341, i64** %345, align 8
  %346 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %347 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %346, i32 0, i32 0
  %348 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %347 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %349 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %348, i32 0, i32 0
  %350 = bitcast %"struct.std::_Bit_iterator"* %349 to i8*
  %351 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %350, i8* %351, i64 12, i32 8, i1 false)
  %352 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Bvector_base"*
  %353 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %352, i32 0, i32 0
  %354 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %353 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %355 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %354, i32 0, i32 1
  %356 = bitcast %"struct.std::_Bit_iterator"* %355 to i8*
  %357 = bitcast %"struct.std::_Bit_iterator"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %356, i8* %357, i64 12, i32 8, i1 false)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %234
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE8capacityEv(%"class.std::vector.3"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.689
  %3 = load i32, i32* @y.690
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.3"*, align 8
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %14 = bitcast %"class.std::vector.3"* %13 to %"struct.std::_Bvector_base"*
  %15 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %14, i32 0, i32 0
  %16 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %15)
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %11, i64* %16, i32 0)
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %11 to %"struct.std::_Bit_iterator_base"*
  %18 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %13)
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  %21 = extractvalue { i64*, i32 } %18, 0
  store i64* %21, i64** %20, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  %23 = extractvalue { i64*, i32 } %18, 1
  store i32 %23, i32* %22, align 8
  %24 = bitcast %"struct.std::_Bit_const_iterator"* %12 to %"struct.std::_Bit_iterator_base"*
  %25 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %17, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %24)
  %26 = load i32, i32* @x.689
  %27 = load i32, i32* @y.690
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.3"*, align 8
  %35 = alloca %"struct.std::_Bit_const_iterator", align 8
  %36 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %34, align 8
  %37 = load %"class.std::vector.3"*, %"class.std::vector.3"** %34, align 8
  %38 = bitcast %"class.std::vector.3"* %37 to %"struct.std::_Bvector_base"*
  %39 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %38, i32 0, i32 0
  %40 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %39)
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %35, i64* %40, i32 0)
  %41 = bitcast %"struct.std::_Bit_const_iterator"* %35 to %"struct.std::_Bit_iterator_base"*
  %42 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.3"* %37)
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %36 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = extractvalue { i64*, i32 } %42, 0
  store i64* %45, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = extractvalue { i64*, i32 } %42, 1
  store i32 %47, i32* %46, align 8
  %48 = bitcast %"struct.std::_Bit_const_iterator"* %36 to %"struct.std::_Bit_iterator_base"*
  %49 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %41, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %48)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = load i32, i32* @x.691
  %8 = load i32, i32* @y.692
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = alloca %"struct.std::_Bit_iterator", align 8
  %18 = alloca %"struct.std::_Bit_iterator", align 8
  %19 = alloca %"struct.std::_Bit_iterator", align 8
  %20 = alloca %"struct.std::_Bit_iterator", align 8
  %21 = alloca %"struct.std::_Bit_iterator", align 8
  %22 = alloca %"struct.std::_Bit_iterator", align 8
  %23 = alloca %"struct.std::_Bit_iterator", align 8
  %24 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 0
  store i64* %0, i64** %25, align 8
  %26 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 1
  store i32 %1, i32* %26, align 8
  %27 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  store i64* %2, i64** %28, align 8
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  store i32 %3, i32* %29, align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %18 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  store i64* %4, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  store i32 %5, i32* %32, align 8
  %33 = bitcast %"struct.std::_Bit_iterator"* %20 to i8*
  %34 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 16, i32 8, i1 false)
  %35 = bitcast %"struct.std::_Bit_iterator"* %20 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorET_S1_(i64* %37, i32 %39)
  %41 = bitcast %"struct.std::_Bit_iterator"* %19 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = extractvalue { i64*, i32 } %40, 0
  store i64* %43, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = extractvalue { i64*, i32 } %40, 1
  store i32 %45, i32* %44, align 8
  %46 = bitcast %"struct.std::_Bit_iterator"* %22 to i8*
  %47 = bitcast %"struct.std::_Bit_iterator"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = bitcast %"struct.std::_Bit_iterator"* %22 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorET_S1_(i64* %50, i32 %52)
  %54 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::_Bit_iterator"* %23 to i8*
  %60 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 16, i32 8, i1 false)
  %61 = bitcast %"struct.std::_Bit_iterator"* %19 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"struct.std::_Bit_iterator"* %23 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = call { i64*, i32 } @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %63, i32 %65, i64* %68, i32 %70, i64* %73, i32 %75)
  %77 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %77, i32 0, i32 0
  %79 = extractvalue { i64*, i32 } %76, 0
  store i64* %79, i64** %78, align 8
  %80 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %77, i32 0, i32 1
  %81 = extractvalue { i64*, i32 } %76, 1
  store i32 %81, i32* %80, align 8
  %82 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %83 = load { i64*, i32 }, { i64*, i32 }* %82, align 8
  %84 = load i32, i32* @x.691
  %85 = load i32, i32* @y.692
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %83

originalBBalteredBB:                              ; preds = %originalBB, %6
  %92 = alloca %"struct.std::_Bit_iterator", align 8
  %93 = alloca %"struct.std::_Bit_iterator", align 8
  %94 = alloca %"struct.std::_Bit_iterator", align 8
  %95 = alloca %"struct.std::_Bit_iterator", align 8
  %96 = alloca %"struct.std::_Bit_iterator", align 8
  %97 = alloca %"struct.std::_Bit_iterator", align 8
  %98 = alloca %"struct.std::_Bit_iterator", align 8
  %99 = alloca %"struct.std::_Bit_iterator", align 8
  %100 = alloca %"struct.std::_Bit_iterator", align 8
  %101 = bitcast %"struct.std::_Bit_iterator"* %93 to { i64*, i32 }*
  %102 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %101, i32 0, i32 0
  store i64* %0, i64** %102, align 8
  %103 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %101, i32 0, i32 1
  store i32 %1, i32* %103, align 8
  %104 = bitcast %"struct.std::_Bit_iterator"* %94 to { i64*, i32 }*
  %105 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %104, i32 0, i32 0
  store i64* %2, i64** %105, align 8
  %106 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %104, i32 0, i32 1
  store i32 %3, i32* %106, align 8
  %107 = bitcast %"struct.std::_Bit_iterator"* %95 to { i64*, i32 }*
  %108 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 0
  store i64* %4, i64** %108, align 8
  %109 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 1
  store i32 %5, i32* %109, align 8
  %110 = bitcast %"struct.std::_Bit_iterator"* %97 to i8*
  %111 = bitcast %"struct.std::_Bit_iterator"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 16, i32 8, i1 false)
  %112 = bitcast %"struct.std::_Bit_iterator"* %97 to { i64*, i32 }*
  %113 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %112, i32 0, i32 0
  %114 = load i64*, i64** %113, align 8
  %115 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %112, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorET_S1_(i64* %114, i32 %116)
  %118 = bitcast %"struct.std::_Bit_iterator"* %96 to { i64*, i32 }*
  %119 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %118, i32 0, i32 0
  %120 = extractvalue { i64*, i32 } %117, 0
  store i64* %120, i64** %119, align 8
  %121 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %118, i32 0, i32 1
  %122 = extractvalue { i64*, i32 } %117, 1
  store i32 %122, i32* %121, align 8
  %123 = bitcast %"struct.std::_Bit_iterator"* %99 to i8*
  %124 = bitcast %"struct.std::_Bit_iterator"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 16, i32 8, i1 false)
  %125 = bitcast %"struct.std::_Bit_iterator"* %99 to { i64*, i32 }*
  %126 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %125, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %125, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorET_S1_(i64* %127, i32 %129)
  %131 = bitcast %"struct.std::_Bit_iterator"* %98 to { i64*, i32 }*
  %132 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %131, i32 0, i32 0
  %133 = extractvalue { i64*, i32 } %130, 0
  store i64* %133, i64** %132, align 8
  %134 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %131, i32 0, i32 1
  %135 = extractvalue { i64*, i32 } %130, 1
  store i32 %135, i32* %134, align 8
  %136 = bitcast %"struct.std::_Bit_iterator"* %100 to i8*
  %137 = bitcast %"struct.std::_Bit_iterator"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 16, i32 8, i1 false)
  %138 = bitcast %"struct.std::_Bit_iterator"* %96 to { i64*, i32 }*
  %139 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %138, i32 0, i32 0
  %140 = load i64*, i64** %139, align 8
  %141 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %138, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = bitcast %"struct.std::_Bit_iterator"* %98 to { i64*, i32 }*
  %144 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %143, i32 0, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %143, i32 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = bitcast %"struct.std::_Bit_iterator"* %100 to { i64*, i32 }*
  %149 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %148, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %148, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = call { i64*, i32 } @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %140, i32 %142, i64* %145, i32 %147, i64* %150, i32 %152)
  %154 = bitcast %"struct.std::_Bit_iterator"* %92 to { i64*, i32 }*
  %155 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %154, i32 0, i32 0
  %156 = extractvalue { i64*, i32 } %153, 0
  store i64* %156, i64** %155, align 8
  %157 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %154, i32 0, i32 1
  %158 = extractvalue { i64*, i32 } %153, 1
  store i32 %158, i32* %157, align 8
  %159 = bitcast %"struct.std::_Bit_iterator"* %92 to { i64*, i32 }*
  %160 = load { i64*, i32 }, { i64*, i32 }* %159, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64*, i32, i64*, i32, i8* dereferenceable(1)) #0 comdat {
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64*, align 8
  %10 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %11 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %10, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %10, i32 0, i32 1
  store i32 %1, i32* %12, align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %3, i32* %15, align 8
  store i8* %4, i8** %8, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %16, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %20 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %19, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = icmp ne i64* %18, %21
  br i1 %22, label %23, label %88

; <label>:23:                                     ; preds = %5
  %24 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %25 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %24, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  store i64* %26, i64** %9, align 8
  %27 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %28 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %56

; <label>:31:                                     ; preds = %23
  %32 = load i32, i32* @x.693
  %33 = load i32, i32* @y.694
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %31, %originalBBalteredBB
  %40 = load i64*, i64** %9, align 8
  %41 = getelementptr inbounds i64, i64* %40, i32 1
  store i64* %41, i64** %9, align 8
  %42 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %43 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = load i8*, i8** %8, align 8
  %46 = load i8, i8* %45, align 1
  %47 = trunc i8 %46 to i1
  call void @_ZSt14__fill_bvectorPmjjb(i64* %40, i32 %44, i32 64, i1 zeroext %47)
  %48 = load i32, i32* @x.693
  %49 = load i32, i32* @y.694
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:56:                                     ; preds = %originalBBpart2, %23
  %57 = load i64*, i64** %9, align 8
  %58 = bitcast i64* %57 to i8*
  %59 = load i8*, i8** %8, align 8
  %60 = load i8, i8* %59, align 1
  %61 = trunc i8 %60 to i1
  %62 = select i1 %61, i32 -1, i32 0
  %63 = trunc i32 %62 to i8
  %64 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %65 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %64, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = load i64*, i64** %9, align 8
  %68 = ptrtoint i64* %66 to i64
  %69 = ptrtoint i64* %67 to i64
  %70 = sub i64 %68, %69
  %71 = sdiv exact i64 %70, 8
  %72 = mul i64 %71, 8
  call void @llvm.memset.p0i8.i64(i8* %58, i8 %63, i64 %72, i32 8, i1 false)
  %73 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %74 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %87

; <label>:77:                                     ; preds = %56
  %78 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %79 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %78, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %82 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = load i8*, i8** %8, align 8
  %85 = load i8, i8* %84, align 1
  %86 = trunc i8 %85 to i1
  call void @_ZSt14__fill_bvectorPmjjb(i64* %80, i32 0, i32 %83, i1 zeroext %86)
  br label %87

; <label>:87:                                     ; preds = %77, %56
  br label %142

; <label>:88:                                     ; preds = %5
  %89 = load i32, i32* @x.693
  %90 = load i32, i32* @y.694
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %88, %originalBB1alteredBB
  %97 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %98 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %101 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = icmp ne i32 %99, %102
  %104 = load i32, i32* @x.693
  %105 = load i32, i32* @y.694
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %103, label %112, label %125

; <label>:112:                                    ; preds = %originalBBpart24
  %113 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %114 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %113, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %117 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %120 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = load i8*, i8** %8, align 8
  %123 = load i8, i8* %122, align 1
  %124 = trunc i8 %123 to i1
  call void @_ZSt14__fill_bvectorPmjjb(i64* %115, i32 %118, i32 %121, i1 zeroext %124)
  br label %125

; <label>:125:                                    ; preds = %112, %originalBBpart24
  %126 = load i32, i32* @x.693
  %127 = load i32, i32* @y.694
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %125, %originalBB6alteredBB
  %134 = load i32, i32* @x.693
  %135 = load i32, i32* @y.694
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %142

; <label>:142:                                    ; preds = %originalBBpart28, %87
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %31
  %143 = load i64*, i64** %9, align 8
  %144 = getelementptr inbounds i64, i64* %143, i32 1
  store i64* %144, i64** %9, align 8
  %145 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %146 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = load i8*, i8** %8, align 8
  %149 = load i8, i8* %148, align 1
  %150 = trunc i8 %149 to i1
  call void @_ZSt14__fill_bvectorPmjjb(i64* %143, i32 %147, i32 64, i1 zeroext %150)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %88
  %151 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %152 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %151, i32 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %155 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = icmp ne i32 %153, %156
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %125
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.3"* %9)
  %11 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #14
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* @x.695
  %19 = load i32, i32* @y.696
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
  %27 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
  store i64 %27, i64* %8, align 8
  %28 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %26, %29
  store i64 %30, i64* %7, align 8
  %31 = load i64, i64* %7, align 8
  %32 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
  %33 = icmp ult i64 %31, %32
  %34 = load i32, i32* @x.695
  %35 = load i32, i32* @y.696
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %46, label %42

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load i64, i64* %7, align 8
  %44 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.3"* %9)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %48

; <label>:46:                                     ; preds = %42, %originalBBpart2
  %47 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.3"* %9)
  br label %50

; <label>:48:                                     ; preds = %42
  %49 = load i64, i64* %7, align 8
  br label %50

; <label>:50:                                     ; preds = %48, %46
  %51 = phi i64 [ %47, %46 ], [ %49, %48 ]
  ret i64 %51

originalBBalteredBB:                              ; preds = %originalBB, %17
  %52 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
  %53 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
  store i64 %53, i64* %8, align 8
  %54 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %55 = load i64, i64* %54, align 8
  %_ = shl i64 %52, %55
  %_1 = shl i64 %52, %55
  %_2 = sub i64 %52, %55
  %gen = mul i64 %_2, %55
  %_3 = sub i64 %52, %55
  %gen4 = mul i64 %_3, %55
  %56 = add i64 %52, %55
  store i64 %56, i64* %7, align 8
  %57 = load i64, i64* %7, align 8
  %58 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.3"* %9)
  %59 = icmp ult i64 %57, %58
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %1, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %2, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %3, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  store i64* %4, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  store i32 %5, i32* %24, align 8
  %25 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %26 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorET_S1_(i64* %29, i32 %31)
  %33 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 0
  %35 = extractvalue { i64*, i32 } %32, 0
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 1
  %37 = extractvalue { i64*, i32 } %32, 1
  store i32 %37, i32* %36, align 8
  %38 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %39 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorET_S1_(i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %55, i32 %57, i64* %60, i32 %62, i64* %65, i32 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = extractvalue { i64*, i32 } %68, 0
  store i64* %71, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = extractvalue { i64*, i32 } %68, 1
  store i32 %73, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %75 = load { i64*, i32 }, { i64*, i32 }* %74, align 8
  ret { i64*, i32 } %75
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = alloca %"struct.std::_Bit_iterator", align 8
  %18 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %1, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %2, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %3, i32* %23, align 8
  %24 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 0
  store i64* %4, i64** %25, align 8
  %26 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 1
  store i32 %5, i32* %26, align 8
  %27 = bitcast %"struct.std::_Bit_iterator"* %13 to i8*
  %28 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 16, i32 8, i1 false)
  %29 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %31, i32 %33)
  %35 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = extractvalue { i64*, i32 } %34, 0
  store i64* %37, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = extractvalue { i64*, i32 } %34, 1
  store i32 %39, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %41 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 16, i32 8, i1 false)
  %42 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %44, i32 %46)
  %48 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = extractvalue { i64*, i32 } %47, 0
  store i64* %50, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = extractvalue { i64*, i32 } %47, 1
  store i32 %52, i32* %51, align 8
  %53 = bitcast %"struct.std::_Bit_iterator"* %17 to i8*
  %54 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false)
  %55 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %57, i32 %59)
  %61 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = extractvalue { i64*, i32 } %60, 0
  store i64* %63, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = extractvalue { i64*, i32 } %60, 1
  store i32 %65, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %77 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = call { i64*, i32 } @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %68, i32 %70, i64* %73, i32 %75, i64* %78, i32 %80)
  %82 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 0
  %84 = extractvalue { i64*, i32 } %81, 0
  store i64* %84, i64** %83, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 1
  %86 = extractvalue { i64*, i32 } %81, 1
  store i32 %86, i32* %85, align 8
  %87 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %88 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = call { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16) %10, i64* %89, i32 %91)
  %93 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 0
  %95 = extractvalue { i64*, i32 } %92, 0
  store i64* %95, i64** %94, align 8
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 1
  %97 = extractvalue { i64*, i32 } %92, 1
  store i32 %97, i32* %96, align 8
  %98 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %99 = load { i64*, i32 }, { i64*, i32 }* %98, align 8
  ret { i64*, i32 } %99
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorET_S1_(i64*, i32) #3 comdat {
  %3 = load i32, i32* @x.701
  %4 = load i32, i32* @y.702
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  %17 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false)
  %18 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %19 = load { i64*, i32 }, { i64*, i32 }* %18, align 8
  %20 = load i32, i32* @x.701
  %21 = load i32, i32* @y.702
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %19

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"struct.std::_Bit_iterator", align 8
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  store i64* %0, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  store i32 %1, i32* %32, align 8
  %33 = bitcast %"struct.std::_Bit_iterator"* %28 to i8*
  %34 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 16, i32 8, i1 false)
  %35 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %36 = load { i64*, i32 }, { i64*, i32 }* %35, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %0, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %1, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %3, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %4, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %5, i32* %23, align 8
  store i8 0, i8* %11, align 1
  %24 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %25 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %26 = bitcast %"struct.std::_Bit_iterator"* %13 to i8*
  %27 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %29 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %32, i32 %34, i64* %37, i32 %39, i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::_Bit_reference", align 8
  %13 = alloca %"struct.std::_Bit_reference", align 8
  %14 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 0
  store i64* %0, i64** %15, align 8
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 1
  store i32 %1, i32* %16, align 8
  %17 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %2, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %3, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %4, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %5, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %24 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %25 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %23, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %24)
  store i64 %25, i64* %11, align 8
  br label %26

; <label>:26:                                     ; preds = %45, %6
  %27 = load i64, i64* %11, align 8
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %48

; <label>:29:                                     ; preds = %26
  %30 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"* %9)
  %31 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %30)
  %32 = bitcast %"struct.std::_Bit_reference"* %12 to { i64*, i64 }*
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %32, i32 0, i32 0
  %34 = extractvalue { i64*, i64 } %31, 0
  store i64* %34, i64** %33, align 8
  %35 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %32, i32 0, i32 1
  %36 = extractvalue { i64*, i64 } %31, 1
  store i64 %36, i64* %35, align 8
  %37 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"* %10)
  %38 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %37)
  %39 = bitcast %"struct.std::_Bit_reference"* %13 to { i64*, i64 }*
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %39, i32 0, i32 0
  %41 = extractvalue { i64*, i64 } %38, 0
  store i64* %41, i64** %40, align 8
  %42 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %39, i32 0, i32 1
  %43 = extractvalue { i64*, i64 } %38, 1
  store i64 %43, i64* %42, align 8
  %44 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"* %13, %"struct.std::_Bit_reference"* dereferenceable(16) %12)
  br label %45

; <label>:45:                                     ; preds = %29
  %46 = load i64, i64* %11, align 8
  %47 = add nsw i64 %46, -1
  store i64 %47, i64* %11, align 8
  br label %26

; <label>:48:                                     ; preds = %26
  %49 = load i32, i32* @x.705
  %50 = load i32, i32* @y.706
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %48, %originalBBalteredBB
  %57 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  %58 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 16, i32 8, i1 false)
  %59 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  %61 = load i32, i32* @x.705
  %62 = load i32, i32* @y.706
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i32 } %60

originalBBalteredBB:                              ; preds = %originalBB, %48
  %69 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  %70 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 16, i32 8, i1 false)
  %71 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %72 = load { i64*, i32 }, { i64*, i32 }* %71, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base12_M_bump_downEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"* dereferenceable(16)) #3 comdat align 2 {
  %3 = load i32, i32* @x.709
  %4 = load i32, i32* @y.710
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_reference"*, align 8
  %12 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %11, align 8
  store %"struct.std::_Bit_reference"* %1, %"struct.std::_Bit_reference"** %12, align 8
  %13 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %11, align 8
  %14 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %12, align 8
  %15 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %14)
  %16 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %13, i1 zeroext %15)
  %17 = load i32, i32* @x.709
  %18 = load i32, i32* @y.710
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.std::_Bit_reference"* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"struct.std::_Bit_reference"*, align 8
  %26 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %25, align 8
  store %"struct.std::_Bit_reference"* %1, %"struct.std::_Bit_reference"** %26, align 8
  %27 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %25, align 8
  %28 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %26, align 8
  %29 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %28)
  %30 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %27, i1 zeroext %29)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base12_M_bump_downEv(%"struct.std::_Bit_iterator_base"*) #3 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 1
  store i32 63, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %3, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i32 -1
  store i64* %12, i64** %10, align 8
  br label %13

; <label>:13:                                     ; preds = %8, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt14__fill_bvectorPmjjb(i64*, i32, i32, i1 zeroext) #3 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %12 = zext i1 %3 to i8
  store i8 %12, i8* %8, align 1
  %13 = load i32, i32* %6, align 4
  %14 = zext i32 %13 to i64
  %15 = shl i64 -1, %14
  store i64 %15, i64* %9, align 8
  %16 = load i32, i32* %7, align 4
  %17 = sub i32 64, %16
  %18 = zext i32 %17 to i64
  %19 = lshr i64 -1, %18
  store i64 %19, i64* %10, align 8
  %20 = load i64, i64* %9, align 8
  %21 = load i64, i64* %10, align 8
  %22 = and i64 %20, %21
  store i64 %22, i64* %11, align 8
  %23 = load i8, i8* %8, align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %25, label %46

; <label>:25:                                     ; preds = %4
  %26 = load i32, i32* @x.713
  %27 = load i32, i32* @y.714
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = load i64, i64* %11, align 8
  %35 = load i64*, i64** %5, align 8
  %36 = load i64, i64* %35, align 8
  %37 = or i64 %36, %34
  store i64 %37, i64* %35, align 8
  %38 = load i32, i32* @x.713
  %39 = load i32, i32* @y.714
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %52

; <label>:46:                                     ; preds = %4
  %47 = load i64, i64* %11, align 8
  %48 = xor i64 %47, -1
  %49 = load i64*, i64** %5, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %48
  store i64 %51, i64* %49, align 8
  br label %52

; <label>:52:                                     ; preds = %46, %originalBBpart2
  %53 = load i32, i32* @x.713
  %54 = load i32, i32* @y.714
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %52, %originalBB5alteredBB
  %61 = load i32, i32* @x.713
  %62 = load i32, i32* @y.714
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %25
  %69 = load i64, i64* %11, align 8
  %70 = load i64*, i64** %5, align 8
  %71 = load i64, i64* %70, align 8
  %_ = sub i64 0, %71
  %gen = add i64 %_, %69
  %_1 = sub i64 0, %71
  %gen2 = add i64 %_1, %69
  %_3 = sub i64 %71, %69
  %gen4 = mul i64 %_3, %69
  %72 = or i64 %71, %69
  store i64 %72, i64* %70, align 8
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %52
  br label %originalBB5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.3"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.715
  %3 = load i32, i32* @y.716
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.3"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  store i64 9223372036854775744, i64* %11, align 8
  %14 = bitcast %"class.std::vector.3"* %13 to %"struct.std::_Bvector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"* %14)
  %16 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8max_sizeERKS1_(%"class.std::allocator.4"* dereferenceable(1) %15)
  store i64 %16, i64* %12, align 8
  %17 = load i64, i64* %12, align 8
  %18 = icmp ule i64 %17, 144115188075855871
  %19 = load i32, i32* @x.715
  %20 = load i32, i32* @y.716
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %30

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i64, i64* %12, align 8
  %29 = mul i64 %28, 64
  br label %31

; <label>:30:                                     ; preds = %originalBBpart2
  br label %31

; <label>:31:                                     ; preds = %30, %27
  %32 = phi i64 [ %29, %27 ], [ 9223372036854775744, %30 ]
  ret i64 %32

originalBBalteredBB:                              ; preds = %originalBB, %1
  %33 = alloca %"class.std::vector.3"*, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %33, align 8
  %36 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  store i64 9223372036854775744, i64* %34, align 8
  %37 = bitcast %"class.std::vector.3"* %36 to %"struct.std::_Bvector_base"*
  %38 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"* %37)
  %39 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8max_sizeERKS1_(%"class.std::allocator.4"* dereferenceable(1) %38)
  store i64 %39, i64* %35, align 8
  %40 = load i64, i64* %35, align 8
  %41 = icmp ule i64 %40, 144115188075855871
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaImEmE8max_sizeERKS1_(%"class.std::allocator.4"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %2, align 8
  %3 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %2, align 8
  %4 = bitcast %"class.std::allocator.4"* %3 to %"class.__gnu_cxx::new_allocator.5"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.5"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = alloca %"struct.std::_Bit_iterator", align 8
  %18 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %1, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %2, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %3, i32* %23, align 8
  %24 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 0
  store i64* %4, i64** %25, align 8
  %26 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %24, i32 0, i32 1
  store i32 %5, i32* %26, align 8
  %27 = bitcast %"struct.std::_Bit_iterator"* %13 to i8*
  %28 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 16, i32 8, i1 false)
  %29 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %31, i32 %33)
  %35 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = extractvalue { i64*, i32 } %34, 0
  store i64* %37, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = extractvalue { i64*, i32 } %34, 1
  store i32 %39, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %41 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 16, i32 8, i1 false)
  %42 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %44, i32 %46)
  %48 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = extractvalue { i64*, i32 } %47, 0
  store i64* %50, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = extractvalue { i64*, i32 } %47, 1
  store i32 %52, i32* %51, align 8
  %53 = bitcast %"struct.std::_Bit_iterator"* %17 to i8*
  %54 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false)
  %55 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_(i64* %57, i32 %59)
  %61 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = extractvalue { i64*, i32 } %60, 0
  store i64* %63, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = extractvalue { i64*, i32 } %60, 1
  store i32 %65, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %77 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %68, i32 %70, i64* %73, i32 %75, i64* %78, i32 %80)
  %82 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 0
  %84 = extractvalue { i64*, i32 } %81, 0
  store i64* %84, i64** %83, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 1
  %86 = extractvalue { i64*, i32 } %81, 1
  store i32 %86, i32* %85, align 8
  %87 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %88 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = call { i64*, i32 } @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_(%"struct.std::_Bit_iterator"* dereferenceable(16) %10, i64* %89, i32 %91)
  %93 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 0
  %95 = extractvalue { i64*, i32 } %92, 0
  store i64* %95, i64** %94, align 8
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 1
  %97 = extractvalue { i64*, i32 } %92, 1
  store i32 %97, i32* %96, align 8
  %98 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %99 = load { i64*, i32 }, { i64*, i32 }* %98, align 8
  ret { i64*, i32 } %99
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %0, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %1, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %3, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %4, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %5, i32* %23, align 8
  store i8 0, i8* %11, align 1
  %24 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %25 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %26 = bitcast %"struct.std::_Bit_iterator"* %13 to i8*
  %27 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %29 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %32, i32 %34, i64* %37, i32 %39, i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::_Bit_reference", align 8
  %13 = alloca %"struct.std::_Bit_reference", align 8
  %14 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 0
  store i64* %0, i64** %15, align 8
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 1
  store i32 %1, i32* %16, align 8
  %17 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %2, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %3, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %4, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %5, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %24 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %25 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %23, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %24)
  store i64 %25, i64* %11, align 8
  br label %26

; <label>:26:                                     ; preds = %45, %6
  %27 = load i64, i64* %11, align 8
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %48

; <label>:29:                                     ; preds = %26
  %30 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %8)
  %31 = bitcast %"struct.std::_Bit_reference"* %12 to { i64*, i64 }*
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 0
  %33 = extractvalue { i64*, i64 } %30, 0
  store i64* %33, i64** %32, align 8
  %34 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 1
  %35 = extractvalue { i64*, i64 } %30, 1
  store i64 %35, i64* %34, align 8
  %36 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %10)
  %37 = bitcast %"struct.std::_Bit_reference"* %13 to { i64*, i64 }*
  %38 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %37, i32 0, i32 0
  %39 = extractvalue { i64*, i64 } %36, 0
  store i64* %39, i64** %38, align 8
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %37, i32 0, i32 1
  %41 = extractvalue { i64*, i64 } %36, 1
  store i64 %41, i64* %40, align 8
  %42 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"* %13, %"struct.std::_Bit_reference"* dereferenceable(16) %12)
  %43 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %8)
  %44 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %10)
  br label %45

; <label>:45:                                     ; preds = %29
  %46 = load i64, i64* %11, align 8
  %47 = add nsw i64 %46, -1
  store i64 %47, i64* %11, align 8
  br label %26

; <label>:48:                                     ; preds = %26
  %49 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  %50 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 16, i32 8, i1 false)
  %51 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt10__fill_n_aISt13_Bit_iteratorjbEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i32, i32, i8* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %"struct.std::_Bit_reference", align 8
  %12 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %13 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 0
  store i64* %0, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 1
  store i32 %1, i32* %14, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %9, align 1
  %19 = load i32, i32* %7, align 4
  store i32 %19, i32* %10, align 4
  br label %20

; <label>:20:                                     ; preds = %originalBBpart24, %4
  %21 = load i32, i32* @x.725
  %22 = load i32, i32* @y.726
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i32, i32* %10, align 4
  %30 = icmp ugt i32 %29, 0
  %31 = load i32, i32* @x.725
  %32 = load i32, i32* @y.726
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %69

; <label>:39:                                     ; preds = %originalBBpart2
  %40 = load i8, i8* %9, align 1
  %41 = trunc i8 %40 to i1
  %42 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %43 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %44 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %43, i32 0, i32 0
  %45 = extractvalue { i64*, i64 } %42, 0
  store i64* %45, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %43, i32 0, i32 1
  %47 = extractvalue { i64*, i64 } %42, 1
  store i64 %47, i64* %46, align 8
  %48 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %11, i1 zeroext %41)
  br label %49

; <label>:49:                                     ; preds = %39
  %50 = load i32, i32* @x.725
  %51 = load i32, i32* @y.726
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i32, i32* %10, align 4
  %59 = add i32 %58, -1
  store i32 %59, i32* %10, align 4
  %60 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %6)
  %61 = load i32, i32* @x.725
  %62 = load i32, i32* @y.726
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %20

; <label>:69:                                     ; preds = %originalBBpart2
  %70 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  %71 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 16, i32 8, i1 false)
  %72 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %73 = load { i64*, i32 }, { i64*, i32 }* %72, align 8
  ret { i64*, i32 } %73

originalBBalteredBB:                              ; preds = %originalBB, %20
  %74 = load i32, i32* %10, align 4
  %75 = icmp ugt i32 %74, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  %76 = load i32, i32* %10, align 4
  %_ = sub i32 0, %76
  %gen = add i32 %_, -1
  %77 = add i32 %76, -1
  store i32 %77, i32* %10, align 4
  %78 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %6)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %6 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %7 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"* %5, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %6)
  %8 = xor i1 %7, true
  ret i1 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #3 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %7, %10
  br i1 %11, label %12, label %35

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.729
  %14 = load i32, i32* @y.730
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %24 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %22, %25
  %27 = load i32, i32* @x.729
  %28 = load i32, i32* @y.730
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %35

; <label>:35:                                     ; preds = %originalBBpart2, %2
  %36 = phi i1 [ false, %2 ], [ %26, %originalBBpart2 ]
  %37 = load i32, i32* @x.729
  %38 = load i32, i32* @y.730
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %45 = load i32, i32* @x.729
  %46 = load i32, i32* @y.730
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i1 %36

originalBBalteredBB:                              ; preds = %originalBB, %12
  %53 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %56 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %54, %57
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEEC2Ev(%"class.__gnu_cxx::new_allocator.141"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.141"*, align 8
  store %"class.__gnu_cxx::new_allocator.141"* %0, %"class.__gnu_cxx::new_allocator.141"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.141"*, %"class.__gnu_cxx::new_allocator.141"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEED2Ev(%"class.__gnu_cxx::new_allocator.141"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.141"*, align 8
  store %"class.__gnu_cxx::new_allocator.141"* %0, %"class.__gnu_cxx::new_allocator.141"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.141"*, %"class.__gnu_cxx::new_allocator.141"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIS_IjSaIjEESaIS1_EE17_S_check_init_lenEmRKS2_(i64, %"class.std::allocator.140"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator.140"*, align 8
  %5 = alloca %"class.std::allocator.140", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator.140"* %1, %"class.std::allocator.140"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %4, align 8
  call void @_ZNSaISt6vectorIjSaIjEEEC2ERKS2_(%"class.std::allocator.140"* %5, %"class.std::allocator.140"* dereferenceable(1) %9) #2
  %10 = invoke i64 @_ZNSt6vectorIS_IjSaIjEESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.140"* dereferenceable(1) %5)
          to label %11 unwind label %14

; <label>:11:                                     ; preds = %2
  %12 = icmp ugt i64 %8, %10
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %5) #2
  br i1 %12, label %13, label %34

; <label>:13:                                     ; preds = %11
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0)) #14
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.735
  %16 = load i32, i32* @y.736
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %6, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %7, align 4
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %5) #2
  %26 = load i32, i32* @x.735
  %27 = load i32, i32* @y.736
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36

; <label>:34:                                     ; preds = %11
  %35 = load i64, i64* %3, align 8
  ret i64 %35

; <label>:36:                                     ; preds = %originalBBpart2
  %37 = load i8*, i8** %6, align 8
  %38 = load i32, i32* %7, align 4
  %39 = insertvalue { i8*, i32 } undef, i8* %37, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40

originalBBalteredBB:                              ; preds = %originalBB, %14
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %6, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %7, align 4
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %5) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.139"*, i64, %"class.std::allocator.140"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.139"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.140"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.140"* %2, %"class.std::allocator.140"** %6, align 8
  %9 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %10, %"class.std::allocator.140"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.139"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %10) #2
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IjSaIjEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.138"*, i64, %"class.std::vector.12"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.138"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.138"* %0, %"class.std::vector.138"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.12"* %2, %"class.std::vector.12"** %6, align 8
  %7 = load %"class.std::vector.138"*, %"class.std::vector.138"** %4, align 8
  %8 = bitcast %"class.std::vector.138"* %7 to %"struct.std::_Vector_base.139"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %9 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.12"*, %"class.std::vector.12"** %11, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load %"class.std::vector.12"*, %"class.std::vector.12"** %6, align 8
  %15 = bitcast %"class.std::vector.138"* %7 to %"struct.std::_Vector_base.139"*
  %16 = call dereferenceable(1) %"class.std::allocator.140"* @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.139"* %15)
  %17 = call %"class.std::vector.12"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIjSaIjEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.12"* %12, i64 %13, %"class.std::vector.12"* dereferenceable(24) %14, %"class.std::allocator.140"* dereferenceable(1) %16)
  %18 = bitcast %"class.std::vector.138"* %7 to %"struct.std::_Vector_base.139"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %20, i32 0, i32 1
  store %"class.std::vector.12"* %17, %"class.std::vector.12"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EED2Ev(%"struct.std::_Vector_base.139"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.741
  %3 = load i32, i32* @y.742
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.139"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %10, align 8
  %13 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.12"*, %"class.std::vector.12"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %19, i32 0, i32 2
  %21 = load %"class.std::vector.12"*, %"class.std::vector.12"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %22 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %23, i32 0, i32 0
  %25 = load %"class.std::vector.12"*, %"class.std::vector.12"** %24, align 8
  %26 = ptrtoint %"class.std::vector.12"* %21 to i64
  %27 = ptrtoint %"class.std::vector.12"* %25 to i64
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 24
  %30 = load i32, i32* @x.741
  %31 = load i32, i32* @y.742
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.139"* %13, %"class.std::vector.12"* %17, i64 %29)
          to label %38 unwind label %40

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %39) #2
  ret void

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = load i32, i32* @x.741
  %42 = load i32, i32* @y.742
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %40, %originalBB22alteredBB
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %11, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %12, align 4
  %52 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %52) #2
  %53 = load i32, i32* @x.741
  %54 = load i32, i32* @y.742
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %61

; <label>:61:                                     ; preds = %originalBBpart224
  %62 = load i8*, i8** %11, align 8
  %63 = load i32, i32* %12, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  resume { i8*, i32 } %65

originalBBalteredBB:                              ; preds = %originalBB, %1
  %66 = alloca %"struct.std::_Vector_base.139"*, align 8
  %67 = alloca i8*
  %68 = alloca i32
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %66, align 8
  %69 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %66, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %70 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %71, i32 0, i32 0
  %73 = load %"class.std::vector.12"*, %"class.std::vector.12"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %69, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %74 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %75, i32 0, i32 2
  %77 = load %"class.std::vector.12"*, %"class.std::vector.12"** %76, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %69, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %78 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %79, i32 0, i32 0
  %81 = load %"class.std::vector.12"*, %"class.std::vector.12"** %80, align 8
  %82 = ptrtoint %"class.std::vector.12"* %77 to i64
  %83 = ptrtoint %"class.std::vector.12"* %81 to i64
  %_ = shl i64 %82, %83
  %_1 = sub i64 0, %82
  %gen = add i64 %_1, %83
  %_2 = sub i64 0, %82
  %gen3 = add i64 %_2, %83
  %_4 = sub i64 %82, %83
  %gen5 = mul i64 %_4, %83
  %_6 = shl i64 %82, %83
  %_7 = sub i64 %82, %83
  %gen8 = mul i64 %_7, %83
  %_9 = sub i64 0, %82
  %gen10 = add i64 %_9, %83
  %_11 = sub i64 %82, %83
  %gen12 = mul i64 %_11, %83
  %_13 = sub i64 %82, %83
  %gen14 = mul i64 %_13, %83
  %84 = sub i64 %82, %83
  %_15 = shl i64 %84, 24
  %_16 = sub i64 %84, 24
  %gen17 = mul i64 %_16, 24
  %_18 = shl i64 %84, 24
  %_19 = sub i64 %84, 24
  %gen20 = mul i64 %_19, 24
  %_21 = shl i64 %84, 24
  %85 = sdiv exact i64 %84, 24
  br label %originalBB

originalBB22alteredBB:                            ; preds = %originalBB22, %40
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %11, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %12, align 4
  %89 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %89) #2
  br label %originalBB22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIS_IjSaIjEESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.140"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.140"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %2, align 8
  store i64 384307168202282325, i64* %3, align 8
  %5 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E8max_sizeERKS4_(%"class.std::allocator.140"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIjSaIjEEEC2ERKS2_(%"class.std::allocator.140"*, %"class.std::allocator.140"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::allocator.140"*, align 8
  %4 = alloca %"class.std::allocator.140"*, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %3, align 8
  store %"class.std::allocator.140"* %1, %"class.std::allocator.140"** %4, align 8
  %5 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %3, align 8
  %6 = bitcast %"class.std::allocator.140"* %5 to %"class.__gnu_cxx::new_allocator.141"*
  %7 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %4, align 8
  %8 = bitcast %"class.std::allocator.140"* %7 to %"class.__gnu_cxx::new_allocator.141"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.141"* %6, %"class.__gnu_cxx::new_allocator.141"* dereferenceable(1) %8) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E8max_sizeERKS4_(%"class.std::allocator.140"* dereferenceable(1)) #3 comdat align 2 {
  %2 = alloca %"class.std::allocator.140"*, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %2, align 8
  %3 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %2, align 8
  %4 = bitcast %"class.std::allocator.140"* %3 to %"class.__gnu_cxx::new_allocator.141"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.141"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.141"*) #3 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.141"*, align 8
  store %"class.__gnu_cxx::new_allocator.141"* %0, %"class.__gnu_cxx::new_allocator.141"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.141"*, %"class.__gnu_cxx::new_allocator.141"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.141"*, %"class.__gnu_cxx::new_allocator.141"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.141"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.141"*, align 8
  store %"class.__gnu_cxx::new_allocator.141"* %0, %"class.__gnu_cxx::new_allocator.141"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.141"* %1, %"class.__gnu_cxx::new_allocator.141"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.141"*, %"class.__gnu_cxx::new_allocator.141"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"*, %"class.std::allocator.140"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.140"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.140"* %1, %"class.std::allocator.140"** %4, align 8
  %7 = load %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %7 to %"class.std::allocator.140"*
  %9 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %4, align 8
  call void @_ZNSaISt6vectorIjSaIjEEEC2ERKS2_(%"class.std::allocator.140"* %8, %"class.std::allocator.140"* dereferenceable(1) %9) #2
  %10 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.753
  %14 = load i32, i32* @y.754
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %5, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %6, align 4
  %24 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %7 to %"class.std::allocator.140"*
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %24) #2
  %25 = load i32, i32* @x.753
  %26 = load i32, i32* @y.754
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32, i32* @x.753
  %35 = load i32, i32* @y.754
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load i8*, i8** %5, align 8
  %43 = load i32, i32* %6, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  %46 = load i32, i32* @x.753
  %47 = load i32, i32* @y.754
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %45

originalBBalteredBB:                              ; preds = %originalBB, %12
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %5, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %6, align 4
  %57 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %7 to %"class.std::allocator.140"*
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %57) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %58 = load i8*, i8** %5, align 8
  %59 = load i32, i32* %6, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.139"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.755
  %4 = load i32, i32* @y.756
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.139"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = call %"class.std::vector.12"* @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.139"* %13, i64 %14)
  %16 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %16 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %17, i32 0, i32 0
  store %"class.std::vector.12"* %15, %"class.std::vector.12"** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %20, i32 0, i32 0
  %22 = load %"class.std::vector.12"*, %"class.std::vector.12"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %23 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %"class.std::vector.12"* %22, %"class.std::vector.12"** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.12"*, %"class.std::vector.12"** %28, align 8
  %30 = load i64, i64* %12, align 8
  %31 = getelementptr inbounds %"class.std::vector.12", %"class.std::vector.12"* %29, i64 %30
  %32 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %13, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %32 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %33, i32 0, i32 2
  store %"class.std::vector.12"* %31, %"class.std::vector.12"** %34, align 8
  %35 = load i32, i32* @x.755
  %36 = load i32, i32* @y.756
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %43 = alloca %"struct.std::_Vector_base.139"*, align 8
  %44 = alloca i64, align 8
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %43, align 8
  store i64 %1, i64* %44, align 8
  %45 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %43, align 8
  %46 = load i64, i64* %44, align 8
  %47 = call %"class.std::vector.12"* @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.139"* %45, i64 %46)
  %48 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %45, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %48 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %49, i32 0, i32 0
  store %"class.std::vector.12"* %47, %"class.std::vector.12"** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %45, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %51 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %52, i32 0, i32 0
  %54 = load %"class.std::vector.12"*, %"class.std::vector.12"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %45, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %55 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %56, i32 0, i32 1
  store %"class.std::vector.12"* %54, %"class.std::vector.12"** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %45, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %58 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %59, i32 0, i32 0
  %61 = load %"class.std::vector.12"*, %"class.std::vector.12"** %60, align 8
  %62 = load i64, i64* %44, align 8
  %63 = getelementptr inbounds %"class.std::vector.12", %"class.std::vector.12"* %61, i64 %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %45, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %64 to %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %65, i32 0, i32 2
  store %"class.std::vector.12"* %63, %"class.std::vector.12"** %66, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %3 to %"class.std::allocator.140"*
  call void @_ZNSaISt6vectorIjSaIjEEED2Ev(%"class.std::allocator.140"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %"class.std::vector.12"* null, %"class.std::vector.12"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %"class.std::vector.12"* null, %"class.std::vector.12"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %"class.std::vector.12"* null, %"class.std::vector.12"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.12"* @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.139"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.139"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %9 to %"class.std::allocator.140"*
  %11 = load i64, i64* %4, align 8
  %12 = call %"class.std::vector.12"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E8allocateERS4_m(%"class.std::allocator.140"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi %"class.std::vector.12"* [ %12, %8 ], [ null, %13 ]
  %16 = load i32, i32* @x.761
  %17 = load i32, i32* @y.762
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %24 = load i32, i32* @x.761
  %25 = load i32, i32* @y.762
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.12"* %15

originalBBalteredBB:                              ; preds = %originalBB, %14
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.12"* @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E8allocateERS4_m(%"class.std::allocator.140"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.140"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %3, align 8
  %6 = bitcast %"class.std::allocator.140"* %5 to %"class.__gnu_cxx::new_allocator.141"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.12"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.141"* %6, i64 %7, i8* null)
  ret %"class.std::vector.12"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.12"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.141"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.141"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.141"* %0, %"class.__gnu_cxx::new_allocator.141"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.141"*, %"class.__gnu_cxx::new_allocator.141"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.141"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.765
  %14 = load i32, i32* @y.766
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 24
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to %"class.std::vector.12"*
  %25 = load i32, i32* @x.765
  %26 = load i32, i32* @y.766
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.12"* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %_ = shl i64 %33, 24
  %_1 = sub i64 %33, 24
  %gen = mul i64 %_1, 24
  %_2 = shl i64 %33, 24
  %_3 = sub i64 0, %33
  %gen4 = add i64 %_3, 24
  %_5 = sub i64 %33, 24
  %gen6 = mul i64 %_5, 24
  %_7 = sub i64 %33, 24
  %gen8 = mul i64 %_7, 24
  %_9 = sub i64 0, %33
  %gen10 = add i64 %_9, 24
  %_11 = shl i64 %33, 24
  %34 = mul i64 %33, 24
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to %"class.std::vector.12"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.12"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIjSaIjEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.12"*, i64, %"class.std::vector.12"* dereferenceable(24), %"class.std::allocator.140"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.12"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.12"*, align 8
  %8 = alloca %"class.std::allocator.140"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.12"* %2, %"class.std::vector.12"** %7, align 8
  store %"class.std::allocator.140"* %3, %"class.std::allocator.140"** %8, align 8
  %9 = load %"class.std::vector.12"*, %"class.std::vector.12"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.12"*, %"class.std::vector.12"** %7, align 8
  %12 = call %"class.std::vector.12"* @_ZSt20uninitialized_fill_nIPSt6vectorIjSaIjEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.12"* %9, i64 %10, %"class.std::vector.12"* dereferenceable(24) %11)
  ret %"class.std::vector.12"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.140"* @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.139"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.769
  %3 = load i32, i32* @y.770
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.139"*, align 8
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %10, align 8
  %11 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %12 to %"class.std::allocator.140"*
  %14 = load i32, i32* @x.769
  %15 = load i32, i32* @y.770
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.140"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.139"*, align 8
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %22, align 8
  %23 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %24 to %"class.std::allocator.140"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.12"* @_ZSt20uninitialized_fill_nIPSt6vectorIjSaIjEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.12"*, i64, %"class.std::vector.12"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.12"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.12"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.12"* %2, %"class.std::vector.12"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.12"*, %"class.std::vector.12"** %6, align 8
  %11 = call %"class.std::vector.12"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIjSaIjEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.12"* %8, i64 %9, %"class.std::vector.12"* dereferenceable(24) %10)
  ret %"class.std::vector.12"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.12"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIjSaIjEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.12"*, i64, %"class.std::vector.12"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.773
  %5 = load i32, i32* @y.774
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.12"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::vector.12"*, align 8
  %15 = alloca %"class.std::vector.12"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::vector.12"* %2, %"class.std::vector.12"** %14, align 8
  %18 = load %"class.std::vector.12"*, %"class.std::vector.12"** %12, align 8
  store %"class.std::vector.12"* %18, %"class.std::vector.12"** %15, align 8
  %19 = load i32, i32* @x.773
  %20 = load i32, i32* @y.774
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart28, %originalBBpart2
  %28 = load i32, i32* @x.773
  %29 = load i32, i32* @y.774
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i64, i64* %13, align 8
  %37 = icmp ugt i64 %36, 0
  %38 = load i32, i32* @x.773
  %39 = load i32, i32* @y.774
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %37, label %46, label %115

; <label>:46:                                     ; preds = %originalBBpart24
  %47 = load %"class.std::vector.12"*, %"class.std::vector.12"** %15, align 8
  %48 = invoke %"class.std::vector.12"* @_ZSt11__addressofISt6vectorIjSaIjEEEPT_RS3_(%"class.std::vector.12"* dereferenceable(24) %47)
          to label %49 unwind label %73

; <label>:49:                                     ; preds = %46
  %50 = load %"class.std::vector.12"*, %"class.std::vector.12"** %14, align 8
  invoke void @_ZSt10_ConstructISt6vectorIjSaIjEES2_EvPT_RKT0_(%"class.std::vector.12"* %48, %"class.std::vector.12"* dereferenceable(24) %50)
          to label %51 unwind label %73

; <label>:51:                                     ; preds = %49
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.773
  %54 = load i32, i32* @y.774
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i64, i64* %13, align 8
  %62 = add i64 %61, -1
  store i64 %62, i64* %13, align 8
  %63 = load %"class.std::vector.12"*, %"class.std::vector.12"** %15, align 8
  %64 = getelementptr inbounds %"class.std::vector.12", %"class.std::vector.12"* %63, i32 1
  store %"class.std::vector.12"* %64, %"class.std::vector.12"** %15, align 8
  %65 = load i32, i32* @x.773
  %66 = load i32, i32* @y.774
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %27

; <label>:73:                                     ; preds = %49, %46
  %74 = load i32, i32* @x.773
  %75 = load i32, i32* @y.774
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %16, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %17, align 4
  %85 = load i32, i32* @x.773
  %86 = load i32, i32* @y.774
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %93

; <label>:93:                                     ; preds = %originalBBpart212
  %94 = load i32, i32* @x.773
  %95 = load i32, i32* @y.774
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  %102 = load i8*, i8** %16, align 8
  %103 = call i8* @__cxa_begin_catch(i8* %102) #2
  %104 = load %"class.std::vector.12"*, %"class.std::vector.12"** %12, align 8
  %105 = load %"class.std::vector.12"*, %"class.std::vector.12"** %15, align 8
  %106 = load i32, i32* @x.773
  %107 = load i32, i32* @y.774
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZSt8_DestroyIPSt6vectorIjSaIjEEEvT_S4_(%"class.std::vector.12"* %104, %"class.std::vector.12"* %105)
          to label %114 unwind label %117

; <label>:114:                                    ; preds = %originalBBpart216
  invoke void @__cxa_rethrow() #14
          to label %163 unwind label %117

; <label>:115:                                    ; preds = %originalBBpart24
  %116 = load %"class.std::vector.12"*, %"class.std::vector.12"** %15, align 8
  ret %"class.std::vector.12"* %116

; <label>:117:                                    ; preds = %114, %originalBBpart216
  %118 = load i32, i32* @x.773
  %119 = load i32, i32* @y.774
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %16, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %17, align 4
  %129 = load i32, i32* @x.773
  %130 = load i32, i32* @y.774
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @__cxa_end_catch()
          to label %137 unwind label %144

; <label>:137:                                    ; preds = %originalBBpart220
  br label %139
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:139:                                    ; preds = %137
  %140 = load i8*, i8** %16, align 8
  %141 = load i32, i32* %17, align 4
  %142 = insertvalue { i8*, i32 } undef, i8* %140, 0
  %143 = insertvalue { i8*, i32 } %142, i32 %141, 1
  resume { i8*, i32 } %143

; <label>:144:                                    ; preds = %originalBBpart220
  %145 = load i32, i32* @x.773
  %146 = load i32, i32* @y.774
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %144, %originalBB22alteredBB
  %153 = landingpad { i8*, i32 }
          catch i8* null
  %154 = extractvalue { i8*, i32 } %153, 0
  call void @__clang_call_terminate(i8* %154) #9
  %155 = load i32, i32* @x.773
  %156 = load i32, i32* @y.774
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable

; <label>:163:                                    ; preds = %114
  %164 = load i32, i32* @x.773
  %165 = load i32, i32* @y.774
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %163, %originalBB26alteredBB
  %172 = load i32, i32* @x.773
  %173 = load i32, i32* @y.774
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %180 = alloca %"class.std::vector.12"*, align 8
  %181 = alloca i64, align 8
  %182 = alloca %"class.std::vector.12"*, align 8
  %183 = alloca %"class.std::vector.12"*, align 8
  %184 = alloca i8*
  %185 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %180, align 8
  store i64 %1, i64* %181, align 8
  store %"class.std::vector.12"* %2, %"class.std::vector.12"** %182, align 8
  %186 = load %"class.std::vector.12"*, %"class.std::vector.12"** %180, align 8
  store %"class.std::vector.12"* %186, %"class.std::vector.12"** %183, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %187 = load i64, i64* %13, align 8
  %188 = icmp ugt i64 %187, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %189 = load i64, i64* %13, align 8
  %_ = sub i64 0, %189
  %gen = add i64 %_, -1
  %190 = add i64 %189, -1
  store i64 %190, i64* %13, align 8
  %191 = load %"class.std::vector.12"*, %"class.std::vector.12"** %15, align 8
  %192 = getelementptr inbounds %"class.std::vector.12", %"class.std::vector.12"* %191, i32 1
  store %"class.std::vector.12"* %192, %"class.std::vector.12"** %15, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  %193 = landingpad { i8*, i32 }
          catch i8* null
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %16, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %17, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  %196 = load i8*, i8** %16, align 8
  %197 = call i8* @__cxa_begin_catch(i8* %196) #2
  %198 = load %"class.std::vector.12"*, %"class.std::vector.12"** %12, align 8
  %199 = load %"class.std::vector.12"*, %"class.std::vector.12"** %15, align 8
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  %200 = landingpad { i8*, i32 }
          cleanup
  %201 = extractvalue { i8*, i32 } %200, 0
  store i8* %201, i8** %16, align 8
  %202 = extractvalue { i8*, i32 } %200, 1
  store i32 %202, i32* %17, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %144
  %203 = landingpad { i8*, i32 }
          catch i8* null
  %204 = extractvalue { i8*, i32 } %203, 0
  call void @__clang_call_terminate(i8* %204) #9
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %163
  br label %originalBB26
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIjSaIjEES2_EvPT_RKT0_(%"class.std::vector.12"*, %"class.std::vector.12"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %4, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %6 = bitcast %"class.std::vector.12"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.12"*
  %8 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  call void @_ZNSt6vectorIjSaIjEEC2ERKS1_(%"class.std::vector.12"* %7, %"class.std::vector.12"* dereferenceable(24) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.12"* @_ZSt11__addressofISt6vectorIjSaIjEEEPT_RS3_(%"class.std::vector.12"* dereferenceable(24)) #3 comdat {
  %2 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %3 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  ret %"class.std::vector.12"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIjSaIjEEEvT_S4_(%"class.std::vector.12"*, %"class.std::vector.12"*) #0 comdat {
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %4, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %6 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIjSaIjEEEEvT_S6_(%"class.std::vector.12"* %5, %"class.std::vector.12"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIjSaIjEEEEvT_S6_(%"class.std::vector.12"*, %"class.std::vector.12"*) #0 comdat align 2 {
  %3 = load i32, i32* @x.781
  %4 = load i32, i32* @y.782
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.12"*, align 8
  %12 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %11, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %12, align 8
  %13 = load i32, i32* @x.781
  %14 = load i32, i32* @y.782
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %21

; <label>:21:                                     ; preds = %originalBBpart28, %originalBBpart2
  %22 = load %"class.std::vector.12"*, %"class.std::vector.12"** %11, align 8
  %23 = load %"class.std::vector.12"*, %"class.std::vector.12"** %12, align 8
  %24 = icmp ne %"class.std::vector.12"* %22, %23
  br i1 %24, label %25, label %63

; <label>:25:                                     ; preds = %21
  %26 = load i32, i32* @x.781
  %27 = load i32, i32* @y.782
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = load %"class.std::vector.12"*, %"class.std::vector.12"** %11, align 8
  %35 = call %"class.std::vector.12"* @_ZSt11__addressofISt6vectorIjSaIjEEEPT_RS3_(%"class.std::vector.12"* dereferenceable(24) %34)
  call void @_ZSt8_DestroyISt6vectorIjSaIjEEEvPT_(%"class.std::vector.12"* %35)
  %36 = load i32, i32* @x.781
  %37 = load i32, i32* @y.782
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44

; <label>:44:                                     ; preds = %originalBBpart24
  %45 = load i32, i32* @x.781
  %46 = load i32, i32* @y.782
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = load %"class.std::vector.12"*, %"class.std::vector.12"** %11, align 8
  %54 = getelementptr inbounds %"class.std::vector.12", %"class.std::vector.12"* %53, i32 1
  store %"class.std::vector.12"* %54, %"class.std::vector.12"** %11, align 8
  %55 = load i32, i32* @x.781
  %56 = load i32, i32* @y.782
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %21

; <label>:63:                                     ; preds = %21
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %64 = alloca %"class.std::vector.12"*, align 8
  %65 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %64, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %65, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %66 = load %"class.std::vector.12"*, %"class.std::vector.12"** %11, align 8
  %67 = call %"class.std::vector.12"* @_ZSt11__addressofISt6vectorIjSaIjEEEPT_RS3_(%"class.std::vector.12"* dereferenceable(24) %66)
  call void @_ZSt8_DestroyISt6vectorIjSaIjEEEvPT_(%"class.std::vector.12"* %67)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %68 = load %"class.std::vector.12"*, %"class.std::vector.12"** %11, align 8
  %69 = getelementptr inbounds %"class.std::vector.12", %"class.std::vector.12"* %68, i32 1
  store %"class.std::vector.12"* %69, %"class.std::vector.12"** %11, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIjSaIjEEEvPT_(%"class.std::vector.12"*) #0 comdat {
  %2 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %3 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  call void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.12"* %3)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.139"*, %"class.std::vector.12"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.139"*, align 8
  %5 = alloca %"class.std::vector.12"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.139"* %0, %"struct.std::_Vector_base.139"** %4, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.139"*, %"struct.std::_Vector_base.139"** %4, align 8
  %8 = load %"class.std::vector.12"*, %"class.std::vector.12"** %5, align 8
  %9 = icmp ne %"class.std::vector.12"* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.139", %"struct.std::_Vector_base.139"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<std::vector<unsigned int, std::allocator<unsigned int> >, std::allocator<std::vector<unsigned int, std::allocator<unsigned int> > > >::_Vector_impl"* %11 to %"class.std::allocator.140"*
  %13 = load %"class.std::vector.12"*, %"class.std::vector.12"** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.140"* dereferenceable(1) %12, %"class.std::vector.12"* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorIjSaIjEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator.140"* dereferenceable(1), %"class.std::vector.12"*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.787
  %5 = load i32, i32* @y.788
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.140"*, align 8
  %13 = alloca %"class.std::vector.12"*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %12, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %12, align 8
  %16 = bitcast %"class.std::allocator.140"* %15 to %"class.__gnu_cxx::new_allocator.141"*
  %17 = load %"class.std::vector.12"*, %"class.std::vector.12"** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.141"* %16, %"class.std::vector.12"* %17, i64 %18)
  %19 = load i32, i32* @x.787
  %20 = load i32, i32* @y.788
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.140"*, align 8
  %28 = alloca %"class.std::vector.12"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.140"* %0, %"class.std::allocator.140"** %27, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.140"*, %"class.std::allocator.140"** %27, align 8
  %31 = bitcast %"class.std::allocator.140"* %30 to %"class.__gnu_cxx::new_allocator.141"*
  %32 = load %"class.std::vector.12"*, %"class.std::vector.12"** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.141"* %31, %"class.std::vector.12"* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIjSaIjEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.141"*, %"class.std::vector.12"*, i64) #3 comdat align 2 {
  %4 = load i32, i32* @x.789
  %5 = load i32, i32* @y.790
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.141"*, align 8
  %13 = alloca %"class.std::vector.12"*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.141"* %0, %"class.__gnu_cxx::new_allocator.141"** %12, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.141"*, %"class.__gnu_cxx::new_allocator.141"** %12, align 8
  %16 = load %"class.std::vector.12"*, %"class.std::vector.12"** %13, align 8
  %17 = bitcast %"class.std::vector.12"* %16 to i8*
  call void @_ZdlPv(i8* %17) #2
  %18 = load i32, i32* @x.789
  %19 = load i32, i32* @y.790
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.141"*, align 8
  %27 = alloca %"class.std::vector.12"*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.141"* %0, %"class.__gnu_cxx::new_allocator.141"** %26, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.141"*, %"class.__gnu_cxx::new_allocator.141"** %26, align 8
  %30 = load %"class.std::vector.12"*, %"class.std::vector.12"** %27, align 8
  %31 = bitcast %"class.std::vector.12"* %30 to i8*
  call void @_ZdlPv(i8* %31) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIjSaIjEES2_EvT_S4_RSaIT0_E(%"class.std::vector.12"*, %"class.std::vector.12"*, %"class.std::allocator.140"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.12"*, align 8
  %5 = alloca %"class.std::vector.12"*, align 8
  %6 = alloca %"class.std::allocator.140"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %4, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %5, align 8
  store %"class.std::allocator.140"* %2, %"class.std::allocator.140"** %6, align 8
  %7 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  %8 = load %"class.std::vector.12"*, %"class.std::vector.12"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIjSaIjEEEvT_S4_(%"class.std::vector.12"* %7, %"class.std::vector.12"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5boost10shared_ptrI11BlockVectorIdEEESaIS4_EE4sizeEv(%"class.std::vector.132"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.132"*, align 8
  store %"class.std::vector.132"* %0, %"class.std::vector.132"** %2, align 8
  %3 = load %"class.std::vector.132"*, %"class.std::vector.132"** %2, align 8
  %4 = bitcast %"class.std::vector.132"* %3 to %"struct.std::_Vector_base.133"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.133", %"struct.std::_Vector_base.133"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"class.boost::shared_ptr.137"*, %"class.boost::shared_ptr.137"** %7, align 8
  %9 = bitcast %"class.std::vector.132"* %3 to %"struct.std::_Vector_base.133"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.133", %"struct.std::_Vector_base.133"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.boost::shared_ptr.137"*, %"class.boost::shared_ptr.137"** %12, align 8
  %14 = ptrtoint %"class.boost::shared_ptr.137"* %8 to i64
  %15 = ptrtoint %"class.boost::shared_ptr.137"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 16
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.boost::shared_ptr.137"* @_ZNSt6vectorIN5boost10shared_ptrI11BlockVectorIdEEESaIS4_EEixEm(%"class.std::vector.132"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.132"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.132"* %0, %"class.std::vector.132"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.132"*, %"class.std::vector.132"** %3, align 8
  %6 = bitcast %"class.std::vector.132"* %5 to %"struct.std::_Vector_base.133"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.133", %"struct.std::_Vector_base.133"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<double> >, std::allocator<boost::shared_ptr<BlockVector<double> > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.boost::shared_ptr.137"*, %"class.boost::shared_ptr.137"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"class.boost::shared_ptr.137", %"class.boost::shared_ptr.137"* %10, i64 %11
  ret %"class.boost::shared_ptr.137"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(64) %class.BlockVector* @_ZNK5boost10shared_ptrI11BlockVectorIdEEdeEv(%"class.boost::shared_ptr.137"*) #3 comdat align 2 {
  %2 = alloca %"class.boost::shared_ptr.137"*, align 8
  store %"class.boost::shared_ptr.137"* %0, %"class.boost::shared_ptr.137"** %2, align 8
  %3 = load %"class.boost::shared_ptr.137"*, %"class.boost::shared_ptr.137"** %2, align 8
  %4 = getelementptr inbounds %"class.boost::shared_ptr.137", %"class.boost::shared_ptr.137"* %3, i32 0, i32 0
  %5 = load %class.BlockVector*, %class.BlockVector** %4, align 8
  ret %class.BlockVector* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector* @_ZNSt6vectorI6VectorIdESaIS1_EEixEm(%"class.std::vector.143"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.143"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.143"* %0, %"class.std::vector.143"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.143"*, %"class.std::vector.143"** %3, align 8
  %6 = bitcast %"class.std::vector.143"* %5 to %"struct.std::_Vector_base.144"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.144", %"struct.std::_Vector_base.144"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<double>, std::allocator<Vector<double> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Vector*, %class.Vector** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Vector, %class.Vector* %10, i64 %11
  ret %class.Vector* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5boost10shared_ptrI11BlockVectorIfEEESaIS4_EE4sizeEv(%"class.std::vector.149"*) #3 comdat align 2 {
  %2 = alloca %"class.std::vector.149"*, align 8
  store %"class.std::vector.149"* %0, %"class.std::vector.149"** %2, align 8
  %3 = load %"class.std::vector.149"*, %"class.std::vector.149"** %2, align 8
  %4 = bitcast %"class.std::vector.149"* %3 to %"struct.std::_Vector_base.150"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.150", %"struct.std::_Vector_base.150"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"class.boost::shared_ptr.154"*, %"class.boost::shared_ptr.154"** %7, align 8
  %9 = bitcast %"class.std::vector.149"* %3 to %"struct.std::_Vector_base.150"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.150", %"struct.std::_Vector_base.150"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.boost::shared_ptr.154"*, %"class.boost::shared_ptr.154"** %12, align 8
  %14 = ptrtoint %"class.boost::shared_ptr.154"* %8 to i64
  %15 = ptrtoint %"class.boost::shared_ptr.154"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 16
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.boost::shared_ptr.154"* @_ZNSt6vectorIN5boost10shared_ptrI11BlockVectorIfEEESaIS4_EEixEm(%"class.std::vector.149"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.149"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.149"* %0, %"class.std::vector.149"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.149"*, %"class.std::vector.149"** %3, align 8
  %6 = bitcast %"class.std::vector.149"* %5 to %"struct.std::_Vector_base.150"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.150", %"struct.std::_Vector_base.150"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data", %"struct.std::_Vector_base<boost::shared_ptr<BlockVector<float> >, std::allocator<boost::shared_ptr<BlockVector<float> > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.boost::shared_ptr.154"*, %"class.boost::shared_ptr.154"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"class.boost::shared_ptr.154", %"class.boost::shared_ptr.154"* %10, i64 %11
  ret %"class.boost::shared_ptr.154"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(64) %class.BlockVector.155* @_ZNK5boost10shared_ptrI11BlockVectorIfEEdeEv(%"class.boost::shared_ptr.154"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.805
  %3 = load i32, i32* @y.806
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.boost::shared_ptr.154"*, align 8
  store %"class.boost::shared_ptr.154"* %0, %"class.boost::shared_ptr.154"** %10, align 8
  %11 = load %"class.boost::shared_ptr.154"*, %"class.boost::shared_ptr.154"** %10, align 8
  %12 = getelementptr inbounds %"class.boost::shared_ptr.154", %"class.boost::shared_ptr.154"* %11, i32 0, i32 0
  %13 = load %class.BlockVector.155*, %class.BlockVector.155** %12, align 8
  %14 = load i32, i32* @x.805
  %15 = load i32, i32* @y.806
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.BlockVector.155* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.boost::shared_ptr.154"*, align 8
  store %"class.boost::shared_ptr.154"* %0, %"class.boost::shared_ptr.154"** %22, align 8
  %23 = load %"class.boost::shared_ptr.154"*, %"class.boost::shared_ptr.154"** %22, align 8
  %24 = getelementptr inbounds %"class.boost::shared_ptr.154", %"class.boost::shared_ptr.154"* %23, i32 0, i32 0
  %25 = load %class.BlockVector.155*, %class.BlockVector.155** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Vector.130* @_ZNSt6vectorI6VectorIfESaIS1_EEixEm(%"class.std::vector.156"*, i64) #3 comdat align 2 {
  %3 = alloca %"class.std::vector.156"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.156"* %0, %"class.std::vector.156"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.156"*, %"class.std::vector.156"** %3, align 8
  %6 = bitcast %"class.std::vector.156"* %5 to %"struct.std::_Vector_base.157"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.157", %"struct.std::_Vector_base.157"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data", %"struct.std::_Vector_base<Vector<float>, std::allocator<Vector<float> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Vector.130*, %class.Vector.130** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Vector.130, %class.Vector.130* %10, i64 %11
  ret %class.Vector.130* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPjSt6vectorIjSaIjEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(i32*) #3 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2)
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"*, i32** dereferenceable(8)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7Threads8internal13fun_forwarderIvN5boost6tuples5tupleIjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSB_NS3_9null_typeESF_SF_SF_SF_SF_EELi4EEC2EPFvjS8_SD_SE_E(%"class.Threads::internal::fun_forwarder"*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.Threads::internal::fun_forwarder"*, align 8
  %4 = alloca void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, align 8
  store %"class.Threads::internal::fun_forwarder"* %0, %"class.Threads::internal::fun_forwarder"** %3, align 8
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %1, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %4, align 8
  %5 = load %"class.Threads::internal::fun_forwarder"*, %"class.Threads::internal::fun_forwarder"** %3, align 8
  %6 = getelementptr inbounds %"class.Threads::internal::fun_forwarder", %"class.Threads::internal::fun_forwarder"* %5, i32 0, i32 0
  %7 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %4, align 8
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %7, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5boost6tuples3tieIjK12MGDoFHandlerILi3EEKSt6vectorIbSaIbEES7_EENS0_5tupleIRT_RT0_RT1_RT2_NS0_9null_typeESI_SI_SI_SI_SI_EESB_SD_SF_SH_(%"class.boost::tuples::tuple"* noalias sret, i32* dereferenceable(4), %class.MGDoFHandler* dereferenceable(168), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.3"* dereferenceable(40)) #0 comdat {
  %6 = load i32, i32* @x.815
  %7 = load i32, i32* @y.816
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca i32*, align 8
  %15 = alloca %class.MGDoFHandler*, align 8
  %16 = alloca %"class.std::vector.3"*, align 8
  %17 = alloca %"class.std::vector.3"*, align 8
  store i32* %1, i32** %14, align 8
  store %class.MGDoFHandler* %2, %class.MGDoFHandler** %15, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %16, align 8
  store %"class.std::vector.3"* %4, %"class.std::vector.3"** %17, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = load %class.MGDoFHandler*, %class.MGDoFHandler** %15, align 8
  %20 = load %"class.std::vector.3"*, %"class.std::vector.3"** %16, align 8
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %17, align 8
  call void @_ZN5boost6tuples5tupleIRjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS9_NS0_9null_typeESD_SD_SD_SD_SD_EC2ES2_S6_SB_SC_(%"class.boost::tuples::tuple"* %0, i32* dereferenceable(4) %18, %class.MGDoFHandler* dereferenceable(168) %19, %"class.std::vector.3"* dereferenceable(40) %20, %"class.std::vector.3"* dereferenceable(40) %21)
  %22 = load i32, i32* @x.815
  %23 = load i32, i32* @y.816
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %30 = alloca i32*, align 8
  %31 = alloca %class.MGDoFHandler*, align 8
  %32 = alloca %"class.std::vector.3"*, align 8
  %33 = alloca %"class.std::vector.3"*, align 8
  store i32* %1, i32** %30, align 8
  store %class.MGDoFHandler* %2, %class.MGDoFHandler** %31, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %32, align 8
  store %"class.std::vector.3"* %4, %"class.std::vector.3"** %33, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = load %class.MGDoFHandler*, %class.MGDoFHandler** %31, align 8
  %36 = load %"class.std::vector.3"*, %"class.std::vector.3"** %32, align 8
  %37 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  call void @_ZN5boost6tuples5tupleIRjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS9_NS0_9null_typeESD_SD_SD_SD_SD_EC2ES2_S6_SB_SC_(%"class.boost::tuples::tuple"* %0, i32* dereferenceable(4) %34, %class.MGDoFHandler* dereferenceable(168) %35, %"class.std::vector.3"* dereferenceable(40) %36, %"class.std::vector.3"* dereferenceable(40) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7Threads6ThreadIvEC2IPFvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS9_EN5boost6tuples5tupleIRjS6_SB_SC_NSG_9null_typeESJ_SJ_SJ_SJ_SJ_EEEET_T0_(%"class.Threads::Thread"*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, %"class.boost::tuples::tuple"* byval align 8) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.Threads::Thread"*, align 8
  %5 = alloca void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, align 8
  store %"class.Threads::Thread"* %0, %"class.Threads::Thread"** %4, align 8
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %1, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %5, align 8
  %6 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %4, align 8
  %7 = getelementptr inbounds %"class.Threads::Thread", %"class.Threads::Thread"* %6, i32 0, i32 0
  %8 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %5, align 8
  %9 = getelementptr inbounds %"class.Threads::Thread", %"class.Threads::Thread"* %6, i32 0, i32 0
  call void @_ZN7Threads8internalL4callIvPFvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS8_EN5boost6tuples5tupleIRjS5_SA_SB_NSF_9null_typeESI_SI_SI_SI_SI_EEEEvT0_RT1_RNS0_12return_valueIT_EE(void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %8, %"class.boost::tuples::tuple"* dereferenceable(32) %2, %"struct.Threads::internal::return_value"* dereferenceable(1) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5boost6tuples5tupleIRjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS9_NS0_9null_typeESD_SD_SD_SD_SD_EC2ES2_S6_SB_SC_(%"class.boost::tuples::tuple"*, i32* dereferenceable(4), %class.MGDoFHandler* dereferenceable(168), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.3"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.boost::tuples::tuple"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %class.MGDoFHandler*, align 8
  %9 = alloca %"class.std::vector.3"*, align 8
  %10 = alloca %"class.std::vector.3"*, align 8
  %11 = alloca %"struct.boost::tuples::null_type", align 1
  %12 = alloca %"struct.boost::tuples::null_type", align 1
  %13 = alloca %"struct.boost::tuples::null_type", align 1
  %14 = alloca %"struct.boost::tuples::null_type", align 1
  %15 = alloca %"struct.boost::tuples::null_type", align 1
  %16 = alloca %"struct.boost::tuples::null_type", align 1
  %17 = alloca %"struct.boost::tuples::null_type", align 1
  %18 = alloca %"struct.boost::tuples::null_type", align 1
  %19 = alloca %"struct.boost::tuples::null_type", align 1
  %20 = alloca %"struct.boost::tuples::null_type", align 1
  %21 = alloca %"struct.boost::tuples::null_type", align 1
  %22 = alloca %"struct.boost::tuples::null_type", align 1
  store %"class.boost::tuples::tuple"* %0, %"class.boost::tuples::tuple"** %6, align 8
  store i32* %1, i32** %7, align 8
  store %class.MGDoFHandler* %2, %class.MGDoFHandler** %8, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %9, align 8
  store %"class.std::vector.3"* %4, %"class.std::vector.3"** %10, align 8
  %23 = load %"class.boost::tuples::tuple"*, %"class.boost::tuples::tuple"** %6, align 8
  %24 = bitcast %"class.boost::tuples::tuple"* %23 to %"struct.boost::tuples::cons"*
  %25 = load i32*, i32** %7, align 8
  %26 = load %class.MGDoFHandler*, %class.MGDoFHandler** %8, align 8
  %27 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEEC2IjS5_SA_S9_KSD_SJ_SJ_SJ_SJ_SJ_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(%"struct.boost::tuples::cons"* %24, i32* dereferenceable(4) %25, %class.MGDoFHandler* dereferenceable(168) %26, %"class.std::vector.3"* dereferenceable(40) %27, %"class.std::vector.3"* dereferenceable(40) %28, %"struct.boost::tuples::null_type"* dereferenceable(1) %11, %"struct.boost::tuples::null_type"* dereferenceable(1) %13, %"struct.boost::tuples::null_type"* dereferenceable(1) %15, %"struct.boost::tuples::null_type"* dereferenceable(1) %17, %"struct.boost::tuples::null_type"* dereferenceable(1) %19, %"struct.boost::tuples::null_type"* dereferenceable(1) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5boost6tuples6detail5cnullEv() #3 comdat {
  %1 = alloca %"struct.boost::tuples::null_type", align 1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEEC2IjS5_SA_S9_KSD_SJ_SJ_SJ_SJ_SJ_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(%"struct.boost::tuples::cons"*, i32* dereferenceable(4), %class.MGDoFHandler* dereferenceable(168), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.3"* dereferenceable(40), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %12 = load i32, i32* @x.823
  %13 = load i32, i32* @y.824
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = alloca %"struct.boost::tuples::cons"*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca %class.MGDoFHandler*, align 8
  %23 = alloca %"class.std::vector.3"*, align 8
  %24 = alloca %"class.std::vector.3"*, align 8
  %25 = alloca %"struct.boost::tuples::null_type"*, align 8
  %26 = alloca %"struct.boost::tuples::null_type"*, align 8
  %27 = alloca %"struct.boost::tuples::null_type"*, align 8
  %28 = alloca %"struct.boost::tuples::null_type"*, align 8
  %29 = alloca %"struct.boost::tuples::null_type"*, align 8
  %30 = alloca %"struct.boost::tuples::null_type"*, align 8
  %31 = alloca %"struct.boost::tuples::null_type", align 1
  %32 = alloca %"struct.boost::tuples::null_type", align 1
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %20, align 8
  store i32* %1, i32** %21, align 8
  store %class.MGDoFHandler* %2, %class.MGDoFHandler** %22, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %23, align 8
  store %"class.std::vector.3"* %4, %"class.std::vector.3"** %24, align 8
  store %"struct.boost::tuples::null_type"* %5, %"struct.boost::tuples::null_type"** %25, align 8
  store %"struct.boost::tuples::null_type"* %6, %"struct.boost::tuples::null_type"** %26, align 8
  store %"struct.boost::tuples::null_type"* %7, %"struct.boost::tuples::null_type"** %27, align 8
  store %"struct.boost::tuples::null_type"* %8, %"struct.boost::tuples::null_type"** %28, align 8
  store %"struct.boost::tuples::null_type"* %9, %"struct.boost::tuples::null_type"** %29, align 8
  store %"struct.boost::tuples::null_type"* %10, %"struct.boost::tuples::null_type"** %30, align 8
  %33 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %20, align 8
  %34 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %33, i32 0, i32 0
  %35 = load i32*, i32** %21, align 8
  store i32* %35, i32** %34, align 8
  %36 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %33, i32 0, i32 1
  %37 = load %class.MGDoFHandler*, %class.MGDoFHandler** %22, align 8
  %38 = load %"class.std::vector.3"*, %"class.std::vector.3"** %23, align 8
  %39 = load %"class.std::vector.3"*, %"class.std::vector.3"** %24, align 8
  %40 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %25, align 8
  %41 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %26, align 8
  %42 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %27, align 8
  %43 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %28, align 8
  %44 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %29, align 8
  %45 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %30, align 8
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples4consIRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS8_NS0_9null_typeEEEEEEC2IS4_S9_S8_KSC_SH_SH_SH_SH_SH_SH_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(%"struct.boost::tuples::cons.171"* %36, %class.MGDoFHandler* dereferenceable(168) %37, %"class.std::vector.3"* dereferenceable(40) %38, %"class.std::vector.3"* dereferenceable(40) %39, %"struct.boost::tuples::null_type"* dereferenceable(1) %40, %"struct.boost::tuples::null_type"* dereferenceable(1) %41, %"struct.boost::tuples::null_type"* dereferenceable(1) %42, %"struct.boost::tuples::null_type"* dereferenceable(1) %43, %"struct.boost::tuples::null_type"* dereferenceable(1) %44, %"struct.boost::tuples::null_type"* dereferenceable(1) %45, %"struct.boost::tuples::null_type"* dereferenceable(1) %31)
  %46 = load i32, i32* @x.823
  %47 = load i32, i32* @y.824
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %54 = alloca %"struct.boost::tuples::cons"*, align 8
  %55 = alloca i32*, align 8
  %56 = alloca %class.MGDoFHandler*, align 8
  %57 = alloca %"class.std::vector.3"*, align 8
  %58 = alloca %"class.std::vector.3"*, align 8
  %59 = alloca %"struct.boost::tuples::null_type"*, align 8
  %60 = alloca %"struct.boost::tuples::null_type"*, align 8
  %61 = alloca %"struct.boost::tuples::null_type"*, align 8
  %62 = alloca %"struct.boost::tuples::null_type"*, align 8
  %63 = alloca %"struct.boost::tuples::null_type"*, align 8
  %64 = alloca %"struct.boost::tuples::null_type"*, align 8
  %65 = alloca %"struct.boost::tuples::null_type", align 1
  %66 = alloca %"struct.boost::tuples::null_type", align 1
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %54, align 8
  store i32* %1, i32** %55, align 8
  store %class.MGDoFHandler* %2, %class.MGDoFHandler** %56, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %57, align 8
  store %"class.std::vector.3"* %4, %"class.std::vector.3"** %58, align 8
  store %"struct.boost::tuples::null_type"* %5, %"struct.boost::tuples::null_type"** %59, align 8
  store %"struct.boost::tuples::null_type"* %6, %"struct.boost::tuples::null_type"** %60, align 8
  store %"struct.boost::tuples::null_type"* %7, %"struct.boost::tuples::null_type"** %61, align 8
  store %"struct.boost::tuples::null_type"* %8, %"struct.boost::tuples::null_type"** %62, align 8
  store %"struct.boost::tuples::null_type"* %9, %"struct.boost::tuples::null_type"** %63, align 8
  store %"struct.boost::tuples::null_type"* %10, %"struct.boost::tuples::null_type"** %64, align 8
  %67 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %54, align 8
  %68 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %67, i32 0, i32 0
  %69 = load i32*, i32** %55, align 8
  store i32* %69, i32** %68, align 8
  %70 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %67, i32 0, i32 1
  %71 = load %class.MGDoFHandler*, %class.MGDoFHandler** %56, align 8
  %72 = load %"class.std::vector.3"*, %"class.std::vector.3"** %57, align 8
  %73 = load %"class.std::vector.3"*, %"class.std::vector.3"** %58, align 8
  %74 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %59, align 8
  %75 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %60, align 8
  %76 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %61, align 8
  %77 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %62, align 8
  %78 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %63, align 8
  %79 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %64, align 8
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples4consIRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS8_NS0_9null_typeEEEEEEC2IS4_S9_S8_KSC_SH_SH_SH_SH_SH_SH_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(%"struct.boost::tuples::cons.171"* %70, %class.MGDoFHandler* dereferenceable(168) %71, %"class.std::vector.3"* dereferenceable(40) %72, %"class.std::vector.3"* dereferenceable(40) %73, %"struct.boost::tuples::null_type"* dereferenceable(1) %74, %"struct.boost::tuples::null_type"* dereferenceable(1) %75, %"struct.boost::tuples::null_type"* dereferenceable(1) %76, %"struct.boost::tuples::null_type"* dereferenceable(1) %77, %"struct.boost::tuples::null_type"* dereferenceable(1) %78, %"struct.boost::tuples::null_type"* dereferenceable(1) %79, %"struct.boost::tuples::null_type"* dereferenceable(1) %65)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5boost6tuples4consIRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS8_NS0_9null_typeEEEEEEC2IS4_S9_S8_KSC_SH_SH_SH_SH_SH_SH_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(%"struct.boost::tuples::cons.171"*, %class.MGDoFHandler* dereferenceable(168), %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.3"* dereferenceable(40), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %12 = load i32, i32* @x.825
  %13 = load i32, i32* @y.826
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = alloca %"struct.boost::tuples::cons.171"*, align 8
  %21 = alloca %class.MGDoFHandler*, align 8
  %22 = alloca %"class.std::vector.3"*, align 8
  %23 = alloca %"class.std::vector.3"*, align 8
  %24 = alloca %"struct.boost::tuples::null_type"*, align 8
  %25 = alloca %"struct.boost::tuples::null_type"*, align 8
  %26 = alloca %"struct.boost::tuples::null_type"*, align 8
  %27 = alloca %"struct.boost::tuples::null_type"*, align 8
  %28 = alloca %"struct.boost::tuples::null_type"*, align 8
  %29 = alloca %"struct.boost::tuples::null_type"*, align 8
  %30 = alloca %"struct.boost::tuples::null_type"*, align 8
  %31 = alloca %"struct.boost::tuples::null_type", align 1
  %32 = alloca %"struct.boost::tuples::null_type", align 1
  store %"struct.boost::tuples::cons.171"* %0, %"struct.boost::tuples::cons.171"** %20, align 8
  store %class.MGDoFHandler* %1, %class.MGDoFHandler** %21, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %22, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %23, align 8
  store %"struct.boost::tuples::null_type"* %4, %"struct.boost::tuples::null_type"** %24, align 8
  store %"struct.boost::tuples::null_type"* %5, %"struct.boost::tuples::null_type"** %25, align 8
  store %"struct.boost::tuples::null_type"* %6, %"struct.boost::tuples::null_type"** %26, align 8
  store %"struct.boost::tuples::null_type"* %7, %"struct.boost::tuples::null_type"** %27, align 8
  store %"struct.boost::tuples::null_type"* %8, %"struct.boost::tuples::null_type"** %28, align 8
  store %"struct.boost::tuples::null_type"* %9, %"struct.boost::tuples::null_type"** %29, align 8
  store %"struct.boost::tuples::null_type"* %10, %"struct.boost::tuples::null_type"** %30, align 8
  %33 = load %"struct.boost::tuples::cons.171"*, %"struct.boost::tuples::cons.171"** %20, align 8
  %34 = getelementptr inbounds %"struct.boost::tuples::cons.171", %"struct.boost::tuples::cons.171"* %33, i32 0, i32 0
  %35 = load %class.MGDoFHandler*, %class.MGDoFHandler** %21, align 8
  store %class.MGDoFHandler* %35, %class.MGDoFHandler** %34, align 8
  %36 = getelementptr inbounds %"struct.boost::tuples::cons.171", %"struct.boost::tuples::cons.171"* %33, i32 0, i32 1
  %37 = load %"class.std::vector.3"*, %"class.std::vector.3"** %22, align 8
  %38 = load %"class.std::vector.3"*, %"class.std::vector.3"** %23, align 8
  %39 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %24, align 8
  %40 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %25, align 8
  %41 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %26, align 8
  %42 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %27, align 8
  %43 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %28, align 8
  %44 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %29, align 8
  %45 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %30, align 8
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples4consIRKSt6vectorIbSaIbEENS1_IRS4_NS0_9null_typeEEEEC2IS5_S4_KS8_SC_SC_SC_SC_SC_SC_SC_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(%"struct.boost::tuples::cons.172"* %36, %"class.std::vector.3"* dereferenceable(40) %37, %"class.std::vector.3"* dereferenceable(40) %38, %"struct.boost::tuples::null_type"* dereferenceable(1) %39, %"struct.boost::tuples::null_type"* dereferenceable(1) %40, %"struct.boost::tuples::null_type"* dereferenceable(1) %41, %"struct.boost::tuples::null_type"* dereferenceable(1) %42, %"struct.boost::tuples::null_type"* dereferenceable(1) %43, %"struct.boost::tuples::null_type"* dereferenceable(1) %44, %"struct.boost::tuples::null_type"* dereferenceable(1) %45, %"struct.boost::tuples::null_type"* dereferenceable(1) %31)
  %46 = load i32, i32* @x.825
  %47 = load i32, i32* @y.826
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %54 = alloca %"struct.boost::tuples::cons.171"*, align 8
  %55 = alloca %class.MGDoFHandler*, align 8
  %56 = alloca %"class.std::vector.3"*, align 8
  %57 = alloca %"class.std::vector.3"*, align 8
  %58 = alloca %"struct.boost::tuples::null_type"*, align 8
  %59 = alloca %"struct.boost::tuples::null_type"*, align 8
  %60 = alloca %"struct.boost::tuples::null_type"*, align 8
  %61 = alloca %"struct.boost::tuples::null_type"*, align 8
  %62 = alloca %"struct.boost::tuples::null_type"*, align 8
  %63 = alloca %"struct.boost::tuples::null_type"*, align 8
  %64 = alloca %"struct.boost::tuples::null_type"*, align 8
  %65 = alloca %"struct.boost::tuples::null_type", align 1
  %66 = alloca %"struct.boost::tuples::null_type", align 1
  store %"struct.boost::tuples::cons.171"* %0, %"struct.boost::tuples::cons.171"** %54, align 8
  store %class.MGDoFHandler* %1, %class.MGDoFHandler** %55, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %56, align 8
  store %"class.std::vector.3"* %3, %"class.std::vector.3"** %57, align 8
  store %"struct.boost::tuples::null_type"* %4, %"struct.boost::tuples::null_type"** %58, align 8
  store %"struct.boost::tuples::null_type"* %5, %"struct.boost::tuples::null_type"** %59, align 8
  store %"struct.boost::tuples::null_type"* %6, %"struct.boost::tuples::null_type"** %60, align 8
  store %"struct.boost::tuples::null_type"* %7, %"struct.boost::tuples::null_type"** %61, align 8
  store %"struct.boost::tuples::null_type"* %8, %"struct.boost::tuples::null_type"** %62, align 8
  store %"struct.boost::tuples::null_type"* %9, %"struct.boost::tuples::null_type"** %63, align 8
  store %"struct.boost::tuples::null_type"* %10, %"struct.boost::tuples::null_type"** %64, align 8
  %67 = load %"struct.boost::tuples::cons.171"*, %"struct.boost::tuples::cons.171"** %54, align 8
  %68 = getelementptr inbounds %"struct.boost::tuples::cons.171", %"struct.boost::tuples::cons.171"* %67, i32 0, i32 0
  %69 = load %class.MGDoFHandler*, %class.MGDoFHandler** %55, align 8
  store %class.MGDoFHandler* %69, %class.MGDoFHandler** %68, align 8
  %70 = getelementptr inbounds %"struct.boost::tuples::cons.171", %"struct.boost::tuples::cons.171"* %67, i32 0, i32 1
  %71 = load %"class.std::vector.3"*, %"class.std::vector.3"** %56, align 8
  %72 = load %"class.std::vector.3"*, %"class.std::vector.3"** %57, align 8
  %73 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %58, align 8
  %74 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %59, align 8
  %75 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %60, align 8
  %76 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %61, align 8
  %77 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %62, align 8
  %78 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %63, align 8
  %79 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %64, align 8
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples4consIRKSt6vectorIbSaIbEENS1_IRS4_NS0_9null_typeEEEEC2IS5_S4_KS8_SC_SC_SC_SC_SC_SC_SC_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(%"struct.boost::tuples::cons.172"* %70, %"class.std::vector.3"* dereferenceable(40) %71, %"class.std::vector.3"* dereferenceable(40) %72, %"struct.boost::tuples::null_type"* dereferenceable(1) %73, %"struct.boost::tuples::null_type"* dereferenceable(1) %74, %"struct.boost::tuples::null_type"* dereferenceable(1) %75, %"struct.boost::tuples::null_type"* dereferenceable(1) %76, %"struct.boost::tuples::null_type"* dereferenceable(1) %77, %"struct.boost::tuples::null_type"* dereferenceable(1) %78, %"struct.boost::tuples::null_type"* dereferenceable(1) %79, %"struct.boost::tuples::null_type"* dereferenceable(1) %65)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5boost6tuples4consIRKSt6vectorIbSaIbEENS1_IRS4_NS0_9null_typeEEEEC2IS5_S4_KS8_SC_SC_SC_SC_SC_SC_SC_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(%"struct.boost::tuples::cons.172"*, %"class.std::vector.3"* dereferenceable(40), %"class.std::vector.3"* dereferenceable(40), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %12 = alloca %"struct.boost::tuples::cons.172"*, align 8
  %13 = alloca %"class.std::vector.3"*, align 8
  %14 = alloca %"class.std::vector.3"*, align 8
  %15 = alloca %"struct.boost::tuples::null_type"*, align 8
  %16 = alloca %"struct.boost::tuples::null_type"*, align 8
  %17 = alloca %"struct.boost::tuples::null_type"*, align 8
  %18 = alloca %"struct.boost::tuples::null_type"*, align 8
  %19 = alloca %"struct.boost::tuples::null_type"*, align 8
  %20 = alloca %"struct.boost::tuples::null_type"*, align 8
  %21 = alloca %"struct.boost::tuples::null_type"*, align 8
  %22 = alloca %"struct.boost::tuples::null_type"*, align 8
  %23 = alloca %"struct.boost::tuples::null_type", align 1
  %24 = alloca %"struct.boost::tuples::null_type", align 1
  store %"struct.boost::tuples::cons.172"* %0, %"struct.boost::tuples::cons.172"** %12, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %13, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %14, align 8
  store %"struct.boost::tuples::null_type"* %3, %"struct.boost::tuples::null_type"** %15, align 8
  store %"struct.boost::tuples::null_type"* %4, %"struct.boost::tuples::null_type"** %16, align 8
  store %"struct.boost::tuples::null_type"* %5, %"struct.boost::tuples::null_type"** %17, align 8
  store %"struct.boost::tuples::null_type"* %6, %"struct.boost::tuples::null_type"** %18, align 8
  store %"struct.boost::tuples::null_type"* %7, %"struct.boost::tuples::null_type"** %19, align 8
  store %"struct.boost::tuples::null_type"* %8, %"struct.boost::tuples::null_type"** %20, align 8
  store %"struct.boost::tuples::null_type"* %9, %"struct.boost::tuples::null_type"** %21, align 8
  store %"struct.boost::tuples::null_type"* %10, %"struct.boost::tuples::null_type"** %22, align 8
  %25 = load %"struct.boost::tuples::cons.172"*, %"struct.boost::tuples::cons.172"** %12, align 8
  %26 = getelementptr inbounds %"struct.boost::tuples::cons.172", %"struct.boost::tuples::cons.172"* %25, i32 0, i32 0
  %27 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  store %"class.std::vector.3"* %27, %"class.std::vector.3"** %26, align 8
  %28 = getelementptr inbounds %"struct.boost::tuples::cons.172", %"struct.boost::tuples::cons.172"* %25, i32 0, i32 1
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %14, align 8
  %30 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %15, align 8
  %31 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %16, align 8
  %32 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %17, align 8
  %33 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %18, align 8
  %34 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %19, align 8
  %35 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %20, align 8
  %36 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %21, align 8
  %37 = load %"struct.boost::tuples::null_type"*, %"struct.boost::tuples::null_type"** %22, align 8
  call void @_ZN5boost6tuples6detail5cnullEv()
  call void @_ZN5boost6tuples4consIRSt6vectorIbSaIbEENS0_9null_typeEEC2IS4_EERT_RKS6_SC_SC_SC_SC_SC_SC_SC_SC_(%"struct.boost::tuples::cons.173"* %28, %"class.std::vector.3"* dereferenceable(40) %29, %"struct.boost::tuples::null_type"* dereferenceable(1) %30, %"struct.boost::tuples::null_type"* dereferenceable(1) %31, %"struct.boost::tuples::null_type"* dereferenceable(1) %32, %"struct.boost::tuples::null_type"* dereferenceable(1) %33, %"struct.boost::tuples::null_type"* dereferenceable(1) %34, %"struct.boost::tuples::null_type"* dereferenceable(1) %35, %"struct.boost::tuples::null_type"* dereferenceable(1) %36, %"struct.boost::tuples::null_type"* dereferenceable(1) %37, %"struct.boost::tuples::null_type"* dereferenceable(1) %23)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5boost6tuples4consIRSt6vectorIbSaIbEENS0_9null_typeEEC2IS4_EERT_RKS6_SC_SC_SC_SC_SC_SC_SC_SC_(%"struct.boost::tuples::cons.173"*, %"class.std::vector.3"* dereferenceable(40), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1), %"struct.boost::tuples::null_type"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %12 = load i32, i32* @x.829
  %13 = load i32, i32* @y.830
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = alloca %"struct.boost::tuples::cons.173"*, align 8
  %21 = alloca %"class.std::vector.3"*, align 8
  %22 = alloca %"struct.boost::tuples::null_type"*, align 8
  %23 = alloca %"struct.boost::tuples::null_type"*, align 8
  %24 = alloca %"struct.boost::tuples::null_type"*, align 8
  %25 = alloca %"struct.boost::tuples::null_type"*, align 8
  %26 = alloca %"struct.boost::tuples::null_type"*, align 8
  %27 = alloca %"struct.boost::tuples::null_type"*, align 8
  %28 = alloca %"struct.boost::tuples::null_type"*, align 8
  %29 = alloca %"struct.boost::tuples::null_type"*, align 8
  %30 = alloca %"struct.boost::tuples::null_type"*, align 8
  store %"struct.boost::tuples::cons.173"* %0, %"struct.boost::tuples::cons.173"** %20, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %21, align 8
  store %"struct.boost::tuples::null_type"* %2, %"struct.boost::tuples::null_type"** %22, align 8
  store %"struct.boost::tuples::null_type"* %3, %"struct.boost::tuples::null_type"** %23, align 8
  store %"struct.boost::tuples::null_type"* %4, %"struct.boost::tuples::null_type"** %24, align 8
  store %"struct.boost::tuples::null_type"* %5, %"struct.boost::tuples::null_type"** %25, align 8
  store %"struct.boost::tuples::null_type"* %6, %"struct.boost::tuples::null_type"** %26, align 8
  store %"struct.boost::tuples::null_type"* %7, %"struct.boost::tuples::null_type"** %27, align 8
  store %"struct.boost::tuples::null_type"* %8, %"struct.boost::tuples::null_type"** %28, align 8
  store %"struct.boost::tuples::null_type"* %9, %"struct.boost::tuples::null_type"** %29, align 8
  store %"struct.boost::tuples::null_type"* %10, %"struct.boost::tuples::null_type"** %30, align 8
  %31 = load %"struct.boost::tuples::cons.173"*, %"struct.boost::tuples::cons.173"** %20, align 8
  %32 = getelementptr inbounds %"struct.boost::tuples::cons.173", %"struct.boost::tuples::cons.173"* %31, i32 0, i32 0
  %33 = load %"class.std::vector.3"*, %"class.std::vector.3"** %21, align 8
  store %"class.std::vector.3"* %33, %"class.std::vector.3"** %32, align 8
  %34 = load i32, i32* @x.829
  %35 = load i32, i32* @y.830
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %42 = alloca %"struct.boost::tuples::cons.173"*, align 8
  %43 = alloca %"class.std::vector.3"*, align 8
  %44 = alloca %"struct.boost::tuples::null_type"*, align 8
  %45 = alloca %"struct.boost::tuples::null_type"*, align 8
  %46 = alloca %"struct.boost::tuples::null_type"*, align 8
  %47 = alloca %"struct.boost::tuples::null_type"*, align 8
  %48 = alloca %"struct.boost::tuples::null_type"*, align 8
  %49 = alloca %"struct.boost::tuples::null_type"*, align 8
  %50 = alloca %"struct.boost::tuples::null_type"*, align 8
  %51 = alloca %"struct.boost::tuples::null_type"*, align 8
  %52 = alloca %"struct.boost::tuples::null_type"*, align 8
  store %"struct.boost::tuples::cons.173"* %0, %"struct.boost::tuples::cons.173"** %42, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %43, align 8
  store %"struct.boost::tuples::null_type"* %2, %"struct.boost::tuples::null_type"** %44, align 8
  store %"struct.boost::tuples::null_type"* %3, %"struct.boost::tuples::null_type"** %45, align 8
  store %"struct.boost::tuples::null_type"* %4, %"struct.boost::tuples::null_type"** %46, align 8
  store %"struct.boost::tuples::null_type"* %5, %"struct.boost::tuples::null_type"** %47, align 8
  store %"struct.boost::tuples::null_type"* %6, %"struct.boost::tuples::null_type"** %48, align 8
  store %"struct.boost::tuples::null_type"* %7, %"struct.boost::tuples::null_type"** %49, align 8
  store %"struct.boost::tuples::null_type"* %8, %"struct.boost::tuples::null_type"** %50, align 8
  store %"struct.boost::tuples::null_type"* %9, %"struct.boost::tuples::null_type"** %51, align 8
  store %"struct.boost::tuples::null_type"* %10, %"struct.boost::tuples::null_type"** %52, align 8
  %53 = load %"struct.boost::tuples::cons.173"*, %"struct.boost::tuples::cons.173"** %42, align 8
  %54 = getelementptr inbounds %"struct.boost::tuples::cons.173", %"struct.boost::tuples::cons.173"* %53, i32 0, i32 0
  %55 = load %"class.std::vector.3"*, %"class.std::vector.3"** %43, align 8
  store %"class.std::vector.3"* %55, %"class.std::vector.3"** %54, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal void @_ZN7Threads8internalL4callIvPFvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERS8_EN5boost6tuples5tupleIRjS5_SA_SB_NSF_9null_typeESI_SI_SI_SI_SI_EEEEvT0_RT1_RNS0_12return_valueIT_EE(void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, %"class.boost::tuples::tuple"* dereferenceable(32), %"struct.Threads::internal::return_value"* dereferenceable(1)) #0 {
  %4 = alloca void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, align 8
  %5 = alloca %"class.boost::tuples::tuple"*, align 8
  %6 = alloca %"struct.Threads::internal::return_value"*, align 8
  %7 = alloca %"struct.Threads::internal::int2type", align 1
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %0, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %4, align 8
  store %"class.boost::tuples::tuple"* %1, %"class.boost::tuples::tuple"** %5, align 8
  store %"struct.Threads::internal::return_value"* %2, %"struct.Threads::internal::return_value"** %6, align 8
  %8 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %4, align 8
  %9 = load %"class.boost::tuples::tuple"*, %"class.boost::tuples::tuple"** %5, align 8
  %10 = load %"struct.Threads::internal::return_value"*, %"struct.Threads::internal::return_value"** %6, align 8
  call void @_ZN7Threads8internal6CallerIvE7do_callIPFvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSA_EN5boost6tuples5tupleIRjS7_SC_SD_NSH_9null_typeESK_SK_SK_SK_SK_EEEEvT_RT0_RNS0_12return_valueIvEERKNS0_8int2typeILi4EEE(void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %8, %"class.boost::tuples::tuple"* dereferenceable(32) %9, %"struct.Threads::internal::return_value"* dereferenceable(1) %10, %"struct.Threads::internal::int2type"* dereferenceable(1) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7Threads8internal6CallerIvE7do_callIPFvjRK12MGDoFHandlerILi3EERKSt6vectorIbSaIbEERSA_EN5boost6tuples5tupleIRjS7_SC_SD_NSH_9null_typeESK_SK_SK_SK_SK_EEEEvT_RT0_RNS0_12return_valueIvEERKNS0_8int2typeILi4EEE(void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, %"class.boost::tuples::tuple"* dereferenceable(32), %"struct.Threads::internal::return_value"* dereferenceable(1), %"struct.Threads::internal::int2type"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, align 8
  %6 = alloca %"class.boost::tuples::tuple"*, align 8
  %7 = alloca %"struct.Threads::internal::return_value"*, align 8
  %8 = alloca %"struct.Threads::internal::int2type"*, align 8
  store void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)* %0, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %5, align 8
  store %"class.boost::tuples::tuple"* %1, %"class.boost::tuples::tuple"** %6, align 8
  store %"struct.Threads::internal::return_value"* %2, %"struct.Threads::internal::return_value"** %7, align 8
  store %"struct.Threads::internal::int2type"* %3, %"struct.Threads::internal::int2type"** %8, align 8
  %9 = load void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)*, void (i32, %class.MGDoFHandler*, %"class.std::vector.3"*, %"class.std::vector.3"*)** %5, align 8
  %10 = load %"class.boost::tuples::tuple"*, %"class.boost::tuples::tuple"** %6, align 8
  %11 = bitcast %"class.boost::tuples::tuple"* %10 to %"struct.boost::tuples::cons"*
  %12 = call dereferenceable(4) i32* @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi0EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv(%"struct.boost::tuples::cons"* %11)
  %13 = load i32, i32* %12, align 4
  %14 = load %"class.boost::tuples::tuple"*, %"class.boost::tuples::tuple"** %6, align 8
  %15 = bitcast %"class.boost::tuples::tuple"* %14 to %"struct.boost::tuples::cons"*
  %16 = call dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi1EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv(%"struct.boost::tuples::cons"* %15)
  %17 = load %"class.boost::tuples::tuple"*, %"class.boost::tuples::tuple"** %6, align 8
  %18 = bitcast %"class.boost::tuples::tuple"* %17 to %"struct.boost::tuples::cons"*
  %19 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi2EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv(%"struct.boost::tuples::cons"* %18)
  %20 = load %"class.boost::tuples::tuple"*, %"class.boost::tuples::tuple"** %6, align 8
  %21 = bitcast %"class.boost::tuples::tuple"* %20 to %"struct.boost::tuples::cons"*
  %22 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi3EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv(%"struct.boost::tuples::cons"* %21)
  call void %9(i32 %13, %class.MGDoFHandler* dereferenceable(168) %16, %"class.std::vector.3"* dereferenceable(40) %19, %"class.std::vector.3"* dereferenceable(40) %22)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi0EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv(%"struct.boost::tuples::cons"*) #0 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZN5boost6tuples3getILi0ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32) %3)
  ret i32* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi1EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv(%"struct.boost::tuples::cons"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.837
  %3 = load i32, i32* @y.838
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %10, align 8
  %11 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %10, align 8
  %12 = call dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples3getILi1ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32) %11)
  %13 = load i32, i32* @x.837
  %14 = load i32, i32* @y.838
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.MGDoFHandler* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %21, align 8
  %22 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %21, align 8
  %23 = call dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples3getILi1ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32) %22)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi2EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv(%"struct.boost::tuples::cons"*) #0 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples3getILi2ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32) %3)
  ret %"class.std::vector.3"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples4consIRjNS1_IRK12MGDoFHandlerILi3EENS1_IRKSt6vectorIbSaIbEENS1_IRS9_NS0_9null_typeEEEEEEEE3getILi3EEENS0_13access_traitsINS0_7elementIXT_ESH_E4typeEE14non_const_typeEv(%"struct.boost::tuples::cons"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.841
  %3 = load i32, i32* @y.842
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %10, align 8
  %11 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %10, align 8
  %12 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples3getILi3ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32) %11)
  %13 = load i32, i32* @x.841
  %14 = load i32, i32* @y.842
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.3"* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %21, align 8
  %22 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %21, align 8
  %23 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples3getILi3ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32) %22)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZN5boost6tuples3getILi0ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32)) #0 comdat {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZN5boost6tuples6detail9get_classILi0EE3getIRjS5_NS0_4consIRK12MGDoFHandlerILi3EENS6_IRKSt6vectorIbSaIbEENS6_IRSD_NS0_9null_typeEEEEEEEEET_RNS6_IT0_T1_EE(%"struct.boost::tuples::cons"* dereferenceable(32) %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZN5boost6tuples6detail9get_classILi0EE3getIRjS5_NS0_4consIRK12MGDoFHandlerILi3EENS6_IRKSt6vectorIbSaIbEENS6_IRSD_NS0_9null_typeEEEEEEEEET_RNS6_IT0_T1_EE(%"struct.boost::tuples::cons"* dereferenceable(32)) #3 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples3getILi1ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32)) #0 comdat {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = call dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples6detail9get_classILi1EE3getIRK12MGDoFHandlerILi3EERjNS0_4consIS8_NSA_IRKSt6vectorIbSaIbEENSA_IRSD_NS0_9null_typeEEEEEEEEET_RNSA_IT0_T1_EE(%"struct.boost::tuples::cons"* dereferenceable(32) %3)
  ret %class.MGDoFHandler* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples6detail9get_classILi1EE3getIRK12MGDoFHandlerILi3EERjNS0_4consIS8_NSA_IRKSt6vectorIbSaIbEENSA_IRSD_NS0_9null_typeEEEEEEEEET_RNSA_IT0_T1_EE(%"struct.boost::tuples::cons"* dereferenceable(32)) #0 comdat align 2 {
  %2 = load i32, i32* @x.849
  %3 = load i32, i32* @y.850
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %10, align 8
  %11 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %10, align 8
  %12 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %11, i32 0, i32 1
  %13 = call dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples6detail9get_classILi0EE3getIRK12MGDoFHandlerILi3EES8_NS0_4consIRKSt6vectorIbSaIbEENS9_IRSC_NS0_9null_typeEEEEEEET_RNS9_IT0_T1_EE(%"struct.boost::tuples::cons.171"* dereferenceable(24) %12)
  %14 = load i32, i32* @x.849
  %15 = load i32, i32* @y.850
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.MGDoFHandler* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %22, align 8
  %23 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %22, align 8
  %24 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %23, i32 0, i32 1
  %25 = call dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples6detail9get_classILi0EE3getIRK12MGDoFHandlerILi3EES8_NS0_4consIRKSt6vectorIbSaIbEENS9_IRSC_NS0_9null_typeEEEEEEET_RNS9_IT0_T1_EE(%"struct.boost::tuples::cons.171"* dereferenceable(24) %24)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(168) %class.MGDoFHandler* @_ZN5boost6tuples6detail9get_classILi0EE3getIRK12MGDoFHandlerILi3EES8_NS0_4consIRKSt6vectorIbSaIbEENS9_IRSC_NS0_9null_typeEEEEEEET_RNS9_IT0_T1_EE(%"struct.boost::tuples::cons.171"* dereferenceable(24)) #3 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons.171"*, align 8
  store %"struct.boost::tuples::cons.171"* %0, %"struct.boost::tuples::cons.171"** %2, align 8
  %3 = load %"struct.boost::tuples::cons.171"*, %"struct.boost::tuples::cons.171"** %2, align 8
  %4 = getelementptr inbounds %"struct.boost::tuples::cons.171", %"struct.boost::tuples::cons.171"* %3, i32 0, i32 0
  %5 = load %class.MGDoFHandler*, %class.MGDoFHandler** %4, align 8
  ret %class.MGDoFHandler* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples3getILi2ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32)) #0 comdat {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi2EE3getIRKSt6vectorIbSaIbEERjNS0_4consIRK12MGDoFHandlerILi3EENSB_IS9_NSB_IRS7_NS0_9null_typeEEEEEEEEET_RNSB_IT0_T1_EE(%"struct.boost::tuples::cons"* dereferenceable(32) %3)
  ret %"class.std::vector.3"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi2EE3getIRKSt6vectorIbSaIbEERjNS0_4consIRK12MGDoFHandlerILi3EENSB_IS9_NSB_IRS7_NS0_9null_typeEEEEEEEEET_RNSB_IT0_T1_EE(%"struct.boost::tuples::cons"* dereferenceable(32)) #0 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %3, i32 0, i32 1
  %5 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi1EE3getIRKSt6vectorIbSaIbEERK12MGDoFHandlerILi3EENS0_4consIS9_NSE_IRS7_NS0_9null_typeEEEEEEET_RNSE_IT0_T1_EE(%"struct.boost::tuples::cons.171"* dereferenceable(24) %4)
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi1EE3getIRKSt6vectorIbSaIbEERK12MGDoFHandlerILi3EENS0_4consIS9_NSE_IRS7_NS0_9null_typeEEEEEEET_RNSE_IT0_T1_EE(%"struct.boost::tuples::cons.171"* dereferenceable(24)) #0 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons.171"*, align 8
  store %"struct.boost::tuples::cons.171"* %0, %"struct.boost::tuples::cons.171"** %2, align 8
  %3 = load %"struct.boost::tuples::cons.171"*, %"struct.boost::tuples::cons.171"** %2, align 8
  %4 = getelementptr inbounds %"struct.boost::tuples::cons.171", %"struct.boost::tuples::cons.171"* %3, i32 0, i32 1
  %5 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi0EE3getIRKSt6vectorIbSaIbEES9_NS0_4consIRS7_NS0_9null_typeEEEEET_RNSA_IT0_T1_EE(%"struct.boost::tuples::cons.172"* dereferenceable(16) %4)
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi0EE3getIRKSt6vectorIbSaIbEES9_NS0_4consIRS7_NS0_9null_typeEEEEET_RNSA_IT0_T1_EE(%"struct.boost::tuples::cons.172"* dereferenceable(16)) #3 comdat align 2 {
  %2 = load i32, i32* @x.859
  %3 = load i32, i32* @y.860
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.boost::tuples::cons.172"*, align 8
  store %"struct.boost::tuples::cons.172"* %0, %"struct.boost::tuples::cons.172"** %10, align 8
  %11 = load %"struct.boost::tuples::cons.172"*, %"struct.boost::tuples::cons.172"** %10, align 8
  %12 = getelementptr inbounds %"struct.boost::tuples::cons.172", %"struct.boost::tuples::cons.172"* %11, i32 0, i32 0
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %12, align 8
  %14 = load i32, i32* @x.859
  %15 = load i32, i32* @y.860
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.3"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.boost::tuples::cons.172"*, align 8
  store %"struct.boost::tuples::cons.172"* %0, %"struct.boost::tuples::cons.172"** %22, align 8
  %23 = load %"struct.boost::tuples::cons.172"*, %"struct.boost::tuples::cons.172"** %22, align 8
  %24 = getelementptr inbounds %"struct.boost::tuples::cons.172", %"struct.boost::tuples::cons.172"* %23, i32 0, i32 0
  %25 = load %"class.std::vector.3"*, %"class.std::vector.3"** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples3getILi3ERjNS0_4consIRK12MGDoFHandlerILi3EENS3_IRKSt6vectorIbSaIbEENS3_IRSA_NS0_9null_typeEEEEEEEEENS0_13access_traitsINS0_7elementIXT_ENS3_IT0_T1_EEE4typeEE14non_const_typeERSM_(%"struct.boost::tuples::cons"* dereferenceable(32)) #0 comdat {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi3EE3getIRSt6vectorIbSaIbEERjNS0_4consIRK12MGDoFHandlerILi3EENSA_IRKS7_NSA_IS8_NS0_9null_typeEEEEEEEEET_RNSA_IT0_T1_EE(%"struct.boost::tuples::cons"* dereferenceable(32) %3)
  ret %"class.std::vector.3"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi3EE3getIRSt6vectorIbSaIbEERjNS0_4consIRK12MGDoFHandlerILi3EENSA_IRKS7_NSA_IS8_NS0_9null_typeEEEEEEEEET_RNSA_IT0_T1_EE(%"struct.boost::tuples::cons"* dereferenceable(32)) #0 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons"*, align 8
  store %"struct.boost::tuples::cons"* %0, %"struct.boost::tuples::cons"** %2, align 8
  %3 = load %"struct.boost::tuples::cons"*, %"struct.boost::tuples::cons"** %2, align 8
  %4 = getelementptr inbounds %"struct.boost::tuples::cons", %"struct.boost::tuples::cons"* %3, i32 0, i32 1
  %5 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi2EE3getIRSt6vectorIbSaIbEERK12MGDoFHandlerILi3EENS0_4consIRKS7_NSD_IS8_NS0_9null_typeEEEEEEET_RNSD_IT0_T1_EE(%"struct.boost::tuples::cons.171"* dereferenceable(24) %4)
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi2EE3getIRSt6vectorIbSaIbEERK12MGDoFHandlerILi3EENS0_4consIRKS7_NSD_IS8_NS0_9null_typeEEEEEEET_RNSD_IT0_T1_EE(%"struct.boost::tuples::cons.171"* dereferenceable(24)) #0 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons.171"*, align 8
  store %"struct.boost::tuples::cons.171"* %0, %"struct.boost::tuples::cons.171"** %2, align 8
  %3 = load %"struct.boost::tuples::cons.171"*, %"struct.boost::tuples::cons.171"** %2, align 8
  %4 = getelementptr inbounds %"struct.boost::tuples::cons.171", %"struct.boost::tuples::cons.171"* %3, i32 0, i32 1
  %5 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi1EE3getIRSt6vectorIbSaIbEERKS7_NS0_4consIS8_NS0_9null_typeEEEEET_RNSB_IT0_T1_EE(%"struct.boost::tuples::cons.172"* dereferenceable(16) %4)
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi1EE3getIRSt6vectorIbSaIbEERKS7_NS0_4consIS8_NS0_9null_typeEEEEET_RNSB_IT0_T1_EE(%"struct.boost::tuples::cons.172"* dereferenceable(16)) #0 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons.172"*, align 8
  store %"struct.boost::tuples::cons.172"* %0, %"struct.boost::tuples::cons.172"** %2, align 8
  %3 = load %"struct.boost::tuples::cons.172"*, %"struct.boost::tuples::cons.172"** %2, align 8
  %4 = getelementptr inbounds %"struct.boost::tuples::cons.172", %"struct.boost::tuples::cons.172"* %3, i32 0, i32 1
  %5 = call dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi0EE3getIRSt6vectorIbSaIbEES8_NS0_9null_typeEEET_RNS0_4consIT0_T1_EE(%"struct.boost::tuples::cons.173"* dereferenceable(8) %4)
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"class.std::vector.3"* @_ZN5boost6tuples6detail9get_classILi0EE3getIRSt6vectorIbSaIbEES8_NS0_9null_typeEEET_RNS0_4consIT0_T1_EE(%"struct.boost::tuples::cons.173"* dereferenceable(8)) #3 comdat align 2 {
  %2 = alloca %"struct.boost::tuples::cons.173"*, align 8
  store %"struct.boost::tuples::cons.173"* %0, %"struct.boost::tuples::cons.173"** %2, align 8
  %3 = load %"struct.boost::tuples::cons.173"*, %"struct.boost::tuples::cons.173"** %2, align 8
  %4 = getelementptr inbounds %"struct.boost::tuples::cons.173", %"struct.boost::tuples::cons.173"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE9push_backERKS3_(%"class.std::__cxx11::list"*, %"class.Threads::Thread"* dereferenceable(1)) #0 comdat align 2 {
  %3 = load i32, i32* @x.871
  %4 = load i32, i32* @y.872
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::__cxx11::list"*, align 8
  %12 = alloca %"class.Threads::Thread"*, align 8
  %13 = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %11, align 8
  store %"class.Threads::Thread"* %1, %"class.Threads::Thread"** %12, align 8
  %14 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %11, align 8
  %15 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE3endEv(%"class.std::__cxx11::list"* %14)
  %16 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %13, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %15, %"struct.std::__detail::_List_node_base"** %16, align 8
  %17 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %12, align 8
  %18 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %13, i32 0, i32 0
  %19 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %18, align 8
  call void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE9_M_insertESt14_List_iteratorIS3_ERKS3_(%"class.std::__cxx11::list"* %14, %"struct.std::__detail::_List_node_base"* %19, %"class.Threads::Thread"* dereferenceable(1) %17)
  %20 = load i32, i32* @x.871
  %21 = load i32, i32* @y.872
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"class.std::__cxx11::list"*, align 8
  %29 = alloca %"class.Threads::Thread"*, align 8
  %30 = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %28, align 8
  store %"class.Threads::Thread"* %1, %"class.Threads::Thread"** %29, align 8
  %31 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %28, align 8
  %32 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE3endEv(%"class.std::__cxx11::list"* %31)
  %33 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %30, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %32, %"struct.std::__detail::_List_node_base"** %33, align 8
  %34 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %29, align 8
  %35 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %30, i32 0, i32 0
  %36 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %35, align 8
  call void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE9_M_insertESt14_List_iteratorIS3_ERKS3_(%"class.std::__cxx11::list"* %31, %"struct.std::__detail::_List_node_base"* %36, %"class.Threads::Thread"* dereferenceable(1) %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE9_M_insertESt14_List_iteratorIS3_ERKS3_(%"class.std::__cxx11::list"*, %"struct.std::__detail::_List_node_base"*, %"class.Threads::Thread"* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca %"struct.std::_List_iterator", align 8
  %5 = alloca %"class.std::__cxx11::list"*, align 8
  %6 = alloca %"class.Threads::Thread"*, align 8
  %7 = alloca %"struct.std::_List_node"*, align 8
  %8 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %4, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %8, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %5, align 8
  store %"class.Threads::Thread"* %2, %"class.Threads::Thread"** %6, align 8
  %9 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %5, align 8
  %10 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %6, align 8
  %11 = call %"struct.std::_List_node"* @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE14_M_create_nodeERKS3_(%"class.std::__cxx11::list"* %9, %"class.Threads::Thread"* dereferenceable(1) %10)
  store %"struct.std::_List_node"* %11, %"struct.std::_List_node"** %7, align 8
  %12 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %7, align 8
  %13 = bitcast %"struct.std::_List_node"* %12 to %"struct.std::__detail::_List_node_base"*
  %14 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %4, i32 0, i32 0
  %15 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %14, align 8
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* %13, %"struct.std::__detail::_List_node_base"* %15) #2
  %16 = bitcast %"class.std::__cxx11::list"* %9 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_inc_sizeEm(%"class.std::__cxx11::_List_base"* %16, i64 1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE3endEv(%"class.std::__cxx11::list"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_List_iterator", align 8
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %5 = bitcast %"class.std::__cxx11::list"* %4 to %"class.std::__cxx11::_List_base"*
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::__detail::_List_node_header"* %7 to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt14_List_iteratorIN7Threads6ThreadIvEEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* %2, %"struct.std::__detail::_List_node_base"* %8)
  %9 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
  ret %"struct.std::__detail::_List_node_base"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_List_node"* @_ZNSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE14_M_create_nodeERKS3_(%"class.std::__cxx11::list"*, %"class.Threads::Thread"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.877
  %4 = load i32, i32* @y.878
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::__cxx11::list"*, align 8
  %12 = alloca %"class.Threads::Thread"*, align 8
  %13 = alloca %"struct.std::_List_node"*, align 8
  %14 = alloca %"class.std::allocator.166", align 1
  %15 = alloca i8*
  %16 = alloca i32
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %11, align 8
  store %"class.Threads::Thread"* %1, %"class.Threads::Thread"** %12, align 8
  %17 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %11, align 8
  %18 = bitcast %"class.std::__cxx11::list"* %17 to %"class.std::__cxx11::_List_base"*
  %19 = call %"struct.std::_List_node"* @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_get_nodeEv(%"class.std::__cxx11::_List_base"* %18)
  store %"struct.std::_List_node"* %19, %"struct.std::_List_node"** %13, align 8
  %20 = bitcast %"class.std::__cxx11::list"* %17 to %"class.std::__cxx11::_List_base"*
  %21 = load i32, i32* @x.877
  %22 = load i32, i32* @y.878
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %29 = invoke dereferenceable(1) %"class.std::allocator.162"* @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* %20)
          to label %30 unwind label %37

; <label>:30:                                     ; preds = %originalBBpart2
  call void @_ZNSaIN7Threads6ThreadIvEEEC2ISt10_List_nodeIS1_EEERKSaIT_E(%"class.std::allocator.166"* %14, %"class.std::allocator.162"* dereferenceable(1) %29) #2
  %31 = bitcast %"class.std::allocator.166"* %14 to %"class.__gnu_cxx::new_allocator.167"*
  %32 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %13, align 8
  %33 = invoke %"class.Threads::Thread"* @_ZNSt10_List_nodeIN7Threads6ThreadIvEEE9_M_valptrEv(%"struct.std::_List_node"* %32)
          to label %34 unwind label %57

; <label>:34:                                     ; preds = %30
  %35 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %12, align 8
  invoke void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEE9constructEPS3_RKS3_(%"class.__gnu_cxx::new_allocator.167"* %31, %"class.Threads::Thread"* %33, %"class.Threads::Thread"* dereferenceable(1) %35)
          to label %36 unwind label %57

; <label>:36:                                     ; preds = %34
  call void @_ZNSaIN7Threads6ThreadIvEEED2Ev(%"class.std::allocator.166"* %14) #2
  br label %72

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = load i32, i32* @x.877
  %39 = load i32, i32* @y.878
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %15, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %16, align 4
  %49 = load i32, i32* @x.877
  %50 = load i32, i32* @y.878
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %61

; <label>:57:                                     ; preds = %34, %30
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %15, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %16, align 4
  call void @_ZNSaIN7Threads6ThreadIvEEED2Ev(%"class.std::allocator.166"* %14) #2
  br label %61

; <label>:61:                                     ; preds = %57, %originalBBpart24
  %62 = load i8*, i8** %15, align 8
  %63 = call i8* @__cxa_begin_catch(i8* %62) #2
  %64 = bitcast %"class.std::__cxx11::list"* %17 to %"class.std::__cxx11::_List_base"*
  %65 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %13, align 8
  invoke void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_put_nodeEPSt10_List_nodeIS3_E(%"class.std::__cxx11::_List_base"* %64, %"struct.std::_List_node"* %65)
          to label %66 unwind label %67

; <label>:66:                                     ; preds = %61
  invoke void @__cxa_rethrow() #14
          to label %114 unwind label %67

; <label>:67:                                     ; preds = %66, %61
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %15, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %16, align 4
  invoke void @__cxa_end_catch()
          to label %71 unwind label %95

; <label>:71:                                     ; preds = %67
  br label %74

; <label>:72:                                     ; preds = %36
  %73 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %13, align 8
  ret %"struct.std::_List_node"* %73

; <label>:74:                                     ; preds = %71
  %75 = load i32, i32* @x.877
  %76 = load i32, i32* @y.878
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %74, %originalBB6alteredBB
  %83 = load i8*, i8** %15, align 8
  %84 = load i32, i32* %16, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  %87 = load i32, i32* @x.877
  %88 = load i32, i32* @y.878
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %86

; <label>:95:                                     ; preds = %67
  %96 = load i32, i32* @x.877
  %97 = load i32, i32* @y.878
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %95, %originalBB10alteredBB
  %104 = landingpad { i8*, i32 }
          catch i8* null
  %105 = extractvalue { i8*, i32 } %104, 0
  call void @__clang_call_terminate(i8* %105) #9
  %106 = load i32, i32* @x.877
  %107 = load i32, i32* @y.878
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable

; <label>:114:                                    ; preds = %66
  %115 = load i32, i32* @x.877
  %116 = load i32, i32* @y.878
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %114, %originalBB14alteredBB
  %123 = load i32, i32* @x.877
  %124 = load i32, i32* @y.878
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %2
  %131 = alloca %"class.std::__cxx11::list"*, align 8
  %132 = alloca %"class.Threads::Thread"*, align 8
  %133 = alloca %"struct.std::_List_node"*, align 8
  %134 = alloca %"class.std::allocator.166", align 1
  %135 = alloca i8*
  %136 = alloca i32
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %131, align 8
  store %"class.Threads::Thread"* %1, %"class.Threads::Thread"** %132, align 8
  %137 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %131, align 8
  %138 = bitcast %"class.std::__cxx11::list"* %137 to %"class.std::__cxx11::_List_base"*
  %139 = call %"struct.std::_List_node"* @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_get_nodeEv(%"class.std::__cxx11::_List_base"* %138)
  store %"struct.std::_List_node"* %139, %"struct.std::_List_node"** %133, align 8
  %140 = bitcast %"class.std::__cxx11::list"* %137 to %"class.std::__cxx11::_List_base"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %141 = landingpad { i8*, i32 }
          catch i8* null
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %15, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %16, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  %144 = load i8*, i8** %15, align 8
  %145 = load i32, i32* %16, align 4
  %146 = insertvalue { i8*, i32 } undef, i8* %144, 0
  %147 = insertvalue { i8*, i32 } %146, i32 %145, 1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %95
  %148 = landingpad { i8*, i32 }
          catch i8* null
  %149 = extractvalue { i8*, i32 } %148, 0
  call void @__clang_call_terminate(i8* %149) #9
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %114
  br label %originalBB14
}

; Function Attrs: nounwind
declare void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"*) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_inc_sizeEm(%"class.std::__cxx11::_List_base"*, i64) #3 comdat align 2 {
  %3 = load i32, i32* @x.879
  %4 = load i32, i32* @y.880
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %13, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__detail::_List_node_header", %"struct.std::__detail::_List_node_header"* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %14
  store i64 %19, i64* %17, align 8
  %20 = load i32, i32* @x.879
  %21 = load i32, i32* @y.880
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %30, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__detail::_List_node_header", %"struct.std::__detail::_List_node_header"* %33, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %_ = sub i64 %35, %31
  %gen = mul i64 %_, %31
  %_1 = sub i64 0, %35
  %gen2 = add i64 %_1, %31
  %_3 = sub i64 0, %35
  %gen4 = add i64 %_3, %31
  %_5 = sub i64 0, %35
  %gen6 = add i64 %_5, %31
  %_7 = sub i64 0, %35
  %gen8 = add i64 %_7, %31
  %_9 = shl i64 %35, %31
  %_10 = sub i64 %35, %31
  %gen11 = mul i64 %_10, %31
  %36 = add i64 %35, %31
  store i64 %36, i64* %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_List_node"* @_ZNSt7__cxx1110_List_baseIN7Threads6ThreadIvEESaIS3_EE11_M_get_nodeEv(%"class.std::__cxx11::_List_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %4 to %"class.std::allocator.162"*
  %6 = call %"struct.std::_List_node"* @_ZN9__gnu_cxx14__alloc_traitsISaISt10_List_nodeIN7Threads6ThreadIvEEEES5_E8allocateERS6_m(%"class.std::allocator.162"* dereferenceable(1) %5, i64 1)
  ret %"struct.std::_List_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7Threads6ThreadIvEEE9constructEPS3_RKS3_(%"class.__gnu_cxx::new_allocator.167"*, %"class.Threads::Thread"*, %"class.Threads::Thread"* dereferenceable(1)) #3 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.167"*, align 8
  %5 = alloca %"class.Threads::Thread"*, align 8
  %6 = alloca %"class.Threads::Thread"*, align 8
  store %"class.__gnu_cxx::new_allocator.167"* %0, %"class.__gnu_cxx::new_allocator.167"** %4, align 8
  store %"class.Threads::Thread"* %1, %"class.Threads::Thread"** %5, align 8
  store %"class.Threads::Thread"* %2, %"class.Threads::Thread"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.167"*, %"class.__gnu_cxx::new_allocator.167"** %4, align 8
  %8 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %5, align 8
  %9 = bitcast %"class.Threads::Thread"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.Threads::Thread"*
  %11 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %6, align 8
  %12 = bitcast %"class.Threads::Thread"* %10 to i8*
  %13 = bitcast %"class.Threads::Thread"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 1, i32 1, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_List_node"* @_ZN9__gnu_cxx14__alloc_traitsISaISt10_List_nodeIN7Threads6ThreadIvEEEES5_E8allocateERS6_m(%"class.std::allocator.162"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.162"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.162"* %0, %"class.std::allocator.162"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.162"*, %"class.std::allocator.162"** %3, align 8
  %6 = bitcast %"class.std::allocator.162"* %5 to %"class.__gnu_cxx::new_allocator.163"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_List_node"* @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.163"* %6, i64 %7, i8* null)
  ret %"struct.std::_List_node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_List_node"* @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.163"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.887
  %5 = load i32, i32* @y.888
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.163"* %15) #2
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.887
  %20 = load i32, i32* @y.888
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %44

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.887
  %29 = load i32, i32* @y.888
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  call void @_ZSt17__throw_bad_allocv() #14
  %36 = load i32, i32* @x.887
  %37 = load i32, i32* @y.888
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i64, i64* %13, align 8
  %46 = mul i64 %45, 24
  %47 = call i8* @_Znwm(i64 %46)
  %48 = bitcast i8* %47 to %"struct.std::_List_node"*
  ret %"struct.std::_List_node"* %48

originalBBalteredBB:                              ; preds = %originalBB, %3
  %49 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  %50 = alloca i64, align 8
  %51 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %49, align 8
  store i64 %1, i64* %50, align 8
  store i8* %2, i8** %51, align 8
  %52 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %49, align 8
  %53 = load i64, i64* %50, align 8
  %54 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.163"* %52) #2
  %55 = icmp ugt i64 %53, %54
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  call void @_ZSt17__throw_bad_allocv() #14
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN7Threads6ThreadIvEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.163"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.889
  %3 = load i32, i32* @y.890
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %10, align 8
  %12 = load i32, i32* @x.889
  %13 = load i32, i32* @y.890
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 384307168202282325

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.163"*, align 8
  store %"class.__gnu_cxx::new_allocator.163"* %0, %"class.__gnu_cxx::new_allocator.163"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.163"*, %"class.__gnu_cxx::new_allocator.163"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_List_iteratorIN7Threads6ThreadIvEEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"*, %"struct.std::__detail::_List_node_base"*) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.891
  %4 = load i32, i32* @y.892
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_List_iterator"*, align 8
  %12 = alloca %"struct.std::__detail::_List_node_base"*, align 8
  store %"struct.std::_List_iterator"* %0, %"struct.std::_List_iterator"** %11, align 8
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %12, align 8
  %13 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %11, align 8
  %14 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %13, i32 0, i32 0
  %15 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %12, align 8
  store %"struct.std::__detail::_List_node_base"* %15, %"struct.std::__detail::_List_node_base"** %14, align 8
  %16 = load i32, i32* @x.891
  %17 = load i32, i32* @y.892
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %"struct.std::_List_iterator"*, align 8
  %25 = alloca %"struct.std::__detail::_List_node_base"*, align 8
  store %"struct.std::_List_iterator"* %0, %"struct.std::_List_iterator"** %24, align 8
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %25, align 8
  %26 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %24, align 8
  %27 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %26, i32 0, i32 0
  %28 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %25, align 8
  store %"struct.std::__detail::_List_node_base"* %28, %"struct.std::__detail::_List_node_base"** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZNKSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE5beginEv(%"class.std::__cxx11::list"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_List_const_iterator", align 8
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %5 = bitcast %"class.std::__cxx11::list"* %4 to %"class.std::__cxx11::_List_base"*
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::__detail::_List_node_header"* %7 to %"struct.std::__detail::_List_node_base"*
  %9 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %8, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
  call void @_ZNSt20_List_const_iteratorIN7Threads6ThreadIvEEEC2EPKNSt8__detail15_List_node_baseE(%"struct.std::_List_const_iterator"* %2, %"struct.std::__detail::_List_node_base"* %10)
  %11 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %2, i32 0, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %11, align 8
  ret %"struct.std::__detail::_List_node_base"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZStneRKSt20_List_const_iteratorIN7Threads6ThreadIvEEES5_(%"struct.std::_List_const_iterator"* dereferenceable(8), %"struct.std::_List_const_iterator"* dereferenceable(8)) #3 comdat {
  %3 = alloca %"struct.std::_List_const_iterator"*, align 8
  %4 = alloca %"struct.std::_List_const_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %3, align 8
  store %"struct.std::_List_const_iterator"* %1, %"struct.std::_List_const_iterator"** %4, align 8
  %5 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
  %8 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::__detail::_List_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZNKSt7__cxx114listIN7Threads6ThreadIvEESaIS3_EE3endEv(%"class.std::__cxx11::list"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.897
  %3 = load i32, i32* @y.898
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_List_const_iterator", align 8
  %11 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %11, align 8
  %12 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %11, align 8
  %13 = bitcast %"class.std::__cxx11::list"* %12 to %"class.std::__cxx11::_List_base"*
  %14 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::__detail::_List_node_header"* %15 to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt20_List_const_iteratorIN7Threads6ThreadIvEEEC2EPKNSt8__detail15_List_node_baseE(%"struct.std::_List_const_iterator"* %10, %"struct.std::__detail::_List_node_base"* %16)
  %17 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %10, i32 0, i32 0
  %18 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %17, align 8
  %19 = load i32, i32* @x.897
  %20 = load i32, i32* @y.898
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.std::__detail::_List_node_base"* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"struct.std::_List_const_iterator", align 8
  %28 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %28, align 8
  %29 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %28, align 8
  %30 = bitcast %"class.std::__cxx11::list"* %29 to %"class.std::__cxx11::_List_base"*
  %31 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl", %"struct.std::__cxx11::_List_base<Threads::Thread<void>, std::allocator<Threads::Thread<void> > >::_List_impl"* %31, i32 0, i32 0
  %33 = bitcast %"struct.std::__detail::_List_node_header"* %32 to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt20_List_const_iteratorIN7Threads6ThreadIvEEEC2EPKNSt8__detail15_List_node_baseE(%"struct.std::_List_const_iterator"* %27, %"struct.std::__detail::_List_node_base"* %33)
  %34 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %27, i32 0, i32 0
  %35 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Threads::Thread"* @_ZNKSt20_List_const_iteratorIN7Threads6ThreadIvEEEptEv(%"struct.std::_List_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_List_const_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
  %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
  %6 = bitcast %"struct.std::__detail::_List_node_base"* %5 to %"struct.std::_List_node"*
  %7 = call %"class.Threads::Thread"* @_ZNKSt10_List_nodeIN7Threads6ThreadIvEEE9_M_valptrEv(%"struct.std::_List_node"* %6)
  ret %"class.Threads::Thread"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNK7Threads6ThreadIvE4joinEv(%"class.Threads::Thread"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.901
  %3 = load i32, i32* @y.902
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.Threads::Thread"*, align 8
  store %"class.Threads::Thread"* %0, %"class.Threads::Thread"** %10, align 8
  %11 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %10, align 8
  %12 = load i32, i32* @x.901
  %13 = load i32, i32* @y.902
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.Threads::Thread"*, align 8
  store %"class.Threads::Thread"* %0, %"class.Threads::Thread"** %20, align 8
  %21 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_List_const_iterator"* @_ZNSt20_List_const_iteratorIN7Threads6ThreadIvEEEppEv(%"struct.std::_List_const_iterator"*) #3 comdat align 2 {
  %2 = load i32, i32* @x.903
  %3 = load i32, i32* @y.904
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_List_const_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %10, align 8
  %11 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %11, i32 0, i32 0
  %13 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %13, i32 0, i32 0
  %15 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %11, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %15, %"struct.std::__detail::_List_node_base"** %16, align 8
  %17 = load i32, i32* @x.903
  %18 = load i32, i32* @y.904
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"struct.std::_List_const_iterator"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"struct.std::_List_const_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %25, align 8
  %26 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %26, i32 0, i32 0
  %28 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %28, i32 0, i32 0
  %30 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %26, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %30, %"struct.std::__detail::_List_node_base"** %31, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt20_List_const_iteratorIN7Threads6ThreadIvEEEC2EPKNSt8__detail15_List_node_baseE(%"struct.std::_List_const_iterator"*, %"struct.std::__detail::_List_node_base"*) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"struct.std::_List_const_iterator"*, align 8
  %4 = alloca %"struct.std::__detail::_List_node_base"*, align 8
  store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %3, align 8
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %4, align 8
  %5 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
  store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Threads::Thread"* @_ZNKSt10_List_nodeIN7Threads6ThreadIvEEE9_M_valptrEv(%"struct.std::_List_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_List_node"*, align 8
  store %"struct.std::_List_node"* %0, %"struct.std::_List_node"** %2, align 8
  %3 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %3, i32 0, i32 1
  %5 = call %"class.Threads::Thread"* @_ZSt11__addressofIKN7Threads6ThreadIvEEEPT_RS4_(%"class.Threads::Thread"* dereferenceable(1) %4)
  ret %"class.Threads::Thread"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.Threads::Thread"* @_ZSt11__addressofIKN7Threads6ThreadIvEEEPT_RS4_(%"class.Threads::Thread"* dereferenceable(1)) #3 comdat {
  %2 = alloca %"class.Threads::Thread"*, align 8
  store %"class.Threads::Thread"* %0, %"class.Threads::Thread"** %2, align 8
  %3 = load %"class.Threads::Thread"*, %"class.Threads::Thread"** %2, align 8
  ret %"class.Threads::Thread"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt10__count_ifISt13_Bit_iteratorN9__gnu_cxx5__ops16_Iter_equals_valIKbEEENSt15iterator_traitsIT_E15difference_typeES7_S7_T0_(i64*, i32, i64*, i32, i8*) #0 comdat {
  %6 = load i32, i32* @x.911
  %7 = load i32, i32* @y.912
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %17 = alloca i64, align 8
  %18 = alloca %"struct.std::_Bit_iterator", align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %0, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %1, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  store i64* %2, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  store i32 %3, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %16, i32 0, i32 0
  store i8* %4, i8** %25, align 8
  store i64 0, i64* %17, align 8
  %26 = load i32, i32* @x.911
  %27 = load i32, i32* @y.912
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %83, %originalBBpart2
  %35 = bitcast %"struct.std::_Bit_iterator"* %14 to %"struct.std::_Bit_iterator_base"*
  %36 = bitcast %"struct.std::_Bit_iterator"* %15 to %"struct.std::_Bit_iterator_base"*
  %37 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"* %35, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %36)
  br i1 %37, label %38, label %85

; <label>:38:                                     ; preds = %34
  %39 = load i32, i32* @x.911
  %40 = load i32, i32* @y.912
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  %48 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  %49 = bitcast %"struct.std::_Bit_iterator"* %18 to { i64*, i32 }*
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %49, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %49, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = call zeroext i1 @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclISt13_Bit_iteratorEEbT_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"* %16, i64* %51, i32 %53)
  %55 = load i32, i32* @x.911
  %56 = load i32, i32* @y.912
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %63, label %66

; <label>:63:                                     ; preds = %originalBBpart24
  %64 = load i64, i64* %17, align 8
  %65 = add nsw i64 %64, 1
  store i64 %65, i64* %17, align 8
  br label %66

; <label>:66:                                     ; preds = %63, %originalBBpart24
  %67 = load i32, i32* @x.911
  %68 = load i32, i32* @y.912
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = load i32, i32* @x.911
  %76 = load i32, i32* @y.912
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %83

; <label>:83:                                     ; preds = %originalBBpart28
  %84 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %14)
  br label %34

; <label>:85:                                     ; preds = %34
  %86 = load i64, i64* %17, align 8
  ret i64 %86

originalBBalteredBB:                              ; preds = %originalBB, %5
  %87 = alloca %"struct.std::_Bit_iterator", align 8
  %88 = alloca %"struct.std::_Bit_iterator", align 8
  %89 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %90 = alloca i64, align 8
  %91 = alloca %"struct.std::_Bit_iterator", align 8
  %92 = bitcast %"struct.std::_Bit_iterator"* %87 to { i64*, i32 }*
  %93 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %92, i32 0, i32 0
  store i64* %0, i64** %93, align 8
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %92, i32 0, i32 1
  store i32 %1, i32* %94, align 8
  %95 = bitcast %"struct.std::_Bit_iterator"* %88 to { i64*, i32 }*
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %95, i32 0, i32 0
  store i64* %2, i64** %96, align 8
  %97 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %95, i32 0, i32 1
  store i32 %3, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %89, i32 0, i32 0
  store i8* %4, i8** %98, align 8
  store i64 0, i64* %90, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %99 = bitcast %"struct.std::_Bit_iterator"* %18 to i8*
  %100 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 16, i32 8, i1 false)
  %101 = bitcast %"struct.std::_Bit_iterator"* %18 to { i64*, i32 }*
  %102 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %101, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %101, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = call zeroext i1 @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclISt13_Bit_iteratorEEbT_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"* %16, i64* %103, i32 %105)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx5__ops17__iter_equals_valIKbEENS0_16_Iter_equals_valIT_EERS4_(i8* dereferenceable(1)) #0 comdat {
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %4 = load i8*, i8** %3, align 8
  call void @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC2ERS2_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"* %2, i8* dereferenceable(1) %4)
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %2, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEclISt13_Bit_iteratorEEbT_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"*, i64*, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.915
  %5 = load i32, i32* @y.916
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, align 8
  %14 = alloca %"struct.std::_Bit_reference", align 8
  %15 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %2, i32* %17, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %13, align 8
  %18 = load %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %13, align 8
  %19 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %12)
  %20 = bitcast %"struct.std::_Bit_reference"* %14 to { i64*, i64 }*
  %21 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %20, i32 0, i32 0
  %22 = extractvalue { i64*, i64 } %19, 0
  store i64* %22, i64** %21, align 8
  %23 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %20, i32 0, i32 1
  %24 = extractvalue { i64*, i64 } %19, 1
  store i64 %24, i64* %23, align 8
  %25 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %14)
  %26 = zext i1 %25 to i32
  %27 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %18, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = load i8, i8* %28, align 1
  %30 = trunc i8 %29 to i1
  %31 = zext i1 %30 to i32
  %32 = icmp eq i32 %26, %31
  %33 = load i32, i32* @x.915
  %34 = load i32, i32* @y.916
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %41 = alloca %"struct.std::_Bit_iterator", align 8
  %42 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, align 8
  %43 = alloca %"struct.std::_Bit_reference", align 8
  %44 = bitcast %"struct.std::_Bit_iterator"* %41 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  store i64* %1, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  store i32 %2, i32* %46, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %42, align 8
  %47 = load %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %42, align 8
  %48 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %41)
  %49 = bitcast %"struct.std::_Bit_reference"* %43 to { i64*, i64 }*
  %50 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %49, i32 0, i32 0
  %51 = extractvalue { i64*, i64 } %48, 0
  store i64* %51, i64** %50, align 8
  %52 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %49, i32 0, i32 1
  %53 = extractvalue { i64*, i64 } %48, 1
  store i64 %53, i64* %52, align 8
  %54 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %43)
  %55 = zext i1 %54 to i32
  %56 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %47, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i8, i8* %57, align 1
  %59 = trunc i8 %58 to i1
  %60 = zext i1 %59 to i32
  %61 = icmp eq i32 %55, %60
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKbEC2ERS2_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"*, i8* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %3 = load i32, i32* @x.917
  %4 = load i32, i32* @y.918
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, align 8
  %12 = alloca i8*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %11, align 8
  store i8* %1, i8** %12, align 8
  %13 = load %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %11, align 8
  %14 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %13, i32 0, i32 0
  %15 = load i8*, i8** %12, align 8
  store i8* %15, i8** %14, align 8
  %16 = load i32, i32* @x.917
  %17 = load i32, i32* @y.918
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, align 8
  %25 = alloca i8*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %24, align 8
  store i8* %1, i8** %25, align 8
  %26 = load %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %24, align 8
  %27 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %26, i32 0, i32 0
  %28 = load i8*, i8** %25, align 8
  store i8* %28, i8** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_mg_dof_tools.cc() #0 section ".text.startup" {
  %1 = load i32, i32* @x.919
  %2 = load i32, i32* @y.920
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  call void @__cxx_global_var_init()
  %9 = load i32, i32* @x.919
  %10 = load i32, i32* @y.920
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %0
  call void @__cxx_global_var_init()
  br label %originalBB
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { builtin }
attributes #14 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
