; ModuleID = '/home/ml4code/host/experimento_malware/spec_cpu_2006_range/bytecodes_llvm_4/dealII_mapping_q.ll'
source_filename = "mapping_q.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.StraightBoundary = type { %class.Boundary }
%class.Boundary = type { %class.Subscriptor }
%class.Subscriptor = type { i32 (...)**, i32, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.MappingQ = type { %class.MappingQ1, %class.Table, %class.Table, i32, i32, i32, %class.TensorProductPolynomials*, i32, %"class.std::vector.5" }
%class.MappingQ1 = type { %class.Mapping }
%class.Mapping = type { %class.Subscriptor }
%class.Table = type { %class.TableBase.base, [4 x i8] }
%class.TableBase.base = type <{ %class.Subscriptor, double*, i32, %class.TableIndices }>
%class.TableIndices = type { %class.TableIndicesBase }
%class.TableIndicesBase = type { [2 x i32] }
%class.TensorProductPolynomials = type { %"class.std::vector", i32, %"class.std::vector.5", %"class.std::vector.5" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data" = type { %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"* }
%"class.Polynomials::Polynomial" = type { %class.Subscriptor, %"class.std::vector.0" }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" = type { double*, double*, double* }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.MappingQ<3>::InternalData" = type { %"class.MappingQ1<3>::InternalData", %"class.std::vector.129", i8, %"class.MappingQ1<3>::InternalData" }
%"class.std::vector.129" = type { %"struct.std::_Vector_base.130" }
%"struct.std::_Vector_base.130" = type { %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data" = type { %"class.std::vector.58"*, %"class.std::vector.58"*, %"class.std::vector.58"* }
%"class.std::vector.58" = type { %"struct.std::_Vector_base.59" }
%"struct.std::_Vector_base.59" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data" = type { %class.Point*, %class.Point*, %class.Point* }
%class.Point = type { %class.Tensor }
%class.Tensor = type { [3 x double] }
%"class.MappingQ1<3>::InternalData" = type { %"class.Mapping<3>::InternalDataBase.base", %"class.std::vector.0", %"class.std::vector.103", %"class.std::vector.108", %"class.std::vector.108", %class.Table.114, %class.Table.114, %"class.std::vector.58", %class.TriaIterator.118, i8, i32 }
%"class.Mapping<3>::InternalDataBase.base" = type <{ %class.Subscriptor, i32, i32, i32, i8 }>
%"class.std::vector.103" = type { %"struct.std::_Vector_base.104" }
%"struct.std::_Vector_base.104" = type { %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data" = type { %class.Tensor*, %class.Tensor*, %class.Tensor* }
%"class.std::vector.108" = type { %"struct.std::_Vector_base.109" }
%"struct.std::_Vector_base.109" = type { %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data" = type { %class.Tensor.113*, %class.Tensor.113*, %class.Tensor.113* }
%class.Tensor.113 = type { [3 x %class.Tensor] }
%class.Table.114 = type { %class.TableBase.base.116, [4 x i8] }
%class.TableBase.base.116 = type <{ %class.Subscriptor, %class.Tensor*, i32, %class.TableIndices }>
%class.TriaIterator.118 = type { %class.TriaRawIterator.119 }
%class.TriaRawIterator.119 = type { %class.DoFCellAccessor }
%class.DoFCellAccessor = type { %class.DoFObjectAccessor }
%class.DoFObjectAccessor = type { %class.DoFAccessor, %class.CellAccessor }
%class.DoFAccessor = type { %class.DoFHandler* }
%class.DoFHandler = type { %class.Subscriptor, %class.SmartPointer, %class.SmartPointer.121, %"class.std::vector.122", i32, %"class.std::vector.5" }
%class.SmartPointer = type { %class.Triangulation* }
%class.Triangulation = type { %class.Subscriptor, %"class.std::vector.10", %"class.std::vector.58", %"class.std::vector.18", [255 x %class.Boundary*], i32, %struct.TriaNumberCache }
%"class.std::vector.10" = type { %"struct.std::_Vector_base.11" }
%"struct.std::_Vector_base.11" = type { %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data" = type { %class.TriangulationLevel**, %class.TriangulationLevel**, %class.TriangulationLevel** }
%class.TriangulationLevel = type { %class.TriangulationLevel.15, %"struct.TriangulationLevel<3>::HexesData" }
%class.TriangulationLevel.15 = type { %class.TriangulationLevel.16, %"struct.TriangulationLevel<2>::QuadsData" }
%class.TriangulationLevel.16 = type { %class.TriangulationLevel.17, %"struct.TriangulationLevel<1>::LinesData" }
%class.TriangulationLevel.17 = type { %"class.std::vector.18", %"class.std::vector.18", %"class.std::vector.23", %"class.std::vector.5" }
%"class.std::vector.23" = type { %"struct.std::_Vector_base.24" }
%"struct.std::_Vector_base.24" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type opaque
%"struct.TriangulationLevel<1>::LinesData" = type { %"class.std::vector.28", %"class.std::vector.33", %"class.std::vector.18", %"class.std::vector.18", %"class.std::vector.38", %"class.std::vector.43" }
%"class.std::vector.28" = type { %"struct.std::_Vector_base.29" }
%"struct.std::_Vector_base.29" = type { %"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl" }
%"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl" = type { %"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Line, std::allocator<Line> >::_Vector_impl_data" = type { %class.Line*, %class.Line*, %class.Line* }
%class.Line = type { [2 x i32] }
%"class.std::vector.33" = type { %"struct.std::_Vector_base.34" }
%"struct.std::_Vector_base.34" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::vector.38" = type { %"struct.std::_Vector_base.39" }
%"struct.std::_Vector_base.39" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" = type { i8*, i8*, i8* }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl" }
%"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl" = type { %"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<void *, std::allocator<void *> >::_Vector_impl_data" = type { i8**, i8**, i8** }
%"struct.TriangulationLevel<2>::QuadsData" = type { %"class.std::vector.48", %"class.std::vector.33", %"class.std::vector.18", %"class.std::vector.18", %"class.std::vector.38", %"class.std::vector.43" }
%"class.std::vector.48" = type { %"struct.std::_Vector_base.49" }
%"struct.std::_Vector_base.49" = type { %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl" }
%"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl" = type { %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data" = type { %class.Quad*, %class.Quad*, %class.Quad* }
%class.Quad = type { [4 x i32] }
%"struct.TriangulationLevel<3>::HexesData" = type { %"class.std::vector.53", %"class.std::vector.33", %"class.std::vector.18", %"class.std::vector.18", %"class.std::vector.38", %"class.std::vector.43", %"class.std::vector.18" }
%"class.std::vector.53" = type { %"struct.std::_Vector_base.54" }
%"struct.std::_Vector_base.54" = type { %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl" }
%"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl" = type { %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data" = type { %class.Hexahedron*, %class.Hexahedron*, %class.Hexahedron* }
%class.Hexahedron = type { [6 x i32] }
%"class.std::vector.18" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%struct.TriaNumberCache = type { %struct.TriaNumberCache.63, i32, %"class.std::vector.5", i32, %"class.std::vector.5" }
%struct.TriaNumberCache.63 = type { %struct.TriaNumberCache.64, i32, %"class.std::vector.5", i32, %"class.std::vector.5" }
%struct.TriaNumberCache.64 = type { i32, %"class.std::vector.5", i32, %"class.std::vector.5" }
%class.SmartPointer.121 = type { %class.FiniteElement* }
%class.FiniteElement = type { %class.FiniteElementBase.base, [7 x i8] }
%class.FiniteElementBase.base = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector.78", %"class.std::vector.78", %"class.std::vector.84", %"class.std::vector.84", %"class.std::vector.78", %"class.std::vector.18", %"class.std::vector.58", %"class.std::vector.91", %"class.std::vector.98", %"class.std::vector.5", i8 }>
%class.FiniteElementData = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.FullMatrix = type { %class.Table.base, [4 x i8] }
%class.Table.base = type { %class.TableBase.base }
%"class.std::vector.84" = type { %"struct.std::_Vector_base.85" }
%"struct.std::_Vector_base.85" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair.89"*, %"struct.std::pair.89"*, %"struct.std::pair.89"* }
%"struct.std::pair.89" = type { %"struct.std::pair.83", i32 }
%"struct.std::pair.83" = type { i32, i32 }
%"class.std::vector.78" = type { %"struct.std::_Vector_base.79" }
%"struct.std::_Vector_base.79" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" = type { %"struct.std::pair.83"*, %"struct.std::pair.83"*, %"struct.std::pair.83"* }
%"class.std::vector.91" = type { %"struct.std::_Vector_base.92" }
%"struct.std::_Vector_base.92" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<Point<2>, std::allocator<Point<2> > >::_Vector_impl_data" = type { %class.Point.96*, %class.Point.96*, %class.Point.96* }
%class.Point.96 = type { %class.Tensor.97 }
%class.Tensor.97 = type { [2 x double] }
%"class.std::vector.98" = type { %"struct.std::_Vector_base.99" }
%"struct.std::_Vector_base.99" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data" = type { %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"* }
%"class.std::vector.122" = type { %"struct.std::_Vector_base.123" }
%"struct.std::_Vector_base.123" = type { %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<DoFLevel<3> *, std::allocator<DoFLevel<3> *> >::_Vector_impl_data" = type { %class.DoFLevel**, %class.DoFLevel**, %class.DoFLevel** }
%class.DoFLevel = type { %class.DoFLevel.127, %"class.std::vector.5" }
%class.DoFLevel.127 = type { %class.DoFLevel.128, %"class.std::vector.5" }
%class.DoFLevel.128 = type { %"class.std::vector.5" }
%class.CellAccessor = type { %class.TriaObjectAccessor }
%class.TriaObjectAccessor = type { %class.TriaAccessor }
%class.TriaAccessor = type { i32, i32, %class.Triangulation* }
%"class.MappingQ<3>::ExcLaplaceVectorNotSet" = type <{ %class.ExceptionBase, i32, [4 x i8] }>
%class.ExceptionBase = type { %"class.std::exception", i8*, i32, i8*, i8*, i8* }
%"class.std::exception" = type { i32 (...)** }
%"class.internal::TableBaseAccessors::Accessor" = type { %class.TableBase*, double* }
%class.TableBase = type <{ %class.Subscriptor, double*, i32, %class.TableIndices, [4 x i8] }>
%class.QGauss = type { %class.Quadrature }
%class.Quadrature = type { %class.Subscriptor, i32, %"class.std::vector.58", %"class.std::vector.0" }
%class.TriaIterator = type { %class.TriaRawIterator }
%class.TriaRawIterator = type { %class.CellAccessor }
%"class.std::allocator.60" = type { i8 }
%class.TriaIterator.65 = type { %class.TriaRawIterator.66 }
%class.TriaRawIterator.66 = type { %class.TriaObjectAccessor.68 }
%class.TriaObjectAccessor.68 = type { %class.TriaAccessor }
%"class.__gnu_cxx::__normal_iterator" = type { %class.Point* }
%class.TriaIterator.69 = type { %class.TriaRawIterator.70 }
%class.TriaRawIterator.70 = type { %class.TriaObjectAccessor.72 }
%class.TriaObjectAccessor.72 = type { %class.TriaAccessor }
%"class.__gnu_cxx::new_allocator.61" = type { i8 }
%"struct.std::_Bit_reference" = type { i64*, i64 }
%"struct.std::__false_type" = type { i8 }
%"class.internal::TableBaseAccessors::Accessor.136" = type { %class.TableBase*, double* }
%"class.std::allocator.7" = type { i8 }
%"class.std::vector.73" = type { %"struct.std::_Vector_base.74" }
%"struct.std::_Vector_base.74" = type { %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl" }
%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl" = type { %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data" }
%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data" = type { %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"* }
%"class.Polynomials::LagrangeEquidistant" = type { %"class.Polynomials::Polynomial" }
%class.FE_Q = type { %class.FE_Poly, %"class.std::vector.5" }
%class.FE_Poly = type { %class.FiniteElement.base, i32, %class.TensorProductPolynomials }
%class.FiniteElement.base = type { %class.FiniteElementBase.base }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.140" = type { %"class.Polynomials::LagrangeEquidistant"* }
%"class.std::allocator.75" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.142" = type { %"class.Polynomials::LagrangeEquidistant"* }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.143" = type { i32* }
%"class.std::auto_ptr" = type { %"class.MappingQ<3>::InternalData"* }
%"class.Mapping<3>::InternalDataBase" = type <{ %class.Subscriptor, i32, i32, i32, i8, [3 x i8] }>
%"class.__gnu_cxx::__normal_iterator.134" = type { %class.Tensor.113* }
%"class.std::allocator.131" = type { i8 }
%class.Quadrature.135 = type { %class.Subscriptor, i32, %"class.std::vector.91", %"class.std::vector.0" }
%"class.QProjector<3>::DataSetDescriptor" = type { i32 }
%"class.__gnu_cxx::__normal_iterator.144" = type { double* }
%"class.__gnu_cxx::__normal_iterator.145" = type { %class.Tensor* }
%"class.std::allocator.110" = type { i8 }
%"class.std::allocator.105" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::iterator.67" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%class.FiniteElementBase = type <{ %class.Subscriptor, %class.FiniteElementData, [4 x i8], [8 x %class.FullMatrix], [8 x %class.FullMatrix], %class.FullMatrix, %"class.std::vector.78", %"class.std::vector.78", %"class.std::vector.84", %"class.std::vector.84", %"class.std::vector.78", %"class.std::vector.18", %"class.std::vector.58", %"class.std::vector.91", %"class.std::vector.98", %"class.std::vector.5", i8, [7 x i8] }>
%class.FEValuesData = type opaque
%"class.__gnu_cxx::new_allocator" = type { i8 }
%class.TableBase.115 = type <{ %class.Subscriptor, %class.Tensor*, i32, %class.TableIndices, [4 x i8] }>
%"struct.std::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%"struct.std::iterator.22" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"struct.std::iterator.71" = type { i8 }
%"class.__gnu_cxx::new_allocator.76" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.141" = type { double* }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.__gnu_cxx::new_allocator.132" = type { i8 }
%"class.__gnu_cxx::new_allocator.106" = type { i8 }
%"class.__gnu_cxx::new_allocator.111" = type { i8 }

$_ZN5TableILi2EdE6reinitEjj = comdat any

$_ZN5TableILi2EdEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj = comdat any

$_ZNK8MappingQILi3EE22compute_laplace_vectorER5TableILi2EdE = comdat any

$_ZN16StraightBoundaryILi3EED2Ev = comdat any

$_ZN5PointILi3EEC2Ev = comdat any

$_ZNSaI5PointILi3EEEC2Ev = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaI5PointILi3EEED2Ev = comdat any

$_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv = comdat any

$_ZNK12CellAccessorILi3EE4faceEj = comdat any

$_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj = comdat any

$_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv = comdat any

$_ZNK12TriaAccessorILi3EE17get_triangulationEv = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE6insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv = comdat any

$_ZNK18TriaObjectAccessorILi2ELi3EE4lineEj = comdat any

$_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EEixEm = comdat any

$_ZN5PointILi3EEaSERKS0_ = comdat any

$_ZNK8MappingQILi3EE20apply_laplace_vectorERK5TableILi2EdERSt6vectorI5PointILi3EESaIS7_EE = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE9push_backERKS1_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN8MappingQILi3EEC5Ej = comdat any

$_ZN5TableILi2EdEC2Ev = comdat any

$_Z5powerIjET_S0_j = comdat any

$_ZNSaIjEC2Ev = comdat any

$_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_ = comdat any

$_ZNSaIjED2Ev = comdat any

$_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE9push_backERKS1_ = comdat any

$_ZN11Polynomials19LagrangeEquidistantD2Ev = comdat any

$_ZN24TensorProductPolynomialsILi3EEC2IN11Polynomials19LagrangeEquidistantEEERKSt6vectorIT_SaIS5_EE = comdat any

$_ZNSt6vectorIjSaIjEE6resizeEmj = comdat any

$_ZN4FE_QILi3EED2Ev = comdat any

$_ZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdE = comdat any

$_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIjSaIjEED2Ev = comdat any

$_ZN5TableILi2EdED2Ev = comdat any

$_ZN9MappingQ1ILi3EED2Ev = comdat any

$_ZN8MappingQILi3EED5Ev = comdat any

$_ZN24TensorProductPolynomialsILi3EED2Ev = comdat any

$_ZNK8MappingQILi3EE27transform_unit_to_real_cellERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EE = comdat any

$_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEEC2EPS2_ = comdat any

$_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv = comdat any

$_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEdeEv = comdat any

$_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEED2Ev = comdat any

$_ZNK8MappingQILi3EE27transform_real_to_unit_cellERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EE = comdat any

$_Zor11UpdateFlagsS_ = comdat any

$_ZNK8MappingQILi3EE19transform_covariantEP6TensorILi1ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2Ev = comdat any

$_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv = comdat any

$_Z8contractILi3EEvR6TensorILi1EXT_EERKS1_RKS0_ILi2EXT_EE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEppEi = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZNK8MappingQILi3EE19transform_covariantEP6TensorILi2ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE = comdat any

$_Z8contractILi3EEvR6TensorILi2EXT_EERKS1_S4_ = comdat any

$_ZNK8MappingQILi3EE23transform_contravariantEP6TensorILi1ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE = comdat any

$_Z8contractILi3EEvR6TensorILi1EXT_EERKS0_ILi2EXT_EERKS1_ = comdat any

$_ZNK8MappingQILi3EE23transform_contravariantEP6TensorILi2ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE = comdat any

$_ZNK8MappingQILi3EE10get_degreeEv = comdat any

$_ZN8MappingQILi3EE12InternalDataC5Ej = comdat any

$_ZNSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EEC2Ev = comdat any

$_ZNSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EED2Ev = comdat any

$_ZNK8MappingQILi3EE12InternalData18memory_consumptionEv = comdat any

$_ZN17MemoryConsumption18memory_consumptionISt6vectorI5PointILi3EESaIS3_EEEEjRKS1_IT_SaIS6_EE = comdat any

$_ZN17MemoryConsumption18memory_consumptionEb = comdat any

$_ZN17MemoryConsumption18memory_consumptionIN9MappingQ1ILi3EE12InternalDataEEEjRKT_ = comdat any

$_ZNK8MappingQILi3EE14fill_fe_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEE = comdat any

$_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv = comdat any

$_ZNK8MappingQILi3EE19fill_fe_face_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEERSF_I6TensorILi1ELi3EESaISP_EESK_ = comdat any

$_ZNK8MappingQILi3EE22fill_fe_subface_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEERSF_I6TensorILi1ELi3EESaISP_EESK_ = comdat any

$_ZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE = comdat any

$_ZNK18TriaObjectAccessorILi3ELi3EE4lineEj = comdat any

$_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv = comdat any

$_ZNK8MappingQILi3EE8get_dataE11UpdateFlagsRK10QuadratureILi3EE = comdat any

$_ZNK8MappingQILi3EE13get_face_dataE11UpdateFlagsRK10QuadratureILi2EE = comdat any

$_ZNK8MappingQILi3EE16get_subface_dataE11UpdateFlagsRK10QuadratureILi2EE = comdat any

$_ZNK8MappingQILi3EE22compute_shapes_virtualERKSt6vectorI5PointILi3EESaIS3_EERN9MappingQ1ILi3EE12InternalDataE = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIdSaIdEEC2Ev = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEC2Ev = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZNSt6vectorIdSaIdEE6resizeEmd = comdat any

$_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE6resizeEmS1_ = comdat any

$_ZN6TensorILi1ELi3EEC2Eb = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2Ev = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EEixEm = comdat any

$_ZNSt6vectorIdSaIdEEixEm = comdat any

$_ZN9MappingQ1ILi3EE12InternalData5shapeEjj = comdat any

$_ZNKSt6vectorIjSaIjEEixEm = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm = comdat any

$_ZN9MappingQ1ILi3EE12InternalData10derivativeEjj = comdat any

$_ZN6TensorILi1ELi3EEaSERKS0_ = comdat any

$_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIdSaIdEED2Ev = comdat any

$_ZNK5TableILi2EdE6n_rowsEv = comdat any

$_Z8contractILi3EEdRK6TensorILi1EXT_EES3_ = comdat any

$_ZN5TableILi2EdEclEjj = comdat any

$_ZN10FullMatrixIdED2Ev = comdat any

$_ZN8MappingQILi3EE12InternalDataD2Ev = comdat any

$_ZN6QGaussILi3EED2Ev = comdat any

$_ZNK5TableILi2EdE6n_colsEv = comdat any

$_ZmlILi3EE5PointIXT_EEdRKS1_ = comdat any

$_ZNK5TableILi2EdEixEj = comdat any

$_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb1ELj1EEixEj = comdat any

$_ZN6TensorILi1ELi3EEpLERKS0_ = comdat any

$_ZNK8MappingQILi3EE30compute_mapping_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE = comdat any

$_ZNK8MappingQILi3EE30compute_support_points_laplaceERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE = comdat any

$_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetC5Ei = comdat any

$_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD5Ev = comdat any

$_ZNK8MappingQILi3EE22ExcLaplaceVectorNotSet9PrintInfoERSo = comdat any

$_ZN8MappingQILi3EE12InternalDataD0Ev = comdat any

$_ZN7MappingILi3EE16InternalDataBase16clear_first_cellEv = comdat any

$_ZNK18TriaObjectAccessorILi3ELi3EE4quadEj = comdat any

$_ZNK18TriaObjectAccessorILi3ELi3EE10quad_indexEj = comdat any

$_ZN12TriaIteratorILi3E18TriaObjectAccessorILi2ELi3EEEC2EPK13TriangulationILi3EEiiPKv = comdat any

$_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm = comdat any

$_ZNSt6vectorI10HexahedronSaIS0_EEixEm = comdat any

$_ZNK10Hexahedron4quadEi = comdat any

$_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEC2EPK13TriangulationILi3EEiiPKv = comdat any

$_ZN18TriaObjectAccessorILi2ELi3EEC2EPK13TriangulationILi3EEiiPKv = comdat any

$_ZN12TriaAccessorILi3EEC2EPK13TriangulationILi3EEiiPKv = comdat any

$_ZN11Polynomials10PolynomialIdED2Ev = comdat any

$_ZN11Polynomials10PolynomialIdED0Ev = comdat any

$_ZN4FE_QILi3EED0Ev = comdat any

$_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev = comdat any

$_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED0Ev = comdat any

$_ZN9TableBaseILi2EdED2Ev = comdat any

$_ZN9TableBaseILi2EdED0Ev = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN11Polynomials10PolynomialIdEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials10PolynomialIdEEEEvT_S6_ = comdat any

$_ZSt8_DestroyIN11Polynomials10PolynomialIdEEEvPT_ = comdat any

$_ZSt11__addressofIN11Polynomials10PolynomialIdEEEPT_RS3_ = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEED2Ev = comdat any

$_ZN5TableILi2E6TensorILi1ELi3EEED2Ev = comdat any

$_ZN9MappingQ1ILi3EE12InternalDataD2Ev = comdat any

$_ZN9MappingQ1ILi3EE12InternalDataD0Ev = comdat any

$_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev = comdat any

$_ZN9TableBaseILi2E6TensorILi1ELi3EEED0Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIjED2Ev = comdat any

$_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE = comdat any

$_ZN12TableIndicesILi2EEC2Ejj = comdat any

$_ZNK9TableBaseILi2EdE10n_elementsEv = comdat any

$_ZN12TableIndicesILi2EEC2Ev = comdat any

$_ZN9TableBaseILi2EdE12reset_valuesEv = comdat any

$_ZNK16TableIndicesBaseILi2EEixEj = comdat any

$_ZSt6fill_nIPdjdET_S1_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPdET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEC2ERK9TableBaseILi2EdEPd = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEED2Ev = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE17_S_check_init_lenEmRKS2_ = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EED2Ev = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNSaI5PointILi3EEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_ = comdat any

$_ZSt11__addressofI5PointILi3EEEPT_RS2_ = comdat any

$_ZSt8_DestroyIP5PointILi3EEEvT_S3_ = comdat any

$_ZN5PointILi3EEC2ERKS0_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m = comdat any

$_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E = comdat any

$_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEdeEv = comdat any

$_ZNSt6vectorIbSaIbEEixEm = comdat any

$_ZNKSt14_Bit_referencecvbEv = comdat any

$_ZNSt13_Bit_iteratorC2EPmj = comdat any

$_ZNKSt13_Bit_iteratordeEv = comdat any

$_ZNSt18_Bit_iterator_baseC2EPmj = comdat any

$_ZNSt14_Bit_referenceC2EPmm = comdat any

$_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE18_M_insert_dispatchIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St12__false_type = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St20forward_iterator_tag = comdat any

$_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_ = comdat any

$_ZN9__gnu_cxxneIP5PointILi3EESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_ = comdat any

$_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ = comdat any

$_ZSt7advanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEmEvRT_T0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_S3_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_St26random_access_iterator_tag = comdat any

$_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIP5PointILi3EEET_S3_ = comdat any

$_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIP5PointILi3EEET_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEET_S9_ = comdat any

$_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_ = comdat any

$_ZSt13__copy_move_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIP5PointILi3EESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP5PointILi3EES5_EET0_T_S7_S6_ = comdat any

$_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEElEvRT_T0_St26random_access_iterator_tag = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEpLEl = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS5_SaIS5_EEEES6_EET0_T_SC_SB_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK18TriaObjectAccessorILi2ELi3EE10line_indexEj = comdat any

$_ZN12TriaIteratorILi3E18TriaObjectAccessorILi1ELi3EEEC2EPK13TriangulationILi3EEiiPKv = comdat any

$_ZNSt6vectorI4QuadSaIS0_EEixEm = comdat any

$_ZNK4Quad4lineEi = comdat any

$_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEC2EPK13TriangulationILi3EEiiPKv = comdat any

$_ZN18TriaObjectAccessorILi1ELi3EEC2EPK13TriangulationILi3EEiiPKv = comdat any

$_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEdeEv = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_ = comdat any

$_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E9constructIS2_EEvRS3_PS2_RKT_ = comdat any

$_ZNSt6vectorI5PointILi3EESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE9constructEPS2_RKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E7destroyERS3_PS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE7destroyEPS2_ = comdat any

$_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj = comdat any

$_ZNSt12_Vector_baseIjSaIjEED2Ev = comdat any

$_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_ = comdat any

$_ZNSaIjEC2ERKS_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv = comdat any

$_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPjmjET_S1_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPjET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPjET_S1_ = comdat any

$_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm = comdat any

$_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm = comdat any

$_ZN9TableBaseILi2EdEC2Ev = comdat any

$_ZN5TableILi2EdED0Ev = comdat any

$_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPjEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN11Polynomials19LagrangeEquidistantEEC2Ev = comdat any

$_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSaIN11Polynomials19LagrangeEquidistantEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEED2Ev = comdat any

$_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials19LagrangeEquidistantEEEvT_S5_ = comdat any

$_ZSt8_DestroyIN11Polynomials19LagrangeEquidistantEEvPT_ = comdat any

$_ZSt11__addressofIN11Polynomials19LagrangeEquidistantEEPT_RS2_ = comdat any

$_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E9constructIS2_EEvRS3_PS2_RKT_ = comdat any

$_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_ = comdat any

$_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE9constructEPS2_RKS2_ = comdat any

$_ZN11Polynomials19LagrangeEquidistantC2ERKS0_ = comdat any

$_ZN11Polynomials19LagrangeEquidistantD0Ev = comdat any

$_ZNSt6vectorIdSaIdEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIdSaIdEE5beginEv = comdat any

$_ZNKSt6vectorIdSaIdEE3endEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEED2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev = comdat any

$_ZNSaIdEC2ERKS_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSaIdED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdED2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_ = comdat any

$_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm = comdat any

$_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN11Polynomials19LagrangeEquidistantES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E7destroyERS3_PS2_ = comdat any

$_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aIPN11Polynomials19LagrangeEquidistantES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPN11Polynomials19LagrangeEquidistantES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11Polynomials19LagrangeEquidistantES4_EET0_T_S6_S5_ = comdat any

$_ZSt10_ConstructIN11Polynomials19LagrangeEquidistantES1_EvPT_RKT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE7destroyEPS2_ = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE3endEv = comdat any

$_ZNSaIN11Polynomials10PolynomialIdEEEC2Ev = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEET_SE_RKS3_ = comdat any

$_ZNSaIN11Polynomials10PolynomialIdEEED2Ev = comdat any

$_ZN24TensorProductPolynomialsILi3EE12x_to_the_dimEj = comdat any

$_ZNSt6vectorIjSaIjEEixEm = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2Ev = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EEC2ERKS3_ = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEEvT_SE_St12__false_type = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2ERKS4_ = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEEvT_SE_St20forward_iterator_tag = comdat any

$_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSB_ = comdat any

$_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESB_SB_ = comdat any

$_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE17_S_check_init_lenEmRKS3_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEPNS2_10PolynomialIdEESB_ET0_T_SE_SD_RSaIT1_E = comdat any

$_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESB_SB_St26random_access_iterator_tag = comdat any

$_ZN9__gnu_cxxmiIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv = comdat any

$_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE11_S_max_sizeERKS3_ = comdat any

$_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8max_sizeERKS4_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEPNS2_10PolynomialIdEEET0_T_SE_SD_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS5_SaIS5_EEEEPNS4_10PolynomialIdEEEET0_T_SG_SF_ = comdat any

$_ZN9__gnu_cxxneIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZSt10_ConstructIN11Polynomials10PolynomialIdEENS0_19LagrangeEquidistantEEvPT_RKT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZN11Polynomials10PolynomialIdEC2ERKS1_ = comdat any

$_ZNKSt6vectorIjSaIjEE4sizeEv = comdat any

$_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj = comdat any

$_ZNSt6vectorIjSaIjEE3endEv = comdat any

$_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj = comdat any

$_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv = comdat any

$_ZSt4fillIPjjEvT_S1_RKT0_ = comdat any

$_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorIjSaIjEE5beginEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_ = comdat any

$_ZSt4copyIPjS0_ET0_T_S2_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPjET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZNKSt6vectorIjSaIjEE8max_sizeEv = comdat any

$_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZN6TensorILi1ELi3EE5clearEv = comdat any

$_ZNK6TensorILi1ELi3EEixEj = comdat any

$_ZNK6TensorILi2ELi3EEixEj = comdat any

$_ZN6TensorILi1ELi3EEixEj = comdat any

$_ZN6TensorILi2ELi3EE5clearEv = comdat any

$_ZN6TensorILi2ELi3EEixEj = comdat any

$_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorI5PointILi3EESaIS1_EEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSaISt6vectorI5PointILi3EESaIS1_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorI5PointILi3EESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorI5PointILi3EESaIS2_EEEvT_S6_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5PointILi3EESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorI5PointILi3EESaIS2_EEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorI5PointILi3EESaIS2_EEEPT_RS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorI5PointILi3EESaIS3_EEES5_E10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi1ELi3EEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE10deallocateEPS2_m = comdat any

$_ZNSaI6TensorILi1ELi3EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEED2Ev = comdat any

$_ZSt8_DestroyIP6TensorILi2ELi3EES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIP6TensorILi2ELi3EEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi2ELi3EEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE10deallocateEPS2_m = comdat any

$_ZNSaI6TensorILi2ELi3EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEED2Ev = comdat any

$_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EE4sizeEv = comdat any

$_ZN17MemoryConsumption18memory_consumptionI5PointILi3EEEEjRKSt6vectorIT_SaIS4_EE = comdat any

$_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EEixEm = comdat any

$_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EE8capacityEv = comdat any

$_ZN17MemoryConsumption18memory_consumptionI5PointILi3EEEEjRKT_ = comdat any

$_ZNKSt6vectorI5PointILi3EESaIS1_EE8capacityEv = comdat any

$_ZN6TensorILi1ELi3EE18memory_consumptionEv = comdat any

$_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEdeEv = comdat any

$_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv = comdat any

$_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEdeEv = comdat any

$_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEdeEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev = comdat any

$_ZNSaIdEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaI6TensorILi1ELi3EEEC2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2Ev = comdat any

$_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd = comdat any

$_ZNSt6vectorIdSaIdEE3endEv = comdat any

$_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd = comdat any

$_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv = comdat any

$_ZSt4fillIPddEvT_S1_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorIdSaIdEE5beginEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_ = comdat any

$_ZSt4copyIPdS0_ET0_T_S2_S1_ = comdat any

$_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPdET_S1_ = comdat any

$_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPdmdET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNKSt6vectorIdSaIdEE8max_sizeEv = comdat any

$_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_ = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_ = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE3endEv = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZN6TensorILi1ELi3EEC2ERKS0_ = comdat any

$_ZN9__gnu_cxxmiIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt22__uninitialized_move_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt13copy_backwardIP6TensorILi1ELi3EES2_ET0_T_S4_S3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt4fillIP6TensorILi1ELi3EES1_EvT_S3_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIP6TensorILi1ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aIP6TensorILi1ELi3EES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIP6TensorILi1ELi3EES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6TensorILi1ELi3EES4_EET0_T_S6_S5_ = comdat any

$_ZSt10_ConstructI6TensorILi1ELi3EES1_EvPT_RKT0_ = comdat any

$_ZSt11__addressofI6TensorILi1ELi3EEEPT_RS2_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EP6TensorILi1ELi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIP6TensorILi1ELi3EEET_S3_ = comdat any

$_ZSt12__niter_wrapIP6TensorILi1ELi3EEET_RKS3_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EP6TensorILi1ELi3EES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6TensorILi1ELi3EES5_EET0_T_S7_S6_ = comdat any

$_ZSt8__fill_aIP6TensorILi1ELi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_ = comdat any

$_ZSt20uninitialized_fill_nIP6TensorILi1ELi3EEmS1_ET_S3_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi1ELi3EEmS3_EET_S5_T0_RKT1_ = comdat any

$_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE8max_sizeEv = comdat any

$_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8allocateEmPKv = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaI6TensorILi2ELi3EEEC2Ev = comdat any

$_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2Ev = comdat any

$_ZN8internal18TableBaseAccessors8AccessorILi2EdLb1ELj1EEC2ERK9TableBaseILi2EdEPKd = comdat any

$_ZNK5PointILi3EEmlEd = comdat any

$_ZN6TensorILi1ELi3EEmLERKd = comdat any

$_ZN5PointILi3EEC2ERK6TensorILi1ELi3EE = comdat any

$_ZTV8MappingQILi3EE = comdat any

$_ZTSN7MappingILi3EE16InternalDataBaseE = comdat any

$_ZTIN7MappingILi3EE16InternalDataBaseE = comdat any

$_ZTSN8MappingQILi3EE12InternalDataE = comdat any

$_ZTSN9MappingQ1ILi3EE12InternalDataE = comdat any

$_ZTIN9MappingQ1ILi3EE12InternalDataE = comdat any

$_ZTIN8MappingQILi3EE12InternalDataE = comdat any

$_ZTVN8MappingQILi3EE12InternalDataE = comdat any

$_ZZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary = comdat any

$_ZGVZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary = comdat any

$_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv2 = comdat any

$_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv3 = comdat any

$_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv4 = comdat any

$_ZTVN8MappingQILi3EE22ExcLaplaceVectorNotSetE = comdat any

$_ZN8MappingQILi3EE26use_mapping_q_on_all_cellsE = comdat any

$_ZTS8MappingQILi3EE = comdat any

$_ZTS9MappingQ1ILi3EE = comdat any

$_ZTS7MappingILi3EE = comdat any

$_ZTI7MappingILi3EE = comdat any

$_ZTI9MappingQ1ILi3EE = comdat any

$_ZTI8MappingQILi3EE = comdat any

$_ZTSN8MappingQILi3EE22ExcLaplaceVectorNotSetE = comdat any

$_ZTIN8MappingQILi3EE22ExcLaplaceVectorNotSetE = comdat any

$_ZTVN11Polynomials10PolynomialIdEE = comdat any

$_ZTSN11Polynomials10PolynomialIdEE = comdat any

$_ZTIN11Polynomials10PolynomialIdEE = comdat any

$_ZTV4FE_QILi3EE = comdat any

$_ZTS4FE_QILi3EE = comdat any

$_ZTS7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = comdat any

$_ZTS13FiniteElementILi3EE = comdat any

$_ZTS17FiniteElementBaseILi3EE = comdat any

$_ZTS17FiniteElementDataILi3EE = comdat any

$_ZTI17FiniteElementDataILi3EE = comdat any

$_ZTI17FiniteElementBaseILi3EE = comdat any

$_ZTI13FiniteElementILi3EE = comdat any

$_ZTI7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = comdat any

$_ZTI4FE_QILi3EE = comdat any

$_ZTV7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = comdat any

$_ZTV9TableBaseILi2EdE = comdat any

$_ZTS9TableBaseILi2EdE = comdat any

$_ZTI9TableBaseILi2EdE = comdat any

$_ZTVN9MappingQ1ILi3EE12InternalDataE = comdat any

$_ZTV9TableBaseILi2E6TensorILi1ELi3EEE = comdat any

$_ZTS9TableBaseILi2E6TensorILi1ELi3EEE = comdat any

$_ZTI9TableBaseILi2E6TensorILi1ELi3EEE = comdat any

$_ZTV5TableILi2EdE = comdat any

$_ZTS5TableILi2EdE = comdat any

$_ZTI5TableILi2EdE = comdat any

$_ZTVN11Polynomials19LagrangeEquidistantE = comdat any

$_ZTSN11Polynomials19LagrangeEquidistantE = comdat any

$_ZTIN11Polynomials19LagrangeEquidistantE = comdat any

$_ZZNK18TriaObjectAccessorILi3ELi3EE4lineEjE12lookup_table = comdat any

@_ZZNK8MappingQILi3EE25set_laplace_on_hex_vectorER5TableILi2EdEE5loqv2 = internal constant [26 x double] [double 7.812500e-03, double 7.812500e-03, double 7.812500e-03, double 7.812500e-03, double 7.812500e-03, double 7.812500e-03, double 7.812500e-03, double 7.812500e-03, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FA2AAAAAAAAAAAB, double 0x3FB5555555555555, double 0x3FB5555555555555, double 0x3FB5555555555555, double 0x3FB5555555555555, double 0x3FB5555555555555, double 0x3FB5555555555555], align 16
@_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE27face_vertex_to_cell_vertex1 = internal constant [6 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 4, i32 5, i32 6, i32 7], [4 x i32] [i32 0, i32 1, i32 5, i32 4], [4 x i32] [i32 1, i32 5, i32 6, i32 2], [4 x i32] [i32 3, i32 2, i32 6, i32 7], [4 x i32] [i32 0, i32 4, i32 7, i32 3]], align 16
@_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE27face_vertex_to_cell_vertex2 = internal constant [6 x [4 x i32]] [[4 x i32] [i32 0, i32 3, i32 2, i32 1], [4 x i32] [i32 4, i32 7, i32 6, i32 5], [4 x i32] [i32 0, i32 4, i32 5, i32 1], [4 x i32] [i32 1, i32 2, i32 6, i32 5], [4 x i32] [i32 3, i32 7, i32 6, i32 2], [4 x i32] [i32 0, i32 3, i32 7, i32 4]], align 16
@_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE23face_line_to_cell_line1 = internal constant [6 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 4, i32 5, i32 6, i32 7], [4 x i32] [i32 0, i32 9, i32 4, i32 8], [4 x i32] [i32 9, i32 5, i32 10, i32 1], [4 x i32] [i32 2, i32 10, i32 6, i32 11], [4 x i32] [i32 8, i32 7, i32 11, i32 3]], align 16
@_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE23face_line_to_cell_line2 = internal constant [6 x [4 x i32]] [[4 x i32] [i32 3, i32 2, i32 1, i32 0], [4 x i32] [i32 7, i32 6, i32 5, i32 4], [4 x i32] [i32 8, i32 4, i32 9, i32 0], [4 x i32] [i32 1, i32 10, i32 5, i32 9], [4 x i32] [i32 11, i32 6, i32 10, i32 2], [4 x i32] [i32 3, i32 11, i32 7, i32 8]], align 16
@_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary = internal global %class.StraightBoundary zeroinitializer, align 8
@_ZGVZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary = internal global i64 0, align 8
@__dso_handle = external global i8
@_ZTV8MappingQILi3EE = weak_odr unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8MappingQILi3EE to i8*), i8* bitcast (void (%class.MappingQ*)* @_ZN8MappingQILi3EED1Ev to i8*), i8* bitcast (void (%class.MappingQ*)* @_ZN8MappingQILi3EED0Ev to i8*), i8* bitcast (void (%class.Point*, %class.MappingQ*, %class.TriaIterator*, %class.Point*)* @_ZNK8MappingQILi3EE27transform_unit_to_real_cellERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EE to i8*), i8* bitcast (void (%class.Point*, %class.MappingQ*, %class.TriaIterator*, %class.Point*)* @_ZNK8MappingQILi3EE27transform_real_to_unit_cellERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EE to i8*), i8* bitcast (void (%class.MappingQ*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)* @_ZNK8MappingQILi3EE19transform_covariantEP6TensorILi1ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast (void (%class.MappingQ*, %class.Tensor.113*, %class.Tensor.113*, %class.Tensor.113*, %"class.Mapping<3>::InternalDataBase"*)* @_ZNK8MappingQILi3EE19transform_covariantEP6TensorILi2ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast (void (%class.MappingQ*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"*)* @_ZNK8MappingQILi3EE23transform_contravariantEP6TensorILi1ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast (void (%class.MappingQ*, %class.Tensor.113*, %class.Tensor.113*, %class.Tensor.113*, %"class.Mapping<3>::InternalDataBase"*)* @_ZNK8MappingQILi3EE23transform_contravariantEP6TensorILi2ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast (i32 (%class.MappingQ1*, i32)* @_ZNK9MappingQ1ILi3EE11update_onceE11UpdateFlags to i8*), i8* bitcast (i32 (%class.MappingQ1*, i32)* @_ZNK9MappingQ1ILi3EE11update_eachE11UpdateFlags to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)* @_ZNK8MappingQILi3EE8get_dataE11UpdateFlagsRK10QuadratureILi3EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature.135*)* @_ZNK8MappingQILi3EE13get_face_dataE11UpdateFlagsRK10QuadratureILi2EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature.135*)* @_ZNK8MappingQILi3EE16get_subface_dataE11UpdateFlagsRK10QuadratureILi2EE to i8*), i8* bitcast (void (%class.MappingQ*, %class.TriaIterator.118*, %class.Quadrature*, %"class.Mapping<3>::InternalDataBase"*, %"class.std::vector.58"*, %"class.std::vector.0"*)* @_ZNK8MappingQILi3EE14fill_fe_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEE to i8*), i8* bitcast (void (%class.MappingQ*, %class.TriaIterator.118*, i32, %class.Quadrature.135*, %"class.Mapping<3>::InternalDataBase"*, %"class.std::vector.58"*, %"class.std::vector.0"*, %"class.std::vector.103"*, %"class.std::vector.58"*)* @_ZNK8MappingQILi3EE19fill_fe_face_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEERSF_I6TensorILi1ELi3EESaISP_EESK_ to i8*), i8* bitcast (void (%class.MappingQ*, %class.TriaIterator.118*, i32, i32, %class.Quadrature.135*, %"class.Mapping<3>::InternalDataBase"*, %"class.std::vector.58"*, %"class.std::vector.0"*, %"class.std::vector.103"*, %"class.std::vector.58"*)* @_ZNK8MappingQILi3EE22fill_fe_subface_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEERSF_I6TensorILi1ELi3EESaISP_EESK_ to i8*), i8* bitcast (void (%class.MappingQ*, %"class.std::vector.58"*, %"class.MappingQ1<3>::InternalData"*)* @_ZNK8MappingQILi3EE22compute_shapes_virtualERKSt6vectorI5PointILi3EESaIS3_EERN9MappingQ1ILi3EE12InternalDataE to i8*), i8* bitcast (void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)* @_ZNK8MappingQILi3EE30compute_mapping_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE to i8*), i8* bitcast (void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)* @_ZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE to i8*), i8* bitcast (void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)* @_ZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN7MappingILi3EE16InternalDataBaseE = linkonce_odr constant [35 x i8] c"N7MappingILi3EE16InternalDataBaseE\00", comdat
@_ZTI11Subscriptor = external constant i8*
@_ZTIN7MappingILi3EE16InternalDataBaseE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZTSN7MappingILi3EE16InternalDataBaseE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTSN8MappingQILi3EE12InternalDataE = linkonce_odr constant [32 x i8] c"N8MappingQILi3EE12InternalDataE\00", comdat
@_ZTSN9MappingQ1ILi3EE12InternalDataE = linkonce_odr constant [33 x i8] c"N9MappingQ1ILi3EE12InternalDataE\00", comdat
@_ZTIN9MappingQ1ILi3EE12InternalDataE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @_ZTSN9MappingQ1ILi3EE12InternalDataE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*) }, comdat
@_ZTIN8MappingQILi3EE12InternalDataE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN8MappingQILi3EE12InternalDataE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*) }, comdat
@_ZTVN8MappingQILi3EE12InternalDataE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i8* bitcast (void (%"class.MappingQ<3>::InternalData"*)* @_ZN8MappingQILi3EE12InternalDataD2Ev to i8*), i8* bitcast (void (%"class.MappingQ<3>::InternalData"*)* @_ZN8MappingQILi3EE12InternalDataD0Ev to i8*), i8* bitcast (void (%"class.Mapping<3>::InternalDataBase"*)* @_ZN7MappingILi3EE16InternalDataBase16clear_first_cellEv to i8*), i8* bitcast (i32 (%"class.MappingQ<3>::InternalData"*)* @_ZNK8MappingQILi3EE12InternalData18memory_consumptionEv to i8*)] }, comdat, align 8
@_ZZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary = linkonce_odr global %class.StraightBoundary zeroinitializer, comdat, align 8
@_ZGVZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary = linkonce_odr global i64 0, comdat, align 8
@_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv2 = linkonce_odr constant [8 x double] [double 6.250000e-02, double 6.250000e-02, double 6.250000e-02, double 6.250000e-02, double 1.875000e-01, double 1.875000e-01, double 1.875000e-01, double 1.875000e-01], comdat, align 16
@_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv3 = linkonce_odr constant [48 x double] [double 0x3FB372FE4C568C85, double 0x3F8948B0FCD6E9E0, double 0x3F8564E4872C00F9, double 0x3F8948B0FCD6E9E0, double 0x3FCB59B59B59B59B, double 0x3FC00BAB656100BB, double 0x3FAEA1EA1EA1EA1F, double 0x3FA756CAC201756D, double 0x3FAEA1EA1EA1EA1F, double 0x3FA756CAC201756D, double 0x3FCB59B59B59B59B, double 0x3FC00BAB656100BB, double 0x3F8948B0FCD6E9E0, double 0x3FB372FE4C568C85, double 0x3F8948B0FCD6E9E0, double 0x3F8564E4872C00F9, double 0x3FC00BAB656100BB, double 0x3FCB59B59B59B59B, double 0x3FCB59B59B59B59B, double 0x3FC00BAB656100BB, double 0x3FA756CAC201756D, double 0x3FAEA1EA1EA1EA1F, double 0x3FAEA1EA1EA1EA1F, double 0x3FA756CAC201756D, double 0x3F8948B0FCD6E9E0, double 0x3F8564E4872C00F9, double 0x3F8948B0FCD6E9E0, double 0x3FB372FE4C568C85, double 0x3FAEA1EA1EA1EA1F, double 0x3FA756CAC201756D, double 0x3FA756CAC201756D, double 0x3FAEA1EA1EA1EA1F, double 0x3FCB59B59B59B59B, double 0x3FC00BAB656100BB, double 0x3FC00BAB656100BB, double 0x3FCB59B59B59B59B, double 0x3F8564E4872C00F9, double 0x3F8948B0FCD6E9E0, double 0x3FB372FE4C568C85, double 0x3F8948B0FCD6E9E0, double 0x3FA756CAC201756D, double 0x3FAEA1EA1EA1EA1F, double 0x3FC00BAB656100BB, double 0x3FCB59B59B59B59B, double 0x3FC00BAB656100BB, double 0x3FCB59B59B59B59B, double 0x3FA756CAC201756D, double 0x3FAEA1EA1EA1EA1F], comdat, align 16
@_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv4 = linkonce_odr constant [144 x double] [double 0x3FB2F58B81702DE1, double 0xBF519FFFFFFFFB5B, double 0x3F5F5D1FA3F481E3, double 0xBF519FFFFFFFFB9F, double 0x3FCC8F702E05C0D9, double 0x3FC13D5CC3987311, double 0x3FA385A9B536A7AD, double 0x3F9DD4AC9592B05D, double 0x3F968919E33C67A1, double 0x3F90647E8FD1FAC0, double 0x3F9DD4AC9592B060, double 0x3F968919E33C6794, double 0x3F90647E8FD1FABA, double 0x3FCC8F702E05C0DB, double 0x3FC13D5CC3987313, double 0x3FA385A9B536A7AE, double 0x3F7B3AF75EEBDA9E, double 0x3F7B3AF75EEBDD95, double 0x3F678A11422847F0, double 0x3F678A114228466E, double 0x3FC38E05C0B81730, double 0x3FCE0E6D4DA9B542, double 0x3FC38E05C0B81739, double 0x3FB43BAF75EEBD9C, double 0x3FAE8FFFFFFFFFF2, double 0x3FA288A1142284CB, double 0x3F998FD1FA3F4831, double 0x3FA4E64AC9592A2A, double 0x3F998FD1FA3F4851, double 0x3FB43BAF75EEBE26, double 0x3FAE90000000002D, double 0x3FA288A1142284D7, double 0xBF51A00000000C1F, double 0x3FB2F58B81702DEE, double 0xBF519FFFFFFFF969, double 0x3F5F5D1FA3F47FAB, double 0x3FA385A9B536A7B6, double 0x3FC13D5CC3987309, double 0x3FCC8F702E05C0F2, double 0x3FCC8F702E05C0A8, double 0x3FC13D5CC3987305, double 0x3FA385A9B536A7A9, double 0x3F90647E8FD1FAAB, double 0x3F968919E33C679C, double 0x3F9DD4AC9592B07A, double 0x3F9DD4AC9592B344, double 0x3F968919E33C679E, double 0x3F90647E8FD1FACE, double 0x3F7B3AF75EEBDAAD, double 0x3F678A114228468F, double 0x3F678A1142284808, double 0x3F7B3AF75EEBDD9D, double 0x3FB43BAF75EEBE24, double 0x3FAE900000000025, double 0x3FA288A1142284D8, double 0x3F998FD1FA3F4835, double 0x3FA4E64AC9592A2D, double 0x3F998FD1FA3F4855, double 0x3FB43BAF75EEBD9C, double 0x3FAE8FFFFFFFFFE3, double 0x3FA288A1142284C3, double 0x3FC38E05C0B81734, double 0x3FCE0E6D4DA9B544, double 0x3FC38E05C0B81739, double 0x3F86AAAAAAAAA9F5, double 0x3F86AAAAAAAAAAB9, double 0x3F86AAAAAAAAAB93, double 0x3F86AAAAAAAAAAC0, double 0x3FB1555555555595, double 0x3FBA800000000041, double 0x3FB155555555559F, double 0x3FB1555555555574, double 0x3FBA7FFFFFFFFFBA, double 0x3FB1555555555585, double 0x3FB1555555555570, double 0x3FBA7FFFFFFFFFAD, double 0x3FB155555555557E, double 0x3FB1555555555597, double 0x3FBA80000000004E, double 0x3FB15555555555A2, double 0x3F678A11422843F7, double 0x3F7B3AF75EEBDBFA, double 0x3F7B3AF75EEBDF05, double 0x3F678A1142284550, double 0x3FA288A1142284D1, double 0x3FAE900000000028, double 0x3FB43BAF75EEBE3B, double 0x3FC38E05C0B81723, double 0x3FCE0E6D4DA9B513, double 0x3FC38E05C0B8172E, double 0x3FA288A1142284BB, double 0x3FAE8FFFFFFFFFEC, double 0x3FB43BAF75EEBDB4, double 0x3F998FD1FA3F4834, double 0x3FA4E64AC9592BB2, double 0x3F998FD1FA3F484E, double 0xBF51A00000000BF3, double 0x3F5F5D1FA3F47FAE, double 0xBF519FFFFFFFF911, double 0x3FB2F58B81702DF0, double 0x3F9DD4AC9592B342, double 0x3F968919E33C6793, double 0x3F90647E8FD1FACA, double 0x3F90647E8FD1FAAC, double 0x3F968919E33C67A0, double 0x3F9DD4AC9592B081, double 0x3FCC8F702E05C0A8, double 0x3FC13D5CC3987302, double 0x3FA385A9B536A7A6, double 0x3FA385A9B536A7B5, double 0x3FC13D5CC398730B, double 0x3FCC8F702E05C0F6, double 0x3F678A11422843E2, double 0x3F678A1142284531, double 0x3F7B3AF75EEBDF04, double 0x3F7B3AF75EEBDC08, double 0x3F998FD1FA3F482B, double 0x3FA4E64AC9592BA5, double 0x3F998FD1FA3F4845, double 0x3FA288A1142284BC, double 0x3FAE8FFFFFFFFFF5, double 0x3FB43BAF75EEBDB5, double 0x3FC38E05C0B81720, double 0x3FCE0E6D4DA9B50B, double 0x3FC38E05C0B8172A, double 0x3FA288A1142284CD, double 0x3FAE90000000002E, double 0x3FB43BAF75EEBE3C, double 0x3F5F5D1FA3F47DD2, double 0xBF51A000000009F5, double 0x3FB2F58B81702E02, double 0xBF51A00000000985, double 0x3F90647E8FD1FACB, double 0x3F968919E33C67A3, double 0x3F9DD4AC9592B36B, double 0x3FA385A9B536A7B1, double 0x3FC13D5CC3987300, double 0x3FCC8F702E05C0C8, double 0x3FA385A9B536A7B2, double 0x3FC13D5CC39872FD, double 0x3FCC8F702E05C0C6, double 0x3F90647E8FD1FAC9, double 0x3F968919E33C67AF, double 0x3F9DD4AC9592B36F], comdat, align 16
@_ZN9MappingQ1ILi3EE14vertex_mappingE = external constant [8 x i32], align 16
@_ZTVN8MappingQILi3EE22ExcLaplaceVectorNotSetE = weak_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE22ExcLaplaceVectorNotSetE to i8*), i8* bitcast (void (%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*)* @_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD1Ev to i8*), i8* bitcast (void (%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*)* @_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD0Ev to i8*), i8* bitcast (i8* (%class.ExceptionBase*)* @_ZNK13ExceptionBase4whatEv to i8*), i8* bitcast (void (%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, %"class.std::basic_ostream"*)* @_ZNK8MappingQILi3EE22ExcLaplaceVectorNotSet9PrintInfoERSo to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [35 x i8] c"laplace_vector not set for degree=\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZN8MappingQILi3EE26use_mapping_q_on_all_cellsE = weak_odr constant i8 0, comdat, align 1
@_ZTS8MappingQILi3EE = weak_odr constant [16 x i8] c"8MappingQILi3EE\00", comdat
@_ZTS9MappingQ1ILi3EE = linkonce_odr constant [17 x i8] c"9MappingQ1ILi3EE\00", comdat
@_ZTS7MappingILi3EE = linkonce_odr constant [15 x i8] c"7MappingILi3EE\00", comdat
@_ZTI7MappingILi3EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTS7MappingILi3EE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTI9MappingQ1ILi3EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZTS9MappingQ1ILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7MappingILi3EE to i8*) }, comdat
@_ZTI8MappingQILi3EE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZTS8MappingQILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9MappingQ1ILi3EE to i8*) }, comdat
@_ZTSN8MappingQILi3EE22ExcLaplaceVectorNotSetE = weak_odr constant [42 x i8] c"N8MappingQILi3EE22ExcLaplaceVectorNotSetE\00", comdat
@_ZTI13ExceptionBase = external constant i8*
@_ZTIN8MappingQILi3EE22ExcLaplaceVectorNotSetE = weak_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZTSN8MappingQILi3EE22ExcLaplaceVectorNotSetE, i32 0, i32 0), i8* bitcast (i8** @_ZTI13ExceptionBase to i8*) }, comdat
@_ZTVN11Polynomials10PolynomialIdEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11Polynomials10PolynomialIdEE to i8*), i8* bitcast (void (%"class.Polynomials::Polynomial"*)* @_ZN11Polynomials10PolynomialIdED2Ev to i8*), i8* bitcast (void (%"class.Polynomials::Polynomial"*)* @_ZN11Polynomials10PolynomialIdED0Ev to i8*)] }, comdat, align 8
@_ZTSN11Polynomials10PolynomialIdEE = linkonce_odr constant [31 x i8] c"N11Polynomials10PolynomialIdEE\00", comdat
@_ZTIN11Polynomials10PolynomialIdEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN11Polynomials10PolynomialIdEE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTV4FE_QILi3EE = linkonce_odr unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI4FE_QILi3EE to i8*), i8* bitcast (void (%class.FE_Q*)* @_ZN4FE_QILi3EED2Ev to i8*), i8* bitcast (void (%class.FE_Q*)* @_ZN4FE_QILi3EED0Ev to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.FE_Q*)* @_ZNK4FE_QILi3EE8get_nameB5cxx11Ev to i8*), i8* bitcast (double (%class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11shape_valueEjRK5PointILi3EE to i8*), i8* bitcast (double (%class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE21shape_value_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE10shape_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20shape_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor.113*, %class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15shape_grad_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor.113*, %class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE25shape_grad_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.FE_Q*, %class.FiniteElementBase*, %class.FullMatrix*)* @_ZNK4FE_QILi3EE24get_interpolation_matrixERK17FiniteElementBaseILi3EER10FullMatrixIdE to i8*), i8* bitcast (void (%class.Point*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE18unit_support_pointEj to i8*), i8* bitcast (void (%class.Point.96*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE23unit_face_support_pointEj to i8*), i8* bitcast (i32 (%class.FE_Poly*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15n_base_elementsEv to i8*), i8* bitcast (%class.FiniteElement* (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE12base_elementEj to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20element_multiplicityEj to i8*), i8* bitcast (i1 (%class.FE_Q*, i32, i32)* @_ZNK4FE_QILi3EE19has_support_on_faceEjj to i8*), i8* bitcast (i32 (%class.FE_Q*)* @_ZNK4FE_QILi3EE18memory_consumptionEv to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_onceE11UpdateFlags to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_eachE11UpdateFlags to i8*), i8* bitcast (%class.FiniteElement* (%class.FE_Q*)* @_ZNK4FE_QILi3EE5cloneEv to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FE_Poly*, i32, %class.Mapping*, %class.Quadrature*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.135*)* @_ZNK13FiniteElementILi3EE13get_face_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.135*)* @_ZNK13FiniteElementILi3EE16get_subface_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator.118*, %class.Quadrature*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator.118*, i32, %class.Quadrature.135*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator.118*, i32, i32, %class.Quadrature.135*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*)] }, comdat, align 8
@_ZTS4FE_QILi3EE = linkonce_odr constant [12 x i8] c"4FE_QILi3EE\00", comdat
@_ZTS7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = linkonce_odr constant [47 x i8] c"7FE_PolyI24TensorProductPolynomialsILi3EELi3EE\00", comdat
@_ZTS13FiniteElementILi3EE = linkonce_odr constant [22 x i8] c"13FiniteElementILi3EE\00", comdat
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTS17FiniteElementBaseILi3EE = linkonce_odr constant [26 x i8] c"17FiniteElementBaseILi3EE\00", comdat
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS17FiniteElementDataILi3EE = linkonce_odr constant [26 x i8] c"17FiniteElementDataILi3EE\00", comdat
@_ZTI17FiniteElementDataILi3EE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTS17FiniteElementDataILi3EE, i32 0, i32 0) }, comdat
@_ZTI17FiniteElementBaseILi3EE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTS17FiniteElementBaseILi3EE, i32 0, i32 0), i32 0, i32 2, i8* bitcast (i8** @_ZTI11Subscriptor to i8*), i64 2, i8* bitcast ({ i8*, i8* }* @_ZTI17FiniteElementDataILi3EE to i8*), i64 6146 }, comdat
@_ZTI13FiniteElementILi3EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTS13FiniteElementILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTI17FiniteElementBaseILi3EE to i8*) }, comdat
@_ZTI7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_ZTS7FE_PolyI24TensorProductPolynomialsILi3EELi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13FiniteElementILi3EE to i8*) }, comdat
@_ZTI4FE_QILi3EE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZTS4FE_QILi3EE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7FE_PolyI24TensorProductPolynomialsILi3EELi3EE to i8*) }, comdat
@_ZTV7FE_PolyI24TensorProductPolynomialsILi3EELi3EE = linkonce_odr unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7FE_PolyI24TensorProductPolynomialsILi3EELi3EE to i8*), i8* bitcast (void (%class.FE_Poly*)* @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev to i8*), i8* bitcast (void (%class.FE_Poly*)* @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (double (%class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11shape_valueEjRK5PointILi3EE to i8*), i8* bitcast (double (%class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE21shape_value_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE10shape_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor*, %class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20shape_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.Tensor.113*, %class.FE_Poly*, i32, %class.Point*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15shape_grad_gradEjRK5PointILi3EE to i8*), i8* bitcast (void (%class.Tensor.113*, %class.FE_Poly*, i32, %class.Point*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE25shape_grad_grad_componentEjRK5PointILi3EEj to i8*), i8* bitcast (void (%class.FiniteElementBase*, %class.FiniteElementBase*, %class.FullMatrix*)* @_ZNK17FiniteElementBaseILi3EE24get_interpolation_matrixERKS0_R10FullMatrixIdE to i8*), i8* bitcast (void (%class.Point*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE18unit_support_pointEj to i8*), i8* bitcast (void (%class.Point.96*, %class.FiniteElementBase*, i32)* @_ZNK17FiniteElementBaseILi3EE23unit_face_support_pointEj to i8*), i8* bitcast (i32 (%class.FE_Poly*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15n_base_elementsEv to i8*), i8* bitcast (%class.FiniteElement* (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE12base_elementEj to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20element_multiplicityEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%class.FiniteElement*)* @_ZNK13FiniteElementILi3EE18memory_consumptionEv to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_onceE11UpdateFlags to i8*), i8* bitcast (i32 (%class.FE_Poly*, i32)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_eachE11UpdateFlags to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FE_Poly*, i32, %class.Mapping*, %class.Quadrature*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.135*)* @_ZNK13FiniteElementILi3EE13get_face_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (%"class.Mapping<3>::InternalDataBase"* (%class.FiniteElement*, i32, %class.Mapping*, %class.Quadrature.135*)* @_ZNK13FiniteElementILi3EE16get_subface_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator.118*, %class.Quadrature*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator.118*, i32, %class.Quadrature.135*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*), i8* bitcast (void (%class.FE_Poly*, %class.Mapping*, %class.TriaIterator.118*, i32, i32, %class.Quadrature.135*, %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"*, %class.FEValuesData*)* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE to i8*)] }, comdat, align 8
@_ZTV9TableBaseILi2EdE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2EdE to i8*), i8* bitcast (void (%class.TableBase*)* @_ZN9TableBaseILi2EdED2Ev to i8*), i8* bitcast (void (%class.TableBase*)* @_ZN9TableBaseILi2EdED0Ev to i8*)] }, comdat, align 8
@_ZTS9TableBaseILi2EdE = linkonce_odr constant [18 x i8] c"9TableBaseILi2EdE\00", comdat
@_ZTI9TableBaseILi2EdE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS9TableBaseILi2EdE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@_ZTVN9MappingQ1ILi3EE12InternalDataE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i8* bitcast (void (%"class.MappingQ1<3>::InternalData"*)* @_ZN9MappingQ1ILi3EE12InternalDataD2Ev to i8*), i8* bitcast (void (%"class.MappingQ1<3>::InternalData"*)* @_ZN9MappingQ1ILi3EE12InternalDataD0Ev to i8*), i8* bitcast (void (%"class.Mapping<3>::InternalDataBase"*)* @_ZN7MappingILi3EE16InternalDataBase16clear_first_cellEv to i8*), i8* bitcast (i32 (%"class.MappingQ1<3>::InternalData"*)* @_ZNK9MappingQ1ILi3EE12InternalData18memory_consumptionEv to i8*)] }, comdat, align 8
@_ZTV9TableBaseILi2E6TensorILi1ELi3EEE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2E6TensorILi1ELi3EEE to i8*), i8* bitcast (void (%class.TableBase.115*)* @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev to i8*), i8* bitcast (void (%class.TableBase.115*)* @_ZN9TableBaseILi2E6TensorILi1ELi3EEED0Ev to i8*)] }, comdat, align 8
@_ZTS9TableBaseILi2E6TensorILi1ELi3EEE = linkonce_odr constant [34 x i8] c"9TableBaseILi2E6TensorILi1ELi3EEE\00", comdat
@_ZTI9TableBaseILi2E6TensorILi1ELi3EEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZTS9TableBaseILi2E6TensorILi1ELi3EEE, i32 0, i32 0), i8* bitcast (i8** @_ZTI11Subscriptor to i8*) }, comdat
@.str.2 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"vector::_M_range_insert\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@_ZTV5TableILi2EdE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI5TableILi2EdE to i8*), i8* bitcast (void (%class.Table*)* @_ZN5TableILi2EdED2Ev to i8*), i8* bitcast (void (%class.Table*)* @_ZN5TableILi2EdED0Ev to i8*)] }, comdat, align 8
@_ZTS5TableILi2EdE = linkonce_odr constant [14 x i8] c"5TableILi2EdE\00", comdat
@_ZTI5TableILi2EdE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS5TableILi2EdE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI9TableBaseILi2EdE to i8*) }, comdat
@_ZTVN11Polynomials19LagrangeEquidistantE = linkonce_odr unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11Polynomials19LagrangeEquidistantE to i8*), i8* bitcast (void (%"class.Polynomials::LagrangeEquidistant"*)* @_ZN11Polynomials19LagrangeEquidistantD2Ev to i8*), i8* bitcast (void (%"class.Polynomials::LagrangeEquidistant"*)* @_ZN11Polynomials19LagrangeEquidistantD0Ev to i8*)] }, comdat, align 8
@_ZTSN11Polynomials19LagrangeEquidistantE = linkonce_odr constant [37 x i8] c"N11Polynomials19LagrangeEquidistantE\00", comdat
@_ZTIN11Polynomials19LagrangeEquidistantE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZTSN11Polynomials19LagrangeEquidistantE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11Polynomials10PolynomialIdEE to i8*) }, comdat
@_ZZNK18TriaObjectAccessorILi3ELi3EE4lineEjE12lookup_table = linkonce_odr constant [12 x [3 x i32]] [[3 x i32] [i32 0, i32 0, i32 3], [3 x i32] [i32 0, i32 1, i32 2], [3 x i32] [i32 0, i32 2, i32 1], [3 x i32] [i32 0, i32 3, i32 0], [3 x i32] [i32 1, i32 0, i32 3], [3 x i32] [i32 1, i32 1, i32 2], [3 x i32] [i32 1, i32 2, i32 1], [3 x i32] [i32 1, i32 3, i32 0], [3 x i32] [i32 2, i32 3, i32 0], [3 x i32] [i32 2, i32 1, i32 2], [3 x i32] [i32 4, i32 1, i32 2], [3 x i32] [i32 4, i32 3, i32 0]], comdat, align 16
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0
@x.921 = common global i32 0
@y.922 = common global i32 0
@x.923 = common global i32 0
@y.924 = common global i32 0
@x.925 = common global i32 0
@y.926 = common global i32 0
@x.927 = common global i32 0
@y.928 = common global i32 0
@x.929 = common global i32 0
@y.930 = common global i32 0
@x.931 = common global i32 0
@y.932 = common global i32 0
@x.933 = common global i32 0
@y.934 = common global i32 0
@x.935 = common global i32 0
@y.936 = common global i32 0
@x.937 = common global i32 0
@y.938 = common global i32 0
@x.939 = common global i32 0
@y.940 = common global i32 0
@x.941 = common global i32 0
@y.942 = common global i32 0
@x.943 = common global i32 0
@y.944 = common global i32 0
@x.945 = common global i32 0
@y.946 = common global i32 0
@x.947 = common global i32 0
@y.948 = common global i32 0
@x.949 = common global i32 0
@y.950 = common global i32 0
@x.951 = common global i32 0
@y.952 = common global i32 0
@x.953 = common global i32 0
@y.954 = common global i32 0
@x.955 = common global i32 0
@y.956 = common global i32 0
@x.957 = common global i32 0
@y.958 = common global i32 0
@x.959 = common global i32 0
@y.960 = common global i32 0
@x.961 = common global i32 0
@y.962 = common global i32 0
@x.963 = common global i32 0
@y.964 = common global i32 0
@x.965 = common global i32 0
@y.966 = common global i32 0
@x.967 = common global i32 0
@y.968 = common global i32 0
@x.969 = common global i32 0
@y.970 = common global i32 0
@x.971 = common global i32 0
@y.972 = common global i32 0
@x.973 = common global i32 0
@y.974 = common global i32 0
@x.975 = common global i32 0
@y.976 = common global i32 0
@x.977 = common global i32 0
@y.978 = common global i32 0
@x.979 = common global i32 0
@y.980 = common global i32 0
@x.981 = common global i32 0
@y.982 = common global i32 0
@x.983 = common global i32 0
@y.984 = common global i32 0
@x.985 = common global i32 0
@y.986 = common global i32 0
@x.987 = common global i32 0
@y.988 = common global i32 0
@x.989 = common global i32 0
@y.990 = common global i32 0
@x.991 = common global i32 0
@y.992 = common global i32 0
@x.993 = common global i32 0
@y.994 = common global i32 0
@x.995 = common global i32 0
@y.996 = common global i32 0
@x.997 = common global i32 0
@y.998 = common global i32 0
@x.999 = common global i32 0
@y.1000 = common global i32 0
@x.1001 = common global i32 0
@y.1002 = common global i32 0
@x.1003 = common global i32 0
@y.1004 = common global i32 0
@x.1005 = common global i32 0
@y.1006 = common global i32 0
@x.1007 = common global i32 0
@y.1008 = common global i32 0
@x.1009 = common global i32 0
@y.1010 = common global i32 0
@x.1011 = common global i32 0
@y.1012 = common global i32 0
@x.1013 = common global i32 0
@y.1014 = common global i32 0
@x.1015 = common global i32 0
@y.1016 = common global i32 0
@x.1017 = common global i32 0
@y.1018 = common global i32 0
@x.1019 = common global i32 0
@y.1020 = common global i32 0
@x.1021 = common global i32 0
@y.1022 = common global i32 0
@x.1023 = common global i32 0
@y.1024 = common global i32 0
@x.1025 = common global i32 0
@y.1026 = common global i32 0
@x.1027 = common global i32 0
@y.1028 = common global i32 0
@x.1029 = common global i32 0
@y.1030 = common global i32 0
@x.1031 = common global i32 0
@y.1032 = common global i32 0
@x.1033 = common global i32 0
@y.1034 = common global i32 0
@x.1035 = common global i32 0
@y.1036 = common global i32 0
@x.1037 = common global i32 0
@y.1038 = common global i32 0
@x.1039 = common global i32 0
@y.1040 = common global i32 0
@x.1041 = common global i32 0
@y.1042 = common global i32 0
@x.1043 = common global i32 0
@y.1044 = common global i32 0
@x.1045 = common global i32 0
@y.1046 = common global i32 0
@x.1047 = common global i32 0
@y.1048 = common global i32 0
@x.1049 = common global i32 0
@y.1050 = common global i32 0
@x.1051 = common global i32 0
@y.1052 = common global i32 0
@x.1053 = common global i32 0
@y.1054 = common global i32 0
@x.1055 = common global i32 0
@y.1056 = common global i32 0
@x.1057 = common global i32 0
@y.1058 = common global i32 0
@x.1059 = common global i32 0
@y.1060 = common global i32 0
@x.1061 = common global i32 0
@y.1062 = common global i32 0
@x.1063 = common global i32 0
@y.1064 = common global i32 0
@x.1065 = common global i32 0
@y.1066 = common global i32 0
@x.1067 = common global i32 0
@y.1068 = common global i32 0
@x.1069 = common global i32 0
@y.1070 = common global i32 0
@x.1071 = common global i32 0
@y.1072 = common global i32 0
@x.1073 = common global i32 0
@y.1074 = common global i32 0
@x.1075 = common global i32 0
@y.1076 = common global i32 0
@x.1077 = common global i32 0
@y.1078 = common global i32 0
@x.1079 = common global i32 0
@y.1080 = common global i32 0
@x.1081 = common global i32 0
@y.1082 = common global i32 0
@x.1083 = common global i32 0
@y.1084 = common global i32 0
@x.1085 = common global i32 0
@y.1086 = common global i32 0
@x.1087 = common global i32 0
@y.1088 = common global i32 0
@x.1089 = common global i32 0
@y.1090 = common global i32 0
@x.1091 = common global i32 0
@y.1092 = common global i32 0
@x.1093 = common global i32 0
@y.1094 = common global i32 0
@x.1095 = common global i32 0
@y.1096 = common global i32 0
@x.1097 = common global i32 0
@y.1098 = common global i32 0
@x.1099 = common global i32 0
@y.1100 = common global i32 0
@x.1101 = common global i32 0
@y.1102 = common global i32 0
@x.1103 = common global i32 0
@y.1104 = common global i32 0
@x.1105 = common global i32 0
@y.1106 = common global i32 0
@x.1107 = common global i32 0
@y.1108 = common global i32 0
@x.1109 = common global i32 0
@y.1110 = common global i32 0
@x.1111 = common global i32 0
@y.1112 = common global i32 0
@x.1113 = common global i32 0
@y.1114 = common global i32 0
@x.1115 = common global i32 0
@y.1116 = common global i32 0
@x.1117 = common global i32 0
@y.1118 = common global i32 0
@x.1119 = common global i32 0
@y.1120 = common global i32 0
@x.1121 = common global i32 0
@y.1122 = common global i32 0
@x.1123 = common global i32 0
@y.1124 = common global i32 0
@x.1125 = common global i32 0
@y.1126 = common global i32 0
@x.1127 = common global i32 0
@y.1128 = common global i32 0
@x.1129 = common global i32 0
@y.1130 = common global i32 0
@x.1131 = common global i32 0
@y.1132 = common global i32 0
@x.1133 = common global i32 0
@y.1134 = common global i32 0
@x.1135 = common global i32 0
@y.1136 = common global i32 0
@x.1137 = common global i32 0
@y.1138 = common global i32 0
@x.1139 = common global i32 0
@y.1140 = common global i32 0
@x.1141 = common global i32 0
@y.1142 = common global i32 0
@x.1143 = common global i32 0
@y.1144 = common global i32 0
@x.1145 = common global i32 0
@y.1146 = common global i32 0
@x.1147 = common global i32 0
@y.1148 = common global i32 0
@x.1149 = common global i32 0
@y.1150 = common global i32 0
@x.1151 = common global i32 0
@y.1152 = common global i32 0
@x.1153 = common global i32 0
@y.1154 = common global i32 0
@x.1155 = common global i32 0
@y.1156 = common global i32 0
@x.1157 = common global i32 0
@y.1158 = common global i32 0
@x.1159 = common global i32 0
@y.1160 = common global i32 0
@x.1161 = common global i32 0
@y.1162 = common global i32 0
@x.1163 = common global i32 0
@y.1164 = common global i32 0
@x.1165 = common global i32 0
@y.1166 = common global i32 0
@x.1167 = common global i32 0
@y.1168 = common global i32 0
@x.1169 = common global i32 0
@y.1170 = common global i32 0
@x.1171 = common global i32 0
@y.1172 = common global i32 0

@_ZN8MappingQILi3EEC1Ej = weak_odr alias void (%class.MappingQ*, i32), void (%class.MappingQ*, i32)* @_ZN8MappingQILi3EEC2Ej
@_ZN8MappingQILi3EED1Ev = weak_odr alias void (%class.MappingQ*), void (%class.MappingQ*)* @_ZN8MappingQILi3EED2Ev
@_ZN8MappingQILi3EE12InternalDataC1Ej = weak_odr alias void (%"class.MappingQ<3>::InternalData"*, i32), void (%"class.MappingQ<3>::InternalData"*, i32)* @_ZN8MappingQILi3EE12InternalDataC2Ej
@_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetC1Ei = weak_odr alias void (%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, i32), void (%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, i32)* @_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetC2Ei
@_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD1Ev = weak_odr alias void (%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*), void (%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*)* @_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD2Ev

; Function Attrs: noinline uwtable
define void @_ZNK8MappingQILi3EE25set_laplace_on_hex_vectorER5TableILi2EdE(%class.MappingQ*, %class.Table* dereferenceable(48)) #0 align 2 {
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.MappingQ*, align 8
  %12 = alloca %class.Table*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %17 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %11, align 8
  store %class.Table* %1, %class.Table** %12, align 8
  %18 = load %class.MappingQ*, %class.MappingQ** %11, align 8
  store double* null, double** %13, align 8
  %19 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  %22 = load i32, i32* @x
  %23 = load i32, i32* @y
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %47

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x
  %32 = load i32, i32* @y
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  store double* getelementptr inbounds ([26 x double], [26 x double]* @_ZZNK8MappingQILi3EE25set_laplace_on_hex_vectorER5TableILi2EdEE5loqv2, i64 0, i64 0), double** %13, align 8
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %originalBBpart24, %originalBBpart2
  %48 = load double*, double** %13, align 8
  %49 = icmp ne double* %48, null
  br i1 %49, label %50, label %138

; <label>:50:                                     ; preds = %47
  %51 = load %class.Table*, %class.Table** %12, align 8
  %52 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %18, i32 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %18, i32 0, i32 5
  %55 = load i32, i32* %54, align 8
  call void @_ZN5TableILi2EdE6reinitEjj(%class.Table* %51, i32 %53, i32 %55)
  store i32 0, i32* %14, align 4
  br label %56

; <label>:56:                                     ; preds = %118, %50
  %57 = load i32, i32* %14, align 4
  %58 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %18, i32 0, i32 4
  %59 = load i32, i32* %58, align 4
  %60 = icmp ult i32 %57, %59
  br i1 %60, label %61, label %121

; <label>:61:                                     ; preds = %56
  %62 = load i32, i32* @x
  %63 = load i32, i32* @y
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  store i32 0, i32* %15, align 4
  %70 = load i32, i32* @x
  %71 = load i32, i32* @y
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %78

; <label>:78:                                     ; preds = %originalBBpart218, %originalBBpart28
  %79 = load i32, i32* %15, align 4
  %80 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %18, i32 0, i32 5
  %81 = load i32, i32* %80, align 8
  %82 = icmp ult i32 %79, %81
  br i1 %82, label %83, label %117

; <label>:83:                                     ; preds = %78
  %84 = load double*, double** %13, align 8
  %85 = load i32, i32* %14, align 4
  %86 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %18, i32 0, i32 5
  %87 = load i32, i32* %86, align 8
  %88 = mul i32 %85, %87
  %89 = load i32, i32* %15, align 4
  %90 = add i32 %88, %89
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds double, double* %84, i64 %91
  %93 = load double, double* %92, align 8
  %94 = load %class.Table*, %class.Table** %12, align 8
  %95 = load i32, i32* %14, align 4
  call void @_ZN5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %16, %class.Table* %94, i32 %95)
  %96 = load i32, i32* %15, align 4
  %97 = call dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %16, i32 %96)
  store double %93, double* %97, align 8
  br label %98

; <label>:98:                                     ; preds = %83
  %99 = load i32, i32* @x
  %100 = load i32, i32* @y
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %98, %originalBB10alteredBB
  %107 = load i32, i32* %15, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %15, align 4
  %109 = load i32, i32* @x
  %110 = load i32, i32* @y
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart218, label %originalBB10alteredBB

originalBBpart218:                                ; preds = %originalBB10
  br label %78

; <label>:117:                                    ; preds = %78
  br label %118

; <label>:118:                                    ; preds = %117
  %119 = load i32, i32* %14, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %14, align 4
  br label %56

; <label>:121:                                    ; preds = %56
  %122 = load i32, i32* @x
  %123 = load i32, i32* @y
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %121, %originalBB20alteredBB
  %130 = load i32, i32* @x
  %131 = load i32, i32* @y
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %140

; <label>:138:                                    ; preds = %47
  %139 = load %class.Table*, %class.Table** %12, align 8
  call void @_ZNK8MappingQILi3EE22compute_laplace_vectorER5TableILi2EdE(%class.MappingQ* %18, %class.Table* dereferenceable(48) %139)
  br label %140

; <label>:140:                                    ; preds = %138, %originalBBpart222
  store i32 0, i32* %17, align 4
  br label %141

; <label>:141:                                    ; preds = %originalBBpart243, %140
  %142 = load i32, i32* @x
  %143 = load i32, i32* @y
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %141, %originalBB24alteredBB
  %150 = load i32, i32* %17, align 4
  %151 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %18, i32 0, i32 4
  %152 = load i32, i32* %151, align 4
  %153 = icmp ult i32 %150, %152
  %154 = load i32, i32* @x
  %155 = load i32, i32* @y
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br i1 %153, label %162, label %182

; <label>:162:                                    ; preds = %originalBBpart227
  br label %163

; <label>:163:                                    ; preds = %162
  %164 = load i32, i32* @x
  %165 = load i32, i32* @y
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %163, %originalBB29alteredBB
  %172 = load i32, i32* %17, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %17, align 4
  %174 = load i32, i32* @x
  %175 = load i32, i32* @y
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart243, label %originalBB29alteredBB

originalBBpart243:                                ; preds = %originalBB29
  br label %141

; <label>:182:                                    ; preds = %originalBBpart227
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %183 = alloca %class.MappingQ*, align 8
  %184 = alloca %class.Table*, align 8
  %185 = alloca double*, align 8
  %186 = alloca i32, align 4
  %187 = alloca i32, align 4
  %188 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %189 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %183, align 8
  store %class.Table* %1, %class.Table** %184, align 8
  %190 = load %class.MappingQ*, %class.MappingQ** %183, align 8
  store double* null, double** %185, align 8
  %191 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %190, i32 0, i32 3
  %192 = load i32, i32* %191, align 8
  %193 = icmp eq i32 %192, 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  store double* getelementptr inbounds ([26 x double], [26 x double]* @_ZZNK8MappingQILi3EE25set_laplace_on_hex_vectorER5TableILi2EdEE5loqv2, i64 0, i64 0), double** %13, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  store i32 0, i32* %15, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %98
  %194 = load i32, i32* %15, align 4
  %_ = sub i32 0, %194
  %gen = add i32 %_, 1
  %_11 = sub i32 0, %194
  %gen12 = add i32 %_11, 1
  %_13 = shl i32 %194, 1
  %_14 = sub i32 0, %194
  %gen15 = add i32 %_14, 1
  %_16 = shl i32 %194, 1
  %195 = add i32 %194, 1
  store i32 %195, i32* %15, align 4
  br label %originalBB10

originalBB20alteredBB:                            ; preds = %originalBB20, %121
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %141
  %196 = load i32, i32* %17, align 4
  %197 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %18, i32 0, i32 4
  %198 = load i32, i32* %197, align 4
  %199 = icmp ult i32 %196, %198
  br label %originalBB24

originalBB29alteredBB:                            ; preds = %originalBB29, %163
  %200 = load i32, i32* %17, align 4
  %_30 = shl i32 %200, 1
  %_31 = shl i32 %200, 1
  %_32 = sub i32 0, %200
  %gen33 = add i32 %_32, 1
  %_34 = sub i32 %200, 1
  %gen35 = mul i32 %_34, 1
  %_36 = sub i32 0, %200
  %gen37 = add i32 %_36, 1
  %_38 = sub i32 0, %200
  %gen39 = add i32 %_38, 1
  %_40 = sub i32 0, %200
  %gen41 = add i32 %_40, 1
  %201 = add i32 %200, 1
  store i32 %201, i32* %17, align 4
  br label %originalBB29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdE6reinitEjj(%class.Table*, i32, i32) #0 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.TableIndices, align 4
  store %class.Table* %0, %class.Table** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load %class.Table*, %class.Table** %4, align 8
  %9 = bitcast %class.Table* %8 to %class.TableBase*
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %6, align 4
  call void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices* %7, i32 %10, i32 %11)
  call void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase* %9, %class.TableIndices* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor"* noalias sret, %class.Table*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  store %class.Table* %1, %class.Table** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table*, %class.Table** %4, align 8
  %7 = bitcast %class.Table* %6 to %class.TableBase*
  %8 = bitcast %class.Table* %6 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds double, double* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEC2ERK9TableBaseILi2EdEPd(%"class.internal::TableBaseAccessors::Accessor"* %0, %class.TableBase* dereferenceable(48) %7, double* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"*, i32) #1 comdat align 2 {
  %3 = load i32, i32* @x.5
  %4 = load i32, i32* @y.6
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %12 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %11, align 8
  %14 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %13, i32 0, i32 1
  %15 = load double*, double** %14, align 8
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds double, double* %15, i64 %17
  %19 = load i32, i32* @x.5
  %20 = load i32, i32* @y.6
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %28 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %27, align 8
  %30 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %29, i32 0, i32 1
  %31 = load double*, double** %30, align 8
  %32 = load i32, i32* %28, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds double, double* %31, i64 %33
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE22compute_laplace_vectorER5TableILi2EdE(%class.MappingQ*, %class.Table* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.7
  %4 = load i32, i32* @y.8
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.MappingQ*, align 8
  %12 = alloca %class.Table*, align 8
  %13 = alloca %class.QGauss, align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.MappingQ<3>::InternalData", align 8
  %16 = alloca i8*
  %17 = alloca i32
  %18 = alloca %class.Tensor, align 8
  %19 = alloca %class.FullMatrix, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %class.FullMatrix, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %class.FullMatrix, align 8
  %28 = alloca %class.FullMatrix, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %11, align 8
  store %class.Table* %1, %class.Table** %12, align 8
  %31 = load %class.MappingQ*, %class.MappingQ** %11, align 8
  %32 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  call void @_ZN6QGaussILi3EEC1Ej(%class.QGauss* %13, i32 %34)
  %35 = bitcast %class.QGauss* %13 to %class.Quadrature*
  %36 = getelementptr inbounds %class.Quadrature, %class.Quadrature* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %14, align 4
  %38 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 7
  %39 = load i32, i32* %38, align 8
  %40 = load i32, i32* @x.7
  %41 = load i32, i32* @y.8
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN8MappingQILi3EE12InternalDataC1Ej(%"class.MappingQ<3>::InternalData"* %15, i32 %39)
          to label %48 unwind label %149

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %50 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %49, i32 0, i32 2
  %51 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 7
  %52 = load i32, i32* %51, align 8
  %53 = load i32, i32* %14, align 4
  %54 = mul i32 %52, %53
  %55 = zext i32 %54 to i64
  invoke void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %18, i1 zeroext true)
          to label %56 unwind label %153

; <label>:56:                                     ; preds = %48
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.103"* %50, i64 %55, %class.Tensor* %18)
          to label %57 unwind label %153

; <label>:57:                                     ; preds = %56
  %58 = bitcast %class.MappingQ* %31 to %class.MappingQ1*
  %59 = bitcast %class.QGauss* %13 to %class.Quadrature*
  %60 = invoke dereferenceable(24) %"class.std::vector.58"* @_ZNK10QuadratureILi3EE10get_pointsEv(%class.Quadrature* %59)
          to label %61 unwind label %153

; <label>:61:                                     ; preds = %57
  %62 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  invoke void @_ZNK9MappingQ1ILi3EE14compute_shapesERKSt6vectorI5PointILi3EESaIS3_EERNS0_12InternalDataE(%class.MappingQ1* %58, %"class.std::vector.58"* dereferenceable(24) %60, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %62)
          to label %63 unwind label %153

; <label>:63:                                     ; preds = %61
  %64 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %65 = load i32, i32* %64, align 4
  invoke void @_ZN10FullMatrixIdEC1Ej(%class.FullMatrix* %19, i32 %65)
          to label %66 unwind label %153

; <label>:66:                                     ; preds = %63
  store i32 0, i32* %20, align 4
  br label %67

; <label>:67:                                     ; preds = %182, %66
  %68 = load i32, i32* %20, align 4
  %69 = load i32, i32* %14, align 4
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %71, label %185

; <label>:71:                                     ; preds = %67
  store i32 0, i32* %21, align 4
  br label %72

; <label>:72:                                     ; preds = %originalBBpart228, %71
  %73 = load i32, i32* %21, align 4
  %74 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %75 = load i32, i32* %74, align 4
  %76 = icmp ult i32 %73, %75
  br i1 %76, label %77, label %181

; <label>:77:                                     ; preds = %72
  %78 = load i32, i32* @x.7
  %79 = load i32, i32* @y.8
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %77, %originalBB5alteredBB
  store i32 0, i32* %22, align 4
  %86 = load i32, i32* @x.7
  %87 = load i32, i32* @y.8
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  br label %94

; <label>:94:                                     ; preds = %146, %originalBBpart27
  %95 = load i32, i32* %22, align 4
  %96 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %97 = load i32, i32* %96, align 4
  %98 = icmp ult i32 %95, %97
  br i1 %98, label %99, label %161

; <label>:99:                                     ; preds = %94
  %100 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %101 = load i32, i32* %20, align 4
  %102 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %103 = load i32, i32* %102, align 8
  %104 = load i32, i32* %21, align 4
  %105 = add i32 %103, %104
  %106 = invoke dereferenceable(24) %class.Tensor* @_ZN9MappingQ1ILi3EE12InternalData10derivativeEjj(%"class.MappingQ1<3>::InternalData"* %100, i32 %101, i32 %105)
          to label %107 unwind label %157

; <label>:107:                                    ; preds = %99
  %108 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %109 = load i32, i32* %20, align 4
  %110 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %111 = load i32, i32* %110, align 8
  %112 = load i32, i32* %22, align 4
  %113 = add i32 %111, %112
  %114 = invoke dereferenceable(24) %class.Tensor* @_ZN9MappingQ1ILi3EE12InternalData10derivativeEjj(%"class.MappingQ1<3>::InternalData"* %108, i32 %109, i32 %113)
          to label %115 unwind label %157

; <label>:115:                                    ; preds = %107
  %116 = invoke double @_Z8contractILi3EEdRK6TensorILi1EXT_EES3_(%class.Tensor* dereferenceable(24) %106, %class.Tensor* dereferenceable(24) %114)
          to label %117 unwind label %157

; <label>:117:                                    ; preds = %115
  %118 = bitcast %class.QGauss* %13 to %class.Quadrature*
  %119 = load i32, i32* %20, align 4
  %120 = invoke double @_ZNK10QuadratureILi3EE6weightEj(%class.Quadrature* %118, i32 %119)
          to label %121 unwind label %157

; <label>:121:                                    ; preds = %117
  %122 = fmul double %116, %120
  %123 = bitcast %class.FullMatrix* %19 to %class.Table*
  %124 = load i32, i32* %21, align 4
  %125 = load i32, i32* %22, align 4
  %126 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %123, i32 %124, i32 %125)
          to label %127 unwind label %157

; <label>:127:                                    ; preds = %121
  %128 = load i32, i32* @x.7
  %129 = load i32, i32* @y.8
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %127, %originalBB9alteredBB
  %136 = load double, double* %126, align 8
  %137 = fadd double %136, %122
  store double %137, double* %126, align 8
  %138 = load i32, i32* @x.7
  %139 = load i32, i32* @y.8
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart217, label %originalBB9alteredBB

originalBBpart217:                                ; preds = %originalBB9
  br label %146

; <label>:146:                                    ; preds = %originalBBpart217
  %147 = load i32, i32* %22, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %22, align 4
  br label %94

; <label>:149:                                    ; preds = %534, %originalBBpart2
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %16, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %17, align 4
  br label %545

; <label>:153:                                    ; preds = %533, %63, %61, %57, %56, %48
  %154 = landingpad { i8*, i32 }
          cleanup
  %155 = extractvalue { i8*, i32 } %154, 0
  store i8* %155, i8** %16, align 8
  %156 = extractvalue { i8*, i32 } %154, 1
  store i32 %156, i32* %17, align 4
  br label %543

; <label>:157:                                    ; preds = %532, %185, %121, %117, %115, %107, %99
  %158 = landingpad { i8*, i32 }
          cleanup
  %159 = extractvalue { i8*, i32 } %158, 0
  store i8* %159, i8** %16, align 8
  %160 = extractvalue { i8*, i32 } %158, 1
  store i32 %160, i32* %17, align 4
  br label %541

; <label>:161:                                    ; preds = %94
  br label %162

; <label>:162:                                    ; preds = %161
  %163 = load i32, i32* @x.7
  %164 = load i32, i32* @y.8
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %162, %originalBB19alteredBB
  %171 = load i32, i32* %21, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %21, align 4
  %173 = load i32, i32* @x.7
  %174 = load i32, i32* @y.8
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart228, label %originalBB19alteredBB

originalBBpart228:                                ; preds = %originalBB19
  br label %72

; <label>:181:                                    ; preds = %72
  br label %182

; <label>:182:                                    ; preds = %181
  %183 = load i32, i32* %20, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %20, align 4
  br label %67

; <label>:185:                                    ; preds = %67
  %186 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %189 = load i32, i32* %188, align 8
  invoke void @_ZN10FullMatrixIdEC1Ejj(%class.FullMatrix* %23, i32 %187, i32 %189)
          to label %190 unwind label %157

; <label>:190:                                    ; preds = %185
  %191 = load i32, i32* @x.7
  %192 = load i32, i32* @y.8
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %190, %originalBB30alteredBB
  store i32 0, i32* %24, align 4
  %199 = load i32, i32* @x.7
  %200 = load i32, i32* @y.8
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %207

; <label>:207:                                    ; preds = %375, %originalBBpart232
  %208 = load i32, i32* %24, align 4
  %209 = load i32, i32* %14, align 4
  %210 = icmp ult i32 %208, %209
  br i1 %210, label %211, label %378

; <label>:211:                                    ; preds = %207
  %212 = load i32, i32* @x.7
  %213 = load i32, i32* @y.8
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %211, %originalBB34alteredBB
  store i32 0, i32* %25, align 4
  %220 = load i32, i32* @x.7
  %221 = load i32, i32* @y.8
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %228

; <label>:228:                                    ; preds = %371, %originalBBpart236
  %229 = load i32, i32* @x.7
  %230 = load i32, i32* @y.8
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %228, %originalBB38alteredBB
  %237 = load i32, i32* %25, align 4
  %238 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %239 = load i32, i32* %238, align 4
  %240 = icmp ult i32 %237, %239
  %241 = load i32, i32* @x.7
  %242 = load i32, i32* @y.8
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %240, label %249, label %374

; <label>:249:                                    ; preds = %originalBBpart240
  store i32 0, i32* %26, align 4
  br label %250

; <label>:250:                                    ; preds = %331, %249
  %251 = load i32, i32* @x.7
  %252 = load i32, i32* @y.8
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %250, %originalBB42alteredBB
  %259 = load i32, i32* %26, align 4
  %260 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %261 = load i32, i32* %260, align 8
  %262 = icmp ult i32 %259, %261
  %263 = load i32, i32* @x.7
  %264 = load i32, i32* @y.8
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %262, label %271, label %354

; <label>:271:                                    ; preds = %originalBBpart244
  %272 = load i32, i32* @x.7
  %273 = load i32, i32* @y.8
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %271, %originalBB46alteredBB
  %280 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %281 = load i32, i32* %24, align 4
  %282 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %283 = load i32, i32* %282, align 8
  %284 = load i32, i32* %25, align 4
  %285 = add i32 %283, %284
  %286 = load i32, i32* @x.7
  %287 = load i32, i32* @y.8
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBBpart250, label %originalBB46alteredBB

originalBBpart250:                                ; preds = %originalBB46
  %294 = invoke dereferenceable(24) %class.Tensor* @_ZN9MappingQ1ILi3EE12InternalData10derivativeEjj(%"class.MappingQ1<3>::InternalData"* %280, i32 %281, i32 %285)
          to label %295 unwind label %334

; <label>:295:                                    ; preds = %originalBBpart250
  %296 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %297 = load i32, i32* %24, align 4
  %298 = load i32, i32* %26, align 4
  %299 = invoke dereferenceable(24) %class.Tensor* @_ZN9MappingQ1ILi3EE12InternalData10derivativeEjj(%"class.MappingQ1<3>::InternalData"* %296, i32 %297, i32 %298)
          to label %300 unwind label %334

; <label>:300:                                    ; preds = %295
  %301 = invoke double @_Z8contractILi3EEdRK6TensorILi1EXT_EES3_(%class.Tensor* dereferenceable(24) %294, %class.Tensor* dereferenceable(24) %299)
          to label %302 unwind label %334

; <label>:302:                                    ; preds = %300
  %303 = bitcast %class.QGauss* %13 to %class.Quadrature*
  %304 = load i32, i32* %24, align 4
  %305 = invoke double @_ZNK10QuadratureILi3EE6weightEj(%class.Quadrature* %303, i32 %304)
          to label %306 unwind label %334

; <label>:306:                                    ; preds = %302
  %307 = fmul double %301, %305
  %308 = bitcast %class.FullMatrix* %23 to %class.Table*
  %309 = load i32, i32* %25, align 4
  %310 = load i32, i32* %26, align 4
  %311 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %308, i32 %309, i32 %310)
          to label %312 unwind label %334

; <label>:312:                                    ; preds = %306
  %313 = load i32, i32* @x.7
  %314 = load i32, i32* @y.8
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %312, %originalBB52alteredBB
  %321 = load double, double* %311, align 8
  %322 = fadd double %321, %307
  store double %322, double* %311, align 8
  %323 = load i32, i32* @x.7
  %324 = load i32, i32* @y.8
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %331

; <label>:331:                                    ; preds = %originalBBpart254
  %332 = load i32, i32* %26, align 4
  %333 = add i32 %332, 1
  store i32 %333, i32* %26, align 4
  br label %250

; <label>:334:                                    ; preds = %531, %378, %306, %302, %300, %295, %originalBBpart250
  %335 = load i32, i32* @x.7
  %336 = load i32, i32* @y.8
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %334, %originalBB56alteredBB
  %343 = landingpad { i8*, i32 }
          cleanup
  %344 = extractvalue { i8*, i32 } %343, 0
  store i8* %344, i8** %16, align 8
  %345 = extractvalue { i8*, i32 } %343, 1
  store i32 %345, i32* %17, align 4
  %346 = load i32, i32* @x.7
  %347 = load i32, i32* @y.8
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %539

; <label>:354:                                    ; preds = %originalBBpart244
  %355 = load i32, i32* @x.7
  %356 = load i32, i32* @y.8
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %354, %originalBB60alteredBB
  %363 = load i32, i32* @x.7
  %364 = load i32, i32* @y.8
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %371

; <label>:371:                                    ; preds = %originalBBpart262
  %372 = load i32, i32* %25, align 4
  %373 = add i32 %372, 1
  store i32 %373, i32* %25, align 4
  br label %228

; <label>:374:                                    ; preds = %originalBBpart240
  br label %375

; <label>:375:                                    ; preds = %374
  %376 = load i32, i32* %24, align 4
  %377 = add i32 %376, 1
  store i32 %377, i32* %24, align 4
  br label %207

; <label>:378:                                    ; preds = %207
  %379 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %380 = load i32, i32* %379, align 4
  invoke void @_ZN10FullMatrixIdEC1Ej(%class.FullMatrix* %27, i32 %380)
          to label %381 unwind label %334

; <label>:381:                                    ; preds = %378
  %382 = load i32, i32* @x.7
  %383 = load i32, i32* @y.8
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %381, %originalBB64alteredBB
  %390 = load i32, i32* @x.7
  %391 = load i32, i32* @y.8
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  invoke void @_ZN10FullMatrixIdE6invertIdEEvRKS_IT_E(%class.FullMatrix* %27, %class.FullMatrix* dereferenceable(48) %19)
          to label %398 unwind label %486

; <label>:398:                                    ; preds = %originalBBpart266
  %399 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %400 = load i32, i32* %399, align 4
  %401 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %402 = load i32, i32* %401, align 8
  invoke void @_ZN10FullMatrixIdEC1Ejj(%class.FullMatrix* %28, i32 %400, i32 %402)
          to label %403 unwind label %486

; <label>:403:                                    ; preds = %398
  %404 = load i32, i32* @x.7
  %405 = load i32, i32* @y.8
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %403, %originalBB68alteredBB
  %412 = load i32, i32* @x.7
  %413 = load i32, i32* @y.8
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  invoke void @_ZNK10FullMatrixIdE5mmultIdEEvRS_IT_ERKS3_b(%class.FullMatrix* %27, %class.FullMatrix* dereferenceable(48) %28, %class.FullMatrix* dereferenceable(48) %23, i1 zeroext false)
          to label %420 unwind label %490

; <label>:420:                                    ; preds = %originalBBpart270
  %421 = load %class.Table*, %class.Table** %12, align 8
  %422 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %423 = load i32, i32* %422, align 4
  %424 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %425 = load i32, i32* %424, align 8
  invoke void @_ZN5TableILi2EdE6reinitEjj(%class.Table* %421, i32 %423, i32 %425)
          to label %426 unwind label %490

; <label>:426:                                    ; preds = %420
  store i32 0, i32* %29, align 4
  br label %427

; <label>:427:                                    ; preds = %originalBBpart2101, %426
  %428 = load i32, i32* %29, align 4
  %429 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %430 = load i32, i32* %429, align 4
  %431 = icmp ult i32 %428, %430
  br i1 %431, label %432, label %530

; <label>:432:                                    ; preds = %427
  store i32 0, i32* %30, align 4
  br label %433

; <label>:433:                                    ; preds = %originalBBpart283, %432
  %434 = load i32, i32* @x.7
  %435 = load i32, i32* @y.8
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %433, %originalBB72alteredBB
  %442 = load i32, i32* %30, align 4
  %443 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %444 = load i32, i32* %443, align 8
  %445 = icmp ult i32 %442, %444
  %446 = load i32, i32* @x.7
  %447 = load i32, i32* @y.8
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br i1 %445, label %454, label %494

; <label>:454:                                    ; preds = %originalBBpart274
  %455 = bitcast %class.FullMatrix* %28 to %class.Table*
  %456 = load i32, i32* %29, align 4
  %457 = load i32, i32* %30, align 4
  %458 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %455, i32 %456, i32 %457)
          to label %459 unwind label %490

; <label>:459:                                    ; preds = %454
  %460 = load double, double* %458, align 8
  %461 = fsub double -0.000000e+00, %460
  %462 = load %class.Table*, %class.Table** %12, align 8
  %463 = load i32, i32* %29, align 4
  %464 = load i32, i32* %30, align 4
  %465 = invoke dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table* %462, i32 %463, i32 %464)
          to label %466 unwind label %490

; <label>:466:                                    ; preds = %459
  store double %461, double* %465, align 8
  br label %467

; <label>:467:                                    ; preds = %466
  %468 = load i32, i32* @x.7
  %469 = load i32, i32* @y.8
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %467, %originalBB76alteredBB
  %476 = load i32, i32* %30, align 4
  %477 = add i32 %476, 1
  store i32 %477, i32* %30, align 4
  %478 = load i32, i32* @x.7
  %479 = load i32, i32* @y.8
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBBpart283, label %originalBB76alteredBB

originalBBpart283:                                ; preds = %originalBB76
  br label %433

; <label>:486:                                    ; preds = %530, %398, %originalBBpart266
  %487 = landingpad { i8*, i32 }
          cleanup
  %488 = extractvalue { i8*, i32 } %487, 0
  store i8* %488, i8** %16, align 8
  %489 = extractvalue { i8*, i32 } %487, 1
  store i32 %489, i32* %17, align 4
  br label %537

; <label>:490:                                    ; preds = %459, %454, %420, %originalBBpart270
  %491 = landingpad { i8*, i32 }
          cleanup
  %492 = extractvalue { i8*, i32 } %491, 0
  store i8* %492, i8** %16, align 8
  %493 = extractvalue { i8*, i32 } %491, 1
  store i32 %493, i32* %17, align 4
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %28)
          to label %536 unwind label %568

; <label>:494:                                    ; preds = %originalBBpart274
  %495 = load i32, i32* @x.7
  %496 = load i32, i32* @y.8
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %494, %originalBB85alteredBB
  %503 = load i32, i32* @x.7
  %504 = load i32, i32* @y.8
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %511

; <label>:511:                                    ; preds = %originalBBpart287
  %512 = load i32, i32* @x.7
  %513 = load i32, i32* @y.8
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %511, %originalBB89alteredBB
  %520 = load i32, i32* %29, align 4
  %521 = add i32 %520, 1
  store i32 %521, i32* %29, align 4
  %522 = load i32, i32* @x.7
  %523 = load i32, i32* @y.8
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBBpart2101, label %originalBB89alteredBB

originalBBpart2101:                               ; preds = %originalBB89
  br label %427

; <label>:530:                                    ; preds = %427
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %28)
          to label %531 unwind label %486

; <label>:531:                                    ; preds = %530
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %27)
          to label %532 unwind label %334

; <label>:532:                                    ; preds = %531
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %23)
          to label %533 unwind label %157

; <label>:533:                                    ; preds = %532
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %19)
          to label %534 unwind label %153

; <label>:534:                                    ; preds = %533
  invoke void @_ZN8MappingQILi3EE12InternalDataD2Ev(%"class.MappingQ<3>::InternalData"* %15)
          to label %535 unwind label %149

; <label>:535:                                    ; preds = %534
  call void @_ZN6QGaussILi3EED2Ev(%class.QGauss* %13)
  ret void

; <label>:536:                                    ; preds = %490
  br label %537

; <label>:537:                                    ; preds = %536, %486
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %27)
          to label %538 unwind label %568

; <label>:538:                                    ; preds = %537
  br label %539

; <label>:539:                                    ; preds = %538, %originalBBpart258
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %23)
          to label %540 unwind label %568

; <label>:540:                                    ; preds = %539
  br label %541

; <label>:541:                                    ; preds = %540, %157
  invoke void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix* %19)
          to label %542 unwind label %568

; <label>:542:                                    ; preds = %541
  br label %543

; <label>:543:                                    ; preds = %542, %153
  invoke void @_ZN8MappingQILi3EE12InternalDataD2Ev(%"class.MappingQ<3>::InternalData"* %15)
          to label %544 unwind label %568

; <label>:544:                                    ; preds = %543
  br label %545

; <label>:545:                                    ; preds = %544, %149
  invoke void @_ZN6QGaussILi3EED2Ev(%class.QGauss* %13)
          to label %546 unwind label %568

; <label>:546:                                    ; preds = %545
  %547 = load i32, i32* @x.7
  %548 = load i32, i32* @y.8
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %546, %originalBB103alteredBB
  %555 = load i32, i32* @x.7
  %556 = load i32, i32* @y.8
  %557 = sub i32 %555, 1
  %558 = mul i32 %555, %557
  %559 = urem i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = icmp slt i32 %556, 10
  %562 = or i1 %560, %561
  br i1 %562, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %563

; <label>:563:                                    ; preds = %originalBBpart2105
  %564 = load i8*, i8** %16, align 8
  %565 = load i32, i32* %17, align 4
  %566 = insertvalue { i8*, i32 } undef, i8* %564, 0
  %567 = insertvalue { i8*, i32 } %566, i32 %565, 1
  resume { i8*, i32 } %567

; <label>:568:                                    ; preds = %545, %543, %541, %539, %537, %490
  %569 = landingpad { i8*, i32 }
          catch i8* null
  %570 = extractvalue { i8*, i32 } %569, 0
  call void @__clang_call_terminate(i8* %570) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %2
  %571 = alloca %class.MappingQ*, align 8
  %572 = alloca %class.Table*, align 8
  %573 = alloca %class.QGauss, align 8
  %574 = alloca i32, align 4
  %575 = alloca %"class.MappingQ<3>::InternalData", align 8
  %576 = alloca i8*
  %577 = alloca i32
  %578 = alloca %class.Tensor, align 8
  %579 = alloca %class.FullMatrix, align 8
  %580 = alloca i32, align 4
  %581 = alloca i32, align 4
  %582 = alloca i32, align 4
  %583 = alloca %class.FullMatrix, align 8
  %584 = alloca i32, align 4
  %585 = alloca i32, align 4
  %586 = alloca i32, align 4
  %587 = alloca %class.FullMatrix, align 8
  %588 = alloca %class.FullMatrix, align 8
  %589 = alloca i32, align 4
  %590 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %571, align 8
  store %class.Table* %1, %class.Table** %572, align 8
  %591 = load %class.MappingQ*, %class.MappingQ** %571, align 8
  %592 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %591, i32 0, i32 3
  %593 = load i32, i32* %592, align 8
  %_ = sub i32 %593, 1
  %gen = mul i32 %_, 1
  %_1 = shl i32 %593, 1
  %_2 = sub i32 %593, 1
  %gen3 = mul i32 %_2, 1
  %_4 = shl i32 %593, 1
  %594 = add i32 %593, 1
  call void @_ZN6QGaussILi3EEC1Ej(%class.QGauss* %573, i32 %594)
  %595 = bitcast %class.QGauss* %573 to %class.Quadrature*
  %596 = getelementptr inbounds %class.Quadrature, %class.Quadrature* %595, i32 0, i32 1
  %597 = load i32, i32* %596, align 8
  store i32 %597, i32* %574, align 4
  %598 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %591, i32 0, i32 7
  %599 = load i32, i32* %598, align 8
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %77
  store i32 0, i32* %22, align 4
  br label %originalBB5

originalBB9alteredBB:                             ; preds = %originalBB9, %127
  %600 = load double, double* %126, align 8
  %_10 = fsub double %600, %122
  %gen11 = fmul double %_10, %122
  %_12 = fsub double %600, %122
  %gen13 = fmul double %_12, %122
  %_14 = fsub double -0.000000e+00, %600
  %gen15 = fadd double %_14, %122
  %601 = fadd double %600, %122
  store double %601, double* %126, align 8
  br label %originalBB9

originalBB19alteredBB:                            ; preds = %originalBB19, %162
  %602 = load i32, i32* %21, align 4
  %_20 = shl i32 %602, 1
  %_21 = sub i32 0, %602
  %gen22 = add i32 %_21, 1
  %_23 = sub i32 0, %602
  %gen24 = add i32 %_23, 1
  %_25 = sub i32 0, %602
  %gen26 = add i32 %_25, 1
  %603 = add i32 %602, 1
  store i32 %603, i32* %21, align 4
  br label %originalBB19

originalBB30alteredBB:                            ; preds = %originalBB30, %190
  store i32 0, i32* %24, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %211
  store i32 0, i32* %25, align 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %228
  %604 = load i32, i32* %25, align 4
  %605 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 4
  %606 = load i32, i32* %605, align 4
  %607 = icmp ult i32 %604, %606
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %250
  %608 = load i32, i32* %26, align 4
  %609 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %610 = load i32, i32* %609, align 8
  %611 = icmp ult i32 %608, %610
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %271
  %612 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %613 = load i32, i32* %24, align 4
  %614 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %615 = load i32, i32* %614, align 8
  %616 = load i32, i32* %25, align 4
  %_47 = sub i32 0, %615
  %gen48 = add i32 %_47, %616
  %617 = add i32 %615, %616
  br label %originalBB46

originalBB52alteredBB:                            ; preds = %originalBB52, %312
  %618 = load double, double* %311, align 8
  %619 = fadd double %618, %307
  store double %619, double* %311, align 8
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %334
  %620 = landingpad { i8*, i32 }
          cleanup
  %621 = extractvalue { i8*, i32 } %620, 0
  store i8* %621, i8** %16, align 8
  %622 = extractvalue { i8*, i32 } %620, 1
  store i32 %622, i32* %17, align 4
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %354
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %381
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %403
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %433
  %623 = load i32, i32* %30, align 4
  %624 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %31, i32 0, i32 5
  %625 = load i32, i32* %624, align 8
  %626 = icmp ult i32 %623, %625
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %467
  %627 = load i32, i32* %30, align 4
  %_77 = shl i32 %627, 1
  %_78 = shl i32 %627, 1
  %_79 = shl i32 %627, 1
  %_80 = sub i32 0, %627
  %gen81 = add i32 %_80, 1
  %628 = add i32 %627, 1
  store i32 %628, i32* %30, align 4
  br label %originalBB76

originalBB85alteredBB:                            ; preds = %originalBB85, %494
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %511
  %629 = load i32, i32* %29, align 4
  %_90 = sub i32 0, %629
  %gen91 = add i32 %_90, 1
  %_92 = sub i32 0, %629
  %gen93 = add i32 %_92, 1
  %_94 = sub i32 0, %629
  %gen95 = add i32 %_94, 1
  %_96 = sub i32 0, %629
  %gen97 = add i32 %_96, 1
  %_98 = sub i32 0, %629
  %gen99 = add i32 %_98, 1
  %630 = add i32 %629, 1
  store i32 %630, i32* %29, align 4
  br label %originalBB89

originalBB103alteredBB:                           ; preds = %originalBB103, %546
  br label %originalBB103
}

; Function Attrs: noinline uwtable
define void @_ZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE(%class.MappingQ*, %class.TriaIterator* dereferenceable(16), %"class.std::vector.58"* dereferenceable(24)) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MappingQ*, align 8
  %5 = alloca %class.TriaIterator*, align 8
  %6 = alloca %"class.std::vector.58"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %"class.std::vector.58", align 8
  %14 = alloca %class.Point, align 8
  %15 = alloca %"class.std::allocator.60", align 1
  %16 = alloca %"class.std::vector.58", align 8
  %17 = alloca %class.Point, align 8
  %18 = alloca %"class.std::allocator.60", align 1
  %19 = alloca i32, align 4
  %20 = alloca %class.TriaIterator.65, align 8
  %21 = alloca i8, align 1
  %22 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %27 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %class.TriaIterator.69, align 8
  %32 = alloca %class.Point, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %class.MappingQ* %0, %class.MappingQ** %4, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %5, align 8
  store %"class.std::vector.58"* %2, %"class.std::vector.58"** %6, align 8
  %40 = load %class.MappingQ*, %class.MappingQ** %4, align 8
  store i32 6, i32* %7, align 4
  store i32 4, i32* %8, align 4
  store i32 4, i32* %9, align 4
  store i32 8, i32* %10, align 4
  %41 = load atomic i8, i8* bitcast (i64* @_ZGVZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary to i8*) acquire, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %65

; <label>:43:                                     ; preds = %3
  %44 = call i32 @__cxa_guard_acquire(i64* @_ZGVZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary) #2
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %65

; <label>:46:                                     ; preds = %43
  %47 = load i32, i32* @x.9
  %48 = load i32, i32* @y.10
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %46, %originalBBalteredBB
  %55 = load i32, i32* @x.9
  %56 = load i32, i32* @y.10
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN16StraightBoundaryILi3EEC1Ev(%class.StraightBoundary* @_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary)
          to label %63 unwind label %229

; <label>:63:                                     ; preds = %originalBBpart2
  %64 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.StraightBoundary*)* @_ZN16StraightBoundaryILi3EED2Ev to void (i8*)*), i8* bitcast (%class.StraightBoundary* @_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary) #2
  br label %65

; <label>:65:                                     ; preds = %63, %43, %3
  %66 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = sub i32 %67, 1
  %69 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = sub i32 %70, 1
  %72 = mul i32 %68, %71
  %73 = zext i32 %72 to i64
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %14)
  call void @_ZNSaI5PointILi3EEEC2Ev(%"class.std::allocator.60"* %15) #2
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.58"* %13, i64 %73, %class.Point* dereferenceable(24) %14, %"class.std::allocator.60"* dereferenceable(1) %15)
          to label %74 unwind label %233

; <label>:74:                                     ; preds = %65
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %15) #2
  %75 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = mul i32 4, %76
  %78 = zext i32 %77 to i64
  invoke void @_ZN5PointILi3EEC2Ev(%class.Point* %17)
          to label %79 unwind label %253

; <label>:79:                                     ; preds = %74
  %80 = load i32, i32* @x.9
  %81 = load i32, i32* @y.10
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %79, %originalBB1alteredBB
  call void @_ZNSaI5PointILi3EEEC2Ev(%"class.std::allocator.60"* %18) #2
  %88 = load i32, i32* @x.9
  %89 = load i32, i32* @y.10
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.58"* %16, i64 %78, %class.Point* dereferenceable(24) %17, %"class.std::allocator.60"* dereferenceable(1) %18)
          to label %96 unwind label %257

; <label>:96:                                     ; preds = %originalBBpart24
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %18) #2
  store i32 0, i32* %19, align 4
  br label %97

; <label>:97:                                     ; preds = %917, %96
  %98 = load i32, i32* @x.9
  %99 = load i32, i32* @y.10
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %97, %originalBB6alteredBB
  %106 = load i32, i32* %19, align 4
  %107 = icmp ult i32 %106, 6
  %108 = load i32, i32* @x.9
  %109 = load i32, i32* @y.10
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %107, label %116, label %920

; <label>:116:                                    ; preds = %originalBBpart28
  %117 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %118 = bitcast %class.TriaIterator* %117 to %class.TriaRawIterator*
  %119 = invoke %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %118)
          to label %120 unwind label %277

; <label>:120:                                    ; preds = %116
  %121 = load i32, i32* %19, align 4
  invoke void @_ZNK12CellAccessorILi3EE4faceEj(%class.TriaIterator.65* sret %20, %class.CellAccessor* %119, i32 %121)
          to label %122 unwind label %277

; <label>:122:                                    ; preds = %120
  %123 = load i32, i32* @x.9
  %124 = load i32, i32* @y.10
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %122, %originalBB10alteredBB
  %131 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %132 = bitcast %class.TriaIterator* %131 to %class.TriaRawIterator*
  %133 = load i32, i32* @x.9
  %134 = load i32, i32* @y.10
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %141 = invoke %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %132)
          to label %142 unwind label %277

; <label>:142:                                    ; preds = %originalBBpart212
  %143 = bitcast %class.CellAccessor* %141 to %class.TriaObjectAccessor*
  %144 = load i32, i32* %19, align 4
  %145 = invoke zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %143, i32 %144)
          to label %146 unwind label %277

; <label>:146:                                    ; preds = %142
  %147 = zext i1 %145 to i8
  store i8 %147, i8* %21, align 1
  %148 = load i8, i8* %21, align 1
  %149 = trunc i8 %148 to i1
  br i1 %149, label %150, label %154

; <label>:150:                                    ; preds = %146
  %151 = load i32, i32* %19, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE27face_vertex_to_cell_vertex1, i64 0, i64 %152
  br label %158

; <label>:154:                                    ; preds = %146
  %155 = load i32, i32* %19, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE27face_vertex_to_cell_vertex2, i64 0, i64 %156
  br label %158

; <label>:158:                                    ; preds = %154, %150
  %159 = phi [4 x i32]* [ %153, %150 ], [ %157, %154 ]
  %160 = getelementptr inbounds [4 x i32], [4 x i32]* %159, i32 0, i32 0
  store i32* %160, i32** %22, align 8
  %161 = load i8, i8* %21, align 1
  %162 = trunc i8 %161 to i1
  br i1 %162, label %163, label %167

; <label>:163:                                    ; preds = %158
  %164 = load i32, i32* %19, align 4
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE23face_line_to_cell_line1, i64 0, i64 %165
  br label %187

; <label>:167:                                    ; preds = %158
  %168 = load i32, i32* @x.9
  %169 = load i32, i32* @y.10
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %167, %originalBB14alteredBB
  %176 = load i32, i32* %19, align 4
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE23face_line_to_cell_line2, i64 0, i64 %177
  %179 = load i32, i32* @x.9
  %180 = load i32, i32* @y.10
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %187

; <label>:187:                                    ; preds = %originalBBpart216, %163
  %188 = phi [4 x i32]* [ %166, %163 ], [ %178, %originalBBpart216 ]
  %189 = load i32, i32* @x.9
  %190 = load i32, i32* @y.10
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %187, %originalBB18alteredBB
  %197 = getelementptr inbounds [4 x i32], [4 x i32]* %188, i32 0, i32 0
  store i32* %197, i32** %23, align 8
  store i32 0, i32* %24, align 4
  %198 = load i32, i32* @x.9
  %199 = load i32, i32* @y.10
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %206

; <label>:206:                                    ; preds = %226, %originalBBpart220
  %207 = load i32, i32* %24, align 4
  %208 = icmp ult i32 %207, 4
  br i1 %208, label %209, label %281

; <label>:209:                                    ; preds = %206
  %210 = load i32, i32* @x.9
  %211 = load i32, i32* @y.10
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %209, %originalBB22alteredBB
  %218 = load i32, i32* @x.9
  %219 = load i32, i32* @y.10
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %226

; <label>:226:                                    ; preds = %originalBBpart224
  %227 = load i32, i32* %24, align 4
  %228 = add i32 %227, 1
  store i32 %228, i32* %24, align 4
  br label %206

; <label>:229:                                    ; preds = %originalBBpart2
  %230 = landingpad { i8*, i32 }
          cleanup
  %231 = extractvalue { i8*, i32 } %230, 0
  store i8* %231, i8** %11, align 8
  %232 = extractvalue { i8*, i32 } %230, 1
  store i32 %232, i32* %12, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary) #2
  br label %941

; <label>:233:                                    ; preds = %65
  %234 = load i32, i32* @x.9
  %235 = load i32, i32* @y.10
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %233, %originalBB26alteredBB
  %242 = landingpad { i8*, i32 }
          cleanup
  %243 = extractvalue { i8*, i32 } %242, 0
  store i8* %243, i8** %11, align 8
  %244 = extractvalue { i8*, i32 } %242, 1
  store i32 %244, i32* %12, align 4
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %15) #2
  %245 = load i32, i32* @x.9
  %246 = load i32, i32* @y.10
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %941

; <label>:253:                                    ; preds = %920, %74
  %254 = landingpad { i8*, i32 }
          cleanup
  %255 = extractvalue { i8*, i32 } %254, 0
  store i8* %255, i8** %11, align 8
  %256 = extractvalue { i8*, i32 } %254, 1
  store i32 %256, i32* %12, align 4
  br label %939

; <label>:257:                                    ; preds = %originalBBpart24
  %258 = load i32, i32* @x.9
  %259 = load i32, i32* @y.10
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %257, %originalBB30alteredBB
  %266 = landingpad { i8*, i32 }
          cleanup
  %267 = extractvalue { i8*, i32 } %266, 0
  store i8* %267, i8** %11, align 8
  %268 = extractvalue { i8*, i32 } %266, 1
  store i32 %268, i32* %12, align 4
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %18) #2
  %269 = load i32, i32* @x.9
  %270 = load i32, i32* @y.10
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %939

; <label>:277:                                    ; preds = %890, %887, %originalBBpart2236, %originalBBpart2232, %847, %originalBBpart2224, %originalBBpart2220, %771, %originalBBpart2171, %originalBBpart2167, %originalBBpart2130, %589, %originalBBpart288, %560, %539, %534, %521, %originalBBpart280, %500, %497, %468, %465, %originalBBpart272, %originalBBpart268, %421, %originalBBpart264, %400, %originalBBpart260, %originalBBpart256, %originalBBpart252, %324, %321, %142, %originalBBpart212, %120, %116
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %11, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %12, align 4
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %16)
          to label %938 unwind label %946

; <label>:281:                                    ; preds = %206
  store i32 0, i32* %25, align 4
  br label %282

; <label>:282:                                    ; preds = %originalBBpart244, %281
  %283 = load i32, i32* @x.9
  %284 = load i32, i32* @y.10
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %282, %originalBB34alteredBB
  %291 = load i32, i32* %25, align 4
  %292 = icmp ult i32 %291, 4
  %293 = load i32, i32* @x.9
  %294 = load i32, i32* @y.10
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %292, label %301, label %321

; <label>:301:                                    ; preds = %originalBBpart236
  br label %302

; <label>:302:                                    ; preds = %301
  %303 = load i32, i32* @x.9
  %304 = load i32, i32* @y.10
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %302, %originalBB38alteredBB
  %311 = load i32, i32* %25, align 4
  %312 = add i32 %311, 1
  store i32 %312, i32* %25, align 4
  %313 = load i32, i32* @x.9
  %314 = load i32, i32* @y.10
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBBpart244, label %originalBB38alteredBB

originalBBpart244:                                ; preds = %originalBB38
  br label %282

; <label>:321:                                    ; preds = %originalBBpart236
  %322 = bitcast %class.TriaIterator.65* %20 to %class.TriaRawIterator.66*
  %323 = invoke %class.TriaObjectAccessor.68* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.66* %322)
          to label %324 unwind label %277

; <label>:324:                                    ; preds = %321
  %325 = invoke zeroext i1 @_ZNK18TriaObjectAccessorILi2ELi3EE11at_boundaryEv(%class.TriaObjectAccessor.68* %323)
          to label %326 unwind label %277

; <label>:326:                                    ; preds = %324
  %327 = load i32, i32* @x.9
  %328 = load i32, i32* @y.10
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %326, %originalBB46alteredBB
  %335 = load i32, i32* @x.9
  %336 = load i32, i32* @y.10
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %325, label %343, label %477

; <label>:343:                                    ; preds = %originalBBpart248
  %344 = load i32, i32* @x.9
  %345 = load i32, i32* @y.10
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %343, %originalBB50alteredBB
  %352 = bitcast %class.TriaIterator.65* %20 to %class.TriaRawIterator.66*
  %353 = load i32, i32* @x.9
  %354 = load i32, i32* @y.10
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  %361 = invoke %class.TriaObjectAccessor.68* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.66* %352)
          to label %362 unwind label %277

; <label>:362:                                    ; preds = %originalBBpart252
  %363 = load i32, i32* @x.9
  %364 = load i32, i32* @y.10
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %362, %originalBB54alteredBB
  %371 = bitcast %class.TriaObjectAccessor.68* %361 to %class.TriaAccessor*
  %372 = load i32, i32* @x.9
  %373 = load i32, i32* @y.10
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  %380 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK12TriaAccessorILi3EE17get_triangulationEv(%class.TriaAccessor* %371)
          to label %381 unwind label %277

; <label>:381:                                    ; preds = %originalBBpart256
  %382 = load i32, i32* @x.9
  %383 = load i32, i32* @y.10
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %381, %originalBB58alteredBB
  %390 = bitcast %class.TriaIterator.65* %20 to %class.TriaRawIterator.66*
  %391 = load i32, i32* @x.9
  %392 = load i32, i32* @y.10
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  %399 = invoke %class.TriaObjectAccessor.68* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.66* %390)
          to label %400 unwind label %277

; <label>:400:                                    ; preds = %originalBBpart260
  %401 = invoke zeroext i8 @_ZNK18TriaObjectAccessorILi2ELi3EE18boundary_indicatorEv(%class.TriaObjectAccessor.68* %399)
          to label %402 unwind label %277

; <label>:402:                                    ; preds = %400
  %403 = load i32, i32* @x.9
  %404 = load i32, i32* @y.10
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %402, %originalBB62alteredBB
  %411 = zext i8 %401 to i32
  %412 = load i32, i32* @x.9
  %413 = load i32, i32* @y.10
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  %420 = invoke dereferenceable(24) %class.Boundary* @_ZNK13TriangulationILi3EE12get_boundaryEj(%class.Triangulation* %380, i32 %411)
          to label %421 unwind label %277

; <label>:421:                                    ; preds = %originalBBpart264
  %422 = bitcast %class.Boundary* %420 to void (%class.Boundary*, %class.TriaIterator.65*, %"class.std::vector.58"*)***
  %423 = load void (%class.Boundary*, %class.TriaIterator.65*, %"class.std::vector.58"*)**, void (%class.Boundary*, %class.TriaIterator.65*, %"class.std::vector.58"*)*** %422, align 8
  %424 = getelementptr inbounds void (%class.Boundary*, %class.TriaIterator.65*, %"class.std::vector.58"*)*, void (%class.Boundary*, %class.TriaIterator.65*, %"class.std::vector.58"*)** %423, i64 5
  %425 = load void (%class.Boundary*, %class.TriaIterator.65*, %"class.std::vector.58"*)*, void (%class.Boundary*, %class.TriaIterator.65*, %"class.std::vector.58"*)** %424, align 8
  invoke void %425(%class.Boundary* %420, %class.TriaIterator.65* dereferenceable(16) %20, %"class.std::vector.58"* dereferenceable(24) %13)
          to label %426 unwind label %277

; <label>:426:                                    ; preds = %421
  %427 = load i32, i32* @x.9
  %428 = load i32, i32* @y.10
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %426, %originalBB66alteredBB
  %435 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %436 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %437 = load i32, i32* @x.9
  %438 = load i32, i32* @y.10
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  %445 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %436)
          to label %446 unwind label %277

; <label>:446:                                    ; preds = %originalBBpart268
  %447 = load i32, i32* @x.9
  %448 = load i32, i32* @y.10
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %446, %originalBB70alteredBB
  %455 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  store %class.Point* %445, %class.Point** %455, align 8
  %456 = load i32, i32* @x.9
  %457 = load i32, i32* @y.10
  %458 = sub i32 %456, 1
  %459 = mul i32 %456, %458
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %457, 10
  %463 = or i1 %461, %462
  br i1 %463, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  %464 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.58"* %13)
          to label %465 unwind label %277

; <label>:465:                                    ; preds = %originalBBpart272
  %466 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  store %class.Point* %464, %class.Point** %466, align 8
  %467 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %13)
          to label %468 unwind label %277

; <label>:468:                                    ; preds = %465
  %469 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %class.Point* %467, %class.Point** %469, align 8
  %470 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  %471 = load %class.Point*, %class.Point** %470, align 8
  %472 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  %473 = load %class.Point*, %class.Point** %472, align 8
  %474 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %475 = load %class.Point*, %class.Point** %474, align 8
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EE6insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_(%"class.std::vector.58"* %435, %class.Point* %471, %class.Point* %473, %class.Point* %475)
          to label %476 unwind label %277

; <label>:476:                                    ; preds = %468
  br label %916

; <label>:477:                                    ; preds = %originalBBpart248
  %478 = load i32, i32* @x.9
  %479 = load i32, i32* @y.10
  %480 = sub i32 %478, 1
  %481 = mul i32 %478, %480
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %479, 10
  %485 = or i1 %483, %484
  br i1 %485, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %477, %originalBB74alteredBB
  store i32 0, i32* %29, align 4
  store i32 0, i32* %30, align 4
  %486 = load i32, i32* @x.9
  %487 = load i32, i32* @y.10
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %494

; <label>:494:                                    ; preds = %528, %originalBBpart276
  %495 = load i32, i32* %30, align 4
  %496 = icmp ult i32 %495, 4
  br i1 %496, label %497, label %531

; <label>:497:                                    ; preds = %494
  %498 = bitcast %class.TriaIterator.65* %20 to %class.TriaRawIterator.66*
  %499 = invoke %class.TriaObjectAccessor.68* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.66* %498)
          to label %500 unwind label %277

; <label>:500:                                    ; preds = %497
  %501 = load i32, i32* %30, align 4
  invoke void @_ZNK18TriaObjectAccessorILi2ELi3EE4lineEj(%class.TriaIterator.69* sret %31, %class.TriaObjectAccessor.68* %499, i32 %501)
          to label %502 unwind label %277

; <label>:502:                                    ; preds = %500
  %503 = load i32, i32* @x.9
  %504 = load i32, i32* @y.10
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %502, %originalBB78alteredBB
  %511 = bitcast %class.TriaIterator.69* %31 to %class.TriaRawIterator.70*
  %512 = load i32, i32* @x.9
  %513 = load i32, i32* @y.10
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  %520 = invoke %class.TriaObjectAccessor.72* @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70* %511)
          to label %521 unwind label %277

; <label>:521:                                    ; preds = %originalBBpart280
  %522 = invoke zeroext i1 @_ZNK18TriaObjectAccessorILi1ELi3EE11at_boundaryEv(%class.TriaObjectAccessor.72* %520)
          to label %523 unwind label %277

; <label>:523:                                    ; preds = %521
  br i1 %522, label %524, label %527

; <label>:524:                                    ; preds = %523
  %525 = load i32, i32* %29, align 4
  %526 = add i32 %525, 1
  store i32 %526, i32* %29, align 4
  br label %527

; <label>:527:                                    ; preds = %524, %523
  br label %528

; <label>:528:                                    ; preds = %527
  %529 = load i32, i32* %30, align 4
  %530 = add i32 %529, 1
  store i32 %530, i32* %30, align 4
  br label %494

; <label>:531:                                    ; preds = %494
  %532 = load i32, i32* %29, align 4
  %533 = icmp ugt i32 %532, 0
  br i1 %533, label %534, label %847

; <label>:534:                                    ; preds = %531
  %535 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %536 = load i32, i32* %535, align 8
  %537 = mul i32 4, %536
  %538 = zext i32 %537 to i64
  invoke void @_ZN5PointILi3EEC2Ev(%class.Point* %32)
          to label %539 unwind label %277

; <label>:539:                                    ; preds = %534
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.58"* %16, i64 %538, %class.Point* %32)
          to label %540 unwind label %277

; <label>:540:                                    ; preds = %539
  store i32 0, i32* %33, align 4
  br label %541

; <label>:541:                                    ; preds = %originalBBpart299, %540
  %542 = load i32, i32* @x.9
  %543 = load i32, i32* @y.10
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %541, %originalBB82alteredBB
  %550 = load i32, i32* %33, align 4
  %551 = icmp ult i32 %550, 4
  %552 = load i32, i32* @x.9
  %553 = load i32, i32* @y.10
  %554 = sub i32 %552, 1
  %555 = mul i32 %552, %554
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %553, 10
  %559 = or i1 %557, %558
  br i1 %559, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %551, label %560, label %611

; <label>:560:                                    ; preds = %originalBBpart284
  %561 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %562 = load i32*, i32** %22, align 8
  %563 = load i32, i32* %33, align 4
  %564 = zext i32 %563 to i64
  %565 = getelementptr inbounds i32, i32* %562, i64 %564
  %566 = load i32, i32* %565, align 4
  %567 = zext i32 %566 to i64
  %568 = invoke dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %561, i64 %567)
          to label %569 unwind label %277

; <label>:569:                                    ; preds = %560
  %570 = load i32, i32* @x.9
  %571 = load i32, i32* @y.10
  %572 = sub i32 %570, 1
  %573 = mul i32 %570, %572
  %574 = urem i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %571, 10
  %577 = or i1 %575, %576
  br i1 %577, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %569, %originalBB86alteredBB
  %578 = load i32, i32* %33, align 4
  %579 = zext i32 %578 to i64
  %580 = load i32, i32* @x.9
  %581 = load i32, i32* @y.10
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  %588 = invoke dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %16, i64 %579)
          to label %589 unwind label %277

; <label>:589:                                    ; preds = %originalBBpart288
  %590 = invoke dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %588, %class.Point* dereferenceable(24) %568)
          to label %591 unwind label %277

; <label>:591:                                    ; preds = %589
  br label %592

; <label>:592:                                    ; preds = %591
  %593 = load i32, i32* @x.9
  %594 = load i32, i32* @y.10
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %592, %originalBB90alteredBB
  %601 = load i32, i32* %33, align 4
  %602 = add i32 %601, 1
  store i32 %602, i32* %33, align 4
  %603 = load i32, i32* @x.9
  %604 = load i32, i32* @y.10
  %605 = sub i32 %603, 1
  %606 = mul i32 %603, %605
  %607 = urem i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %604, 10
  %610 = or i1 %608, %609
  br i1 %610, label %originalBBpart299, label %originalBB90alteredBB

originalBBpart299:                                ; preds = %originalBB90
  br label %541

; <label>:611:                                    ; preds = %originalBBpart284
  %612 = load i32, i32* @x.9
  %613 = load i32, i32* @y.10
  %614 = sub i32 %612, 1
  %615 = mul i32 %612, %614
  %616 = urem i32 %615, 2
  %617 = icmp eq i32 %616, 0
  %618 = icmp slt i32 %613, 10
  %619 = or i1 %617, %618
  br i1 %619, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %611, %originalBB101alteredBB
  store i32 0, i32* %34, align 4
  %620 = load i32, i32* @x.9
  %621 = load i32, i32* @y.10
  %622 = sub i32 %620, 1
  %623 = mul i32 %620, %622
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %625, %626
  br i1 %627, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %628

; <label>:628:                                    ; preds = %originalBBpart2183, %originalBBpart2103
  %629 = load i32, i32* @x.9
  %630 = load i32, i32* @y.10
  %631 = sub i32 %629, 1
  %632 = mul i32 %629, %631
  %633 = urem i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %630, 10
  %636 = or i1 %634, %635
  br i1 %636, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %628, %originalBB105alteredBB
  %637 = load i32, i32* %34, align 4
  %638 = icmp ult i32 %637, 4
  %639 = load i32, i32* @x.9
  %640 = load i32, i32* @y.10
  %641 = sub i32 %639, 1
  %642 = mul i32 %639, %641
  %643 = urem i32 %642, 2
  %644 = icmp eq i32 %643, 0
  %645 = icmp slt i32 %640, 10
  %646 = or i1 %644, %645
  br i1 %646, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br i1 %638, label %647, label %771

; <label>:647:                                    ; preds = %originalBBpart2107
  store i32 0, i32* %35, align 4
  br label %648

; <label>:648:                                    ; preds = %748, %647
  %649 = load i32, i32* %35, align 4
  %650 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %651 = load i32, i32* %650, align 8
  %652 = sub i32 %651, 1
  %653 = icmp ult i32 %649, %652
  br i1 %653, label %654, label %751

; <label>:654:                                    ; preds = %648
  %655 = load i32, i32* @x.9
  %656 = load i32, i32* @y.10
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %654, %originalBB109alteredBB
  %663 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %664 = load i32*, i32** %23, align 8
  %665 = load i32, i32* %34, align 4
  %666 = zext i32 %665 to i64
  %667 = getelementptr inbounds i32, i32* %664, i64 %666
  %668 = load i32, i32* %667, align 4
  %669 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %670 = load i32, i32* %669, align 8
  %671 = sub i32 %670, 1
  %672 = mul i32 %668, %671
  %673 = add i32 8, %672
  %674 = load i32, i32* %35, align 4
  %675 = add i32 %673, %674
  %676 = zext i32 %675 to i64
  %677 = load i32, i32* @x.9
  %678 = load i32, i32* @y.10
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBBpart2130, label %originalBB109alteredBB

originalBBpart2130:                               ; preds = %originalBB109
  %685 = invoke dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %663, i64 %676)
          to label %686 unwind label %277

; <label>:686:                                    ; preds = %originalBBpart2130
  %687 = load i32, i32* @x.9
  %688 = load i32, i32* @y.10
  %689 = sub i32 %687, 1
  %690 = mul i32 %687, %689
  %691 = urem i32 %690, 2
  %692 = icmp eq i32 %691, 0
  %693 = icmp slt i32 %688, 10
  %694 = or i1 %692, %693
  br i1 %694, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %686, %originalBB132alteredBB
  %695 = load i32, i32* %34, align 4
  %696 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %697 = load i32, i32* %696, align 8
  %698 = sub i32 %697, 1
  %699 = mul i32 %695, %698
  %700 = add i32 4, %699
  %701 = load i32, i32* %35, align 4
  %702 = add i32 %700, %701
  %703 = zext i32 %702 to i64
  %704 = load i32, i32* @x.9
  %705 = load i32, i32* @y.10
  %706 = sub i32 %704, 1
  %707 = mul i32 %704, %706
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %705, 10
  %711 = or i1 %709, %710
  br i1 %711, label %originalBBpart2167, label %originalBB132alteredBB

originalBBpart2167:                               ; preds = %originalBB132
  %712 = invoke dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %16, i64 %703)
          to label %713 unwind label %277

; <label>:713:                                    ; preds = %originalBBpart2167
  %714 = load i32, i32* @x.9
  %715 = load i32, i32* @y.10
  %716 = sub i32 %714, 1
  %717 = mul i32 %714, %716
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %715, 10
  %721 = or i1 %719, %720
  br i1 %721, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %713, %originalBB169alteredBB
  %722 = load i32, i32* @x.9
  %723 = load i32, i32* @y.10
  %724 = sub i32 %722, 1
  %725 = mul i32 %722, %724
  %726 = urem i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = icmp slt i32 %723, 10
  %729 = or i1 %727, %728
  br i1 %729, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  %730 = invoke dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %712, %class.Point* dereferenceable(24) %685)
          to label %731 unwind label %277

; <label>:731:                                    ; preds = %originalBBpart2171
  %732 = load i32, i32* @x.9
  %733 = load i32, i32* @y.10
  %734 = sub i32 %732, 1
  %735 = mul i32 %732, %734
  %736 = urem i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = icmp slt i32 %733, 10
  %739 = or i1 %737, %738
  br i1 %739, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %731, %originalBB173alteredBB
  %740 = load i32, i32* @x.9
  %741 = load i32, i32* @y.10
  %742 = sub i32 %740, 1
  %743 = mul i32 %740, %742
  %744 = urem i32 %743, 2
  %745 = icmp eq i32 %744, 0
  %746 = icmp slt i32 %741, 10
  %747 = or i1 %745, %746
  br i1 %747, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br label %748

; <label>:748:                                    ; preds = %originalBBpart2175
  %749 = load i32, i32* %35, align 4
  %750 = add i32 %749, 1
  store i32 %750, i32* %35, align 4
  br label %648

; <label>:751:                                    ; preds = %648
  br label %752

; <label>:752:                                    ; preds = %751
  %753 = load i32, i32* @x.9
  %754 = load i32, i32* @y.10
  %755 = sub i32 %753, 1
  %756 = mul i32 %753, %755
  %757 = urem i32 %756, 2
  %758 = icmp eq i32 %757, 0
  %759 = icmp slt i32 %754, 10
  %760 = or i1 %758, %759
  br i1 %760, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %752, %originalBB177alteredBB
  %761 = load i32, i32* %34, align 4
  %762 = add i32 %761, 1
  store i32 %762, i32* %34, align 4
  %763 = load i32, i32* @x.9
  %764 = load i32, i32* @y.10
  %765 = sub i32 %763, 1
  %766 = mul i32 %763, %765
  %767 = urem i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = icmp slt i32 %764, 10
  %770 = or i1 %768, %769
  br i1 %770, label %originalBBpart2183, label %originalBB177alteredBB

originalBBpart2183:                               ; preds = %originalBB177
  br label %628

; <label>:771:                                    ; preds = %originalBBpart2107
  %772 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 1
  invoke void @_ZNK8MappingQILi3EE20apply_laplace_vectorERK5TableILi2EdERSt6vectorI5PointILi3EESaIS7_EE(%class.MappingQ* %40, %class.Table* dereferenceable(48) %772, %"class.std::vector.58"* dereferenceable(24) %16)
          to label %773 unwind label %277

; <label>:773:                                    ; preds = %771
  store i32 0, i32* %36, align 4
  br label %774

; <label>:774:                                    ; preds = %827, %773
  %775 = load i32, i32* %36, align 4
  %776 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %777 = load i32, i32* %776, align 8
  %778 = sub i32 %777, 1
  %779 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %780 = load i32, i32* %779, align 8
  %781 = sub i32 %780, 1
  %782 = mul i32 %778, %781
  %783 = icmp ult i32 %775, %782
  br i1 %783, label %784, label %830

; <label>:784:                                    ; preds = %774
  %785 = load i32, i32* @x.9
  %786 = load i32, i32* @y.10
  %787 = sub i32 %785, 1
  %788 = mul i32 %785, %787
  %789 = urem i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = icmp slt i32 %786, 10
  %792 = or i1 %790, %791
  br i1 %792, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %784, %originalBB185alteredBB
  %793 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %794 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %795 = load i32, i32* %794, align 8
  %796 = mul i32 4, %795
  %797 = load i32, i32* %36, align 4
  %798 = add i32 %796, %797
  %799 = zext i32 %798 to i64
  %800 = load i32, i32* @x.9
  %801 = load i32, i32* @y.10
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBBpart2220, label %originalBB185alteredBB

originalBBpart2220:                               ; preds = %originalBB185
  %808 = invoke dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %16, i64 %799)
          to label %809 unwind label %277

; <label>:809:                                    ; preds = %originalBBpart2220
  %810 = load i32, i32* @x.9
  %811 = load i32, i32* @y.10
  %812 = sub i32 %810, 1
  %813 = mul i32 %810, %812
  %814 = urem i32 %813, 2
  %815 = icmp eq i32 %814, 0
  %816 = icmp slt i32 %811, 10
  %817 = or i1 %815, %816
  br i1 %817, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %809, %originalBB222alteredBB
  %818 = load i32, i32* @x.9
  %819 = load i32, i32* @y.10
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBBpart2224, label %originalBB222alteredBB

originalBBpart2224:                               ; preds = %originalBB222
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EE9push_backERKS1_(%"class.std::vector.58"* %793, %class.Point* dereferenceable(24) %808)
          to label %826 unwind label %277

; <label>:826:                                    ; preds = %originalBBpart2224
  br label %827

; <label>:827:                                    ; preds = %826
  %828 = load i32, i32* %36, align 4
  %829 = add i32 %828, 1
  store i32 %829, i32* %36, align 4
  br label %774

; <label>:830:                                    ; preds = %774
  %831 = load i32, i32* @x.9
  %832 = load i32, i32* @y.10
  %833 = sub i32 %831, 1
  %834 = mul i32 %831, %833
  %835 = urem i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = icmp slt i32 %832, 10
  %838 = or i1 %836, %837
  br i1 %838, label %originalBB226, label %originalBB226alteredBB

originalBB226:                                    ; preds = %830, %originalBB226alteredBB
  %839 = load i32, i32* @x.9
  %840 = load i32, i32* @y.10
  %841 = sub i32 %839, 1
  %842 = mul i32 %839, %841
  %843 = urem i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = icmp slt i32 %840, 10
  %846 = or i1 %844, %845
  br i1 %846, label %originalBBpart2228, label %originalBB226alteredBB

originalBBpart2228:                               ; preds = %originalBB226
  br label %915

; <label>:847:                                    ; preds = %531
  invoke void @_ZNK16StraightBoundaryILi3EE31get_intermediate_points_on_quadERK12TriaIteratorILi3E18TriaObjectAccessorILi2ELi3EEERSt6vectorI5PointILi3EESaIS9_EE(%class.StraightBoundary* @_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary, %class.TriaIterator.65* dereferenceable(16) %20, %"class.std::vector.58"* dereferenceable(24) %13)
          to label %848 unwind label %277

; <label>:848:                                    ; preds = %847
  %849 = load i32, i32* @x.9
  %850 = load i32, i32* @y.10
  %851 = sub i32 %849, 1
  %852 = mul i32 %849, %851
  %853 = urem i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = icmp slt i32 %850, 10
  %856 = or i1 %854, %855
  br i1 %856, label %originalBB230, label %originalBB230alteredBB

originalBB230:                                    ; preds = %848, %originalBB230alteredBB
  %857 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %858 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %859 = load i32, i32* @x.9
  %860 = load i32, i32* @y.10
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBBpart2232, label %originalBB230alteredBB

originalBBpart2232:                               ; preds = %originalBB230
  %867 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %858)
          to label %868 unwind label %277

; <label>:868:                                    ; preds = %originalBBpart2232
  %869 = load i32, i32* @x.9
  %870 = load i32, i32* @y.10
  %871 = sub i32 %869, 1
  %872 = mul i32 %869, %871
  %873 = urem i32 %872, 2
  %874 = icmp eq i32 %873, 0
  %875 = icmp slt i32 %870, 10
  %876 = or i1 %874, %875
  br i1 %876, label %originalBB234, label %originalBB234alteredBB

originalBB234:                                    ; preds = %868, %originalBB234alteredBB
  %877 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  store %class.Point* %867, %class.Point** %877, align 8
  %878 = load i32, i32* @x.9
  %879 = load i32, i32* @y.10
  %880 = sub i32 %878, 1
  %881 = mul i32 %878, %880
  %882 = urem i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = icmp slt i32 %879, 10
  %885 = or i1 %883, %884
  br i1 %885, label %originalBBpart2236, label %originalBB234alteredBB

originalBBpart2236:                               ; preds = %originalBB234
  %886 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.58"* %13)
          to label %887 unwind label %277

; <label>:887:                                    ; preds = %originalBBpart2236
  %888 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  store %class.Point* %886, %class.Point** %888, align 8
  %889 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %13)
          to label %890 unwind label %277

; <label>:890:                                    ; preds = %887
  %891 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store %class.Point* %889, %class.Point** %891, align 8
  %892 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  %893 = load %class.Point*, %class.Point** %892, align 8
  %894 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  %895 = load %class.Point*, %class.Point** %894, align 8
  %896 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %897 = load %class.Point*, %class.Point** %896, align 8
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EE6insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_(%"class.std::vector.58"* %857, %class.Point* %893, %class.Point* %895, %class.Point* %897)
          to label %898 unwind label %277

; <label>:898:                                    ; preds = %890
  %899 = load i32, i32* @x.9
  %900 = load i32, i32* @y.10
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBB238, label %originalBB238alteredBB

originalBB238:                                    ; preds = %898, %originalBB238alteredBB
  %907 = load i32, i32* @x.9
  %908 = load i32, i32* @y.10
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBBpart2240, label %originalBB238alteredBB

originalBBpart2240:                               ; preds = %originalBB238
  br label %915

; <label>:915:                                    ; preds = %originalBBpart2240, %originalBBpart2228
  br label %916

; <label>:916:                                    ; preds = %915, %476
  br label %917

; <label>:917:                                    ; preds = %916
  %918 = load i32, i32* %19, align 4
  %919 = add i32 %918, 1
  store i32 %919, i32* %19, align 4
  br label %97

; <label>:920:                                    ; preds = %originalBBpart28
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %16)
          to label %921 unwind label %253

; <label>:921:                                    ; preds = %920
  %922 = load i32, i32* @x.9
  %923 = load i32, i32* @y.10
  %924 = sub i32 %922, 1
  %925 = mul i32 %922, %924
  %926 = urem i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = icmp slt i32 %923, 10
  %929 = or i1 %927, %928
  br i1 %929, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %921, %originalBB242alteredBB
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %13)
  %930 = load i32, i32* @x.9
  %931 = load i32, i32* @y.10
  %932 = sub i32 %930, 1
  %933 = mul i32 %930, %932
  %934 = urem i32 %933, 2
  %935 = icmp eq i32 %934, 0
  %936 = icmp slt i32 %931, 10
  %937 = or i1 %935, %936
  br i1 %937, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  ret void

; <label>:938:                                    ; preds = %277
  br label %939

; <label>:939:                                    ; preds = %938, %originalBBpart232, %253
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %13)
          to label %940 unwind label %946

; <label>:940:                                    ; preds = %939
  br label %941

; <label>:941:                                    ; preds = %940, %originalBBpart228, %229
  %942 = load i8*, i8** %11, align 8
  %943 = load i32, i32* %12, align 4
  %944 = insertvalue { i8*, i32 } undef, i8* %942, 0
  %945 = insertvalue { i8*, i32 } %944, i32 %943, 1
  resume { i8*, i32 } %945

; <label>:946:                                    ; preds = %939, %277
  %947 = landingpad { i8*, i32 }
          catch i8* null
  %948 = extractvalue { i8*, i32 } %947, 0
  call void @__clang_call_terminate(i8* %948) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %46
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %79
  call void @_ZNSaI5PointILi3EEEC2Ev(%"class.std::allocator.60"* %18) #2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %97
  %949 = load i32, i32* %19, align 4
  %950 = icmp ult i32 %949, 6
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %122
  %951 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %952 = bitcast %class.TriaIterator* %951 to %class.TriaRawIterator*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %167
  %953 = load i32, i32* %19, align 4
  %954 = zext i32 %953 to i64
  %955 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @_ZZNK8MappingQILi3EE23add_quad_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE23face_line_to_cell_line2, i64 0, i64 %954
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %187
  %956 = getelementptr inbounds [4 x i32], [4 x i32]* %188, i32 0, i32 0
  store i32* %956, i32** %23, align 8
  store i32 0, i32* %24, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %209
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %233
  %957 = landingpad { i8*, i32 }
          cleanup
  %958 = extractvalue { i8*, i32 } %957, 0
  store i8* %958, i8** %11, align 8
  %959 = extractvalue { i8*, i32 } %957, 1
  store i32 %959, i32* %12, align 4
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %15) #2
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %257
  %960 = landingpad { i8*, i32 }
          cleanup
  %961 = extractvalue { i8*, i32 } %960, 0
  store i8* %961, i8** %11, align 8
  %962 = extractvalue { i8*, i32 } %960, 1
  store i32 %962, i32* %12, align 4
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %18) #2
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %282
  %963 = load i32, i32* %25, align 4
  %964 = icmp ult i32 %963, 4
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %302
  %965 = load i32, i32* %25, align 4
  %_ = shl i32 %965, 1
  %_39 = shl i32 %965, 1
  %_40 = shl i32 %965, 1
  %_41 = shl i32 %965, 1
  %_42 = sub i32 %965, 1
  %gen = mul i32 %_42, 1
  %966 = add i32 %965, 1
  store i32 %966, i32* %25, align 4
  br label %originalBB38

originalBB46alteredBB:                            ; preds = %originalBB46, %326
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %343
  %967 = bitcast %class.TriaIterator.65* %20 to %class.TriaRawIterator.66*
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %362
  %968 = bitcast %class.TriaObjectAccessor.68* %361 to %class.TriaAccessor*
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %381
  %969 = bitcast %class.TriaIterator.65* %20 to %class.TriaRawIterator.66*
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %402
  %970 = zext i8 %401 to i32
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %426
  %971 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %972 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %446
  %973 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  store %class.Point* %445, %class.Point** %973, align 8
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %477
  store i32 0, i32* %29, align 4
  store i32 0, i32* %30, align 4
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %502
  %974 = bitcast %class.TriaIterator.69* %31 to %class.TriaRawIterator.70*
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %541
  %975 = load i32, i32* %33, align 4
  %976 = icmp ult i32 %975, 4
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %569
  %977 = load i32, i32* %33, align 4
  %978 = zext i32 %977 to i64
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %592
  %979 = load i32, i32* %33, align 4
  %_91 = shl i32 %979, 1
  %_92 = sub i32 %979, 1
  %gen93 = mul i32 %_92, 1
  %_94 = shl i32 %979, 1
  %_95 = shl i32 %979, 1
  %_96 = sub i32 %979, 1
  %gen97 = mul i32 %_96, 1
  %980 = add i32 %979, 1
  store i32 %980, i32* %33, align 4
  br label %originalBB90

originalBB101alteredBB:                           ; preds = %originalBB101, %611
  store i32 0, i32* %34, align 4
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %628
  %981 = load i32, i32* %34, align 4
  %982 = icmp ult i32 %981, 4
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %654
  %983 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %984 = load i32*, i32** %23, align 8
  %985 = load i32, i32* %34, align 4
  %986 = zext i32 %985 to i64
  %987 = getelementptr inbounds i32, i32* %984, i64 %986
  %988 = load i32, i32* %987, align 4
  %989 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %990 = load i32, i32* %989, align 8
  %_110 = sub i32 %990, 1
  %gen111 = mul i32 %_110, 1
  %_112 = sub i32 %990, 1
  %gen113 = mul i32 %_112, 1
  %_114 = sub i32 0, %990
  %gen115 = add i32 %_114, 1
  %_116 = shl i32 %990, 1
  %991 = sub i32 %990, 1
  %_117 = sub i32 0, %988
  %gen118 = add i32 %_117, %991
  %_119 = sub i32 %988, %991
  %gen120 = mul i32 %_119, %991
  %_121 = sub i32 %988, %991
  %gen122 = mul i32 %_121, %991
  %_123 = shl i32 %988, %991
  %_124 = shl i32 %988, %991
  %992 = mul i32 %988, %991
  %_125 = sub i32 8, %992
  %gen126 = mul i32 %_125, %992
  %993 = add i32 8, %992
  %994 = load i32, i32* %35, align 4
  %_127 = sub i32 0, %993
  %gen128 = add i32 %_127, %994
  %995 = add i32 %993, %994
  %996 = zext i32 %995 to i64
  br label %originalBB109

originalBB132alteredBB:                           ; preds = %originalBB132, %686
  %997 = load i32, i32* %34, align 4
  %998 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %999 = load i32, i32* %998, align 8
  %_133 = shl i32 %999, 1
  %_134 = sub i32 %999, 1
  %gen135 = mul i32 %_134, 1
  %_136 = sub i32 %999, 1
  %gen137 = mul i32 %_136, 1
  %_138 = sub i32 0, %999
  %gen139 = add i32 %_138, 1
  %1000 = sub i32 %999, 1
  %_140 = sub i32 %997, %1000
  %gen141 = mul i32 %_140, %1000
  %_142 = sub i32 0, %997
  %gen143 = add i32 %_142, %1000
  %_144 = sub i32 %997, %1000
  %gen145 = mul i32 %_144, %1000
  %_146 = shl i32 %997, %1000
  %_147 = shl i32 %997, %1000
  %_148 = sub i32 %997, %1000
  %gen149 = mul i32 %_148, %1000
  %1001 = mul i32 %997, %1000
  %_150 = shl i32 4, %1001
  %_151 = sub i32 4, %1001
  %gen152 = mul i32 %_151, %1001
  %_153 = shl i32 4, %1001
  %_154 = sub i32 0, 4
  %gen155 = add i32 %_154, %1001
  %_156 = shl i32 4, %1001
  %_157 = sub i32 4, %1001
  %gen158 = mul i32 %_157, %1001
  %_159 = shl i32 4, %1001
  %1002 = add i32 4, %1001
  %1003 = load i32, i32* %35, align 4
  %_160 = sub i32 %1002, %1003
  %gen161 = mul i32 %_160, %1003
  %_162 = sub i32 0, %1002
  %gen163 = add i32 %_162, %1003
  %_164 = sub i32 0, %1002
  %gen165 = add i32 %_164, %1003
  %1004 = add i32 %1002, %1003
  %1005 = zext i32 %1004 to i64
  br label %originalBB132

originalBB169alteredBB:                           ; preds = %originalBB169, %713
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %731
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %752
  %1006 = load i32, i32* %34, align 4
  %_178 = sub i32 %1006, 1
  %gen179 = mul i32 %_178, 1
  %_180 = sub i32 %1006, 1
  %gen181 = mul i32 %_180, 1
  %1007 = add i32 %1006, 1
  store i32 %1007, i32* %34, align 4
  br label %originalBB177

originalBB185alteredBB:                           ; preds = %originalBB185, %784
  %1008 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %1009 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %40, i32 0, i32 3
  %1010 = load i32, i32* %1009, align 8
  %_186 = sub i32 4, %1010
  %gen187 = mul i32 %_186, %1010
  %_188 = shl i32 4, %1010
  %_189 = sub i32 0, 4
  %gen190 = add i32 %_189, %1010
  %_191 = shl i32 4, %1010
  %_192 = sub i32 4, %1010
  %gen193 = mul i32 %_192, %1010
  %_194 = sub i32 4, %1010
  %gen195 = mul i32 %_194, %1010
  %_196 = sub i32 4, %1010
  %gen197 = mul i32 %_196, %1010
  %_198 = shl i32 4, %1010
  %_199 = sub i32 0, 4
  %gen200 = add i32 %_199, %1010
  %_201 = sub i32 4, %1010
  %gen202 = mul i32 %_201, %1010
  %1011 = mul i32 4, %1010
  %1012 = load i32, i32* %36, align 4
  %_203 = sub i32 0, %1011
  %gen204 = add i32 %_203, %1012
  %_205 = sub i32 %1011, %1012
  %gen206 = mul i32 %_205, %1012
  %_207 = sub i32 %1011, %1012
  %gen208 = mul i32 %_207, %1012
  %_209 = sub i32 0, %1011
  %gen210 = add i32 %_209, %1012
  %_211 = shl i32 %1011, %1012
  %_212 = sub i32 %1011, %1012
  %gen213 = mul i32 %_212, %1012
  %_214 = sub i32 0, %1011
  %gen215 = add i32 %_214, %1012
  %_216 = shl i32 %1011, %1012
  %_217 = sub i32 %1011, %1012
  %gen218 = mul i32 %_217, %1012
  %1013 = add i32 %1011, %1012
  %1014 = zext i32 %1013 to i64
  br label %originalBB185

originalBB222alteredBB:                           ; preds = %originalBB222, %809
  br label %originalBB222

originalBB226alteredBB:                           ; preds = %originalBB226, %830
  br label %originalBB226

originalBB230alteredBB:                           ; preds = %originalBB230, %848
  %1015 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %1016 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  br label %originalBB230

originalBB234alteredBB:                           ; preds = %originalBB234, %868
  %1017 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  store %class.Point* %867, %class.Point** %1017, align 8
  br label %originalBB234

originalBB238alteredBB:                           ; preds = %originalBB238, %898
  br label %originalBB238

originalBB242alteredBB:                           ; preds = %originalBB242, %921
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %13)
  br label %originalBB242
}

; Function Attrs: nounwind
declare i32 @__cxa_guard_acquire(i64*) #2

declare void @_ZN16StraightBoundaryILi3EEC1Ev(%class.StraightBoundary*) unnamed_addr #3

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16StraightBoundaryILi3EED2Ev(%class.StraightBoundary*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.11
  %3 = load i32, i32* @y.12
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.StraightBoundary*, align 8
  store %class.StraightBoundary* %0, %class.StraightBoundary** %10, align 8
  %11 = load %class.StraightBoundary*, %class.StraightBoundary** %10, align 8
  %12 = bitcast %class.StraightBoundary* %11 to %class.Boundary*
  call void @_ZN8BoundaryILi3EED2Ev(%class.Boundary* %12)
  %13 = load i32, i32* @x.11
  %14 = load i32, i32* @y.12
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.StraightBoundary*, align 8
  store %class.StraightBoundary* %0, %class.StraightBoundary** %21, align 8
  %22 = load %class.StraightBoundary*, %class.StraightBoundary** %21, align 8
  %23 = bitcast %class.StraightBoundary* %22 to %class.Boundary*
  call void @_ZN8BoundaryILi3EED2Ev(%class.Boundary* %23)
  br label %originalBB
}

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #2

; Function Attrs: nounwind
declare void @__cxa_guard_abort(i64*) #2

; Function Attrs: nounwind
declare void @__cxa_guard_release(i64*) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi3EEC2Ev(%class.Point*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %2, align 8
  %3 = load %class.Point*, %class.Point** %2, align 8
  %4 = bitcast %class.Point* %3 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %4, i1 zeroext true)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI5PointILi3EEEC2Ev(%"class.std::allocator.60"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.60"*, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %10, align 8
  %11 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %10, align 8
  %12 = bitcast %"class.std::allocator.60"* %11 to %"class.__gnu_cxx::new_allocator.61"*
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.61"* %12) #2
  %13 = load i32, i32* @x.15
  %14 = load i32, i32* @y.16
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.60"*, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %21, align 8
  %22 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %21, align 8
  %23 = bitcast %"class.std::allocator.60"* %22 to %"class.__gnu_cxx::new_allocator.61"*
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.61"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.58"*, i64, %class.Point* dereferenceable(24), %"class.std::allocator.60"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.58"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.60"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.60"* %3, %"class.std::allocator.60"** %8, align 8
  %11 = load %"class.std::vector.58"*, %"class.std::vector.58"** %5, align 8
  %12 = bitcast %"class.std::vector.58"* %11 to %"struct.std::_Vector_base.59"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %8, align 8
  %15 = call i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE17_S_check_init_lenEmRKS2_(i64 %13, %"class.std::allocator.60"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %8, align 8
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.59"* %12, i64 %15, %"class.std::allocator.60"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load %class.Point*, %class.Point** %7, align 8
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.58"* %11, i64 %17, %class.Point* dereferenceable(24) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %4
  ret void

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* @x.17
  %22 = load i32, i32* @y.18
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %9, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %10, align 4
  %32 = bitcast %"class.std::vector.58"* %11 to %"struct.std::_Vector_base.59"*
  %33 = load i32, i32* @x.17
  %34 = load i32, i32* @y.18
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.59"* %32)
          to label %41 unwind label %63

; <label>:41:                                     ; preds = %originalBBpart2
  %42 = load i32, i32* @x.17
  %43 = load i32, i32* @y.18
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i32, i32* @x.17
  %51 = load i32, i32* @y.18
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i8*, i8** %9, align 8
  %60 = load i32, i32* %10, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %originalBBpart2
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  call void @__clang_call_terminate(i8* %65) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %20
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %9, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %10, align 4
  %69 = bitcast %"class.std::vector.58"* %11 to %"struct.std::_Vector_base.59"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.60"*, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %2, align 8
  %3 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %2, align 8
  %4 = bitcast %"class.std::allocator.60"* %3 to %"class.__gnu_cxx::new_allocator.61"*
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEED2Ev(%"class.__gnu_cxx::new_allocator.61"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator*) #0 comdat align 2 {
  %2 = load i32, i32* @x.21
  %3 = load i32, i32* @y.22
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %10, align 8
  %11 = load %class.TriaRawIterator*, %class.TriaRawIterator** %10, align 8
  %12 = call dereferenceable(16) %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEdeEv(%class.TriaRawIterator* %11)
  %13 = load i32, i32* @x.21
  %14 = load i32, i32* @y.22
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.CellAccessor* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %21, align 8
  %22 = load %class.TriaRawIterator*, %class.TriaRawIterator** %21, align 8
  %23 = call dereferenceable(16) %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEdeEv(%class.TriaRawIterator* %22)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK12CellAccessorILi3EE4faceEj(%class.TriaIterator.65* noalias sret, %class.CellAccessor*, i32) #0 comdat align 2 {
  %4 = alloca %class.CellAccessor*, align 8
  %5 = alloca i32, align 4
  store %class.CellAccessor* %1, %class.CellAccessor** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.CellAccessor*, %class.CellAccessor** %4, align 8
  %7 = bitcast %class.CellAccessor* %6 to %class.TriaObjectAccessor*
  %8 = load i32, i32* %5, align 4
  call void @_ZNK18TriaObjectAccessorILi3ELi3EE4quadEj(%class.TriaIterator.65* sret %0, %class.TriaObjectAccessor* %7, i32 %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor*, i32) #0 comdat align 2 {
  %3 = alloca %class.TriaObjectAccessor*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"struct.std::_Bit_reference", align 8
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %3, align 8
  %7 = bitcast %class.TriaObjectAccessor* %6 to %class.TriaAccessor*
  %8 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %7, i32 0, i32 2
  %9 = load %class.Triangulation*, %class.Triangulation** %8, align 8
  %10 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %9, i32 0, i32 1
  %11 = bitcast %class.TriaObjectAccessor* %6 to %class.TriaAccessor*
  %12 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector.10"* %10, i64 %14)
  %16 = load %class.TriangulationLevel*, %class.TriangulationLevel** %15, align 8
  %17 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %16, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %17, i32 0, i32 6
  %19 = bitcast %class.TriaObjectAccessor* %6 to %class.TriaAccessor*
  %20 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = mul i32 %21, 6
  %23 = load i32, i32* %4, align 4
  %24 = add i32 %22, %23
  %25 = zext i32 %24 to i64
  %26 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.18"* %18, i64 %25)
  %27 = bitcast %"struct.std::_Bit_reference"* %5 to { i64*, i64 }*
  %28 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %27, i32 0, i32 0
  %29 = extractvalue { i64*, i64 } %26, 0
  store i64* %29, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %27, i32 0, i32 1
  %31 = extractvalue { i64*, i64 } %26, 1
  store i64 %31, i64* %30, align 8
  %32 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %5)
  ret i1 %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.TriaObjectAccessor.68* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.66*) #0 comdat align 2 {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaRawIterator.66*, align 8
  store %class.TriaRawIterator.66* %0, %class.TriaRawIterator.66** %10, align 8
  %11 = load %class.TriaRawIterator.66*, %class.TriaRawIterator.66** %10, align 8
  %12 = call dereferenceable(16) %class.TriaObjectAccessor.68* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEdeEv(%class.TriaRawIterator.66* %11)
  %13 = load i32, i32* @x.27
  %14 = load i32, i32* @y.28
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TriaObjectAccessor.68* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TriaRawIterator.66*, align 8
  store %class.TriaRawIterator.66* %0, %class.TriaRawIterator.66** %21, align 8
  %22 = load %class.TriaRawIterator.66*, %class.TriaRawIterator.66** %21, align 8
  %23 = call dereferenceable(16) %class.TriaObjectAccessor.68* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEdeEv(%class.TriaRawIterator.66* %22)
  br label %originalBB
}

declare zeroext i1 @_ZNK18TriaObjectAccessorILi2ELi3EE11at_boundaryEv(%class.TriaObjectAccessor.68*) #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(2352) %class.Triangulation* @_ZNK12TriaAccessorILi3EE17get_triangulationEv(%class.TriaAccessor*) #1 comdat align 2 {
  %2 = alloca %class.TriaAccessor*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %2, align 8
  %3 = load %class.TriaAccessor*, %class.TriaAccessor** %2, align 8
  %4 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %3, i32 0, i32 2
  %5 = load %class.Triangulation*, %class.Triangulation** %4, align 8
  ret %class.Triangulation* %5
}

declare dereferenceable(24) %class.Boundary* @_ZNK13TriangulationILi3EE12get_boundaryEj(%class.Triangulation*, i32) #3

declare zeroext i8 @_ZNK18TriaObjectAccessorILi2ELi3EE18boundary_indicatorEv(%class.TriaObjectAccessor.68*) #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE6insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_(%"class.std::vector.58"*, %class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.std::vector.58"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"struct.std::__false_type", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %class.Point* %1, %class.Point** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %class.Point* %2, %class.Point** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %class.Point* %3, %class.Point** %15, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %8, align 8
  %16 = load %"class.std::vector.58"*, %"class.std::vector.58"** %8, align 8
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 8, i1 false)
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %24 = load %class.Point*, %class.Point** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %26 = load %class.Point*, %class.Point** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %28 = load %class.Point*, %class.Point** %27, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE18_M_insert_dispatchIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St12__false_type(%"class.std::vector.58"* %16, %class.Point* %24, %class.Point* %26, %class.Point* %28)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.33
  %3 = load i32, i32* @y.34
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %11, align 8
  %12 = load %"class.std::vector.58"*, %"class.std::vector.58"** %11, align 8
  %13 = bitcast %"class.std::vector.58"* %12 to %"struct.std::_Vector_base.59"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %15, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %10, %class.Point** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %18 = load %class.Point*, %class.Point** %17, align 8
  %19 = load i32, i32* @x.33
  %20 = load i32, i32* @y.34
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %28 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %28, align 8
  %29 = load %"class.std::vector.58"*, %"class.std::vector.58"** %28, align 8
  %30 = bitcast %"class.std::vector.58"* %29 to %"struct.std::_Vector_base.59"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %27, %class.Point** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  %35 = load %class.Point*, %class.Point** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.58"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %3, align 8
  %4 = load %"class.std::vector.58"*, %"class.std::vector.58"** %3, align 8
  %5 = bitcast %"class.std::vector.58"* %4 to %"struct.std::_Vector_base.59"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %class.Point** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %10 = load %class.Point*, %class.Point** %9, align 8
  ret %class.Point* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK18TriaObjectAccessorILi2ELi3EE4lineEj(%class.TriaIterator.69* noalias sret, %class.TriaObjectAccessor.68*, i32) #0 comdat align 2 {
  %4 = alloca %class.TriaObjectAccessor.68*, align 8
  %5 = alloca i32, align 4
  store %class.TriaObjectAccessor.68* %1, %class.TriaObjectAccessor.68** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.TriaObjectAccessor.68*, %class.TriaObjectAccessor.68** %4, align 8
  %7 = bitcast %class.TriaObjectAccessor.68* %6 to %class.TriaAccessor*
  %8 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %7, i32 0, i32 2
  %9 = load %class.Triangulation*, %class.Triangulation** %8, align 8
  %10 = bitcast %class.TriaObjectAccessor.68* %6 to %class.TriaAccessor*
  %11 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = load i32, i32* %5, align 4
  %14 = call i32 @_ZNK18TriaObjectAccessorILi2ELi3EE10line_indexEj(%class.TriaObjectAccessor.68* %6, i32 %13)
  call void @_ZN12TriaIteratorILi3E18TriaObjectAccessorILi1ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaIterator.69* %0, %class.Triangulation* %9, i32 %12, i32 %14, i8* null)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.TriaObjectAccessor.72* @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70*) #0 comdat align 2 {
  %2 = alloca %class.TriaRawIterator.70*, align 8
  store %class.TriaRawIterator.70* %0, %class.TriaRawIterator.70** %2, align 8
  %3 = load %class.TriaRawIterator.70*, %class.TriaRawIterator.70** %2, align 8
  %4 = call dereferenceable(16) %class.TriaObjectAccessor.72* @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEdeEv(%class.TriaRawIterator.70* %3)
  ret %class.TriaObjectAccessor.72* %4
}

declare zeroext i1 @_ZNK18TriaObjectAccessorILi1ELi3EE11at_boundaryEv(%class.TriaObjectAccessor.72*) #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.58"*, i64, %class.Point*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.58"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.58"*, %"class.std::vector.58"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %7)
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %19

; <label>:11:                                     ; preds = %3
  %12 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %7)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %class.Point* %12, %class.Point** %13, align 8
  %14 = load i64, i64* %5, align 8
  %15 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %7)
  %16 = sub i64 %14, %15
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %18 = load %class.Point*, %class.Point** %17, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.58"* %7, %class.Point* %18, i64 %16, %class.Point* dereferenceable(24) %2)
  br label %32

; <label>:19:                                     ; preds = %3
  %20 = load i64, i64* %5, align 8
  %21 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %7)
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %23, label %31

; <label>:23:                                     ; preds = %19
  %24 = bitcast %"class.std::vector.58"* %7 to %"struct.std::_Vector_base.59"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %24, i32 0, i32 0
  %26 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %25 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %26, i32 0, i32 0
  %28 = load %class.Point*, %class.Point** %27, align 8
  %29 = load i64, i64* %5, align 8
  %30 = getelementptr inbounds %class.Point, %class.Point* %28, i64 %29
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.58"* %7, %class.Point* %30)
  br label %31

; <label>:31:                                     ; preds = %23, %19
  br label %32

; <label>:32:                                     ; preds = %31, %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.58"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.58"*, %"class.std::vector.58"** %3, align 8
  %6 = bitcast %"class.std::vector.58"* %5 to %"struct.std::_Vector_base.59"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Point*, %class.Point** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Point, %class.Point* %10, i64 %11
  ret %class.Point* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point*, %class.Point* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.45
  %4 = load i32, i32* @y.46
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point*, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load %class.Point*, %class.Point** %11, align 8
  %14 = bitcast %class.Point* %13 to %class.Tensor*
  %15 = load %class.Point*, %class.Point** %12, align 8
  %16 = bitcast %class.Point* %15 to %class.Tensor*
  %17 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %14, %class.Tensor* dereferenceable(24) %16)
  %18 = load i32, i32* @x.45
  %19 = load i32, i32* @y.46
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %class.Point*, align 8
  %27 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %26, align 8
  store %class.Point* %1, %class.Point** %27, align 8
  %28 = load %class.Point*, %class.Point** %26, align 8
  %29 = bitcast %class.Point* %28 to %class.Tensor*
  %30 = load %class.Point*, %class.Point** %27, align 8
  %31 = bitcast %class.Point* %30 to %class.Tensor*
  %32 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %29, %class.Tensor* dereferenceable(24) %31)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE20apply_laplace_vectorERK5TableILi2EdERSt6vectorI5PointILi3EESaIS7_EE(%class.MappingQ*, %class.Table* dereferenceable(48), %"class.std::vector.58"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %class.MappingQ*, align 8
  %5 = alloca %class.Table*, align 8
  %6 = alloca %"class.std::vector.58"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %class.Point, align 8
  %11 = alloca i32, align 4
  %12 = alloca %class.Point, align 8
  %13 = alloca %"class.internal::TableBaseAccessors::Accessor.136", align 8
  store %class.MappingQ* %0, %class.MappingQ** %4, align 8
  store %class.Table* %1, %class.Table** %5, align 8
  store %"class.std::vector.58"* %2, %"class.std::vector.58"** %6, align 8
  %14 = load %class.MappingQ*, %class.MappingQ** %4, align 8
  %15 = load %class.Table*, %class.Table** %5, align 8
  %16 = call i32 @_ZNK5TableILi2EdE6n_rowsEv(%class.Table* %15)
  store i32 %16, i32* %7, align 4
  %17 = load %class.Table*, %class.Table** %5, align 8
  %18 = call i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table* %17)
  store i32 %18, i32* %8, align 4
  store i32 0, i32* %9, align 4
  br label %19

; <label>:19:                                     ; preds = %110, %3
  %20 = load i32, i32* %9, align 4
  %21 = load i32, i32* %7, align 4
  %22 = icmp ult i32 %20, %21
  br i1 %22, label %23, label %113

; <label>:23:                                     ; preds = %19
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %10)
  store i32 0, i32* %11, align 4
  br label %24

; <label>:24:                                     ; preds = %originalBBpart28, %23
  %25 = load i32, i32* @x.47
  %26 = load i32, i32* @y.48
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = load i32, i32* %11, align 4
  %34 = load i32, i32* %8, align 4
  %35 = icmp ult i32 %33, %34
  %36 = load i32, i32* @x.47
  %37 = load i32, i32* @y.48
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %35, label %44, label %92

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i32, i32* @x.47
  %46 = load i32, i32* @y.48
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = load %class.Table*, %class.Table** %5, align 8
  %54 = load i32, i32* %9, align 4
  call void @_ZNK5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor.136"* sret %13, %class.Table* %53, i32 %54)
  %55 = load i32, i32* %11, align 4
  %56 = call dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb1ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.136"* %13, i32 %55)
  %57 = load double, double* %56, align 8
  %58 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %59 = load i32, i32* %11, align 4
  %60 = zext i32 %59 to i64
  %61 = call dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %58, i64 %60)
  call void @_ZmlILi3EE5PointIXT_EEdRKS1_(%class.Point* sret %12, double %57, %class.Point* dereferenceable(24) %61)
  %62 = bitcast %class.Point* %12 to %class.Tensor*
  %63 = bitcast %class.Point* %10 to %class.Tensor*
  %64 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEpLERKS0_(%class.Tensor* %63, %class.Tensor* dereferenceable(24) %62)
  %65 = load i32, i32* @x.47
  %66 = load i32, i32* @y.48
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %73

; <label>:73:                                     ; preds = %originalBBpart24
  %74 = load i32, i32* @x.47
  %75 = load i32, i32* @y.48
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = load i32, i32* %11, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %11, align 4
  %84 = load i32, i32* @x.47
  %85 = load i32, i32* @y.48
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %24

; <label>:92:                                     ; preds = %originalBBpart2
  %93 = load i32, i32* @x.47
  %94 = load i32, i32* @y.48
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %92, %originalBB10alteredBB
  %101 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE9push_backERKS1_(%"class.std::vector.58"* %101, %class.Point* dereferenceable(24) %10)
  %102 = load i32, i32* @x.47
  %103 = load i32, i32* @y.48
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %110

; <label>:110:                                    ; preds = %originalBBpart212
  %111 = load i32, i32* %9, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %9, align 4
  br label %19

; <label>:113:                                    ; preds = %19
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %24
  %114 = load i32, i32* %11, align 4
  %115 = load i32, i32* %8, align 4
  %116 = icmp ult i32 %114, %115
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %117 = load %class.Table*, %class.Table** %5, align 8
  %118 = load i32, i32* %9, align 4
  call void @_ZNK5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor.136"* sret %13, %class.Table* %117, i32 %118)
  %119 = load i32, i32* %11, align 4
  %120 = call dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb1ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.136"* %13, i32 %119)
  %121 = load double, double* %120, align 8
  %122 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %123 = load i32, i32* %11, align 4
  %124 = zext i32 %123 to i64
  %125 = call dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %122, i64 %124)
  call void @_ZmlILi3EE5PointIXT_EEdRKS1_(%class.Point* sret %12, double %121, %class.Point* dereferenceable(24) %125)
  %126 = bitcast %class.Point* %12 to %class.Tensor*
  %127 = bitcast %class.Point* %10 to %class.Tensor*
  %128 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEpLERKS0_(%class.Tensor* %127, %class.Tensor* dereferenceable(24) %126)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  %129 = load i32, i32* %11, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %11, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %92
  %131 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE9push_backERKS1_(%"class.std::vector.58"* %131, %class.Point* dereferenceable(24) %10)
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE9push_backERKS1_(%"class.std::vector.58"*, %class.Point* dereferenceable(24)) #0 comdat align 2 {
  %3 = load i32, i32* @x.49
  %4 = load i32, i32* @y.50
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.58"*, align 8
  %12 = alloca %class.Point*, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %14 = load %"class.std::vector.58"*, %"class.std::vector.58"** %11, align 8
  %15 = bitcast %"class.std::vector.58"* %14 to %"struct.std::_Vector_base.59"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %16 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %17, i32 0, i32 1
  %19 = load %class.Point*, %class.Point** %18, align 8
  %20 = bitcast %"class.std::vector.58"* %14 to %"struct.std::_Vector_base.59"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %21 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %22, i32 0, i32 2
  %24 = load %class.Point*, %class.Point** %23, align 8
  %25 = icmp ne %class.Point* %19, %24
  %26 = load i32, i32* @x.49
  %27 = load i32, i32* @y.50
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %34, label %50

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = bitcast %"class.std::vector.58"* %14 to %"struct.std::_Vector_base.59"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %36 to %"class.std::allocator.60"*
  %38 = bitcast %"class.std::vector.58"* %14 to %"struct.std::_Vector_base.59"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %38, i32 0, i32 0
  %40 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %39 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %40, i32 0, i32 1
  %42 = load %class.Point*, %class.Point** %41, align 8
  %43 = load %class.Point*, %class.Point** %12, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E9constructIS2_EEvRS3_PS2_RKT_(%"class.std::allocator.60"* dereferenceable(1) %37, %class.Point* %42, %class.Point* dereferenceable(24) %43)
  %44 = bitcast %"class.std::vector.58"* %14 to %"struct.std::_Vector_base.59"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %44, i32 0, i32 0
  %46 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %45 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %46, i32 0, i32 1
  %48 = load %class.Point*, %class.Point** %47, align 8
  %49 = getelementptr inbounds %class.Point, %class.Point* %48, i32 1
  store %class.Point* %49, %class.Point** %47, align 8
  br label %56

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %14)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %class.Point* %51, %class.Point** %52, align 8
  %53 = load %class.Point*, %class.Point** %12, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %55 = load %class.Point*, %class.Point** %54, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(%"class.std::vector.58"* %14, %class.Point* %55, %class.Point* dereferenceable(24) %53)
  br label %56

; <label>:56:                                     ; preds = %50, %34
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %57 = alloca %"class.std::vector.58"*, align 8
  %58 = alloca %class.Point*, align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %57, align 8
  store %class.Point* %1, %class.Point** %58, align 8
  %60 = load %"class.std::vector.58"*, %"class.std::vector.58"** %57, align 8
  %61 = bitcast %"class.std::vector.58"* %60 to %"struct.std::_Vector_base.59"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %62 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %63, i32 0, i32 1
  %65 = load %class.Point*, %class.Point** %64, align 8
  %66 = bitcast %"class.std::vector.58"* %60 to %"struct.std::_Vector_base.59"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %66, i32 0, i32 0
  %68 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %67 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %68, i32 0, i32 2
  %70 = load %class.Point*, %class.Point** %69, align 8
  %71 = icmp ne %class.Point* %65, %70
  br label %originalBB
}

declare void @_ZNK16StraightBoundaryILi3EE31get_intermediate_points_on_quadERK12TriaIteratorILi3E18TriaObjectAccessorILi2ELi3EEERSt6vectorI5PointILi3EESaIS9_EE(%class.StraightBoundary*, %class.TriaIterator.65* dereferenceable(16), %"class.std::vector.58"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.58"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %2, align 8
  %5 = load %"class.std::vector.58"*, %"class.std::vector.58"** %2, align 8
  %6 = bitcast %"class.std::vector.58"* %5 to %"struct.std::_Vector_base.59"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Point*, %class.Point** %9, align 8
  %11 = bitcast %"class.std::vector.58"* %5 to %"struct.std::_Vector_base.59"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %class.Point*, %class.Point** %14, align 8
  %16 = bitcast %"class.std::vector.58"* %5 to %"struct.std::_Vector_base.59"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %10, %class.Point* %15, %"class.std::allocator.60"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.58"* %5 to %"struct.std::_Vector_base.59"*
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.59"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = load i32, i32* @x.51
  %23 = load i32, i32* @y.52
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %3, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %4, align 4
  %33 = bitcast %"class.std::vector.58"* %5 to %"struct.std::_Vector_base.59"*
  %34 = load i32, i32* @x.51
  %35 = load i32, i32* @y.52
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.59"* %33)
          to label %42 unwind label %48

; <label>:42:                                     ; preds = %originalBBpart2
  br label %43

; <label>:43:                                     ; preds = %42
  %44 = load i8*, i8** %3, align 8
  %45 = load i32, i32* %4, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = bitcast %"class.std::vector.58"* %5 to %"struct.std::_Vector_base.59"*
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #4 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #2
  call void @_ZSt9terminatev() #12
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define weak_odr void @_ZN8MappingQILi3EEC2Ej(%class.MappingQ*, i32) unnamed_addr #0 comdat($_ZN8MappingQILi3EEC5Ej) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.MappingQ*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::allocator.7", align 1
  %9 = alloca %"class.std::vector.73", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.Polynomials::LagrangeEquidistant", align 8
  %12 = alloca %class.FE_Q, align 8
  store %class.MappingQ* %0, %class.MappingQ** %3, align 8
  store i32 %1, i32* %4, align 4
  %13 = load %class.MappingQ*, %class.MappingQ** %3, align 8
  %14 = bitcast %class.MappingQ* %13 to %class.MappingQ1*
  call void @_ZN9MappingQ1ILi3EEC2Ev(%class.MappingQ1* %14)
  %15 = bitcast %class.MappingQ* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV8MappingQILi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 1
  invoke void @_ZN5TableILi2EdEC2Ev(%class.Table* %16)
          to label %17 unwind label %148

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 2
  invoke void @_ZN5TableILi2EdEC2Ev(%class.Table* %18)
          to label %19 unwind label %152

; <label>:19:                                     ; preds = %17
  %20 = load i32, i32* @x.55
  %21 = load i32, i32* @y.56
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %29 = load i32, i32* %4, align 4
  store i32 %29, i32* %28, align 8
  %30 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 4
  %31 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = sub i32 %32, 1
  %34 = load i32, i32* @x.55
  %35 = load i32, i32* @y.56
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %42 = invoke i32 @_Z5powerIjET_S0_j(i32 %33, i32 3)
          to label %43 unwind label %156

; <label>:43:                                     ; preds = %originalBBpart2
  store i32 %42, i32* %30, align 4
  %44 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 5
  %45 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = sub i32 %46, 1
  %48 = mul i32 12, %47
  %49 = add i32 8, %48
  %50 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = sub i32 %51, 1
  %53 = mul i32 6, %52
  %54 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = sub i32 %55, 1
  %57 = mul i32 %53, %56
  %58 = add i32 %49, %57
  store i32 %58, i32* %44, align 8
  %59 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 6
  store %class.TensorProductPolynomials* null, %class.TensorProductPolynomials** %59, align 8
  %60 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 7
  %61 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %62, 1
  %64 = invoke i32 @_Z5powerIjET_S0_j(i32 %63, i32 3)
          to label %65 unwind label %156

; <label>:65:                                     ; preds = %43
  store i32 %64, i32* %60, align 8
  %66 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 8
  store i32 0, i32* %7, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.7"* %8) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.5"* %66, i64 0, i32* dereferenceable(4) %7, %"class.std::allocator.7"* dereferenceable(1) %8)
          to label %67 unwind label %160

; <label>:67:                                     ; preds = %65
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %8) #2
  invoke void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EEC2Ev(%"class.std::vector.73"* %9)
          to label %68 unwind label %164

; <label>:68:                                     ; preds = %67
  store i32 0, i32* %10, align 4
  br label %69

; <label>:69:                                     ; preds = %originalBBpart228, %68
  %70 = load i32, i32* @x.55
  %71 = load i32, i32* @y.56
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = load i32, i32* %10, align 4
  %79 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = icmp ule i32 %78, %80
  %82 = load i32, i32* @x.55
  %83 = load i32, i32* @y.56
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %81, label %90, label %209

; <label>:90:                                     ; preds = %originalBBpart28
  %91 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = load i32, i32* %10, align 4
  invoke void @_ZN11Polynomials19LagrangeEquidistantC1Ejj(%"class.Polynomials::LagrangeEquidistant"* %11, i32 %92, i32 %93)
          to label %94 unwind label %168

; <label>:94:                                     ; preds = %90
  invoke void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE9push_backERKS1_(%"class.std::vector.73"* %9, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %11)
          to label %95 unwind label %188

; <label>:95:                                     ; preds = %94
  %96 = load i32, i32* @x.55
  %97 = load i32, i32* @y.56
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %95, %originalBB10alteredBB
  %104 = load i32, i32* @x.55
  %105 = load i32, i32* @y.56
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZN11Polynomials19LagrangeEquidistantD2Ev(%"class.Polynomials::LagrangeEquidistant"* %11)
          to label %112 unwind label %168

; <label>:112:                                    ; preds = %originalBBpart212
  %113 = load i32, i32* @x.55
  %114 = load i32, i32* @y.56
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %112, %originalBB14alteredBB
  %121 = load i32, i32* @x.55
  %122 = load i32, i32* @y.56
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %129

; <label>:129:                                    ; preds = %originalBBpart216
  %130 = load i32, i32* @x.55
  %131 = load i32, i32* @y.56
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %129, %originalBB18alteredBB
  %138 = load i32, i32* %10, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %10, align 4
  %140 = load i32, i32* @x.55
  %141 = load i32, i32* @y.56
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart228, label %originalBB18alteredBB

originalBBpart228:                                ; preds = %originalBB18
  br label %69

; <label>:148:                                    ; preds = %2
  %149 = landingpad { i8*, i32 }
          cleanup
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %5, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %6, align 4
  br label %397

; <label>:152:                                    ; preds = %17
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %5, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %6, align 4
  br label %363

; <label>:156:                                    ; preds = %43, %originalBBpart2
  %157 = landingpad { i8*, i32 }
          cleanup
  %158 = extractvalue { i8*, i32 } %157, 0
  store i8* %158, i8** %5, align 8
  %159 = extractvalue { i8*, i32 } %157, 1
  store i32 %159, i32* %6, align 4
  br label %345

; <label>:160:                                    ; preds = %65
  %161 = landingpad { i8*, i32 }
          cleanup
  %162 = extractvalue { i8*, i32 } %161, 0
  store i8* %162, i8** %5, align 8
  %163 = extractvalue { i8*, i32 } %161, 1
  store i32 %163, i32* %6, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %8) #2
  br label %345

; <label>:164:                                    ; preds = %307, %67
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %5, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %6, align 4
  br label %327

; <label>:168:                                    ; preds = %originalBBpart244, %245, %224, %219, %213, %209, %originalBBpart212, %90
  %169 = load i32, i32* @x.55
  %170 = load i32, i32* @y.56
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %168, %originalBB30alteredBB
  %177 = landingpad { i8*, i32 }
          cleanup
  %178 = extractvalue { i8*, i32 } %177, 0
  store i8* %178, i8** %5, align 8
  %179 = extractvalue { i8*, i32 } %177, 1
  store i32 %179, i32* %6, align 4
  %180 = load i32, i32* @x.55
  %181 = load i32, i32* @y.56
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %309

; <label>:188:                                    ; preds = %94
  %189 = landingpad { i8*, i32 }
          cleanup
  %190 = extractvalue { i8*, i32 } %189, 0
  store i8* %190, i8** %5, align 8
  %191 = extractvalue { i8*, i32 } %189, 1
  store i32 %191, i32* %6, align 4
  invoke void @_ZN11Polynomials19LagrangeEquidistantD2Ev(%"class.Polynomials::LagrangeEquidistant"* %11)
          to label %192 unwind label %421

; <label>:192:                                    ; preds = %188
  %193 = load i32, i32* @x.55
  %194 = load i32, i32* @y.56
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %192, %originalBB34alteredBB
  %201 = load i32, i32* @x.55
  %202 = load i32, i32* @y.56
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %309

; <label>:209:                                    ; preds = %originalBBpart28
  %210 = invoke i8* @_Znwm(i64 80) #13
          to label %211 unwind label %168

; <label>:211:                                    ; preds = %209
  %212 = bitcast i8* %210 to %class.TensorProductPolynomials*
  invoke void @_ZN24TensorProductPolynomialsILi3EEC2IN11Polynomials19LagrangeEquidistantEEERKSt6vectorIT_SaIS5_EE(%class.TensorProductPolynomials* %212, %"class.std::vector.73"* dereferenceable(24) %9)
          to label %213 unwind label %266

; <label>:213:                                    ; preds = %211
  %214 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 6
  store %class.TensorProductPolynomials* %212, %class.TensorProductPolynomials** %214, align 8
  %215 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 8
  %216 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 7
  %217 = load i32, i32* %216, align 8
  %218 = zext i32 %217 to i64
  invoke void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.5"* %215, i64 %218, i32 0)
          to label %219 unwind label %168

; <label>:219:                                    ; preds = %213
  %220 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %221 = load i32, i32* %220, align 8
  invoke void @_ZN4FE_QILi3EEC1Ej(%class.FE_Q* %12, i32 %221)
          to label %222 unwind label %168

; <label>:222:                                    ; preds = %219
  %223 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 8
  invoke void @_ZN7FETools37lexicographic_to_hierarchic_numberingILi3EEEvRK4FE_QIXT_EERSt6vectorIjSaIjEE(%class.FE_Q* dereferenceable(1264) %12, %"class.std::vector.5"* dereferenceable(24) %223)
          to label %224 unwind label %286

; <label>:224:                                    ; preds = %222
  invoke void @_ZN4FE_QILi3EED2Ev(%class.FE_Q* %12)
          to label %225 unwind label %168

; <label>:225:                                    ; preds = %224
  %226 = load i32, i32* @x.55
  %227 = load i32, i32* @y.56
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %225, %originalBB38alteredBB
  %234 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %235 = load i32, i32* %234, align 8
  %236 = icmp ugt i32 %235, 1
  %237 = load i32, i32* @x.55
  %238 = load i32, i32* @y.56
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %236, label %245, label %307

; <label>:245:                                    ; preds = %originalBBpart240
  %246 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 1
  invoke void @_ZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdE(%class.MappingQ* %13, %class.Table* dereferenceable(48) %246)
          to label %247 unwind label %168

; <label>:247:                                    ; preds = %245
  %248 = load i32, i32* @x.55
  %249 = load i32, i32* @y.56
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %247, %originalBB42alteredBB
  %256 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 2
  %257 = load i32, i32* @x.55
  %258 = load i32, i32* @y.56
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  invoke void @_ZNK8MappingQILi3EE25set_laplace_on_hex_vectorER5TableILi2EdE(%class.MappingQ* %13, %class.Table* dereferenceable(48) %256)
          to label %265 unwind label %168

; <label>:265:                                    ; preds = %originalBBpart244
  br label %307

; <label>:266:                                    ; preds = %211
  %267 = load i32, i32* @x.55
  %268 = load i32, i32* @y.56
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %266, %originalBB46alteredBB
  %275 = landingpad { i8*, i32 }
          cleanup
  %276 = extractvalue { i8*, i32 } %275, 0
  store i8* %276, i8** %5, align 8
  %277 = extractvalue { i8*, i32 } %275, 1
  store i32 %277, i32* %6, align 4
  call void @_ZdlPv(i8* %210) #14
  %278 = load i32, i32* @x.55
  %279 = load i32, i32* @y.56
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %309

; <label>:286:                                    ; preds = %222
  %287 = landingpad { i8*, i32 }
          cleanup
  %288 = extractvalue { i8*, i32 } %287, 0
  store i8* %288, i8** %5, align 8
  %289 = extractvalue { i8*, i32 } %287, 1
  store i32 %289, i32* %6, align 4
  invoke void @_ZN4FE_QILi3EED2Ev(%class.FE_Q* %12)
          to label %290 unwind label %421

; <label>:290:                                    ; preds = %286
  %291 = load i32, i32* @x.55
  %292 = load i32, i32* @y.56
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %290, %originalBB50alteredBB
  %299 = load i32, i32* @x.55
  %300 = load i32, i32* @y.56
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %309

; <label>:307:                                    ; preds = %265, %originalBBpart240
  invoke void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev(%"class.std::vector.73"* %9)
          to label %308 unwind label %164

; <label>:308:                                    ; preds = %307
  ret void

; <label>:309:                                    ; preds = %originalBBpart252, %originalBBpart248, %originalBBpart236, %originalBBpart232
  %310 = load i32, i32* @x.55
  %311 = load i32, i32* @y.56
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %309, %originalBB54alteredBB
  %318 = load i32, i32* @x.55
  %319 = load i32, i32* @y.56
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  invoke void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev(%"class.std::vector.73"* %9)
          to label %326 unwind label %421

; <label>:326:                                    ; preds = %originalBBpart256
  br label %327

; <label>:327:                                    ; preds = %326, %164
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %66)
          to label %328 unwind label %421

; <label>:328:                                    ; preds = %327
  %329 = load i32, i32* @x.55
  %330 = load i32, i32* @y.56
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %328, %originalBB58alteredBB
  %337 = load i32, i32* @x.55
  %338 = load i32, i32* @y.56
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %345

; <label>:345:                                    ; preds = %originalBBpart260, %160, %156
  %346 = load i32, i32* @x.55
  %347 = load i32, i32* @y.56
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %345, %originalBB62alteredBB
  %354 = load i32, i32* @x.55
  %355 = load i32, i32* @y.56
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  invoke void @_ZN5TableILi2EdED2Ev(%class.Table* %18)
          to label %362 unwind label %421

; <label>:362:                                    ; preds = %originalBBpart264
  br label %363

; <label>:363:                                    ; preds = %362, %152
  %364 = load i32, i32* @x.55
  %365 = load i32, i32* @y.56
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %363, %originalBB66alteredBB
  %372 = load i32, i32* @x.55
  %373 = load i32, i32* @y.56
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  invoke void @_ZN5TableILi2EdED2Ev(%class.Table* %16)
          to label %380 unwind label %421

; <label>:380:                                    ; preds = %originalBBpart268
  %381 = load i32, i32* @x.55
  %382 = load i32, i32* @y.56
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %380, %originalBB70alteredBB
  %389 = load i32, i32* @x.55
  %390 = load i32, i32* @y.56
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %397

; <label>:397:                                    ; preds = %originalBBpart272, %148
  %398 = bitcast %class.MappingQ* %13 to %class.MappingQ1*
  invoke void @_ZN9MappingQ1ILi3EED2Ev(%class.MappingQ1* %398)
          to label %399 unwind label %421

; <label>:399:                                    ; preds = %397
  br label %400

; <label>:400:                                    ; preds = %399
  %401 = load i32, i32* @x.55
  %402 = load i32, i32* @y.56
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %400, %originalBB74alteredBB
  %409 = load i8*, i8** %5, align 8
  %410 = load i32, i32* %6, align 4
  %411 = insertvalue { i8*, i32 } undef, i8* %409, 0
  %412 = insertvalue { i8*, i32 } %411, i32 %410, 1
  %413 = load i32, i32* @x.55
  %414 = load i32, i32* @y.56
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  resume { i8*, i32 } %412

; <label>:421:                                    ; preds = %397, %originalBBpart268, %originalBBpart264, %327, %originalBBpart256, %286, %188
  %422 = landingpad { i8*, i32 }
          catch i8* null
  %423 = extractvalue { i8*, i32 } %422, 0
  call void @__clang_call_terminate(i8* %423) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  %424 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %425 = load i32, i32* %4, align 4
  store i32 %425, i32* %424, align 8
  %426 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 4
  %427 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %428 = load i32, i32* %427, align 8
  %_ = shl i32 %428, 1
  %_1 = sub i32 0, %428
  %gen = add i32 %_1, 1
  %_2 = sub i32 0, %428
  %gen3 = add i32 %_2, 1
  %_4 = shl i32 %428, 1
  %_5 = shl i32 %428, 1
  %429 = sub i32 %428, 1
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  %430 = load i32, i32* %10, align 4
  %431 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %432 = load i32, i32* %431, align 8
  %433 = icmp ule i32 %430, %432
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %95
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %112
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %129
  %434 = load i32, i32* %10, align 4
  %_19 = sub i32 0, %434
  %gen20 = add i32 %_19, 1
  %_21 = sub i32 %434, 1
  %gen22 = mul i32 %_21, 1
  %_23 = shl i32 %434, 1
  %_24 = sub i32 %434, 1
  %gen25 = mul i32 %_24, 1
  %_26 = shl i32 %434, 1
  %435 = add i32 %434, 1
  store i32 %435, i32* %10, align 4
  br label %originalBB18

originalBB30alteredBB:                            ; preds = %originalBB30, %168
  %436 = landingpad { i8*, i32 }
          cleanup
  %437 = extractvalue { i8*, i32 } %436, 0
  store i8* %437, i8** %5, align 8
  %438 = extractvalue { i8*, i32 } %436, 1
  store i32 %438, i32* %6, align 4
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %192
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %225
  %439 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 3
  %440 = load i32, i32* %439, align 8
  %441 = icmp ugt i32 %440, 1
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %247
  %442 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %13, i32 0, i32 2
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %266
  %443 = landingpad { i8*, i32 }
          cleanup
  %444 = extractvalue { i8*, i32 } %443, 0
  store i8* %444, i8** %5, align 8
  %445 = extractvalue { i8*, i32 } %443, 1
  store i32 %445, i32* %6, align 4
  call void @_ZdlPv(i8* %210) #14
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %290
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %309
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %328
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %345
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %363
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %380
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %400
  %446 = load i8*, i8** %5, align 8
  %447 = load i32, i32* %6, align 4
  %448 = insertvalue { i8*, i32 } undef, i8* %446, 0
  %449 = insertvalue { i8*, i32 } %448, i32 %447, 1
  br label %originalBB74
}

declare void @_ZN9MappingQ1ILi3EEC2Ev(%class.MappingQ1*) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdEC2Ev(%class.Table*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %2, align 8
  %3 = load %class.Table*, %class.Table** %2, align 8
  %4 = bitcast %class.Table* %3 to %class.TableBase*
  call void @_ZN9TableBaseILi2EdEC2Ev(%class.TableBase* %4)
  %5 = bitcast %class.Table* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5TableILi2EdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z5powerIjET_S0_j(i32, i32) #1 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 1, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %7

; <label>:7:                                      ; preds = %15, %2
  %8 = load i32, i32* %6, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp ult i32 %8, %9
  br i1 %10, label %11, label %18

; <label>:11:                                     ; preds = %7
  %12 = load i32, i32* %3, align 4
  %13 = load i32, i32* %5, align 4
  %14 = mul i32 %13, %12
  store i32 %14, i32* %5, align 4
  br label %15

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* %6, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %6, align 4
  br label %7

; <label>:18:                                     ; preds = %7
  %19 = load i32, i32* %5, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2Ev(%"class.std::allocator.7"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.5"*, i64, i32* dereferenceable(4), %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %12 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %15 = call i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64 %13, %"class.std::allocator.7"* dereferenceable(1) %14)
  %16 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.6"* %12, i64 %15, %"class.std::allocator.7"* dereferenceable(1) %16)
  %17 = load i64, i64* %6, align 8
  %18 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector.5"* %11, i64 %17, i32* dereferenceable(4) %18)
          to label %19 unwind label %36

; <label>:19:                                     ; preds = %4
  %20 = load i32, i32* @x.63
  %21 = load i32, i32* @y.64
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i32, i32* @x.63
  %29 = load i32, i32* @y.64
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:36:                                     ; preds = %4
  %37 = load i32, i32* @x.63
  %38 = load i32, i32* @y.64
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %9, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %10, align 4
  %48 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %49 = load i32, i32* @x.63
  %50 = load i32, i32* @y.64
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.6"* %48)
          to label %57 unwind label %63

; <label>:57:                                     ; preds = %originalBBpart24
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i8*, i8** %9, align 8
  %60 = load i32, i32* %10, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %originalBBpart24
  %64 = load i32, i32* @x.63
  %65 = load i32, i32* @y.64
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  call void @__clang_call_terminate(i8* %73) #12
  %74 = load i32, i32* @x.63
  %75 = load i32, i32* @y.64
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %19
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %9, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %10, align 4
  %85 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #12
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjED2Ev(%"class.std::allocator.7"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EEC2Ev(%"class.std::vector.73"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %2, align 8
  %3 = load %"class.std::vector.73"*, %"class.std::vector.73"** %2, align 8
  %4 = bitcast %"class.std::vector.73"* %3 to %"struct.std::_Vector_base.74"*
  call void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EEC2Ev(%"struct.std::_Vector_base.74"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE9push_backERKS1_(%"class.std::vector.73"*, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.73"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.140", align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %3, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %6 = load %"class.std::vector.73"*, %"class.std::vector.73"** %3, align 8
  %7 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %10, align 8
  %12 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %14, i32 0, i32 2
  %16 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  %17 = icmp ne %"class.Polynomials::LagrangeEquidistant"* %11, %16
  br i1 %17, label %18, label %50

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.69
  %20 = load i32, i32* @y.70
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %27, i32 0, i32 0
  %29 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %28 to %"class.std::allocator.75"*
  %30 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %33, align 8
  %35 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E9constructIS2_EEvRS3_PS2_RKT_(%"class.std::allocator.75"* dereferenceable(1) %29, %"class.Polynomials::LagrangeEquidistant"* %34, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %35)
  %36 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %39, align 8
  %41 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %40, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %41, %"class.Polynomials::LagrangeEquidistant"** %39, align 8
  %42 = load i32, i32* @x.69
  %43 = load i32, i32* @y.70
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:50:                                     ; preds = %2
  %51 = call %"class.Polynomials::LagrangeEquidistant"* @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE3endEv(%"class.std::vector.73"* %6)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %5, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %51, %"class.Polynomials::LagrangeEquidistant"** %52, align 8
  %53 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %5, i32 0, i32 0
  %55 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %54, align 8
  call void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(%"class.std::vector.73"* %6, %"class.Polynomials::LagrangeEquidistant"* %55, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %53)
  br label %56

; <label>:56:                                     ; preds = %50, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  %57 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %58 to %"class.std::allocator.75"*
  %60 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %60, i32 0, i32 0
  %62 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %61 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %62, i32 0, i32 1
  %64 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %63, align 8
  %65 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E9constructIS2_EEvRS3_PS2_RKT_(%"class.std::allocator.75"* dereferenceable(1) %59, %"class.Polynomials::LagrangeEquidistant"* %64, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %65)
  %66 = bitcast %"class.std::vector.73"* %6 to %"struct.std::_Vector_base.74"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %66, i32 0, i32 0
  %68 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %67 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %68, i32 0, i32 1
  %70 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %69, align 8
  %71 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %70, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %71, %"class.Polynomials::LagrangeEquidistant"** %69, align 8
  br label %originalBB
}

declare void @_ZN11Polynomials19LagrangeEquidistantC1Ejj(%"class.Polynomials::LagrangeEquidistant"*, i32, i32) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials19LagrangeEquidistantD2Ev(%"class.Polynomials::LagrangeEquidistant"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %2, align 8
  %3 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %2, align 8
  %4 = bitcast %"class.Polynomials::LagrangeEquidistant"* %3 to %"class.Polynomials::Polynomial"*
  call void @_ZN11Polynomials10PolynomialIdED2Ev(%"class.Polynomials::Polynomial"* %4)
  ret void
}

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #5

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN24TensorProductPolynomialsILi3EEC2IN11Polynomials19LagrangeEquidistantEEERKSt6vectorIT_SaIS5_EE(%class.TensorProductPolynomials*, %"class.std::vector.73"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.TensorProductPolynomials*, align 8
  %4 = alloca %"class.std::vector.73"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %7 = alloca %"class.std::allocator", align 1
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.7", align 1
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::allocator.7", align 1
  %14 = alloca i32, align 4
  store %class.TensorProductPolynomials* %0, %class.TensorProductPolynomials** %3, align 8
  store %"class.std::vector.73"* %1, %"class.std::vector.73"** %4, align 8
  %15 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %3, align 8
  %16 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 0
  %17 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %18 = call %"class.Polynomials::LagrangeEquidistant"* @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE5beginEv(%"class.std::vector.73"* %17)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %5, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %18, %"class.Polynomials::LagrangeEquidistant"** %19, align 8
  %20 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %21 = call %"class.Polynomials::LagrangeEquidistant"* @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE3endEv(%"class.std::vector.73"* %20)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %6, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %21, %"class.Polynomials::LagrangeEquidistant"** %22, align 8
  call void @_ZNSaIN11Polynomials10PolynomialIdEEEC2Ev(%"class.std::allocator"* %7) #2
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %5, i32 0, i32 0
  %24 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %6, i32 0, i32 0
  %26 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %25, align 8
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEET_SE_RKS3_(%"class.std::vector"* %16, %"class.Polynomials::LagrangeEquidistant"* %24, %"class.Polynomials::LagrangeEquidistant"* %26, %"class.std::allocator"* dereferenceable(1) %7)
          to label %27 unwind label %114

; <label>:27:                                     ; preds = %2
  %28 = load i32, i32* @x.73
  %29 = load i32, i32* @y.74
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %27, %originalBBalteredBB
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %7) #2
  %36 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 1
  %37 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %38 = load i32, i32* @x.73
  %39 = load i32, i32* @y.74
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %46 = invoke i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE4sizeEv(%"class.std::vector.73"* %37)
          to label %47 unwind label %118

; <label>:47:                                     ; preds = %originalBBpart2
  %48 = trunc i64 %46 to i32
  %49 = invoke i32 @_ZN24TensorProductPolynomialsILi3EE12x_to_the_dimEj(i32 %48)
          to label %50 unwind label %118

; <label>:50:                                     ; preds = %47
  store i32 %49, i32* %36, align 8
  %51 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 2
  %52 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.7"* %11) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.5"* %51, i64 %54, i32* dereferenceable(4) %10, %"class.std::allocator.7"* dereferenceable(1) %11)
          to label %55 unwind label %122

; <label>:55:                                     ; preds = %50
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %11) #2
  %56 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 3
  %57 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  store i32 0, i32* %12, align 4
  call void @_ZNSaIjEC2Ev(%"class.std::allocator.7"* %13) #2
  invoke void @_ZNSt6vectorIjSaIjEEC2EmRKjRKS0_(%"class.std::vector.5"* %56, i64 %59, i32* dereferenceable(4) %12, %"class.std::allocator.7"* dereferenceable(1) %13)
          to label %60 unwind label %126

; <label>:60:                                     ; preds = %55
  %61 = load i32, i32* @x.73
  %62 = load i32, i32* @y.74
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %60, %originalBB1alteredBB
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %13) #2
  store i32 0, i32* %14, align 4
  %69 = load i32, i32* @x.73
  %70 = load i32, i32* @y.74
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %77

; <label>:77:                                     ; preds = %111, %originalBBpart24
  %78 = load i32, i32* %14, align 4
  %79 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = icmp ult i32 %78, %80
  br i1 %81, label %82, label %150

; <label>:82:                                     ; preds = %77
  %83 = load i32, i32* %14, align 4
  %84 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 2
  %85 = load i32, i32* %14, align 4
  %86 = zext i32 %85 to i64
  %87 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %84, i64 %86)
          to label %88 unwind label %146

; <label>:88:                                     ; preds = %82
  %89 = load i32, i32* @x.73
  %90 = load i32, i32* @y.74
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %88, %originalBB6alteredBB
  store i32 %83, i32* %87, align 4
  %97 = load i32, i32* %14, align 4
  %98 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 3
  %99 = load i32, i32* %14, align 4
  %100 = zext i32 %99 to i64
  %101 = load i32, i32* @x.73
  %102 = load i32, i32* @y.74
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %109 = invoke dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %98, i64 %100)
          to label %110 unwind label %146

; <label>:110:                                    ; preds = %originalBBpart28
  store i32 %97, i32* %109, align 4
  br label %111

; <label>:111:                                    ; preds = %110
  %112 = load i32, i32* %14, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %14, align 4
  br label %77

; <label>:114:                                    ; preds = %2
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %8, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %9, align 4
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %7) #2
  br label %204

; <label>:118:                                    ; preds = %47, %originalBBpart2
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %8, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %9, align 4
  br label %186

; <label>:122:                                    ; preds = %50
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %8, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %9, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %11) #2
  br label %186

; <label>:126:                                    ; preds = %55
  %127 = load i32, i32* @x.73
  %128 = load i32, i32* @y.74
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %126, %originalBB10alteredBB
  %135 = landingpad { i8*, i32 }
          cleanup
  %136 = extractvalue { i8*, i32 } %135, 0
  store i8* %136, i8** %8, align 8
  %137 = extractvalue { i8*, i32 } %135, 1
  store i32 %137, i32* %9, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %13) #2
  %138 = load i32, i32* @x.73
  %139 = load i32, i32* @y.74
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %168

; <label>:146:                                    ; preds = %originalBBpart28, %82
  %147 = landingpad { i8*, i32 }
          cleanup
  %148 = extractvalue { i8*, i32 } %147, 0
  store i8* %148, i8** %8, align 8
  %149 = extractvalue { i8*, i32 } %147, 1
  store i32 %149, i32* %9, align 4
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %56)
          to label %151 unwind label %225

; <label>:150:                                    ; preds = %77
  ret void

; <label>:151:                                    ; preds = %146
  %152 = load i32, i32* @x.73
  %153 = load i32, i32* @y.74
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %151, %originalBB14alteredBB
  %160 = load i32, i32* @x.73
  %161 = load i32, i32* @y.74
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %168

; <label>:168:                                    ; preds = %originalBBpart216, %originalBBpart212
  %169 = load i32, i32* @x.73
  %170 = load i32, i32* @y.74
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %168, %originalBB18alteredBB
  %177 = load i32, i32* @x.73
  %178 = load i32, i32* @y.74
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %51)
          to label %185 unwind label %225

; <label>:185:                                    ; preds = %originalBBpart220
  br label %186

; <label>:186:                                    ; preds = %185, %122, %118
  %187 = load i32, i32* @x.73
  %188 = load i32, i32* @y.74
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %186, %originalBB22alteredBB
  %195 = load i32, i32* @x.73
  %196 = load i32, i32* @y.74
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector"* %16)
          to label %203 unwind label %225

; <label>:203:                                    ; preds = %originalBBpart224
  br label %204

; <label>:204:                                    ; preds = %203, %114
  %205 = load i32, i32* @x.73
  %206 = load i32, i32* @y.74
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %204, %originalBB26alteredBB
  %213 = load i8*, i8** %8, align 8
  %214 = load i32, i32* %9, align 4
  %215 = insertvalue { i8*, i32 } undef, i8* %213, 0
  %216 = insertvalue { i8*, i32 } %215, i32 %214, 1
  %217 = load i32, i32* @x.73
  %218 = load i32, i32* @y.74
  %219 = sub i32 %217, 1
  %220 = mul i32 %217, %219
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %222, %223
  br i1 %224, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  resume { i8*, i32 } %216

; <label>:225:                                    ; preds = %originalBBpart224, %originalBBpart220, %146
  %226 = landingpad { i8*, i32 }
          catch i8* null
  %227 = extractvalue { i8*, i32 } %226, 0
  call void @__clang_call_terminate(i8* %227) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %27
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %7) #2
  %228 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 1
  %229 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %13) #2
  store i32 0, i32* %14, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %88
  store i32 %83, i32* %87, align 4
  %230 = load i32, i32* %14, align 4
  %231 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %15, i32 0, i32 3
  %232 = load i32, i32* %14, align 4
  %233 = zext i32 %232 to i64
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %126
  %234 = landingpad { i8*, i32 }
          cleanup
  %235 = extractvalue { i8*, i32 } %234, 0
  store i8* %235, i8** %8, align 8
  %236 = extractvalue { i8*, i32 } %234, 1
  store i32 %236, i32* %9, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %13) #2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %151
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %168
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %186
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %204
  %237 = load i8*, i8** %8, align 8
  %238 = load i32, i32* %9, align 4
  %239 = insertvalue { i8*, i32 } undef, i8* %237, 0
  %240 = insertvalue { i8*, i32 } %239, i32 %238, 1
  br label %originalBB26
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE6resizeEmj(%"class.std::vector.5"*, i64, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.75
  %5 = load i32, i32* @y.76
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.5"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.143", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32 %2, i32* %14, align 4
  %16 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %17 = load i64, i64* %13, align 8
  %18 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %16)
  %19 = icmp ugt i64 %17, %18
  %20 = load i32, i32* @x.75
  %21 = load i32, i32* @y.76
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %52

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.75
  %30 = load i32, i32* @y.76
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"* %16)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %15, i32 0, i32 0
  store i32* %37, i32** %38, align 8
  %39 = load i64, i64* %13, align 8
  %40 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %16)
  %41 = sub i64 %39, %40
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %15, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  call void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector.5"* %16, i32* %43, i64 %41, i32* dereferenceable(4) %14)
  %44 = load i32, i32* @x.75
  %45 = load i32, i32* @y.76
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br label %97

; <label>:52:                                     ; preds = %originalBBpart2
  %53 = load i64, i64* %13, align 8
  %54 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %16)
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %56, label %80

; <label>:56:                                     ; preds = %52
  %57 = load i32, i32* @x.75
  %58 = load i32, i32* @y.76
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %56, %originalBB13alteredBB
  %65 = bitcast %"class.std::vector.5"* %16 to %"struct.std::_Vector_base.6"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %65, i32 0, i32 0
  %67 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %66 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %67, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = load i64, i64* %13, align 8
  %71 = getelementptr inbounds i32, i32* %69, i64 %70
  call void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector.5"* %16, i32* %71)
  %72 = load i32, i32* @x.75
  %73 = load i32, i32* @y.76
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %80

; <label>:80:                                     ; preds = %originalBBpart215, %52
  %81 = load i32, i32* @x.75
  %82 = load i32, i32* @y.76
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %80, %originalBB17alteredBB
  %89 = load i32, i32* @x.75
  %90 = load i32, i32* @y.76
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %97

; <label>:97:                                     ; preds = %originalBBpart219, %originalBBpart211
  %98 = load i32, i32* @x.75
  %99 = load i32, i32* @y.76
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %97, %originalBB21alteredBB
  %106 = load i32, i32* @x.75
  %107 = load i32, i32* @y.76
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %114 = alloca %"class.std::vector.5"*, align 8
  %115 = alloca i64, align 8
  %116 = alloca i32, align 4
  %117 = alloca %"class.__gnu_cxx::__normal_iterator.143", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %114, align 8
  store i64 %1, i64* %115, align 8
  store i32 %2, i32* %116, align 4
  %118 = load %"class.std::vector.5"*, %"class.std::vector.5"** %114, align 8
  %119 = load i64, i64* %115, align 8
  %120 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %118)
  %121 = icmp ugt i64 %119, %120
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %122 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"* %16)
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %15, i32 0, i32 0
  store i32* %122, i32** %123, align 8
  %124 = load i64, i64* %13, align 8
  %125 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %16)
  %_ = sub i64 %124, %125
  %gen = mul i64 %_, %125
  %_2 = sub i64 %124, %125
  %gen3 = mul i64 %_2, %125
  %_4 = shl i64 %124, %125
  %_5 = sub i64 %124, %125
  %gen6 = mul i64 %_5, %125
  %_7 = shl i64 %124, %125
  %_8 = sub i64 %124, %125
  %gen9 = mul i64 %_8, %125
  %126 = sub i64 %124, %125
  %127 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %15, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  call void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector.5"* %16, i32* %128, i64 %126, i32* dereferenceable(4) %14)
  br label %originalBB1

originalBB13alteredBB:                            ; preds = %originalBB13, %56
  %129 = bitcast %"class.std::vector.5"* %16 to %"struct.std::_Vector_base.6"*
  %130 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %129, i32 0, i32 0
  %131 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %130 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %131, i32 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = load i64, i64* %13, align 8
  %135 = getelementptr inbounds i32, i32* %133, i64 %134
  call void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector.5"* %16, i32* %135)
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %80
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %97
  br label %originalBB21
}

declare void @_ZN7FETools37lexicographic_to_hierarchic_numberingILi3EEEvRK4FE_QIXT_EERSt6vectorIjSaIjEE(%class.FE_Q* dereferenceable(1264), %"class.std::vector.5"* dereferenceable(24)) #3

declare void @_ZN4FE_QILi3EEC1Ej(%class.FE_Q*, i32) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN4FE_QILi3EED2Ev(%class.FE_Q*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.FE_Q*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.FE_Q* %0, %class.FE_Q** %2, align 8
  %5 = load %class.FE_Q*, %class.FE_Q** %2, align 8
  %6 = bitcast %class.FE_Q* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV4FE_QILi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.FE_Q, %class.FE_Q* %5, i32 0, i32 1
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %7)
          to label %8 unwind label %10

; <label>:8:                                      ; preds = %1
  %9 = bitcast %class.FE_Q* %5 to %class.FE_Poly*
  call void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev(%class.FE_Poly* %9)
  ret void

; <label>:10:                                     ; preds = %1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %3, align 8
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %4, align 4
  %14 = bitcast %class.FE_Q* %5 to %class.FE_Poly*
  invoke void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev(%class.FE_Poly* %14)
          to label %15 unwind label %53

; <label>:15:                                     ; preds = %10
  %16 = load i32, i32* @x.77
  %17 = load i32, i32* @y.78
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i32, i32* @x.77
  %25 = load i32, i32* @y.78
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %32

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* @x.77
  %34 = load i32, i32* @y.78
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i8*, i8** %3, align 8
  %42 = load i32, i32* %4, align 4
  %43 = insertvalue { i8*, i32 } undef, i8* %41, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  %45 = load i32, i32* @x.77
  %46 = load i32, i32* @y.78
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %44

; <label>:53:                                     ; preds = %10
  %54 = load i32, i32* @x.77
  %55 = load i32, i32* @y.78
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #12
  %64 = load i32, i32* @x.77
  %65 = load i32, i32* @y.78
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %72 = load i8*, i8** %3, align 8
  %73 = load i32, i32* %4, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @__clang_call_terminate(i8* %77) #12
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdE(%class.MappingQ*, %class.Table* dereferenceable(48)) #0 comdat align 2 {
  %3 = alloca %class.MappingQ*, align 8
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.internal::TableBaseAccessors::Accessor", align 8
  %11 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %3, align 8
  store %class.Table* %1, %class.Table** %4, align 8
  %12 = load %class.MappingQ*, %class.MappingQ** %3, align 8
  %13 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = sub i32 %14, 1
  %16 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %12, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = sub i32 %17, 1
  %19 = mul i32 %15, %18
  store i32 %19, i32* %5, align 4
  %20 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %12, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = sub i32 %21, 1
  %23 = mul i32 4, %22
  %24 = add i32 4, %23
  store i32 %24, i32* %6, align 4
  store double* null, double** %7, align 8
  %25 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %12, i32 0, i32 3
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %62 [
    i32 2, label %27
    i32 3, label %44
    i32 4, label %61
  ]

; <label>:27:                                     ; preds = %2
  %28 = load i32, i32* @x.79
  %29 = load i32, i32* @y.80
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %27, %originalBBalteredBB
  store double* getelementptr inbounds ([8 x double], [8 x double]* @_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv2, i64 0, i64 0), double** %7, align 8
  %36 = load i32, i32* @x.79
  %37 = load i32, i32* @y.80
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %79

; <label>:44:                                     ; preds = %2
  %45 = load i32, i32* @x.79
  %46 = load i32, i32* @y.80
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  store double* getelementptr inbounds ([48 x double], [48 x double]* @_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv3, i64 0, i64 0), double** %7, align 8
  %53 = load i32, i32* @x.79
  %54 = load i32, i32* @y.80
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %79

; <label>:61:                                     ; preds = %2
  store double* getelementptr inbounds ([144 x double], [144 x double]* @_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv4, i64 0, i64 0), double** %7, align 8
  br label %79

; <label>:62:                                     ; preds = %2
  %63 = load i32, i32* @x.79
  %64 = load i32, i32* @y.80
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  %71 = load i32, i32* @x.79
  %72 = load i32, i32* @y.80
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %79

; <label>:79:                                     ; preds = %originalBBpart28, %61, %originalBBpart24, %originalBBpart2
  %80 = load double*, double** %7, align 8
  %81 = icmp ne double* %80, null
  br i1 %81, label %82, label %197

; <label>:82:                                     ; preds = %79
  %83 = load %class.Table*, %class.Table** %4, align 8
  %84 = load i32, i32* %5, align 4
  %85 = load i32, i32* %6, align 4
  call void @_ZN5TableILi2EdE6reinitEjj(%class.Table* %83, i32 %84, i32 %85)
  store i32 0, i32* %8, align 4
  br label %86

; <label>:86:                                     ; preds = %originalBBpart259, %82
  %87 = load i32, i32* @x.79
  %88 = load i32, i32* @y.80
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = load i32, i32* %8, align 4
  %96 = load i32, i32* %5, align 4
  %97 = icmp ult i32 %95, %96
  %98 = load i32, i32* @x.79
  %99 = load i32, i32* @y.80
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %97, label %106, label %196

; <label>:106:                                    ; preds = %originalBBpart212
  store i32 0, i32* %9, align 4
  br label %107

; <label>:107:                                    ; preds = %originalBBpart243, %106
  %108 = load i32, i32* %9, align 4
  %109 = load i32, i32* %6, align 4
  %110 = icmp ult i32 %108, %109
  br i1 %110, label %111, label %160

; <label>:111:                                    ; preds = %107
  %112 = load i32, i32* @x.79
  %113 = load i32, i32* @y.80
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %111, %originalBB14alteredBB
  %120 = load double*, double** %7, align 8
  %121 = load i32, i32* %8, align 4
  %122 = load i32, i32* %6, align 4
  %123 = mul i32 %121, %122
  %124 = load i32, i32* %9, align 4
  %125 = add i32 %123, %124
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds double, double* %120, i64 %126
  %128 = load double, double* %127, align 8
  %129 = load %class.Table*, %class.Table** %4, align 8
  %130 = load i32, i32* %8, align 4
  call void @_ZN5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %10, %class.Table* %129, i32 %130)
  %131 = load i32, i32* %9, align 4
  %132 = call dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %10, i32 %131)
  store double %128, double* %132, align 8
  %133 = load i32, i32* @x.79
  %134 = load i32, i32* @y.80
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart232, label %originalBB14alteredBB

originalBBpart232:                                ; preds = %originalBB14
  br label %141

; <label>:141:                                    ; preds = %originalBBpart232
  %142 = load i32, i32* @x.79
  %143 = load i32, i32* @y.80
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %141, %originalBB34alteredBB
  %150 = load i32, i32* %9, align 4
  %151 = add i32 %150, 1
  store i32 %151, i32* %9, align 4
  %152 = load i32, i32* @x.79
  %153 = load i32, i32* @y.80
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart243, label %originalBB34alteredBB

originalBBpart243:                                ; preds = %originalBB34
  br label %107

; <label>:160:                                    ; preds = %107
  %161 = load i32, i32* @x.79
  %162 = load i32, i32* @y.80
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %160, %originalBB45alteredBB
  %169 = load i32, i32* @x.79
  %170 = load i32, i32* @y.80
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %177

; <label>:177:                                    ; preds = %originalBBpart247
  %178 = load i32, i32* @x.79
  %179 = load i32, i32* @y.80
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %177, %originalBB49alteredBB
  %186 = load i32, i32* %8, align 4
  %187 = add i32 %186, 1
  store i32 %187, i32* %8, align 4
  %188 = load i32, i32* @x.79
  %189 = load i32, i32* @y.80
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart259, label %originalBB49alteredBB

originalBBpart259:                                ; preds = %originalBB49
  br label %86

; <label>:196:                                    ; preds = %originalBBpart212
  br label %214

; <label>:197:                                    ; preds = %79
  %198 = load i32, i32* @x.79
  %199 = load i32, i32* @y.80
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %197, %originalBB61alteredBB
  %206 = load i32, i32* @x.79
  %207 = load i32, i32* @y.80
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %214

; <label>:214:                                    ; preds = %originalBBpart263, %196
  %215 = load i32, i32* @x.79
  %216 = load i32, i32* @y.80
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %214, %originalBB65alteredBB
  store i32 0, i32* %11, align 4
  %223 = load i32, i32* @x.79
  %224 = load i32, i32* @y.80
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %231

; <label>:231:                                    ; preds = %237, %originalBBpart267
  %232 = load i32, i32* %11, align 4
  %233 = load %class.Table*, %class.Table** %4, align 8
  %234 = call i32 @_ZNK5TableILi2EdE6n_rowsEv(%class.Table* %233)
  %235 = icmp ult i32 %232, %234
  br i1 %235, label %236, label %240

; <label>:236:                                    ; preds = %231
  br label %237

; <label>:237:                                    ; preds = %236
  %238 = load i32, i32* %11, align 4
  %239 = add i32 %238, 1
  store i32 %239, i32* %11, align 4
  br label %231

; <label>:240:                                    ; preds = %231
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %27
  store double* getelementptr inbounds ([8 x double], [8 x double]* @_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv2, i64 0, i64 0), double** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  store double* getelementptr inbounds ([48 x double], [48 x double]* @_ZZNK8MappingQILi3EE26set_laplace_on_quad_vectorER5TableILi2EdEE5loqv3, i64 0, i64 0), double** %7, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  %241 = load i32, i32* %8, align 4
  %242 = load i32, i32* %5, align 4
  %243 = icmp ult i32 %241, %242
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %111
  %244 = load double*, double** %7, align 8
  %245 = load i32, i32* %8, align 4
  %246 = load i32, i32* %6, align 4
  %_ = sub i32 0, %245
  %gen = add i32 %_, %246
  %_15 = sub i32 0, %245
  %gen16 = add i32 %_15, %246
  %_17 = sub i32 %245, %246
  %gen18 = mul i32 %_17, %246
  %247 = mul i32 %245, %246
  %248 = load i32, i32* %9, align 4
  %_19 = sub i32 %247, %248
  %gen20 = mul i32 %_19, %248
  %_21 = sub i32 %247, %248
  %gen22 = mul i32 %_21, %248
  %_23 = sub i32 0, %247
  %gen24 = add i32 %_23, %248
  %_25 = shl i32 %247, %248
  %_26 = shl i32 %247, %248
  %_27 = sub i32 %247, %248
  %gen28 = mul i32 %_27, %248
  %_29 = sub i32 0, %247
  %gen30 = add i32 %_29, %248
  %249 = add i32 %247, %248
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds double, double* %244, i64 %250
  %252 = load double, double* %251, align 8
  %253 = load %class.Table*, %class.Table** %4, align 8
  %254 = load i32, i32* %8, align 4
  call void @_ZN5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor"* sret %10, %class.Table* %253, i32 %254)
  %255 = load i32, i32* %9, align 4
  %256 = call dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor"* %10, i32 %255)
  store double %252, double* %256, align 8
  br label %originalBB14

originalBB34alteredBB:                            ; preds = %originalBB34, %141
  %257 = load i32, i32* %9, align 4
  %_35 = shl i32 %257, 1
  %_36 = sub i32 %257, 1
  %gen37 = mul i32 %_36, 1
  %_38 = sub i32 0, %257
  %gen39 = add i32 %_38, 1
  %_40 = sub i32 0, %257
  %gen41 = add i32 %_40, 1
  %258 = add i32 %257, 1
  store i32 %258, i32* %9, align 4
  br label %originalBB34

originalBB45alteredBB:                            ; preds = %originalBB45, %160
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %177
  %259 = load i32, i32* %8, align 4
  %_50 = sub i32 %259, 1
  %gen51 = mul i32 %_50, 1
  %_52 = shl i32 %259, 1
  %_53 = sub i32 %259, 1
  %gen54 = mul i32 %_53, 1
  %_55 = shl i32 %259, 1
  %_56 = sub i32 %259, 1
  %gen57 = mul i32 %_56, 1
  %260 = add i32 %259, 1
  store i32 %260, i32* %8, align 4
  br label %originalBB49

originalBB61alteredBB:                            ; preds = %originalBB61, %197
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %214
  store i32 0, i32* %11, align 4
  br label %originalBB65
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev(%"class.std::vector.73"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.73"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %2, align 8
  %5 = load %"class.std::vector.73"*, %"class.std::vector.73"** %2, align 8
  %6 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %11 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %14, align 8
  %16 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %16)
          to label %18 unwind label %53

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.81
  %20 = load i32, i32* @y.82
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.81
  %28 = load i32, i32* @y.82
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantES1_EvT_S3_RSaIT0_E(%"class.Polynomials::LagrangeEquidistant"* %10, %"class.Polynomials::LagrangeEquidistant"* %15, %"class.std::allocator.75"* dereferenceable(1) %17)
          to label %35 unwind label %53

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load i32, i32* @x.81
  %37 = load i32, i32* @y.82
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  call void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev(%"struct.std::_Vector_base.74"* %44)
  %45 = load i32, i32* @x.81
  %46 = load i32, i32* @y.82
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:53:                                     ; preds = %originalBBpart2, %1
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %3, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %4, align 4
  %57 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  invoke void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev(%"struct.std::_Vector_base.74"* %57)
          to label %58 unwind label %64

; <label>:58:                                     ; preds = %53
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %3, align 8
  %61 = load i32, i32* %4, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %53
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %67 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  call void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev(%"struct.std::_Vector_base.74"* %67)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.5"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %10, i32* %15, %"class.std::allocator.7"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.6"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.6"* %25)
          to label %26 unwind label %32

; <label>:26:                                     ; preds = %21
  br label %27

; <label>:27:                                     ; preds = %26
  %28 = load i8*, i8** %3, align 8
  %29 = load i32, i32* %4, align 4
  %30 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

; <label>:32:                                     ; preds = %21
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdED2Ev(%class.Table*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %2, align 8
  %3 = load %class.Table*, %class.Table** %2, align 8
  %4 = bitcast %class.Table* %3 to %class.TableBase*
  call void @_ZN9TableBaseILi2EdED2Ev(%class.TableBase* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9MappingQ1ILi3EED2Ev(%class.MappingQ1*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.MappingQ1*, align 8
  store %class.MappingQ1* %0, %class.MappingQ1** %2, align 8
  %3 = load %class.MappingQ1*, %class.MappingQ1** %2, align 8
  %4 = bitcast %class.MappingQ1* %3 to %class.Mapping*
  call void @_ZN7MappingILi3EED2Ev(%class.Mapping* %4)
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN8MappingQILi3EED2Ev(%class.MappingQ*) unnamed_addr #0 comdat($_ZN8MappingQILi3EED5Ev) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.MappingQ*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.MappingQ* %0, %class.MappingQ** %2, align 8
  %5 = load %class.MappingQ*, %class.MappingQ** %2, align 8
  %6 = bitcast %class.MappingQ* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTV8MappingQILi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 6
  %8 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %7, align 8
  %9 = icmp eq %class.TensorProductPolynomials* %8, null
  br i1 %9, label %29, label %10

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.89
  %12 = load i32, i32* @y.90
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load i32, i32* @x.89
  %20 = load i32, i32* @y.90
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN24TensorProductPolynomialsILi3EED2Ev(%class.TensorProductPolynomials* %8)
          to label %27 unwind label %69

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = bitcast %class.TensorProductPolynomials* %8 to i8*
  call void @_ZdlPv(i8* %28) #14
  br label %29

; <label>:29:                                     ; preds = %27, %1
  %30 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 8
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %30)
          to label %31 unwind label %75

; <label>:31:                                     ; preds = %29
  %32 = load i32, i32* @x.89
  %33 = load i32, i32* @y.90
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 2
  %41 = load i32, i32* @x.89
  %42 = load i32, i32* @y.90
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN5TableILi2EdED2Ev(%class.Table* %40)
          to label %49 unwind label %80

; <label>:49:                                     ; preds = %originalBBpart24
  %50 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 1
  invoke void @_ZN5TableILi2EdED2Ev(%class.Table* %50)
          to label %51 unwind label %119

; <label>:51:                                     ; preds = %49
  %52 = load i32, i32* @x.89
  %53 = load i32, i32* @y.90
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = bitcast %class.MappingQ* %5 to %class.MappingQ1*
  call void @_ZN9MappingQ1ILi3EED2Ev(%class.MappingQ1* %60)
  %61 = load i32, i32* @x.89
  %62 = load i32, i32* @y.90
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

; <label>:69:                                     ; preds = %originalBBpart2
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %3, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %4, align 4
  %73 = bitcast %class.TensorProductPolynomials* %8 to i8*
  call void @_ZdlPv(i8* %73) #14
  %74 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 8
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %74)
          to label %79 unwind label %182

; <label>:75:                                     ; preds = %29
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %3, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %4, align 4
  br label %84

; <label>:79:                                     ; preds = %69
  br label %84

; <label>:80:                                     ; preds = %originalBBpart24
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %3, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %4, align 4
  br label %123

; <label>:84:                                     ; preds = %79, %75
  %85 = load i32, i32* @x.89
  %86 = load i32, i32* @y.90
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %84, %originalBB10alteredBB
  %93 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 2
  %94 = load i32, i32* @x.89
  %95 = load i32, i32* @y.90
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZN5TableILi2EdED2Ev(%class.Table* %93)
          to label %102 unwind label %182

; <label>:102:                                    ; preds = %originalBBpart212
  %103 = load i32, i32* @x.89
  %104 = load i32, i32* @y.90
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i32, i32* @x.89
  %112 = load i32, i32* @y.90
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %123

; <label>:119:                                    ; preds = %49
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %3, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %4, align 4
  br label %142

; <label>:123:                                    ; preds = %originalBBpart216, %80
  %124 = load i32, i32* @x.89
  %125 = load i32, i32* @y.90
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %123, %originalBB18alteredBB
  %132 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 1
  %133 = load i32, i32* @x.89
  %134 = load i32, i32* @y.90
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZN5TableILi2EdED2Ev(%class.Table* %132)
          to label %141 unwind label %182

; <label>:141:                                    ; preds = %originalBBpart220
  br label %142

; <label>:142:                                    ; preds = %141, %119
  %143 = load i32, i32* @x.89
  %144 = load i32, i32* @y.90
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %142, %originalBB22alteredBB
  %151 = bitcast %class.MappingQ* %5 to %class.MappingQ1*
  %152 = load i32, i32* @x.89
  %153 = load i32, i32* @y.90
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  invoke void @_ZN9MappingQ1ILi3EED2Ev(%class.MappingQ1* %151)
          to label %160 unwind label %182

; <label>:160:                                    ; preds = %originalBBpart224
  br label %161

; <label>:161:                                    ; preds = %160
  %162 = load i32, i32* @x.89
  %163 = load i32, i32* @y.90
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %161, %originalBB26alteredBB
  %170 = load i8*, i8** %3, align 8
  %171 = load i32, i32* %4, align 4
  %172 = insertvalue { i8*, i32 } undef, i8* %170, 0
  %173 = insertvalue { i8*, i32 } %172, i32 %171, 1
  %174 = load i32, i32* @x.89
  %175 = load i32, i32* @y.90
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  resume { i8*, i32 } %173

; <label>:182:                                    ; preds = %originalBBpart224, %originalBBpart220, %originalBBpart212, %69
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  call void @__clang_call_terminate(i8* %184) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %10
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %185 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %186 = bitcast %class.MappingQ* %5 to %class.MappingQ1*
  call void @_ZN9MappingQ1ILi3EED2Ev(%class.MappingQ1* %186)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %84
  %187 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 2
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %123
  %188 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %5, i32 0, i32 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %142
  %189 = bitcast %class.MappingQ* %5 to %class.MappingQ1*
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %161
  %190 = load i8*, i8** %3, align 8
  %191 = load i32, i32* %4, align 4
  %192 = insertvalue { i8*, i32 } undef, i8* %190, 0
  %193 = insertvalue { i8*, i32 } %192, i32 %191, 1
  br label %originalBB26
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN24TensorProductPolynomialsILi3EED2Ev(%class.TensorProductPolynomials*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TensorProductPolynomials*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TensorProductPolynomials* %0, %class.TensorProductPolynomials** %2, align 8
  %5 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %2, align 8
  %6 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %5, i32 0, i32 3
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %6)
          to label %7 unwind label %27

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.91
  %9 = load i32, i32* @y.92
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %5, i32 0, i32 2
  %17 = load i32, i32* @x.91
  %18 = load i32, i32* @y.92
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %16)
          to label %25 unwind label %48

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %5, i32 0, i32 0
  call void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector"* %26)
  ret void

; <label>:27:                                     ; preds = %1
  %28 = load i32, i32* @x.91
  %29 = load i32, i32* @y.92
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %3, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %4, align 4
  %39 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %5, i32 0, i32 2
  %40 = load i32, i32* @x.91
  %41 = load i32, i32* @y.92
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZNSt6vectorIjSaIjEED2Ev(%"class.std::vector.5"* %39)
          to label %68 unwind label %93

; <label>:48:                                     ; preds = %originalBBpart2
  %49 = load i32, i32* @x.91
  %50 = load i32, i32* @y.92
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %3, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %4, align 4
  %60 = load i32, i32* @x.91
  %61 = load i32, i32* @y.92
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %69

; <label>:68:                                     ; preds = %originalBBpart24
  br label %69

; <label>:69:                                     ; preds = %68, %originalBBpart28
  %70 = load i32, i32* @x.91
  %71 = load i32, i32* @y.92
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %69, %originalBB10alteredBB
  %78 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %5, i32 0, i32 0
  %79 = load i32, i32* @x.91
  %80 = load i32, i32* @y.92
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector"* %78)
          to label %87 unwind label %93

; <label>:87:                                     ; preds = %originalBBpart212
  br label %88

; <label>:88:                                     ; preds = %87
  %89 = load i8*, i8** %3, align 8
  %90 = load i32, i32* %4, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  resume { i8*, i32 } %92

; <label>:93:                                     ; preds = %originalBBpart212, %originalBBpart24
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %7
  %96 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %5, i32 0, i32 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %3, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %4, align 4
  %100 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %5, i32 0, i32 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  store i8* %102, i8** %3, align 8
  %103 = extractvalue { i8*, i32 } %101, 1
  store i32 %103, i32* %4, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %69
  %104 = getelementptr inbounds %class.TensorProductPolynomials, %class.TensorProductPolynomials* %5, i32 0, i32 0
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN8MappingQILi3EED0Ev(%class.MappingQ*) unnamed_addr #0 comdat($_ZN8MappingQILi3EED5Ev) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.93
  %3 = load i32, i32* @y.94
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.MappingQ*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.MappingQ* %0, %class.MappingQ** %10, align 8
  %13 = load %class.MappingQ*, %class.MappingQ** %10, align 8
  %14 = load i32, i32* @x.93
  %15 = load i32, i32* @y.94
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN8MappingQILi3EED1Ev(%class.MappingQ* %13)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = bitcast %class.MappingQ* %13 to i8*
  call void @_ZdlPv(i8* %23) #14
  ret void

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %11, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %12, align 4
  %28 = bitcast %class.MappingQ* %13 to i8*
  call void @_ZdlPv(i8* %28) #14
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %11, align 8
  %31 = load i32, i32* %12, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %class.MappingQ*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %class.MappingQ* %0, %class.MappingQ** %34, align 8
  %37 = load %class.MappingQ*, %class.MappingQ** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE27transform_unit_to_real_cellERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EE(%class.Point* noalias sret, %class.MappingQ*, %class.TriaIterator* dereferenceable(16), %class.Point* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.MappingQ*, align 8
  %6 = alloca %class.TriaIterator*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %class.Quadrature, align 8
  %9 = alloca %"class.std::auto_ptr", align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  store %class.MappingQ* %1, %class.MappingQ** %5, align 8
  store %class.TriaIterator* %2, %class.TriaIterator** %6, align 8
  store %class.Point* %3, %class.Point** %7, align 8
  %13 = load %class.MappingQ*, %class.MappingQ** %5, align 8
  %14 = load %class.Point*, %class.Point** %7, align 8
  call void @_ZN10QuadratureILi3EEC1ERK5PointILi3EE(%class.Quadrature* %8, %class.Point* dereferenceable(24) %14)
  %15 = bitcast %class.MappingQ* %13 to %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)***
  %16 = load %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)**, %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)*** %15, align 8
  %17 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)*, %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)** %16, i64 10
  %18 = load %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)*, %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)** %17, align 8
  %19 = invoke %"class.Mapping<3>::InternalDataBase"* %18(%class.MappingQ* %13, i32 2048, %class.Quadrature* dereferenceable(80) %8)
          to label %20 unwind label %26

; <label>:20:                                     ; preds = %4
  %21 = icmp eq %"class.Mapping<3>::InternalDataBase"* %19, null
  br i1 %21, label %46, label %22

; <label>:22:                                     ; preds = %20
  %23 = bitcast %"class.Mapping<3>::InternalDataBase"* %19 to i8*
  %24 = call i8* @__dynamic_cast(i8* %23, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %25 = bitcast i8* %24 to %"class.MappingQ<3>::InternalData"*
  br label %47

; <label>:26:                                     ; preds = %81, %4
  %27 = load i32, i32* @x.95
  %28 = load i32, i32* @y.96
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %10, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %11, align 4
  %38 = load i32, i32* @x.95
  %39 = load i32, i32* @y.96
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %104

; <label>:46:                                     ; preds = %20
  br label %47

; <label>:47:                                     ; preds = %46, %22
  %48 = phi %"class.MappingQ<3>::InternalData"* [ %25, %22 ], [ null, %46 ]
  call void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEEC2EPS2_(%"class.std::auto_ptr"* %9, %"class.MappingQ<3>::InternalData"* %48) #2
  %49 = load %class.TriaIterator*, %class.TriaIterator** %6, align 8
  %50 = bitcast %class.TriaIterator* %49 to %class.TriaRawIterator*
  %51 = invoke %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %50)
          to label %52 unwind label %82

; <label>:52:                                     ; preds = %47
  %53 = invoke zeroext i1 @_ZNK12CellAccessorILi3EE18has_boundary_linesEv(%class.CellAccessor* %51)
          to label %54 unwind label %82

; <label>:54:                                     ; preds = %52
  %55 = xor i1 %53, true
  %56 = call %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv(%"class.std::auto_ptr"* %9) #2
  %57 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %56, i32 0, i32 2
  %58 = zext i1 %55 to i8
  store i8 %58, i8* %57, align 8
  %59 = call %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv(%"class.std::auto_ptr"* %9) #2
  %60 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %59, i32 0, i32 2
  %61 = load i8, i8* %60, align 8
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %66

; <label>:63:                                     ; preds = %54
  %64 = call %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv(%"class.std::auto_ptr"* %9) #2
  %65 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %64, i32 0, i32 3
  br label %69

; <label>:66:                                     ; preds = %54
  %67 = call dereferenceable(608) %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEdeEv(%"class.std::auto_ptr"* %9) #2
  %68 = bitcast %"class.MappingQ<3>::InternalData"* %67 to %"class.MappingQ1<3>::InternalData"*
  br label %69

; <label>:69:                                     ; preds = %66, %63
  %70 = phi %"class.MappingQ1<3>::InternalData"* [ %65, %63 ], [ %68, %66 ]
  store %"class.MappingQ1<3>::InternalData"* %70, %"class.MappingQ1<3>::InternalData"** %12, align 8
  %71 = bitcast %class.MappingQ* %13 to void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)***
  %72 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)**, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %72, i64 17
  %74 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %73, align 8
  %75 = load %class.TriaIterator*, %class.TriaIterator** %6, align 8
  %76 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %12, align 8
  %77 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %76, i32 0, i32 7
  invoke void %74(%class.MappingQ* %13, %class.TriaIterator* dereferenceable(16) %75, %"class.std::vector.58"* dereferenceable(24) %77)
          to label %78 unwind label %82

; <label>:78:                                     ; preds = %69
  %79 = bitcast %class.MappingQ* %13 to %class.MappingQ1*
  %80 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %12, align 8
  invoke void @_ZNK9MappingQ1ILi3EE36transform_unit_to_real_cell_internalERKNS0_12InternalDataE(%class.Point* sret %0, %class.MappingQ1* %79, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %80)
          to label %81 unwind label %82

; <label>:81:                                     ; preds = %78
  invoke void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEED2Ev(%"class.std::auto_ptr"* %9)
          to label %86 unwind label %26

; <label>:82:                                     ; preds = %78, %69, %52, %47
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %10, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %11, align 4
  invoke void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEED2Ev(%"class.std::auto_ptr"* %9)
          to label %87 unwind label %127

; <label>:86:                                     ; preds = %81
  call void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature* %8)
  ret void

; <label>:87:                                     ; preds = %82
  %88 = load i32, i32* @x.95
  %89 = load i32, i32* @y.96
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %87, %originalBB1alteredBB
  %96 = load i32, i32* @x.95
  %97 = load i32, i32* @y.96
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %104

; <label>:104:                                    ; preds = %originalBBpart24, %originalBBpart2
  invoke void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature* %8)
          to label %105 unwind label %127

; <label>:105:                                    ; preds = %104
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i32, i32* @x.95
  %108 = load i32, i32* @y.96
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %106, %originalBB6alteredBB
  %115 = load i8*, i8** %10, align 8
  %116 = load i32, i32* %11, align 4
  %117 = insertvalue { i8*, i32 } undef, i8* %115, 0
  %118 = insertvalue { i8*, i32 } %117, i32 %116, 1
  %119 = load i32, i32* @x.95
  %120 = load i32, i32* @y.96
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %118

; <label>:127:                                    ; preds = %104, %82
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  call void @__clang_call_terminate(i8* %129) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %26
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %10, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %11, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %87
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %106
  %133 = load i8*, i8** %10, align 8
  %134 = load i32, i32* %11, align 4
  %135 = insertvalue { i8*, i32 } undef, i8* %133, 0
  %136 = insertvalue { i8*, i32 } %135, i32 %134, 1
  br label %originalBB6
}

declare void @_ZN10QuadratureILi3EEC1ERK5PointILi3EE(%class.Quadrature*, %class.Point* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind readonly
declare i8* @__dynamic_cast(i8*, i8*, i8*, i64) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEEC2EPS2_(%"class.std::auto_ptr"*, %"class.MappingQ<3>::InternalData"*) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::auto_ptr"*, align 8
  %4 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  store %"class.std::auto_ptr"* %0, %"class.std::auto_ptr"** %3, align 8
  store %"class.MappingQ<3>::InternalData"* %1, %"class.MappingQ<3>::InternalData"** %4, align 8
  %5 = load %"class.std::auto_ptr"*, %"class.std::auto_ptr"** %3, align 8
  %6 = getelementptr inbounds %"class.std::auto_ptr", %"class.std::auto_ptr"* %5, i32 0, i32 0
  %7 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %4, align 8
  store %"class.MappingQ<3>::InternalData"* %7, %"class.MappingQ<3>::InternalData"** %6, align 8
  ret void
}

declare zeroext i1 @_ZNK12CellAccessorILi3EE18has_boundary_linesEv(%class.CellAccessor*) #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv(%"class.std::auto_ptr"*) #1 comdat align 2 {
  %2 = alloca %"class.std::auto_ptr"*, align 8
  store %"class.std::auto_ptr"* %0, %"class.std::auto_ptr"** %2, align 8
  %3 = load %"class.std::auto_ptr"*, %"class.std::auto_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.std::auto_ptr", %"class.std::auto_ptr"* %3, i32 0, i32 0
  %5 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %4, align 8
  ret %"class.MappingQ<3>::InternalData"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(608) %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEdeEv(%"class.std::auto_ptr"*) #1 comdat align 2 {
  %2 = alloca %"class.std::auto_ptr"*, align 8
  store %"class.std::auto_ptr"* %0, %"class.std::auto_ptr"** %2, align 8
  %3 = load %"class.std::auto_ptr"*, %"class.std::auto_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.std::auto_ptr", %"class.std::auto_ptr"* %3, i32 0, i32 0
  %5 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %4, align 8
  ret %"class.MappingQ<3>::InternalData"* %5
}

declare void @_ZNK9MappingQ1ILi3EE36transform_unit_to_real_cell_internalERKNS0_12InternalDataE(%class.Point* sret, %class.MappingQ1*, %"class.MappingQ1<3>::InternalData"* dereferenceable(288)) #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEED2Ev(%"class.std::auto_ptr"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.103
  %3 = load i32, i32* @y.104
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::auto_ptr"*, align 8
  store %"class.std::auto_ptr"* %0, %"class.std::auto_ptr"** %10, align 8
  %11 = load %"class.std::auto_ptr"*, %"class.std::auto_ptr"** %10, align 8
  %12 = getelementptr inbounds %"class.std::auto_ptr", %"class.std::auto_ptr"* %11, i32 0, i32 0
  %13 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %12, align 8
  %14 = icmp eq %"class.MappingQ<3>::InternalData"* %13, null
  %15 = load i32, i32* @x.103
  %16 = load i32, i32* @y.104
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %44, label %23

; <label>:23:                                     ; preds = %originalBBpart2
  %24 = load i32, i32* @x.103
  %25 = load i32, i32* @y.104
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = bitcast %"class.MappingQ<3>::InternalData"* %13 to void (%"class.MappingQ<3>::InternalData"*)***
  %33 = load void (%"class.MappingQ<3>::InternalData"*)**, void (%"class.MappingQ<3>::InternalData"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.MappingQ<3>::InternalData"*)*, void (%"class.MappingQ<3>::InternalData"*)** %33, i64 1
  %35 = load void (%"class.MappingQ<3>::InternalData"*)*, void (%"class.MappingQ<3>::InternalData"*)** %34, align 8
  call void %35(%"class.MappingQ<3>::InternalData"* %13)
  %36 = load i32, i32* @x.103
  %37 = load i32, i32* @y.104
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44

; <label>:44:                                     ; preds = %originalBBpart24, %originalBBpart2
  %45 = load i32, i32* @x.103
  %46 = load i32, i32* @y.104
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = load i32, i32* @x.103
  %54 = load i32, i32* @y.104
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %61 = alloca %"class.std::auto_ptr"*, align 8
  store %"class.std::auto_ptr"* %0, %"class.std::auto_ptr"** %61, align 8
  %62 = load %"class.std::auto_ptr"*, %"class.std::auto_ptr"** %61, align 8
  %63 = getelementptr inbounds %"class.std::auto_ptr", %"class.std::auto_ptr"* %62, i32 0, i32 0
  %64 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %63, align 8
  %65 = icmp eq %"class.MappingQ<3>::InternalData"* %64, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %66 = bitcast %"class.MappingQ<3>::InternalData"* %13 to void (%"class.MappingQ<3>::InternalData"*)***
  %67 = load void (%"class.MappingQ<3>::InternalData"*)**, void (%"class.MappingQ<3>::InternalData"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.MappingQ<3>::InternalData"*)*, void (%"class.MappingQ<3>::InternalData"*)** %67, i64 1
  %69 = load void (%"class.MappingQ<3>::InternalData"*)*, void (%"class.MappingQ<3>::InternalData"*)** %68, align 8
  call void %69(%"class.MappingQ<3>::InternalData"* %13)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  br label %originalBB6
}

declare void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature*) unnamed_addr #3

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE27transform_real_to_unit_cellERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EE(%class.Point* noalias sret, %class.MappingQ*, %class.TriaIterator* dereferenceable(16), %class.Point* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.MappingQ*, align 8
  %6 = alloca %class.TriaIterator*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %class.Quadrature, align 8
  %9 = alloca %"class.std::auto_ptr", align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"class.std::vector.58"*, align 8
  store %class.MappingQ* %1, %class.MappingQ** %5, align 8
  store %class.TriaIterator* %2, %class.TriaIterator** %6, align 8
  store %class.Point* %3, %class.Point** %7, align 8
  %13 = load %class.MappingQ*, %class.MappingQ** %5, align 8
  %14 = bitcast %class.MappingQ* %13 to %class.MappingQ1*
  %15 = load %class.TriaIterator*, %class.TriaIterator** %6, align 8
  %16 = load %class.Point*, %class.Point** %7, align 8
  call void @_ZNK9MappingQ1ILi3EE27transform_real_to_unit_cellERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EE(%class.Point* sret %0, %class.MappingQ1* %14, %class.TriaIterator* dereferenceable(16) %15, %class.Point* dereferenceable(24) %16)
  %17 = load %class.TriaIterator*, %class.TriaIterator** %6, align 8
  %18 = bitcast %class.TriaIterator* %17 to %class.TriaRawIterator*
  %19 = call %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %18)
  %20 = call zeroext i1 @_ZNK12CellAccessorILi3EE18has_boundary_linesEv(%class.CellAccessor* %19)
  br i1 %20, label %21, label %148

; <label>:21:                                     ; preds = %4
  call void @_ZN10QuadratureILi3EEC1ERK5PointILi3EE(%class.Quadrature* %8, %class.Point* dereferenceable(24) %0)
  %22 = bitcast %class.MappingQ* %13 to %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)***
  %23 = load %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)**, %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)*** %22, align 8
  %24 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)*, %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)** %23, i64 10
  %25 = load %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)*, %"class.Mapping<3>::InternalDataBase"* (%class.MappingQ*, i32, %class.Quadrature*)** %24, align 8
  %26 = invoke i32 @_Zor11UpdateFlagsS_(i32 2048, i32 4096)
          to label %27 unwind label %51

; <label>:27:                                     ; preds = %21
  %28 = invoke %"class.Mapping<3>::InternalDataBase"* %25(%class.MappingQ* %13, i32 %26, %class.Quadrature* dereferenceable(80) %8)
          to label %29 unwind label %51

; <label>:29:                                     ; preds = %27
  %30 = icmp eq %"class.Mapping<3>::InternalDataBase"* %28, null
  br i1 %30, label %55, label %31

; <label>:31:                                     ; preds = %29
  %32 = load i32, i32* @x.105
  %33 = load i32, i32* @y.106
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %31, %originalBBalteredBB
  %40 = bitcast %"class.Mapping<3>::InternalDataBase"* %28 to i8*
  %41 = call i8* @__dynamic_cast(i8* %40, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %42 = bitcast i8* %41 to %"class.MappingQ<3>::InternalData"*
  %43 = load i32, i32* @x.105
  %44 = load i32, i32* @y.106
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %72

; <label>:51:                                     ; preds = %107, %27, %21
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %10, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %11, align 4
  br label %146

; <label>:55:                                     ; preds = %29
  %56 = load i32, i32* @x.105
  %57 = load i32, i32* @y.106
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %55, %originalBB1alteredBB
  %64 = load i32, i32* @x.105
  %65 = load i32, i32* @y.106
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %72

; <label>:72:                                     ; preds = %originalBBpart24, %originalBBpart2
  %73 = phi %"class.MappingQ<3>::InternalData"* [ %42, %originalBBpart2 ], [ null, %originalBBpart24 ]
  %74 = load i32, i32* @x.105
  %75 = load i32, i32* @y.106
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  call void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEEC2EPS2_(%"class.std::auto_ptr"* %9, %"class.MappingQ<3>::InternalData"* %73) #2
  %82 = call %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv(%"class.std::auto_ptr"* %9) #2
  %83 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %82, i32 0, i32 2
  store i8 0, i8* %83, align 8
  %84 = call %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv(%"class.std::auto_ptr"* %9) #2
  %85 = bitcast %"class.MappingQ<3>::InternalData"* %84 to %"class.MappingQ1<3>::InternalData"*
  %86 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %85, i32 0, i32 7
  store %"class.std::vector.58"* %86, %"class.std::vector.58"** %12, align 8
  %87 = bitcast %class.MappingQ* %13 to void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)***
  %88 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)**, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %88, i64 17
  %90 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %89, align 8
  %91 = load %class.TriaIterator*, %class.TriaIterator** %6, align 8
  %92 = load %"class.std::vector.58"*, %"class.std::vector.58"** %12, align 8
  %93 = load i32, i32* @x.105
  %94 = load i32, i32* @y.106
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void %90(%class.MappingQ* %13, %class.TriaIterator* dereferenceable(16) %91, %"class.std::vector.58"* dereferenceable(24) %92)
          to label %101 unwind label %109

; <label>:101:                                    ; preds = %originalBBpart28
  %102 = bitcast %class.MappingQ* %13 to %class.MappingQ1*
  %103 = load %class.TriaIterator*, %class.TriaIterator** %6, align 8
  %104 = load %class.Point*, %class.Point** %7, align 8
  %105 = call dereferenceable(608) %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEdeEv(%"class.std::auto_ptr"* %9) #2
  %106 = bitcast %"class.MappingQ<3>::InternalData"* %105 to %"class.MappingQ1<3>::InternalData"*
  invoke void @_ZNK9MappingQ1ILi3EE36transform_real_to_unit_cell_internalERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EERNS0_12InternalDataERS8_(%class.MappingQ1* %102, %class.TriaIterator* dereferenceable(16) %103, %class.Point* dereferenceable(24) %104, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %106, %class.Point* dereferenceable(24) %0)
          to label %107 unwind label %109

; <label>:107:                                    ; preds = %101
  invoke void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEED2Ev(%"class.std::auto_ptr"* %9)
          to label %108 unwind label %51

; <label>:108:                                    ; preds = %107
  call void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature* %8)
  br label %148

; <label>:109:                                    ; preds = %101, %originalBBpart28
  %110 = load i32, i32* @x.105
  %111 = load i32, i32* @y.106
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %109, %originalBB10alteredBB
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %10, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %11, align 4
  %121 = load i32, i32* @x.105
  %122 = load i32, i32* @y.106
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEED2Ev(%"class.std::auto_ptr"* %9)
          to label %129 unwind label %170

; <label>:129:                                    ; preds = %originalBBpart212
  %130 = load i32, i32* @x.105
  %131 = load i32, i32* @y.106
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %129, %originalBB14alteredBB
  %138 = load i32, i32* @x.105
  %139 = load i32, i32* @y.106
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %146

; <label>:146:                                    ; preds = %originalBBpart216, %51
  invoke void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature* %8)
          to label %147 unwind label %170

; <label>:147:                                    ; preds = %146
  br label %149

; <label>:148:                                    ; preds = %108, %4
  ret void

; <label>:149:                                    ; preds = %147
  %150 = load i32, i32* @x.105
  %151 = load i32, i32* @y.106
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %149, %originalBB18alteredBB
  %158 = load i8*, i8** %10, align 8
  %159 = load i32, i32* %11, align 4
  %160 = insertvalue { i8*, i32 } undef, i8* %158, 0
  %161 = insertvalue { i8*, i32 } %160, i32 %159, 1
  %162 = load i32, i32* @x.105
  %163 = load i32, i32* @y.106
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  resume { i8*, i32 } %161

; <label>:170:                                    ; preds = %146, %originalBBpart212
  %171 = load i32, i32* @x.105
  %172 = load i32, i32* @y.106
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %170, %originalBB22alteredBB
  %179 = landingpad { i8*, i32 }
          catch i8* null
  %180 = extractvalue { i8*, i32 } %179, 0
  call void @__clang_call_terminate(i8* %180) #12
  %181 = load i32, i32* @x.105
  %182 = load i32, i32* @y.106
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %31
  %189 = bitcast %"class.Mapping<3>::InternalDataBase"* %28 to i8*
  %190 = call i8* @__dynamic_cast(i8* %189, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %191 = bitcast i8* %190 to %"class.MappingQ<3>::InternalData"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  call void @_ZNSt8auto_ptrIN8MappingQILi3EE12InternalDataEEC2EPS2_(%"class.std::auto_ptr"* %9, %"class.MappingQ<3>::InternalData"* %73) #2
  %192 = call %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv(%"class.std::auto_ptr"* %9) #2
  %193 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %192, i32 0, i32 2
  store i8 0, i8* %193, align 8
  %194 = call %"class.MappingQ<3>::InternalData"* @_ZNKSt8auto_ptrIN8MappingQILi3EE12InternalDataEEptEv(%"class.std::auto_ptr"* %9) #2
  %195 = bitcast %"class.MappingQ<3>::InternalData"* %194 to %"class.MappingQ1<3>::InternalData"*
  %196 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %195, i32 0, i32 7
  store %"class.std::vector.58"* %196, %"class.std::vector.58"** %12, align 8
  %197 = bitcast %class.MappingQ* %13 to void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)***
  %198 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)**, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*** %197, align 8
  %199 = getelementptr inbounds void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %198, i64 17
  %200 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %199, align 8
  %201 = load %class.TriaIterator*, %class.TriaIterator** %6, align 8
  %202 = load %"class.std::vector.58"*, %"class.std::vector.58"** %12, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %109
  %203 = landingpad { i8*, i32 }
          cleanup
  %204 = extractvalue { i8*, i32 } %203, 0
  store i8* %204, i8** %10, align 8
  %205 = extractvalue { i8*, i32 } %203, 1
  store i32 %205, i32* %11, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %129
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %149
  %206 = load i8*, i8** %10, align 8
  %207 = load i32, i32* %11, align 4
  %208 = insertvalue { i8*, i32 } undef, i8* %206, 0
  %209 = insertvalue { i8*, i32 } %208, i32 %207, 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %170
  %210 = landingpad { i8*, i32 }
          catch i8* null
  %211 = extractvalue { i8*, i32 } %210, 0
  call void @__clang_call_terminate(i8* %211) #12
  br label %originalBB22
}

declare void @_ZNK9MappingQ1ILi3EE27transform_real_to_unit_cellERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EE(%class.Point* sret, %class.MappingQ1*, %class.TriaIterator* dereferenceable(16), %class.Point* dereferenceable(24)) unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Zor11UpdateFlagsS_(i32, i32) #1 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = or i32 %5, %6
  ret i32 %7
}

declare void @_ZNK9MappingQ1ILi3EE36transform_real_to_unit_cell_internalERK12TriaIteratorILi3E12CellAccessorILi3EEERK5PointILi3EERNS0_12InternalDataERS8_(%class.MappingQ1*, %class.TriaIterator* dereferenceable(16), %class.Point* dereferenceable(24), %"class.MappingQ1<3>::InternalData"* dereferenceable(288), %class.Point* dereferenceable(24)) #3

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE19transform_covariantEP6TensorILi1ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE(%class.MappingQ*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.MappingQ*, align 8
  %7 = alloca %class.Tensor*, align 8
  %8 = alloca %class.Tensor*, align 8
  %9 = alloca %class.Tensor*, align 8
  %10 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %11 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %14 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  store %class.MappingQ* %0, %class.MappingQ** %6, align 8
  store %class.Tensor* %1, %class.Tensor** %7, align 8
  store %class.Tensor* %2, %class.Tensor** %8, align 8
  store %class.Tensor* %3, %class.Tensor** %9, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %10, align 8
  %18 = load %class.MappingQ*, %class.MappingQ** %6, align 8
  %19 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %10, align 8
  %20 = icmp eq %"class.Mapping<3>::InternalDataBase"* %19, null
  br i1 %20, label %25, label %21

; <label>:21:                                     ; preds = %5
  %22 = bitcast %"class.Mapping<3>::InternalDataBase"* %19 to i8*
  %23 = call i8* @__dynamic_cast(i8* %22, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i64 0) #2
  %24 = bitcast i8* %23 to %"class.MappingQ1<3>::InternalData"*
  br label %26

; <label>:25:                                     ; preds = %5
  br label %26

; <label>:26:                                     ; preds = %25, %21
  %27 = phi %"class.MappingQ1<3>::InternalData"* [ %24, %21 ], [ null, %25 ]
  store %"class.MappingQ1<3>::InternalData"* %27, %"class.MappingQ1<3>::InternalData"** %11, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator.134"* %12)
  %28 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %29 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %28, i32 0, i32 9
  %30 = load i8, i8* %29, align 8
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %55

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* @x.109
  %34 = load i32, i32* @y.110
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %42 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %41, i32 0, i32 3
  %43 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %42)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %13, i32 0, i32 0
  store %class.Tensor.113* %43, %class.Tensor.113** %44, align 8
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 8, i1 false)
  %47 = load i32, i32* @x.109
  %48 = load i32, i32* @y.110
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %134

; <label>:55:                                     ; preds = %26
  %56 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %57 = icmp eq %"class.MappingQ1<3>::InternalData"* %56, null
  br i1 %57, label %78, label %58

; <label>:58:                                     ; preds = %55
  %59 = load i32, i32* @x.109
  %60 = load i32, i32* @y.110
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %58, %originalBB1alteredBB
  %67 = bitcast %"class.MappingQ1<3>::InternalData"* %56 to i8*
  %68 = call i8* @__dynamic_cast(i8* %67, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %69 = bitcast i8* %68 to %"class.MappingQ<3>::InternalData"*
  %70 = load i32, i32* @x.109
  %71 = load i32, i32* @y.110
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %79

; <label>:78:                                     ; preds = %55
  br label %79

; <label>:79:                                     ; preds = %78, %originalBBpart24
  %80 = phi %"class.MappingQ<3>::InternalData"* [ %69, %originalBBpart24 ], [ null, %78 ]
  store %"class.MappingQ<3>::InternalData"* %80, %"class.MappingQ<3>::InternalData"** %14, align 8
  %81 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %82 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %81, i32 0, i32 2
  %83 = load i8, i8* %82, align 8
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %109

; <label>:85:                                     ; preds = %79
  %86 = load i32, i32* @x.109
  %87 = load i32, i32* @y.110
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %85, %originalBB6alteredBB
  %94 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %95 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %94, i32 0, i32 3
  %96 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %95, i32 0, i32 3
  %97 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %96)
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %15, i32 0, i32 0
  store %class.Tensor.113* %97, %class.Tensor.113** %98, align 8
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = load i32, i32* @x.109
  %102 = load i32, i32* @y.110
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %133

; <label>:109:                                    ; preds = %79
  %110 = load i32, i32* @x.109
  %111 = load i32, i32* @y.110
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %109, %originalBB10alteredBB
  %118 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %119 = bitcast %"class.MappingQ<3>::InternalData"* %118 to %"class.MappingQ1<3>::InternalData"*
  %120 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %119, i32 0, i32 3
  %121 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %120)
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %16, i32 0, i32 0
  store %class.Tensor.113* %121, %class.Tensor.113** %122, align 8
  %123 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %124 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 8, i32 8, i1 false)
  %125 = load i32, i32* @x.109
  %126 = load i32, i32* @y.110
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %133

; <label>:133:                                    ; preds = %originalBBpart212, %originalBBpart28
  br label %134

; <label>:134:                                    ; preds = %133, %originalBBpart2
  br label %135

; <label>:135:                                    ; preds = %139, %134
  %136 = load %class.Tensor*, %class.Tensor** %7, align 8
  %137 = load %class.Tensor*, %class.Tensor** %8, align 8
  %138 = icmp ne %class.Tensor* %136, %137
  br i1 %138, label %139, label %147

; <label>:139:                                    ; preds = %135
  %140 = load %class.Tensor*, %class.Tensor** %7, align 8
  %141 = getelementptr inbounds %class.Tensor, %class.Tensor* %140, i32 1
  store %class.Tensor* %141, %class.Tensor** %7, align 8
  %142 = load %class.Tensor*, %class.Tensor** %9, align 8
  %143 = getelementptr inbounds %class.Tensor, %class.Tensor* %142, i32 1
  store %class.Tensor* %143, %class.Tensor** %9, align 8
  %144 = call %class.Tensor.113* @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator.134"* %12, i32 0)
  %145 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %17, i32 0, i32 0
  store %class.Tensor.113* %144, %class.Tensor.113** %145, align 8
  %146 = call dereferenceable(72) %class.Tensor.113* @_ZNK9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.134"* %17)
  call void @_Z8contractILi3EEvR6TensorILi1EXT_EERKS1_RKS0_ILi2EXT_EE(%class.Tensor* dereferenceable(24) %140, %class.Tensor* dereferenceable(24) %142, %class.Tensor.113* dereferenceable(72) %146)
  br label %135

; <label>:147:                                    ; preds = %135
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %32
  %148 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %149 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %148, i32 0, i32 3
  %150 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %149)
  %151 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %13, i32 0, i32 0
  store %class.Tensor.113* %150, %class.Tensor.113** %151, align 8
  %152 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %153 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %152, i8* %153, i64 8, i32 8, i1 false)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %58
  %154 = bitcast %"class.MappingQ1<3>::InternalData"* %56 to i8*
  %155 = call i8* @__dynamic_cast(i8* %154, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %156 = bitcast i8* %155 to %"class.MappingQ<3>::InternalData"*
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %85
  %157 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %158 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %157, i32 0, i32 3
  %159 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %158, i32 0, i32 3
  %160 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %159)
  %161 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %15, i32 0, i32 0
  store %class.Tensor.113* %160, %class.Tensor.113** %161, align 8
  %162 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %163 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 8, i32 8, i1 false)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %109
  %164 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %165 = bitcast %"class.MappingQ<3>::InternalData"* %164 to %"class.MappingQ1<3>::InternalData"*
  %166 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %165, i32 0, i32 3
  %167 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %166)
  %168 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %16, i32 0, i32 0
  store %class.Tensor.113* %167, %class.Tensor.113** %168, align 8
  %169 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %170 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 8, i32 8, i1 false)
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator.134"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.134"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.134"* %0, %"class.__gnu_cxx::__normal_iterator.134"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.134"*, %"class.__gnu_cxx::__normal_iterator.134"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %3, i32 0, i32 0
  store %class.Tensor.113* null, %class.Tensor.113** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.113
  %3 = load i32, i32* @y.114
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %11 = alloca %"class.std::vector.108"*, align 8
  %12 = alloca %class.Tensor.113*, align 8
  store %"class.std::vector.108"* %0, %"class.std::vector.108"** %11, align 8
  %13 = load %"class.std::vector.108"*, %"class.std::vector.108"** %11, align 8
  %14 = bitcast %"class.std::vector.108"* %13 to %"struct.std::_Vector_base.109"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.Tensor.113*, %class.Tensor.113** %17, align 8
  store %class.Tensor.113* %18, %class.Tensor.113** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.134"* %10, %class.Tensor.113** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %10, i32 0, i32 0
  %20 = load %class.Tensor.113*, %class.Tensor.113** %19, align 8
  %21 = load i32, i32* @x.113
  %22 = load i32, i32* @y.114
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.113* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %30 = alloca %"class.std::vector.108"*, align 8
  %31 = alloca %class.Tensor.113*, align 8
  store %"class.std::vector.108"* %0, %"class.std::vector.108"** %30, align 8
  %32 = load %"class.std::vector.108"*, %"class.std::vector.108"** %30, align 8
  %33 = bitcast %"class.std::vector.108"* %32 to %"struct.std::_Vector_base.109"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %34 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %35, i32 0, i32 0
  %37 = load %class.Tensor.113*, %class.Tensor.113** %36, align 8
  store %class.Tensor.113* %37, %class.Tensor.113** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.134"* %29, %class.Tensor.113** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %29, i32 0, i32 0
  %39 = load %class.Tensor.113*, %class.Tensor.113** %38, align 8
  br label %originalBB
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z8contractILi3EEvR6TensorILi1EXT_EERKS1_RKS0_ILi2EXT_EE(%class.Tensor* dereferenceable(24), %class.Tensor* dereferenceable(24), %class.Tensor.113* dereferenceable(72)) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor.113*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %class.Tensor.113* %2, %class.Tensor.113** %6, align 8
  %9 = load %class.Tensor*, %class.Tensor** %4, align 8
  call void @_ZN6TensorILi1ELi3EE5clearEv(%class.Tensor* %9)
  store i32 0, i32* %7, align 4
  br label %10

; <label>:10:                                     ; preds = %36, %3
  %11 = load i32, i32* %7, align 4
  %12 = icmp ult i32 %11, 3
  br i1 %12, label %13, label %39

; <label>:13:                                     ; preds = %10
  store i32 0, i32* %8, align 4
  br label %14

; <label>:14:                                     ; preds = %32, %13
  %15 = load i32, i32* %8, align 4
  %16 = icmp ult i32 %15, 3
  br i1 %16, label %17, label %35

; <label>:17:                                     ; preds = %14
  %18 = load %class.Tensor*, %class.Tensor** %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %18, i32 %19)
  %21 = load %class.Tensor.113*, %class.Tensor.113** %6, align 8
  %22 = load i32, i32* %8, align 4
  %23 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.113* %21, i32 %22)
  %24 = load i32, i32* %7, align 4
  %25 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %23, i32 %24)
  %26 = fmul double %20, %25
  %27 = load %class.Tensor*, %class.Tensor** %4, align 8
  %28 = load i32, i32* %7, align 4
  %29 = call dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor* %27, i32 %28)
  %30 = load double, double* %29, align 8
  %31 = fadd double %30, %26
  store double %31, double* %29, align 8
  br label %32

; <label>:32:                                     ; preds = %17
  %33 = load i32, i32* %8, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %8, align 4
  br label %14

; <label>:35:                                     ; preds = %14
  br label %36

; <label>:36:                                     ; preds = %35
  %37 = load i32, i32* %7, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %7, align 4
  br label %10

; <label>:39:                                     ; preds = %10
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor.113* @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator.134"*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.117
  %4 = load i32, i32* @y.118
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.134"*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %class.Tensor.113*, align 8
  store %"class.__gnu_cxx::__normal_iterator.134"* %0, %"class.__gnu_cxx::__normal_iterator.134"** %12, align 8
  store i32 %1, i32* %13, align 4
  %15 = load %"class.__gnu_cxx::__normal_iterator.134"*, %"class.__gnu_cxx::__normal_iterator.134"** %12, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %15, i32 0, i32 0
  %17 = load %class.Tensor.113*, %class.Tensor.113** %16, align 8
  %18 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %17, i32 1
  store %class.Tensor.113* %18, %class.Tensor.113** %16, align 8
  store %class.Tensor.113* %17, %class.Tensor.113** %14, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.134"* %11, %class.Tensor.113** dereferenceable(8) %14)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %11, i32 0, i32 0
  %20 = load %class.Tensor.113*, %class.Tensor.113** %19, align 8
  %21 = load i32, i32* @x.117
  %22 = load i32, i32* @y.118
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor.113* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.134"*, align 8
  %31 = alloca i32, align 4
  %32 = alloca %class.Tensor.113*, align 8
  store %"class.__gnu_cxx::__normal_iterator.134"* %0, %"class.__gnu_cxx::__normal_iterator.134"** %30, align 8
  store i32 %1, i32* %31, align 4
  %33 = load %"class.__gnu_cxx::__normal_iterator.134"*, %"class.__gnu_cxx::__normal_iterator.134"** %30, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %33, i32 0, i32 0
  %35 = load %class.Tensor.113*, %class.Tensor.113** %34, align 8
  %36 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %35, i32 1
  store %class.Tensor.113* %36, %class.Tensor.113** %34, align 8
  store %class.Tensor.113* %35, %class.Tensor.113** %32, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.134"* %29, %class.Tensor.113** dereferenceable(8) %32)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %29, i32 0, i32 0
  %38 = load %class.Tensor.113*, %class.Tensor.113** %37, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %class.Tensor.113* @_ZNK9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.134"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.134"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.134"* %0, %"class.__gnu_cxx::__normal_iterator.134"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.134"*, %"class.__gnu_cxx::__normal_iterator.134"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %3, i32 0, i32 0
  %5 = load %class.Tensor.113*, %class.Tensor.113** %4, align 8
  ret %class.Tensor.113* %5
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE19transform_covariantEP6TensorILi2ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE(%class.MappingQ*, %class.Tensor.113*, %class.Tensor.113*, %class.Tensor.113*, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.MappingQ*, align 8
  %7 = alloca %class.Tensor.113*, align 8
  %8 = alloca %class.Tensor.113*, align 8
  %9 = alloca %class.Tensor.113*, align 8
  %10 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %11 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %14 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  store %class.MappingQ* %0, %class.MappingQ** %6, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %7, align 8
  store %class.Tensor.113* %2, %class.Tensor.113** %8, align 8
  store %class.Tensor.113* %3, %class.Tensor.113** %9, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %10, align 8
  %18 = load %class.MappingQ*, %class.MappingQ** %6, align 8
  %19 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %10, align 8
  %20 = icmp eq %"class.Mapping<3>::InternalDataBase"* %19, null
  br i1 %20, label %25, label %21

; <label>:21:                                     ; preds = %5
  %22 = bitcast %"class.Mapping<3>::InternalDataBase"* %19 to i8*
  %23 = call i8* @__dynamic_cast(i8* %22, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i64 0) #2
  %24 = bitcast i8* %23 to %"class.MappingQ1<3>::InternalData"*
  br label %42

; <label>:25:                                     ; preds = %5
  %26 = load i32, i32* @x.121
  %27 = load i32, i32* @y.122
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = load i32, i32* @x.121
  %35 = load i32, i32* @y.122
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %originalBBpart2, %21
  %43 = phi %"class.MappingQ1<3>::InternalData"* [ %24, %21 ], [ null, %originalBBpart2 ]
  %44 = load i32, i32* @x.121
  %45 = load i32, i32* @y.122
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  store %"class.MappingQ1<3>::InternalData"* %43, %"class.MappingQ1<3>::InternalData"** %11, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator.134"* %12)
  %52 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %53 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %52, i32 0, i32 9
  %54 = load i8, i8* %53, align 8
  %55 = trunc i8 %54 to i1
  %56 = load i32, i32* @x.121
  %57 = load i32, i32* @y.122
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %55, label %64, label %71

; <label>:64:                                     ; preds = %originalBBpart24
  %65 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %66 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %65, i32 0, i32 3
  %67 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %66)
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %13, i32 0, i32 0
  store %class.Tensor.113* %67, %class.Tensor.113** %68, align 8
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false)
  br label %166

; <label>:71:                                     ; preds = %originalBBpart24
  %72 = load i32, i32* @x.121
  %73 = load i32, i32* @y.122
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %71, %originalBB6alteredBB
  %80 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %81 = icmp eq %"class.MappingQ1<3>::InternalData"* %80, null
  %82 = load i32, i32* @x.121
  %83 = load i32, i32* @y.122
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %81, label %110, label %90

; <label>:90:                                     ; preds = %originalBBpart28
  %91 = load i32, i32* @x.121
  %92 = load i32, i32* @y.122
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %90, %originalBB10alteredBB
  %99 = bitcast %"class.MappingQ1<3>::InternalData"* %80 to i8*
  %100 = call i8* @__dynamic_cast(i8* %99, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %101 = bitcast i8* %100 to %"class.MappingQ<3>::InternalData"*
  %102 = load i32, i32* @x.121
  %103 = load i32, i32* @y.122
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %111

; <label>:110:                                    ; preds = %originalBBpart28
  br label %111

; <label>:111:                                    ; preds = %110, %originalBBpart212
  %112 = phi %"class.MappingQ<3>::InternalData"* [ %101, %originalBBpart212 ], [ null, %110 ]
  %113 = load i32, i32* @x.121
  %114 = load i32, i32* @y.122
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %111, %originalBB14alteredBB
  store %"class.MappingQ<3>::InternalData"* %112, %"class.MappingQ<3>::InternalData"** %14, align 8
  %121 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %122 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %121, i32 0, i32 2
  %123 = load i8, i8* %122, align 8
  %124 = trunc i8 %123 to i1
  %125 = load i32, i32* @x.121
  %126 = load i32, i32* @y.122
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %124, label %133, label %157

; <label>:133:                                    ; preds = %originalBBpart216
  %134 = load i32, i32* @x.121
  %135 = load i32, i32* @y.122
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %133, %originalBB18alteredBB
  %142 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %143 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %142, i32 0, i32 3
  %144 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %143, i32 0, i32 3
  %145 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %144)
  %146 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %15, i32 0, i32 0
  store %class.Tensor.113* %145, %class.Tensor.113** %146, align 8
  %147 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %148 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %147, i8* %148, i64 8, i32 8, i1 false)
  %149 = load i32, i32* @x.121
  %150 = load i32, i32* @y.122
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %165

; <label>:157:                                    ; preds = %originalBBpart216
  %158 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %159 = bitcast %"class.MappingQ<3>::InternalData"* %158 to %"class.MappingQ1<3>::InternalData"*
  %160 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %159, i32 0, i32 3
  %161 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %160)
  %162 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %16, i32 0, i32 0
  store %class.Tensor.113* %161, %class.Tensor.113** %162, align 8
  %163 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %164 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %164, i64 8, i32 8, i1 false)
  br label %165

; <label>:165:                                    ; preds = %157, %originalBBpart220
  br label %166

; <label>:166:                                    ; preds = %165, %64
  %167 = load i32, i32* @x.121
  %168 = load i32, i32* @y.122
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %166, %originalBB22alteredBB
  %175 = load i32, i32* @x.121
  %176 = load i32, i32* @y.122
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %183

; <label>:183:                                    ; preds = %203, %originalBBpart224
  %184 = load i32, i32* @x.121
  %185 = load i32, i32* @y.122
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %183, %originalBB26alteredBB
  %192 = load %class.Tensor.113*, %class.Tensor.113** %7, align 8
  %193 = load %class.Tensor.113*, %class.Tensor.113** %8, align 8
  %194 = icmp ne %class.Tensor.113* %192, %193
  %195 = load i32, i32* @x.121
  %196 = load i32, i32* @y.122
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %194, label %203, label %211

; <label>:203:                                    ; preds = %originalBBpart228
  %204 = load %class.Tensor.113*, %class.Tensor.113** %7, align 8
  %205 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %204, i32 1
  store %class.Tensor.113* %205, %class.Tensor.113** %7, align 8
  %206 = load %class.Tensor.113*, %class.Tensor.113** %9, align 8
  %207 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %206, i32 1
  store %class.Tensor.113* %207, %class.Tensor.113** %9, align 8
  %208 = call %class.Tensor.113* @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator.134"* %12, i32 0)
  %209 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %17, i32 0, i32 0
  store %class.Tensor.113* %208, %class.Tensor.113** %209, align 8
  %210 = call dereferenceable(72) %class.Tensor.113* @_ZNK9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.134"* %17)
  call void @_Z8contractILi3EEvR6TensorILi2EXT_EERKS1_S4_(%class.Tensor.113* dereferenceable(72) %204, %class.Tensor.113* dereferenceable(72) %206, %class.Tensor.113* dereferenceable(72) %210)
  br label %183

; <label>:211:                                    ; preds = %originalBBpart228
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %25
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  store %"class.MappingQ1<3>::InternalData"* %43, %"class.MappingQ1<3>::InternalData"** %11, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator.134"* %12)
  %212 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %213 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %212, i32 0, i32 9
  %214 = load i8, i8* %213, align 8
  %215 = trunc i8 %214 to i1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %216 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %217 = icmp eq %"class.MappingQ1<3>::InternalData"* %216, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  %218 = bitcast %"class.MappingQ1<3>::InternalData"* %80 to i8*
  %219 = call i8* @__dynamic_cast(i8* %218, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %220 = bitcast i8* %219 to %"class.MappingQ<3>::InternalData"*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %111
  store %"class.MappingQ<3>::InternalData"* %112, %"class.MappingQ<3>::InternalData"** %14, align 8
  %221 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %222 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %221, i32 0, i32 2
  %223 = load i8, i8* %222, align 8
  %224 = trunc i8 %223 to i1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %133
  %225 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %226 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %225, i32 0, i32 3
  %227 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %226, i32 0, i32 3
  %228 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %227)
  %229 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %15, i32 0, i32 0
  store %class.Tensor.113* %228, %class.Tensor.113** %229, align 8
  %230 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %231 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %230, i8* %231, i64 8, i32 8, i1 false)
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %166
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %183
  %232 = load %class.Tensor.113*, %class.Tensor.113** %7, align 8
  %233 = load %class.Tensor.113*, %class.Tensor.113** %8, align 8
  %234 = icmp ne %class.Tensor.113* %232, %233
  br label %originalBB26
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z8contractILi3EEvR6TensorILi2EXT_EERKS1_S4_(%class.Tensor.113* dereferenceable(72), %class.Tensor.113* dereferenceable(72), %class.Tensor.113* dereferenceable(72)) #0 comdat {
  %4 = alloca %class.Tensor.113*, align 8
  %5 = alloca %class.Tensor.113*, align 8
  %6 = alloca %class.Tensor.113*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %class.Tensor.113* %0, %class.Tensor.113** %4, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %5, align 8
  store %class.Tensor.113* %2, %class.Tensor.113** %6, align 8
  %10 = load %class.Tensor.113*, %class.Tensor.113** %4, align 8
  call void @_ZN6TensorILi2ELi3EE5clearEv(%class.Tensor.113* %10)
  store i32 0, i32* %7, align 4
  br label %11

; <label>:11:                                     ; preds = %81, %3
  %12 = load i32, i32* @x.123
  %13 = load i32, i32* @y.124
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* %7, align 4
  %21 = icmp ult i32 %20, 3
  %22 = load i32, i32* @x.123
  %23 = load i32, i32* @y.124
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %84

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = load i32, i32* @x.123
  %32 = load i32, i32* @y.124
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  store i32 0, i32* %8, align 4
  %39 = load i32, i32* @x.123
  %40 = load i32, i32* @y.124
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %47

; <label>:47:                                     ; preds = %77, %originalBBpart24
  %48 = load i32, i32* %8, align 4
  %49 = icmp ult i32 %48, 3
  br i1 %49, label %50, label %80

; <label>:50:                                     ; preds = %47
  store i32 0, i32* %9, align 4
  br label %51

; <label>:51:                                     ; preds = %73, %50
  %52 = load i32, i32* %9, align 4
  %53 = icmp ult i32 %52, 3
  br i1 %53, label %54, label %76

; <label>:54:                                     ; preds = %51
  %55 = load %class.Tensor.113*, %class.Tensor.113** %5, align 8
  %56 = load i32, i32* %7, align 4
  %57 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.113* %55, i32 %56)
  %58 = load i32, i32* %9, align 4
  %59 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %57, i32 %58)
  %60 = load %class.Tensor.113*, %class.Tensor.113** %6, align 8
  %61 = load i32, i32* %9, align 4
  %62 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.113* %60, i32 %61)
  %63 = load i32, i32* %8, align 4
  %64 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %62, i32 %63)
  %65 = fmul double %59, %64
  %66 = load %class.Tensor.113*, %class.Tensor.113** %4, align 8
  %67 = load i32, i32* %7, align 4
  %68 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.113* %66, i32 %67)
  %69 = load i32, i32* %8, align 4
  %70 = call dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor* %68, i32 %69)
  %71 = load double, double* %70, align 8
  %72 = fadd double %71, %65
  store double %72, double* %70, align 8
  br label %73

; <label>:73:                                     ; preds = %54
  %74 = load i32, i32* %9, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %9, align 4
  br label %51

; <label>:76:                                     ; preds = %51
  br label %77

; <label>:77:                                     ; preds = %76
  %78 = load i32, i32* %8, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %8, align 4
  br label %47

; <label>:80:                                     ; preds = %47
  br label %81

; <label>:81:                                     ; preds = %80
  %82 = load i32, i32* %7, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %7, align 4
  br label %11

; <label>:84:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %85 = load i32, i32* %7, align 4
  %86 = icmp ult i32 %85, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  store i32 0, i32* %8, align 4
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE23transform_contravariantEP6TensorILi1ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE(%class.MappingQ*, %class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* @x.125
  %7 = load i32, i32* @y.126
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.MappingQ*, align 8
  %15 = alloca %class.Tensor*, align 8
  %16 = alloca %class.Tensor*, align 8
  %17 = alloca %class.Tensor*, align 8
  %18 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %19 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %22 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  store %class.MappingQ* %0, %class.MappingQ** %14, align 8
  store %class.Tensor* %1, %class.Tensor** %15, align 8
  store %class.Tensor* %2, %class.Tensor** %16, align 8
  store %class.Tensor* %3, %class.Tensor** %17, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %18, align 8
  %26 = load %class.MappingQ*, %class.MappingQ** %14, align 8
  %27 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %18, align 8
  %28 = icmp eq %"class.Mapping<3>::InternalDataBase"* %27, null
  %29 = load i32, i32* @x.125
  %30 = load i32, i32* @y.126
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %41, label %37

; <label>:37:                                     ; preds = %originalBBpart2
  %38 = bitcast %"class.Mapping<3>::InternalDataBase"* %27 to i8*
  %39 = call i8* @__dynamic_cast(i8* %38, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i64 0) #2
  %40 = bitcast i8* %39 to %"class.MappingQ1<3>::InternalData"*
  br label %42

; <label>:41:                                     ; preds = %originalBBpart2
  br label %42

; <label>:42:                                     ; preds = %41, %37
  %43 = phi %"class.MappingQ1<3>::InternalData"* [ %40, %37 ], [ null, %41 ]
  store %"class.MappingQ1<3>::InternalData"* %43, %"class.MappingQ1<3>::InternalData"** %19, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator.134"* %20)
  %44 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %19, align 8
  %45 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %44, i32 0, i32 9
  %46 = load i8, i8* %45, align 8
  %47 = trunc i8 %46 to i1
  br i1 %47, label %48, label %55

; <label>:48:                                     ; preds = %42
  %49 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %19, align 8
  %50 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %49, i32 0, i32 4
  %51 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %50)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %21, i32 0, i32 0
  store %class.Tensor.113* %51, %class.Tensor.113** %52, align 8
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %20 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  br label %134

; <label>:55:                                     ; preds = %42
  %56 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %19, align 8
  %57 = icmp eq %"class.MappingQ1<3>::InternalData"* %56, null
  br i1 %57, label %62, label %58

; <label>:58:                                     ; preds = %55
  %59 = bitcast %"class.MappingQ1<3>::InternalData"* %56 to i8*
  %60 = call i8* @__dynamic_cast(i8* %59, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %61 = bitcast i8* %60 to %"class.MappingQ<3>::InternalData"*
  br label %79

; <label>:62:                                     ; preds = %55
  %63 = load i32, i32* @x.125
  %64 = load i32, i32* @y.126
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %62, %originalBB1alteredBB
  %71 = load i32, i32* @x.125
  %72 = load i32, i32* @y.126
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %79

; <label>:79:                                     ; preds = %originalBBpart24, %58
  %80 = phi %"class.MappingQ<3>::InternalData"* [ %61, %58 ], [ null, %originalBBpart24 ]
  store %"class.MappingQ<3>::InternalData"* %80, %"class.MappingQ<3>::InternalData"** %22, align 8
  %81 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %22, align 8
  %82 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %81, i32 0, i32 2
  %83 = load i8, i8* %82, align 8
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %93

; <label>:85:                                     ; preds = %79
  %86 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %22, align 8
  %87 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %86, i32 0, i32 3
  %88 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %87, i32 0, i32 4
  %89 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %88)
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %23, i32 0, i32 0
  store %class.Tensor.113* %89, %class.Tensor.113** %90, align 8
  %91 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %20 to i8*
  %92 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 8, i1 false)
  br label %117

; <label>:93:                                     ; preds = %79
  %94 = load i32, i32* @x.125
  %95 = load i32, i32* @y.126
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %93, %originalBB6alteredBB
  %102 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %22, align 8
  %103 = bitcast %"class.MappingQ<3>::InternalData"* %102 to %"class.MappingQ1<3>::InternalData"*
  %104 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %103, i32 0, i32 4
  %105 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %104)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %24, i32 0, i32 0
  store %class.Tensor.113* %105, %class.Tensor.113** %106, align 8
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %20 to i8*
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 8, i1 false)
  %109 = load i32, i32* @x.125
  %110 = load i32, i32* @y.126
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %117

; <label>:117:                                    ; preds = %originalBBpart28, %85
  %118 = load i32, i32* @x.125
  %119 = load i32, i32* @y.126
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %117, %originalBB10alteredBB
  %126 = load i32, i32* @x.125
  %127 = load i32, i32* @y.126
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %134

; <label>:134:                                    ; preds = %originalBBpart212, %48
  %135 = load i32, i32* @x.125
  %136 = load i32, i32* @y.126
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %134, %originalBB14alteredBB
  %143 = load i32, i32* @x.125
  %144 = load i32, i32* @y.126
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %151

; <label>:151:                                    ; preds = %155, %originalBBpart216
  %152 = load %class.Tensor*, %class.Tensor** %15, align 8
  %153 = load %class.Tensor*, %class.Tensor** %16, align 8
  %154 = icmp ne %class.Tensor* %152, %153
  br i1 %154, label %155, label %163

; <label>:155:                                    ; preds = %151
  %156 = load %class.Tensor*, %class.Tensor** %15, align 8
  %157 = getelementptr inbounds %class.Tensor, %class.Tensor* %156, i32 1
  store %class.Tensor* %157, %class.Tensor** %15, align 8
  %158 = call %class.Tensor.113* @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator.134"* %20, i32 0)
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %25, i32 0, i32 0
  store %class.Tensor.113* %158, %class.Tensor.113** %159, align 8
  %160 = call dereferenceable(72) %class.Tensor.113* @_ZNK9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.134"* %25)
  %161 = load %class.Tensor*, %class.Tensor** %17, align 8
  %162 = getelementptr inbounds %class.Tensor, %class.Tensor* %161, i32 1
  store %class.Tensor* %162, %class.Tensor** %17, align 8
  call void @_Z8contractILi3EEvR6TensorILi1EXT_EERKS0_ILi2EXT_EERKS1_(%class.Tensor* dereferenceable(24) %156, %class.Tensor.113* dereferenceable(72) %160, %class.Tensor* dereferenceable(24) %161)
  br label %151

; <label>:163:                                    ; preds = %151
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %164 = alloca %class.MappingQ*, align 8
  %165 = alloca %class.Tensor*, align 8
  %166 = alloca %class.Tensor*, align 8
  %167 = alloca %class.Tensor*, align 8
  %168 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %169 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %170 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %171 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %172 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %173 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %174 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %175 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  store %class.MappingQ* %0, %class.MappingQ** %164, align 8
  store %class.Tensor* %1, %class.Tensor** %165, align 8
  store %class.Tensor* %2, %class.Tensor** %166, align 8
  store %class.Tensor* %3, %class.Tensor** %167, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %168, align 8
  %176 = load %class.MappingQ*, %class.MappingQ** %164, align 8
  %177 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %168, align 8
  %178 = icmp eq %"class.Mapping<3>::InternalDataBase"* %177, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %62
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %93
  %179 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %22, align 8
  %180 = bitcast %"class.MappingQ<3>::InternalData"* %179 to %"class.MappingQ1<3>::InternalData"*
  %181 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %180, i32 0, i32 4
  %182 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %181)
  %183 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %24, i32 0, i32 0
  store %class.Tensor.113* %182, %class.Tensor.113** %183, align 8
  %184 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %20 to i8*
  %185 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %184, i8* %185, i64 8, i32 8, i1 false)
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %117
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %134
  br label %originalBB14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_Z8contractILi3EEvR6TensorILi1EXT_EERKS0_ILi2EXT_EERKS1_(%class.Tensor* dereferenceable(24), %class.Tensor.113* dereferenceable(72), %class.Tensor* dereferenceable(24)) #1 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor.113*, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %9 = load %class.Tensor*, %class.Tensor** %4, align 8
  call void @_ZN6TensorILi1ELi3EE5clearEv(%class.Tensor* %9)
  store i32 0, i32* %7, align 4
  br label %10

; <label>:10:                                     ; preds = %52, %3
  %11 = load i32, i32* %7, align 4
  %12 = icmp ult i32 %11, 3
  br i1 %12, label %13, label %55

; <label>:13:                                     ; preds = %10
  store i32 0, i32* %8, align 4
  br label %14

; <label>:14:                                     ; preds = %originalBBpart2, %13
  %15 = load i32, i32* %8, align 4
  %16 = icmp ult i32 %15, 3
  br i1 %16, label %17, label %51

; <label>:17:                                     ; preds = %14
  %18 = load %class.Tensor.113*, %class.Tensor.113** %5, align 8
  %19 = load i32, i32* %7, align 4
  %20 = call dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.113* %18, i32 %19)
  %21 = load i32, i32* %8, align 4
  %22 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %20, i32 %21)
  %23 = load %class.Tensor*, %class.Tensor** %6, align 8
  %24 = load i32, i32* %8, align 4
  %25 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %23, i32 %24)
  %26 = fmul double %22, %25
  %27 = load %class.Tensor*, %class.Tensor** %4, align 8
  %28 = load i32, i32* %7, align 4
  %29 = call dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor* %27, i32 %28)
  %30 = load double, double* %29, align 8
  %31 = fadd double %30, %26
  store double %31, double* %29, align 8
  br label %32

; <label>:32:                                     ; preds = %17
  %33 = load i32, i32* @x.127
  %34 = load i32, i32* @y.128
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = load i32, i32* %8, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %8, align 4
  %43 = load i32, i32* @x.127
  %44 = load i32, i32* @y.128
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %14

; <label>:51:                                     ; preds = %14
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* %7, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %7, align 4
  br label %10

; <label>:55:                                     ; preds = %10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %32
  %56 = load i32, i32* %8, align 4
  %_ = sub i32 %56, 1
  %gen = mul i32 %_, 1
  %_1 = sub i32 0, %56
  %gen2 = add i32 %_1, 1
  %_3 = sub i32 0, %56
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 %56, 1
  %gen6 = mul i32 %_5, 1
  %_7 = shl i32 %56, 1
  %57 = add i32 %56, 1
  store i32 %57, i32* %8, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE23transform_contravariantEP6TensorILi2ELi3EES3_PKS2_RKN7MappingILi3EE16InternalDataBaseE(%class.MappingQ*, %class.Tensor.113*, %class.Tensor.113*, %class.Tensor.113*, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.MappingQ*, align 8
  %7 = alloca %class.Tensor.113*, align 8
  %8 = alloca %class.Tensor.113*, align 8
  %9 = alloca %class.Tensor.113*, align 8
  %10 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %11 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %14 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.134", align 8
  store %class.MappingQ* %0, %class.MappingQ** %6, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %7, align 8
  store %class.Tensor.113* %2, %class.Tensor.113** %8, align 8
  store %class.Tensor.113* %3, %class.Tensor.113** %9, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %10, align 8
  %18 = load %class.MappingQ*, %class.MappingQ** %6, align 8
  %19 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %10, align 8
  %20 = icmp eq %"class.Mapping<3>::InternalDataBase"* %19, null
  br i1 %20, label %25, label %21

; <label>:21:                                     ; preds = %5
  %22 = bitcast %"class.Mapping<3>::InternalDataBase"* %19 to i8*
  %23 = call i8* @__dynamic_cast(i8* %22, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i64 0) #2
  %24 = bitcast i8* %23 to %"class.MappingQ1<3>::InternalData"*
  br label %26

; <label>:25:                                     ; preds = %5
  br label %26

; <label>:26:                                     ; preds = %25, %21
  %27 = phi %"class.MappingQ1<3>::InternalData"* [ %24, %21 ], [ null, %25 ]
  store %"class.MappingQ1<3>::InternalData"* %27, %"class.MappingQ1<3>::InternalData"** %11, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator.134"* %12)
  %28 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %29 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %28, i32 0, i32 9
  %30 = load i8, i8* %29, align 8
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %39

; <label>:32:                                     ; preds = %26
  %33 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %34 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %33, i32 0, i32 4
  %35 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %34)
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %13, i32 0, i32 0
  store %class.Tensor.113* %35, %class.Tensor.113** %36, align 8
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  br label %86

; <label>:39:                                     ; preds = %26
  %40 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %11, align 8
  %41 = icmp eq %"class.MappingQ1<3>::InternalData"* %40, null
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %39
  %43 = bitcast %"class.MappingQ1<3>::InternalData"* %40 to i8*
  %44 = call i8* @__dynamic_cast(i8* %43, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9MappingQ1ILi3EE12InternalDataE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %45 = bitcast i8* %44 to %"class.MappingQ<3>::InternalData"*
  br label %47

; <label>:46:                                     ; preds = %39
  br label %47

; <label>:47:                                     ; preds = %46, %42
  %48 = phi %"class.MappingQ<3>::InternalData"* [ %45, %42 ], [ null, %46 ]
  store %"class.MappingQ<3>::InternalData"* %48, %"class.MappingQ<3>::InternalData"** %14, align 8
  %49 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %50 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %49, i32 0, i32 2
  %51 = load i8, i8* %50, align 8
  %52 = trunc i8 %51 to i1
  br i1 %52, label %53, label %61

; <label>:53:                                     ; preds = %47
  %54 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %55 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %55, i32 0, i32 4
  %57 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %56)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %15, i32 0, i32 0
  store %class.Tensor.113* %57, %class.Tensor.113** %58, align 8
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 8, i1 false)
  br label %85

; <label>:61:                                     ; preds = %47
  %62 = load i32, i32* @x.129
  %63 = load i32, i32* @y.130
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %61, %originalBBalteredBB
  %70 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %71 = bitcast %"class.MappingQ<3>::InternalData"* %70 to %"class.MappingQ1<3>::InternalData"*
  %72 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %71, i32 0, i32 4
  %73 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %72)
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %16, i32 0, i32 0
  store %class.Tensor.113* %73, %class.Tensor.113** %74, align 8
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = load i32, i32* @x.129
  %78 = load i32, i32* @y.130
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %85

; <label>:85:                                     ; preds = %originalBBpart2, %53
  br label %86

; <label>:86:                                     ; preds = %85, %32
  br label %87

; <label>:87:                                     ; preds = %91, %86
  %88 = load %class.Tensor.113*, %class.Tensor.113** %7, align 8
  %89 = load %class.Tensor.113*, %class.Tensor.113** %8, align 8
  %90 = icmp ne %class.Tensor.113* %88, %89
  br i1 %90, label %91, label %99

; <label>:91:                                     ; preds = %87
  %92 = load %class.Tensor.113*, %class.Tensor.113** %7, align 8
  %93 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %92, i32 1
  store %class.Tensor.113* %93, %class.Tensor.113** %7, align 8
  %94 = call %class.Tensor.113* @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator.134"* %12, i32 0)
  %95 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %17, i32 0, i32 0
  store %class.Tensor.113* %94, %class.Tensor.113** %95, align 8
  %96 = call dereferenceable(72) %class.Tensor.113* @_ZNK9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.134"* %17)
  %97 = load %class.Tensor.113*, %class.Tensor.113** %9, align 8
  %98 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %97, i32 1
  store %class.Tensor.113* %98, %class.Tensor.113** %9, align 8
  call void @_Z8contractILi3EEvR6TensorILi2EXT_EERKS1_S4_(%class.Tensor.113* dereferenceable(72) %92, %class.Tensor.113* dereferenceable(72) %96, %class.Tensor.113* dereferenceable(72) %97)
  br label %87

; <label>:99:                                     ; preds = %87
  %100 = load i32, i32* @x.129
  %101 = load i32, i32* @y.130
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %99, %originalBB1alteredBB
  %108 = load i32, i32* @x.129
  %109 = load i32, i32* @y.130
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %61
  %116 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %14, align 8
  %117 = bitcast %"class.MappingQ<3>::InternalData"* %116 to %"class.MappingQ1<3>::InternalData"*
  %118 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %117, i32 0, i32 4
  %119 = call %class.Tensor.113* @_ZNKSt6vectorI6TensorILi2ELi3EESaIS1_EE5beginEv(%"class.std::vector.108"* %118)
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %16, i32 0, i32 0
  store %class.Tensor.113* %119, %class.Tensor.113** %120, align 8
  %121 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %12 to i8*
  %122 = bitcast %"class.__gnu_cxx::__normal_iterator.134"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 8, i32 8, i1 false)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %99
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define weak_odr i32 @_ZNK8MappingQILi3EE10get_degreeEv(%class.MappingQ*) #1 comdat align 2 {
  %2 = alloca %class.MappingQ*, align 8
  store %class.MappingQ* %0, %class.MappingQ** %2, align 8
  %3 = load %class.MappingQ*, %class.MappingQ** %2, align 8
  %4 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %3, i32 0, i32 3
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZN8MappingQILi3EE12InternalDataC2Ej(%"class.MappingQ<3>::InternalData"*, i32) unnamed_addr #0 comdat($_ZN8MappingQILi3EE12InternalDataC5Ej) align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.133
  %4 = load i32, i32* @y.134
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*
  %14 = alloca i32
  store %"class.MappingQ<3>::InternalData"* %0, %"class.MappingQ<3>::InternalData"** %11, align 8
  store i32 %1, i32* %12, align 4
  %15 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %11, align 8
  %16 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %17 = load i32, i32* %12, align 4
  call void @_ZN9MappingQ1ILi3EE12InternalDataC2Ej(%"class.MappingQ1<3>::InternalData"* %16, i32 %17)
  %18 = bitcast %"class.MappingQ<3>::InternalData"* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8MappingQILi3EE12InternalDataE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %15, i32 0, i32 1
  %20 = load i32, i32* @x.133
  %21 = load i32, i32* @y.134
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EEC2Ev(%"class.std::vector.129"* %19)
          to label %28 unwind label %50

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.133
  %30 = load i32, i32* @y.134
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %15, i32 0, i32 2
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %15, i32 0, i32 3
  %39 = load i32, i32* @x.133
  %40 = load i32, i32* @y.134
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN9MappingQ1ILi3EE12InternalDataC1Ej(%"class.MappingQ1<3>::InternalData"* %38, i32 8)
          to label %47 unwind label %54

; <label>:47:                                     ; preds = %originalBBpart24
  %48 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %49 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %48, i32 0, i32 9
  store i8 0, i8* %49, align 8
  ret void

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %13, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %14, align 4
  br label %75

; <label>:54:                                     ; preds = %originalBBpart24
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %13, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %14, align 4
  invoke void @_ZNSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EED2Ev(%"class.std::vector.129"* %19)
          to label %58 unwind label %115

; <label>:58:                                     ; preds = %54
  %59 = load i32, i32* @x.133
  %60 = load i32, i32* @y.134
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.133
  %68 = load i32, i32* @y.134
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %75

; <label>:75:                                     ; preds = %originalBBpart28, %50
  %76 = load i32, i32* @x.133
  %77 = load i32, i32* @y.134
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  %85 = load i32, i32* @x.133
  %86 = load i32, i32* @y.134
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZN9MappingQ1ILi3EE12InternalDataD2Ev(%"class.MappingQ1<3>::InternalData"* %84)
          to label %93 unwind label %115

; <label>:93:                                     ; preds = %originalBBpart212
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = load i32, i32* @x.133
  %96 = load i32, i32* @y.134
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %94, %originalBB14alteredBB
  %103 = load i8*, i8** %13, align 8
  %104 = load i32, i32* %14, align 4
  %105 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %106 = insertvalue { i8*, i32 } %105, i32 %104, 1
  %107 = load i32, i32* @x.133
  %108 = load i32, i32* @y.134
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  resume { i8*, i32 } %106

; <label>:115:                                    ; preds = %originalBBpart212, %54
  %116 = load i32, i32* @x.133
  %117 = load i32, i32* @y.134
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = landingpad { i8*, i32 }
          catch i8* null
  %125 = extractvalue { i8*, i32 } %124, 0
  call void @__clang_call_terminate(i8* %125) #12
  %126 = load i32, i32* @x.133
  %127 = load i32, i32* @y.134
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %2
  %134 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %135 = alloca i32, align 4
  %136 = alloca i8*
  %137 = alloca i32
  store %"class.MappingQ<3>::InternalData"* %0, %"class.MappingQ<3>::InternalData"** %134, align 8
  store i32 %1, i32* %135, align 4
  %138 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %134, align 8
  %139 = bitcast %"class.MappingQ<3>::InternalData"* %138 to %"class.MappingQ1<3>::InternalData"*
  %140 = load i32, i32* %135, align 4
  call void @_ZN9MappingQ1ILi3EE12InternalDataC2Ej(%"class.MappingQ1<3>::InternalData"* %139, i32 %140)
  %141 = bitcast %"class.MappingQ<3>::InternalData"* %138 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8MappingQILi3EE12InternalDataE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %141, align 8
  %142 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %138, i32 0, i32 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %143 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %15, i32 0, i32 2
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %15, i32 0, i32 3
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %145 = bitcast %"class.MappingQ<3>::InternalData"* %15 to %"class.MappingQ1<3>::InternalData"*
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %94
  %146 = load i8*, i8** %13, align 8
  %147 = load i32, i32* %14, align 4
  %148 = insertvalue { i8*, i32 } undef, i8* %146, 0
  %149 = insertvalue { i8*, i32 } %148, i32 %147, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %150 = landingpad { i8*, i32 }
          catch i8* null
  %151 = extractvalue { i8*, i32 } %150, 0
  call void @__clang_call_terminate(i8* %151) #12
  br label %originalBB18
}

declare void @_ZN9MappingQ1ILi3EE12InternalDataC2Ej(%"class.MappingQ1<3>::InternalData"*, i32) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EEC2Ev(%"class.std::vector.129"*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.135
  %3 = load i32, i32* @y.136
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.129"*, align 8
  store %"class.std::vector.129"* %0, %"class.std::vector.129"** %10, align 8
  %11 = load %"class.std::vector.129"*, %"class.std::vector.129"** %10, align 8
  %12 = bitcast %"class.std::vector.129"* %11 to %"struct.std::_Vector_base.130"*
  call void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.130"* %12)
  %13 = load i32, i32* @x.135
  %14 = load i32, i32* @y.136
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::vector.129"*, align 8
  store %"class.std::vector.129"* %0, %"class.std::vector.129"** %21, align 8
  %22 = load %"class.std::vector.129"*, %"class.std::vector.129"** %21, align 8
  %23 = bitcast %"class.std::vector.129"* %22 to %"struct.std::_Vector_base.130"*
  call void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.130"* %23)
  br label %originalBB
}

declare void @_ZN9MappingQ1ILi3EE12InternalDataC1Ej(%"class.MappingQ1<3>::InternalData"*, i32) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EED2Ev(%"class.std::vector.129"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.137
  %3 = load i32, i32* @y.138
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.129"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::vector.129"* %0, %"class.std::vector.129"** %10, align 8
  %13 = load %"class.std::vector.129"*, %"class.std::vector.129"** %10, align 8
  %14 = bitcast %"class.std::vector.129"* %13 to %"struct.std::_Vector_base.130"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %"class.std::vector.58"*, %"class.std::vector.58"** %17, align 8
  %19 = bitcast %"class.std::vector.129"* %13 to %"struct.std::_Vector_base.130"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %20 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %21, i32 0, i32 1
  %23 = load %"class.std::vector.58"*, %"class.std::vector.58"** %22, align 8
  %24 = bitcast %"class.std::vector.129"* %13 to %"struct.std::_Vector_base.130"*
  %25 = load i32, i32* @x.137
  %26 = load i32, i32* @y.138
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %33 = invoke dereferenceable(1) %"class.std::allocator.131"* @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.130"* %24)
          to label %34 unwind label %53

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.137
  %36 = load i32, i32* @y.138
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i32, i32* @x.137
  %44 = load i32, i32* @y.138
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt8_DestroyIPSt6vectorI5PointILi3EESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.58"* %18, %"class.std::vector.58"* %23, %"class.std::allocator.131"* dereferenceable(1) %33)
          to label %51 unwind label %53

; <label>:51:                                     ; preds = %originalBBpart24
  %52 = bitcast %"class.std::vector.129"* %13 to %"struct.std::_Vector_base.130"*
  call void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.130"* %52)
  ret void

; <label>:53:                                     ; preds = %originalBBpart24, %originalBBpart2
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %11, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %12, align 4
  %57 = bitcast %"class.std::vector.129"* %13 to %"struct.std::_Vector_base.130"*
  invoke void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.130"* %57)
          to label %58 unwind label %80

; <label>:58:                                     ; preds = %53
  %59 = load i32, i32* @x.137
  %60 = load i32, i32* @y.138
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.137
  %68 = load i32, i32* @y.138
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %75

; <label>:75:                                     ; preds = %originalBBpart28
  %76 = load i8*, i8** %11, align 8
  %77 = load i32, i32* %12, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  resume { i8*, i32 } %79

; <label>:80:                                     ; preds = %53
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca %"class.std::vector.129"*, align 8
  %84 = alloca i8*
  %85 = alloca i32
  store %"class.std::vector.129"* %0, %"class.std::vector.129"** %83, align 8
  %86 = load %"class.std::vector.129"*, %"class.std::vector.129"** %83, align 8
  %87 = bitcast %"class.std::vector.129"* %86 to %"struct.std::_Vector_base.130"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %88 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %89, i32 0, i32 0
  %91 = load %"class.std::vector.58"*, %"class.std::vector.58"** %90, align 8
  %92 = bitcast %"class.std::vector.129"* %86 to %"struct.std::_Vector_base.130"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %92, i32 0, i32 0
  %94 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %93 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %94, i32 0, i32 1
  %96 = load %"class.std::vector.58"*, %"class.std::vector.58"** %95, align 8
  %97 = bitcast %"class.std::vector.129"* %86 to %"struct.std::_Vector_base.130"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define weak_odr i32 @_ZNK8MappingQILi3EE12InternalData18memory_consumptionEv(%"class.MappingQ<3>::InternalData"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  store %"class.MappingQ<3>::InternalData"* %0, %"class.MappingQ<3>::InternalData"** %2, align 8
  %3 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %2, align 8
  %4 = bitcast %"class.MappingQ<3>::InternalData"* %3 to %"class.MappingQ1<3>::InternalData"*
  %5 = call i32 @_ZNK9MappingQ1ILi3EE12InternalData18memory_consumptionEv(%"class.MappingQ1<3>::InternalData"* %4)
  %6 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %3, i32 0, i32 1
  %7 = call i32 @_ZN17MemoryConsumption18memory_consumptionISt6vectorI5PointILi3EESaIS3_EEEEjRKS1_IT_SaIS6_EE(%"class.std::vector.129"* dereferenceable(24) %6)
  %8 = add i32 %5, %7
  %9 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %3, i32 0, i32 2
  %10 = load i8, i8* %9, align 8
  %11 = trunc i8 %10 to i1
  %12 = call i32 @_ZN17MemoryConsumption18memory_consumptionEb(i1 zeroext %11)
  %13 = add i32 %8, %12
  %14 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %3, i32 0, i32 3
  %15 = call i32 @_ZN17MemoryConsumption18memory_consumptionIN9MappingQ1ILi3EE12InternalDataEEEjRKT_(%"class.MappingQ1<3>::InternalData"* dereferenceable(288) %14)
  %16 = add i32 %13, %15
  ret i32 %16
}

declare i32 @_ZNK9MappingQ1ILi3EE12InternalData18memory_consumptionEv(%"class.MappingQ1<3>::InternalData"*) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN17MemoryConsumption18memory_consumptionISt6vectorI5PointILi3EESaIS3_EEEEjRKS1_IT_SaIS6_EE(%"class.std::vector.129"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.129"*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %"class.std::vector.129"* %0, %"class.std::vector.129"** %2, align 8
  store i32 24, i32* %3, align 4
  %6 = load %"class.std::vector.129"*, %"class.std::vector.129"** %2, align 8
  %7 = call i64 @_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.129"* %6)
  %8 = trunc i64 %7 to i32
  store i32 %8, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %9

; <label>:9:                                      ; preds = %21, %1
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %24

; <label>:13:                                     ; preds = %9
  %14 = load %"class.std::vector.129"*, %"class.std::vector.129"** %2, align 8
  %15 = load i32, i32* %5, align 4
  %16 = zext i32 %15 to i64
  %17 = call dereferenceable(24) %"class.std::vector.58"* @_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EEixEm(%"class.std::vector.129"* %14, i64 %16)
  %18 = call i32 @_ZN17MemoryConsumption18memory_consumptionI5PointILi3EEEEjRKSt6vectorIT_SaIS4_EE(%"class.std::vector.58"* dereferenceable(24) %17)
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, %18
  store i32 %20, i32* %3, align 4
  br label %21

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* %5, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %5, align 4
  br label %9

; <label>:24:                                     ; preds = %9
  %25 = load %"class.std::vector.129"*, %"class.std::vector.129"** %2, align 8
  %26 = call i64 @_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EE8capacityEv(%"class.std::vector.129"* %25)
  %27 = load i32, i32* %4, align 4
  %28 = zext i32 %27 to i64
  %29 = sub i64 %26, %28
  %30 = mul i64 %29, 24
  %31 = load i32, i32* %3, align 4
  %32 = zext i32 %31 to i64
  %33 = add i64 %32, %30
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 4
  %35 = load i32, i32* %3, align 4
  ret i32 %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZN17MemoryConsumption18memory_consumptionEb(i1 zeroext) #1 comdat {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  ret i32 1
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN17MemoryConsumption18memory_consumptionIN9MappingQ1ILi3EE12InternalDataEEEjRKT_(%"class.MappingQ1<3>::InternalData"* dereferenceable(288)) #0 comdat {
  %2 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  store %"class.MappingQ1<3>::InternalData"* %0, %"class.MappingQ1<3>::InternalData"** %2, align 8
  %3 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %2, align 8
  %4 = bitcast %"class.MappingQ1<3>::InternalData"* %3 to i32 (%"class.MappingQ1<3>::InternalData"*)***
  %5 = load i32 (%"class.MappingQ1<3>::InternalData"*)**, i32 (%"class.MappingQ1<3>::InternalData"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.MappingQ1<3>::InternalData"*)*, i32 (%"class.MappingQ1<3>::InternalData"*)** %5, i64 3
  %7 = load i32 (%"class.MappingQ1<3>::InternalData"*)*, i32 (%"class.MappingQ1<3>::InternalData"*)** %6, align 8
  %8 = call i32 %7(%"class.MappingQ1<3>::InternalData"* %3)
  ret i32 %8
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE14fill_fe_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEE(%class.MappingQ*, %class.TriaIterator.118* dereferenceable(24), %class.Quadrature* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.std::vector.58"* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %7 = alloca %class.MappingQ*, align 8
  %8 = alloca %class.TriaIterator.118*, align 8
  %9 = alloca %class.Quadrature*, align 8
  %10 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %11 = alloca %"class.std::vector.58"*, align 8
  %12 = alloca %"class.std::vector.0"*, align 8
  %13 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %14 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  store %class.MappingQ* %0, %class.MappingQ** %7, align 8
  store %class.TriaIterator.118* %1, %class.TriaIterator.118** %8, align 8
  store %class.Quadrature* %2, %class.Quadrature** %9, align 8
  store %"class.Mapping<3>::InternalDataBase"* %3, %"class.Mapping<3>::InternalDataBase"** %10, align 8
  store %"class.std::vector.58"* %4, %"class.std::vector.58"** %11, align 8
  store %"class.std::vector.0"* %5, %"class.std::vector.0"** %12, align 8
  %15 = load %class.MappingQ*, %class.MappingQ** %7, align 8
  %16 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %10, align 8
  %17 = bitcast %"class.Mapping<3>::InternalDataBase"* %16 to i8*
  %18 = call i8* @__dynamic_cast(i8* %17, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %19 = bitcast i8* %18 to %"class.MappingQ<3>::InternalData"*
  %20 = icmp eq %"class.MappingQ<3>::InternalData"* %19, null
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %6
  call void @__cxa_bad_cast() #15
  unreachable

; <label>:22:                                     ; preds = %6
  store %"class.MappingQ<3>::InternalData"* %19, %"class.MappingQ<3>::InternalData"** %13, align 8
  %23 = load %class.TriaIterator.118*, %class.TriaIterator.118** %8, align 8
  %24 = bitcast %class.TriaIterator.118* %23 to %class.TriaRawIterator.119*
  %25 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator.119* %24)
  %26 = bitcast %class.DoFCellAccessor* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to %class.CellAccessor*
  %29 = call zeroext i1 @_ZNK12CellAccessorILi3EE18has_boundary_linesEv(%class.CellAccessor* %28)
  %30 = xor i1 %29, true
  %31 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %13, align 8
  %32 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %31, i32 0, i32 2
  %33 = zext i1 %30 to i8
  store i8 %33, i8* %32, align 8
  store %"class.MappingQ1<3>::InternalData"* null, %"class.MappingQ1<3>::InternalData"** %14, align 8
  %34 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %13, align 8
  %35 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %34, i32 0, i32 2
  %36 = load i8, i8* %35, align 8
  %37 = trunc i8 %36 to i1
  br i1 %37, label %38, label %57

; <label>:38:                                     ; preds = %22
  %39 = load i32, i32* @x.147
  %40 = load i32, i32* @y.148
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %38, %originalBBalteredBB
  %47 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %13, align 8
  %48 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %47, i32 0, i32 3
  store %"class.MappingQ1<3>::InternalData"* %48, %"class.MappingQ1<3>::InternalData"** %14, align 8
  %49 = load i32, i32* @x.147
  %50 = load i32, i32* @y.148
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %60

; <label>:57:                                     ; preds = %22
  %58 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %13, align 8
  %59 = bitcast %"class.MappingQ<3>::InternalData"* %58 to %"class.MappingQ1<3>::InternalData"*
  store %"class.MappingQ1<3>::InternalData"* %59, %"class.MappingQ1<3>::InternalData"** %14, align 8
  br label %60

; <label>:60:                                     ; preds = %57, %originalBBpart2
  %61 = load i32, i32* @x.147
  %62 = load i32, i32* @y.148
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %60, %originalBB1alteredBB
  %69 = bitcast %class.MappingQ* %15 to %class.MappingQ1*
  %70 = load %class.TriaIterator.118*, %class.TriaIterator.118** %8, align 8
  %71 = load %class.Quadrature*, %class.Quadrature** %9, align 8
  %72 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %14, align 8
  %73 = bitcast %"class.MappingQ1<3>::InternalData"* %72 to %"class.Mapping<3>::InternalDataBase"*
  %74 = load %"class.std::vector.58"*, %"class.std::vector.58"** %11, align 8
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  call void @_ZNK9MappingQ1ILi3EE14fill_fe_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEE(%class.MappingQ1* %69, %class.TriaIterator.118* dereferenceable(24) %70, %class.Quadrature* dereferenceable(80) %71, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %73, %"class.std::vector.58"* dereferenceable(24) %74, %"class.std::vector.0"* dereferenceable(24) %75)
  %76 = load i32, i32* @x.147
  %77 = load i32, i32* @y.148
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %38
  %84 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %13, align 8
  %85 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %84, i32 0, i32 3
  store %"class.MappingQ1<3>::InternalData"* %85, %"class.MappingQ1<3>::InternalData"** %14, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  %86 = bitcast %class.MappingQ* %15 to %class.MappingQ1*
  %87 = load %class.TriaIterator.118*, %class.TriaIterator.118** %8, align 8
  %88 = load %class.Quadrature*, %class.Quadrature** %9, align 8
  %89 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %14, align 8
  %90 = bitcast %"class.MappingQ1<3>::InternalData"* %89 to %"class.Mapping<3>::InternalDataBase"*
  %91 = load %"class.std::vector.58"*, %"class.std::vector.58"** %11, align 8
  %92 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  call void @_ZNK9MappingQ1ILi3EE14fill_fe_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEE(%class.MappingQ1* %86, %class.TriaIterator.118* dereferenceable(24) %87, %class.Quadrature* dereferenceable(80) %88, %"class.Mapping<3>::InternalDataBase"* dereferenceable(40) %90, %"class.std::vector.58"* dereferenceable(24) %91, %"class.std::vector.0"* dereferenceable(24) %92)
  br label %originalBB1
}

declare void @__cxa_bad_cast()

; Function Attrs: noinline uwtable
define linkonce_odr %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator.119*) #0 comdat align 2 {
  %2 = alloca %class.TriaRawIterator.119*, align 8
  store %class.TriaRawIterator.119* %0, %class.TriaRawIterator.119** %2, align 8
  %3 = load %class.TriaRawIterator.119*, %class.TriaRawIterator.119** %2, align 8
  %4 = call dereferenceable(24) %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEdeEv(%class.TriaRawIterator.119* %3)
  ret %class.DoFCellAccessor* %4
}

declare void @_ZNK9MappingQ1ILi3EE14fill_fe_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEE(%class.MappingQ1*, %class.TriaIterator.118* dereferenceable(24), %class.Quadrature* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.std::vector.58"* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE19fill_fe_face_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEERSF_I6TensorILi1ELi3EESaISP_EESK_(%class.MappingQ*, %class.TriaIterator.118* dereferenceable(24), i32, %class.Quadrature.135* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.std::vector.58"* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.103"* dereferenceable(24), %"class.std::vector.58"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %10 = load i32, i32* @x.151
  %11 = load i32, i32* @y.152
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca %class.MappingQ*, align 8
  %19 = alloca %class.TriaIterator.118*, align 8
  %20 = alloca i32, align 4
  %21 = alloca %class.Quadrature.135*, align 8
  %22 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %23 = alloca %"class.std::vector.58"*, align 8
  %24 = alloca %"class.std::vector.0"*, align 8
  %25 = alloca %"class.std::vector.103"*, align 8
  %26 = alloca %"class.std::vector.58"*, align 8
  %27 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %28 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %29 = alloca i32, align 4
  %30 = alloca %"class.QProjector<3>::DataSetDescriptor", align 4
  store %class.MappingQ* %0, %class.MappingQ** %18, align 8
  store %class.TriaIterator.118* %1, %class.TriaIterator.118** %19, align 8
  store i32 %2, i32* %20, align 4
  store %class.Quadrature.135* %3, %class.Quadrature.135** %21, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %22, align 8
  store %"class.std::vector.58"* %5, %"class.std::vector.58"** %23, align 8
  store %"class.std::vector.0"* %6, %"class.std::vector.0"** %24, align 8
  store %"class.std::vector.103"* %7, %"class.std::vector.103"** %25, align 8
  store %"class.std::vector.58"* %8, %"class.std::vector.58"** %26, align 8
  %31 = load %class.MappingQ*, %class.MappingQ** %18, align 8
  %32 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %22, align 8
  %33 = bitcast %"class.Mapping<3>::InternalDataBase"* %32 to i8*
  %34 = call i8* @__dynamic_cast(i8* %33, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %35 = bitcast i8* %34 to %"class.MappingQ<3>::InternalData"*
  %36 = icmp eq %"class.MappingQ<3>::InternalData"* %35, null
  %37 = load i32, i32* @x.151
  %38 = load i32, i32* @y.152
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %46

; <label>:45:                                     ; preds = %originalBBpart2
  call void @__cxa_bad_cast() #15
  unreachable

; <label>:46:                                     ; preds = %originalBBpart2
  store %"class.MappingQ<3>::InternalData"* %35, %"class.MappingQ<3>::InternalData"** %27, align 8
  %47 = load %class.TriaIterator.118*, %class.TriaIterator.118** %19, align 8
  %48 = bitcast %class.TriaIterator.118* %47 to %class.TriaRawIterator.119*
  %49 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator.119* %48)
  %50 = bitcast %class.DoFCellAccessor* %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = bitcast i8* %51 to %class.CellAccessor*
  %53 = call zeroext i1 @_ZNK12CellAccessorILi3EE18has_boundary_linesEv(%class.CellAccessor* %52)
  %54 = xor i1 %53, true
  %55 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %27, align 8
  %56 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %55, i32 0, i32 2
  %57 = zext i1 %54 to i8
  store i8 %57, i8* %56, align 8
  store %"class.MappingQ1<3>::InternalData"* null, %"class.MappingQ1<3>::InternalData"** %28, align 8
  %58 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %27, align 8
  %59 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %58, i32 0, i32 2
  %60 = load i8, i8* %59, align 8
  %61 = trunc i8 %60 to i1
  br i1 %61, label %62, label %81

; <label>:62:                                     ; preds = %46
  %63 = load i32, i32* @x.151
  %64 = load i32, i32* @y.152
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %62, %originalBB1alteredBB
  %71 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %27, align 8
  %72 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %71, i32 0, i32 3
  store %"class.MappingQ1<3>::InternalData"* %72, %"class.MappingQ1<3>::InternalData"** %28, align 8
  %73 = load i32, i32* @x.151
  %74 = load i32, i32* @y.152
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %84

; <label>:81:                                     ; preds = %46
  %82 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %27, align 8
  %83 = bitcast %"class.MappingQ<3>::InternalData"* %82 to %"class.MappingQ1<3>::InternalData"*
  store %"class.MappingQ1<3>::InternalData"* %83, %"class.MappingQ1<3>::InternalData"** %28, align 8
  br label %84

; <label>:84:                                     ; preds = %81, %originalBBpart24
  %85 = load i32, i32* @x.151
  %86 = load i32, i32* @y.152
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %84, %originalBB6alteredBB
  %93 = load %class.Quadrature.135*, %class.Quadrature.135** %21, align 8
  %94 = getelementptr inbounds %class.Quadrature.135, %class.Quadrature.135* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  store i32 %95, i32* %29, align 4
  %96 = bitcast %class.MappingQ* %31 to %class.MappingQ1*
  %97 = load %class.TriaIterator.118*, %class.TriaIterator.118** %19, align 8
  %98 = load i32, i32* %20, align 4
  %99 = load i32, i32* %29, align 4
  %100 = load i32, i32* %20, align 4
  %101 = load %class.TriaIterator.118*, %class.TriaIterator.118** %19, align 8
  %102 = bitcast %class.TriaIterator.118* %101 to %class.TriaRawIterator.119*
  %103 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator.119* %102)
  %104 = bitcast %class.DoFCellAccessor* %103 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 8
  %106 = bitcast i8* %105 to %class.TriaObjectAccessor*
  %107 = load i32, i32* %20, align 4
  %108 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %106, i32 %107)
  %109 = load i32, i32* %29, align 4
  %110 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4faceEjbj(i32 %100, i1 zeroext %108, i32 %109)
  %111 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %30, i32 0, i32 0
  store i32 %110, i32* %111, align 4
  %112 = load %class.Quadrature.135*, %class.Quadrature.135** %21, align 8
  %113 = call dereferenceable(24) %"class.std::vector.0"* @_ZNK10QuadratureILi2EE11get_weightsEv(%class.Quadrature.135* %112)
  %114 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %28, align 8
  %115 = load %"class.std::vector.58"*, %"class.std::vector.58"** %23, align 8
  %116 = load %"class.std::vector.0"*, %"class.std::vector.0"** %24, align 8
  %117 = load %"class.std::vector.103"*, %"class.std::vector.103"** %25, align 8
  %118 = load %"class.std::vector.58"*, %"class.std::vector.58"** %26, align 8
  %119 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %30, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  call void @_ZNK9MappingQ1ILi3EE17compute_fill_faceERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjbjN10QProjectorILi3EE17DataSetDescriptorERKSt6vectorIdSaIdEERNS0_12InternalDataERSA_I5PointILi3EESaISI_EERSC_RSA_I6TensorILi1ELi3EESaISO_EESL_(%class.MappingQ1* %96, %class.TriaIterator.118* dereferenceable(24) %97, i32 %98, i1 zeroext false, i32 %99, i32 %120, %"class.std::vector.0"* dereferenceable(24) %113, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %114, %"class.std::vector.58"* dereferenceable(24) %115, %"class.std::vector.0"* dereferenceable(24) %116, %"class.std::vector.103"* dereferenceable(24) %117, %"class.std::vector.58"* dereferenceable(24) %118)
  %121 = load i32, i32* @x.151
  %122 = load i32, i32* @y.152
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %9
  %129 = alloca %class.MappingQ*, align 8
  %130 = alloca %class.TriaIterator.118*, align 8
  %131 = alloca i32, align 4
  %132 = alloca %class.Quadrature.135*, align 8
  %133 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %134 = alloca %"class.std::vector.58"*, align 8
  %135 = alloca %"class.std::vector.0"*, align 8
  %136 = alloca %"class.std::vector.103"*, align 8
  %137 = alloca %"class.std::vector.58"*, align 8
  %138 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %139 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %140 = alloca i32, align 4
  %141 = alloca %"class.QProjector<3>::DataSetDescriptor", align 4
  store %class.MappingQ* %0, %class.MappingQ** %129, align 8
  store %class.TriaIterator.118* %1, %class.TriaIterator.118** %130, align 8
  store i32 %2, i32* %131, align 4
  store %class.Quadrature.135* %3, %class.Quadrature.135** %132, align 8
  store %"class.Mapping<3>::InternalDataBase"* %4, %"class.Mapping<3>::InternalDataBase"** %133, align 8
  store %"class.std::vector.58"* %5, %"class.std::vector.58"** %134, align 8
  store %"class.std::vector.0"* %6, %"class.std::vector.0"** %135, align 8
  store %"class.std::vector.103"* %7, %"class.std::vector.103"** %136, align 8
  store %"class.std::vector.58"* %8, %"class.std::vector.58"** %137, align 8
  %142 = load %class.MappingQ*, %class.MappingQ** %129, align 8
  %143 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %133, align 8
  %144 = bitcast %"class.Mapping<3>::InternalDataBase"* %143 to i8*
  %145 = call i8* @__dynamic_cast(i8* %144, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %146 = bitcast i8* %145 to %"class.MappingQ<3>::InternalData"*
  %147 = icmp eq %"class.MappingQ<3>::InternalData"* %146, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %62
  %148 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %27, align 8
  %149 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %148, i32 0, i32 3
  store %"class.MappingQ1<3>::InternalData"* %149, %"class.MappingQ1<3>::InternalData"** %28, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %84
  %150 = load %class.Quadrature.135*, %class.Quadrature.135** %21, align 8
  %151 = getelementptr inbounds %class.Quadrature.135, %class.Quadrature.135* %150, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  store i32 %152, i32* %29, align 4
  %153 = bitcast %class.MappingQ* %31 to %class.MappingQ1*
  %154 = load %class.TriaIterator.118*, %class.TriaIterator.118** %19, align 8
  %155 = load i32, i32* %20, align 4
  %156 = load i32, i32* %29, align 4
  %157 = load i32, i32* %20, align 4
  %158 = load %class.TriaIterator.118*, %class.TriaIterator.118** %19, align 8
  %159 = bitcast %class.TriaIterator.118* %158 to %class.TriaRawIterator.119*
  %160 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator.119* %159)
  %161 = bitcast %class.DoFCellAccessor* %160 to i8*
  %162 = getelementptr inbounds i8, i8* %161, i64 8
  %163 = bitcast i8* %162 to %class.TriaObjectAccessor*
  %164 = load i32, i32* %20, align 4
  %165 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %163, i32 %164)
  %166 = load i32, i32* %29, align 4
  %167 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4faceEjbj(i32 %157, i1 zeroext %165, i32 %166)
  %168 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %30, i32 0, i32 0
  store i32 %167, i32* %168, align 4
  %169 = load %class.Quadrature.135*, %class.Quadrature.135** %21, align 8
  %170 = call dereferenceable(24) %"class.std::vector.0"* @_ZNK10QuadratureILi2EE11get_weightsEv(%class.Quadrature.135* %169)
  %171 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %28, align 8
  %172 = load %"class.std::vector.58"*, %"class.std::vector.58"** %23, align 8
  %173 = load %"class.std::vector.0"*, %"class.std::vector.0"** %24, align 8
  %174 = load %"class.std::vector.103"*, %"class.std::vector.103"** %25, align 8
  %175 = load %"class.std::vector.58"*, %"class.std::vector.58"** %26, align 8
  %176 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %30, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  call void @_ZNK9MappingQ1ILi3EE17compute_fill_faceERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjbjN10QProjectorILi3EE17DataSetDescriptorERKSt6vectorIdSaIdEERNS0_12InternalDataERSA_I5PointILi3EESaISI_EERSC_RSA_I6TensorILi1ELi3EESaISO_EESL_(%class.MappingQ1* %153, %class.TriaIterator.118* dereferenceable(24) %154, i32 %155, i1 zeroext false, i32 %156, i32 %177, %"class.std::vector.0"* dereferenceable(24) %170, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %171, %"class.std::vector.58"* dereferenceable(24) %172, %"class.std::vector.0"* dereferenceable(24) %173, %"class.std::vector.103"* dereferenceable(24) %174, %"class.std::vector.58"* dereferenceable(24) %175)
  br label %originalBB6
}

declare void @_ZNK9MappingQ1ILi3EE17compute_fill_faceERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjbjN10QProjectorILi3EE17DataSetDescriptorERKSt6vectorIdSaIdEERNS0_12InternalDataERSA_I5PointILi3EESaISI_EERSC_RSA_I6TensorILi1ELi3EESaISO_EESL_(%class.MappingQ1*, %class.TriaIterator.118* dereferenceable(24), i32, i1 zeroext, i32, i32, %"class.std::vector.0"* dereferenceable(24), %"class.MappingQ1<3>::InternalData"* dereferenceable(288), %"class.std::vector.58"* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.103"* dereferenceable(24), %"class.std::vector.58"* dereferenceable(24)) #3

declare i32 @_ZN10QProjectorILi3EE17DataSetDescriptor4faceEjbj(i32, i1 zeroext, i32) #3

declare dereferenceable(24) %"class.std::vector.0"* @_ZNK10QuadratureILi2EE11get_weightsEv(%class.Quadrature.135*) #3

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE22fill_fe_subface_valuesERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERN7MappingILi3EE16InternalDataBaseERSt6vectorI5PointILi3EESaISH_EERSF_IdSaIdEERSF_I6TensorILi1ELi3EESaISP_EESK_(%class.MappingQ*, %class.TriaIterator.118* dereferenceable(24), i32, i32, %class.Quadrature.135* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.std::vector.58"* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.103"* dereferenceable(24), %"class.std::vector.58"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %11 = alloca %class.MappingQ*, align 8
  %12 = alloca %class.TriaIterator.118*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.Quadrature.135*, align 8
  %16 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  %17 = alloca %"class.std::vector.58"*, align 8
  %18 = alloca %"class.std::vector.0"*, align 8
  %19 = alloca %"class.std::vector.103"*, align 8
  %20 = alloca %"class.std::vector.58"*, align 8
  %21 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %22 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %23 = alloca i32, align 4
  %24 = alloca %"class.QProjector<3>::DataSetDescriptor", align 4
  store %class.MappingQ* %0, %class.MappingQ** %11, align 8
  store %class.TriaIterator.118* %1, %class.TriaIterator.118** %12, align 8
  store i32 %2, i32* %13, align 4
  store i32 %3, i32* %14, align 4
  store %class.Quadrature.135* %4, %class.Quadrature.135** %15, align 8
  store %"class.Mapping<3>::InternalDataBase"* %5, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  store %"class.std::vector.58"* %6, %"class.std::vector.58"** %17, align 8
  store %"class.std::vector.0"* %7, %"class.std::vector.0"** %18, align 8
  store %"class.std::vector.103"* %8, %"class.std::vector.103"** %19, align 8
  store %"class.std::vector.58"* %9, %"class.std::vector.58"** %20, align 8
  %25 = load %class.MappingQ*, %class.MappingQ** %11, align 8
  %26 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %16, align 8
  %27 = bitcast %"class.Mapping<3>::InternalDataBase"* %26 to i8*
  %28 = call i8* @__dynamic_cast(i8* %27, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN7MappingILi3EE16InternalDataBaseE to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8MappingQILi3EE12InternalDataE to i8*), i64 0) #2
  %29 = bitcast i8* %28 to %"class.MappingQ<3>::InternalData"*
  %30 = icmp eq %"class.MappingQ<3>::InternalData"* %29, null
  br i1 %30, label %31, label %48

; <label>:31:                                     ; preds = %10
  %32 = load i32, i32* @x.153
  %33 = load i32, i32* @y.154
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %31, %originalBBalteredBB
  call void @__cxa_bad_cast() #15
  %40 = load i32, i32* @x.153
  %41 = load i32, i32* @y.154
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:48:                                     ; preds = %10
  %49 = load i32, i32* @x.153
  %50 = load i32, i32* @y.154
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  store %"class.MappingQ<3>::InternalData"* %29, %"class.MappingQ<3>::InternalData"** %21, align 8
  %57 = load %class.TriaIterator.118*, %class.TriaIterator.118** %12, align 8
  %58 = bitcast %class.TriaIterator.118* %57 to %class.TriaRawIterator.119*
  %59 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator.119* %58)
  %60 = bitcast %class.DoFCellAccessor* %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 8
  %62 = bitcast i8* %61 to %class.CellAccessor*
  %63 = call zeroext i1 @_ZNK12CellAccessorILi3EE18has_boundary_linesEv(%class.CellAccessor* %62)
  %64 = xor i1 %63, true
  %65 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %21, align 8
  %66 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %65, i32 0, i32 2
  %67 = zext i1 %64 to i8
  store i8 %67, i8* %66, align 8
  store %"class.MappingQ1<3>::InternalData"* null, %"class.MappingQ1<3>::InternalData"** %22, align 8
  %68 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %21, align 8
  %69 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %68, i32 0, i32 2
  %70 = load i8, i8* %69, align 8
  %71 = trunc i8 %70 to i1
  %72 = load i32, i32* @x.153
  %73 = load i32, i32* @y.154
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart212, label %originalBB1alteredBB

originalBBpart212:                                ; preds = %originalBB1
  br i1 %71, label %80, label %83

; <label>:80:                                     ; preds = %originalBBpart212
  %81 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %21, align 8
  %82 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %81, i32 0, i32 3
  store %"class.MappingQ1<3>::InternalData"* %82, %"class.MappingQ1<3>::InternalData"** %22, align 8
  br label %102

; <label>:83:                                     ; preds = %originalBBpart212
  %84 = load i32, i32* @x.153
  %85 = load i32, i32* @y.154
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %83, %originalBB14alteredBB
  %92 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %21, align 8
  %93 = bitcast %"class.MappingQ<3>::InternalData"* %92 to %"class.MappingQ1<3>::InternalData"*
  store %"class.MappingQ1<3>::InternalData"* %93, %"class.MappingQ1<3>::InternalData"** %22, align 8
  %94 = load i32, i32* @x.153
  %95 = load i32, i32* @y.154
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %102

; <label>:102:                                    ; preds = %originalBBpart216, %80
  %103 = load %class.Quadrature.135*, %class.Quadrature.135** %15, align 8
  %104 = getelementptr inbounds %class.Quadrature.135, %class.Quadrature.135* %103, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  store i32 %105, i32* %23, align 4
  %106 = bitcast %class.MappingQ* %25 to %class.MappingQ1*
  %107 = load %class.TriaIterator.118*, %class.TriaIterator.118** %12, align 8
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %23, align 4
  %110 = load i32, i32* %13, align 4
  %111 = load i32, i32* %14, align 4
  %112 = load %class.TriaIterator.118*, %class.TriaIterator.118** %12, align 8
  %113 = bitcast %class.TriaIterator.118* %112 to %class.TriaRawIterator.119*
  %114 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator.119* %113)
  %115 = bitcast %class.DoFCellAccessor* %114 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 8
  %117 = bitcast i8* %116 to %class.TriaObjectAccessor*
  %118 = load i32, i32* %13, align 4
  %119 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %117, i32 %118)
  %120 = load i32, i32* %23, align 4
  %121 = call i32 @_ZN10QProjectorILi3EE17DataSetDescriptor8sub_faceEjjbj(i32 %110, i32 %111, i1 zeroext %119, i32 %120)
  %122 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %24, i32 0, i32 0
  store i32 %121, i32* %122, align 4
  %123 = load %class.Quadrature.135*, %class.Quadrature.135** %15, align 8
  %124 = call dereferenceable(24) %"class.std::vector.0"* @_ZNK10QuadratureILi2EE11get_weightsEv(%class.Quadrature.135* %123)
  %125 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %22, align 8
  %126 = load %"class.std::vector.58"*, %"class.std::vector.58"** %17, align 8
  %127 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %128 = load %"class.std::vector.103"*, %"class.std::vector.103"** %19, align 8
  %129 = load %"class.std::vector.58"*, %"class.std::vector.58"** %20, align 8
  %130 = getelementptr inbounds %"class.QProjector<3>::DataSetDescriptor", %"class.QProjector<3>::DataSetDescriptor"* %24, i32 0, i32 0
  %131 = load i32, i32* %130, align 4
  call void @_ZNK9MappingQ1ILi3EE17compute_fill_faceERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjbjN10QProjectorILi3EE17DataSetDescriptorERKSt6vectorIdSaIdEERNS0_12InternalDataERSA_I5PointILi3EESaISI_EERSC_RSA_I6TensorILi1ELi3EESaISO_EESL_(%class.MappingQ1* %106, %class.TriaIterator.118* dereferenceable(24) %107, i32 %108, i1 zeroext true, i32 %109, i32 %131, %"class.std::vector.0"* dereferenceable(24) %124, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %125, %"class.std::vector.58"* dereferenceable(24) %126, %"class.std::vector.0"* dereferenceable(24) %127, %"class.std::vector.103"* dereferenceable(24) %128, %"class.std::vector.58"* dereferenceable(24) %129)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %31
  call void @__cxa_bad_cast() #15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  store %"class.MappingQ<3>::InternalData"* %29, %"class.MappingQ<3>::InternalData"** %21, align 8
  %132 = load %class.TriaIterator.118*, %class.TriaIterator.118** %12, align 8
  %133 = bitcast %class.TriaIterator.118* %132 to %class.TriaRawIterator.119*
  %134 = call %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEptEv(%class.TriaRawIterator.119* %133)
  %135 = bitcast %class.DoFCellAccessor* %134 to i8*
  %136 = getelementptr inbounds i8, i8* %135, i64 8
  %137 = bitcast i8* %136 to %class.CellAccessor*
  %138 = call zeroext i1 @_ZNK12CellAccessorILi3EE18has_boundary_linesEv(%class.CellAccessor* %137)
  %_ = sub i1 %138, true
  %gen = mul i1 %_, true
  %_2 = sub i1 %138, true
  %gen3 = mul i1 %_2, true
  %_4 = sub i1 false, %138
  %gen5 = add i1 %_4, true
  %_6 = shl i1 %138, true
  %_7 = sub i1 %138, true
  %gen8 = mul i1 %_7, true
  %_9 = sub i1 %138, true
  %gen10 = mul i1 %_9, true
  %139 = xor i1 %138, true
  %140 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %21, align 8
  %141 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %140, i32 0, i32 2
  %142 = zext i1 %139 to i8
  store i8 %142, i8* %141, align 8
  store %"class.MappingQ1<3>::InternalData"* null, %"class.MappingQ1<3>::InternalData"** %22, align 8
  %143 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %21, align 8
  %144 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %143, i32 0, i32 2
  %145 = load i8, i8* %144, align 8
  %146 = trunc i8 %145 to i1
  br label %originalBB1

originalBB14alteredBB:                            ; preds = %originalBB14, %83
  %147 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %21, align 8
  %148 = bitcast %"class.MappingQ<3>::InternalData"* %147 to %"class.MappingQ1<3>::InternalData"*
  store %"class.MappingQ1<3>::InternalData"* %148, %"class.MappingQ1<3>::InternalData"** %22, align 8
  br label %originalBB14
}

declare i32 @_ZN10QProjectorILi3EE17DataSetDescriptor8sub_faceEjjbj(i32, i32, i1 zeroext, i32) #3

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE(%class.MappingQ*, %class.TriaIterator* dereferenceable(16), %"class.std::vector.58"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MappingQ*, align 8
  %5 = alloca %class.TriaIterator*, align 8
  %6 = alloca %"class.std::vector.58"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  %10 = alloca %class.TriaIterator.69, align 8
  %11 = alloca %class.Boundary*, align 8
  %12 = alloca %class.Point, align 8
  %13 = alloca %"class.std::vector.58", align 8
  %14 = alloca %class.Point, align 8
  %15 = alloca %"class.std::allocator.60", align 1
  %16 = alloca i32, align 4
  %17 = alloca %class.TriaIterator.69, align 8
  %18 = alloca %class.Boundary*, align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %class.MappingQ* %0, %class.MappingQ** %4, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %5, align 8
  store %"class.std::vector.58"* %2, %"class.std::vector.58"** %6, align 8
  %22 = load %class.MappingQ*, %class.MappingQ** %4, align 8
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %47

; <label>:25:                                     ; preds = %3
  %26 = call i32 @__cxa_guard_acquire(i64* @_ZGVZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary) #2
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %47

; <label>:28:                                     ; preds = %25
  %29 = load i32, i32* @x.155
  %30 = load i32, i32* @y.156
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = load i32, i32* @x.155
  %38 = load i32, i32* @y.156
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN16StraightBoundaryILi3EEC1Ev(%class.StraightBoundary* @_ZZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary)
          to label %45 unwind label %102

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.StraightBoundary*)* @_ZN16StraightBoundaryILi3EED2Ev to void (i8*)*), i8* bitcast (%class.StraightBoundary* @_ZZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary to i8*), i8* @__dso_handle) #2
  call void @__cxa_guard_release(i64* @_ZGVZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary) #2
  br label %47

; <label>:47:                                     ; preds = %45, %25, %3
  %48 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %22, i32 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 2
  br i1 %50, label %51, label %107

; <label>:51:                                     ; preds = %47
  store i32 0, i32* %9, align 4
  br label %52

; <label>:52:                                     ; preds = %99, %51
  %53 = load i32, i32* %9, align 4
  %54 = icmp ult i32 %53, 12
  br i1 %54, label %55, label %106

; <label>:55:                                     ; preds = %52
  %56 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %57 = bitcast %class.TriaIterator* %56 to %class.TriaRawIterator*
  %58 = call %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %57)
  %59 = bitcast %class.CellAccessor* %58 to %class.TriaObjectAccessor*
  %60 = load i32, i32* %9, align 4
  call void @_ZNK18TriaObjectAccessorILi3ELi3EE4lineEj(%class.TriaIterator.69* sret %10, %class.TriaObjectAccessor* %59, i32 %60)
  %61 = bitcast %class.TriaIterator.69* %10 to %class.TriaRawIterator.70*
  %62 = call %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70* %61)
  %63 = call zeroext i1 @_ZNK18TriaObjectAccessorILi1ELi3EE11at_boundaryEv(%class.TriaObjectAccessor.72* %62)
  br i1 %63, label %64, label %74

; <label>:64:                                     ; preds = %55
  %65 = bitcast %class.TriaIterator.69* %10 to %class.TriaRawIterator.70*
  %66 = call %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70* %65)
  %67 = bitcast %class.TriaObjectAccessor.72* %66 to %class.TriaAccessor*
  %68 = call dereferenceable(2352) %class.Triangulation* @_ZNK12TriaAccessorILi3EE17get_triangulationEv(%class.TriaAccessor* %67)
  %69 = bitcast %class.TriaIterator.69* %10 to %class.TriaRawIterator.70*
  %70 = call %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70* %69)
  %71 = call zeroext i8 @_ZNK18TriaObjectAccessorILi1ELi3EE18boundary_indicatorEv(%class.TriaObjectAccessor.72* %70)
  %72 = zext i8 %71 to i32
  %73 = call dereferenceable(24) %class.Boundary* @_ZNK13TriangulationILi3EE12get_boundaryEj(%class.Triangulation* %68, i32 %72)
  br label %91

; <label>:74:                                     ; preds = %55
  %75 = load i32, i32* @x.155
  %76 = load i32, i32* @y.156
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %74, %originalBB1alteredBB
  %83 = load i32, i32* @x.155
  %84 = load i32, i32* @y.156
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %91

; <label>:91:                                     ; preds = %originalBBpart24, %64
  %92 = phi %class.Boundary* [ %73, %64 ], [ getelementptr inbounds (%class.StraightBoundary, %class.StraightBoundary* @_ZZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary, i32 0, i32 0), %originalBBpart24 ]
  store %class.Boundary* %92, %class.Boundary** %11, align 8
  %93 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %94 = load %class.Boundary*, %class.Boundary** %11, align 8
  %95 = bitcast %class.Boundary* %94 to void (%class.Point*, %class.Boundary*, %class.TriaIterator.69*)***
  %96 = load void (%class.Point*, %class.Boundary*, %class.TriaIterator.69*)**, void (%class.Point*, %class.Boundary*, %class.TriaIterator.69*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.Point*, %class.Boundary*, %class.TriaIterator.69*)*, void (%class.Point*, %class.Boundary*, %class.TriaIterator.69*)** %96, i64 2
  %98 = load void (%class.Point*, %class.Boundary*, %class.TriaIterator.69*)*, void (%class.Point*, %class.Boundary*, %class.TriaIterator.69*)** %97, align 8
  call void %98(%class.Point* sret %12, %class.Boundary* %94, %class.TriaIterator.69* dereferenceable(16) %10)
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE9push_backERKS1_(%"class.std::vector.58"* %93, %class.Point* dereferenceable(24) %12)
  br label %99

; <label>:99:                                     ; preds = %91
  %100 = load i32, i32* %9, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %9, align 4
  br label %52

; <label>:102:                                    ; preds = %originalBBpart2
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %7, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %8, align 4
  call void @__cxa_guard_abort(i64* @_ZGVZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary) #2
  br label %393

; <label>:106:                                    ; preds = %52
  br label %392

; <label>:107:                                    ; preds = %47
  %108 = load i32, i32* @x.155
  %109 = load i32, i32* @y.156
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %107, %originalBB6alteredBB
  %116 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %22, i32 0, i32 3
  %117 = load i32, i32* %116, align 8
  %118 = sub i32 %117, 1
  %119 = zext i32 %118 to i64
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %14)
  call void @_ZNSaI5PointILi3EEEC2Ev(%"class.std::allocator.60"* %15) #2
  %120 = load i32, i32* @x.155
  %121 = load i32, i32* @y.156
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.58"* %13, i64 %119, %class.Point* dereferenceable(24) %14, %"class.std::allocator.60"* dereferenceable(1) %15)
          to label %128 unwind label %334

; <label>:128:                                    ; preds = %originalBBpart212
  %129 = load i32, i32* @x.155
  %130 = load i32, i32* @y.156
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %128, %originalBB14alteredBB
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %15) #2
  store i32 0, i32* %16, align 4
  %137 = load i32, i32* @x.155
  %138 = load i32, i32* @y.156
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %145

; <label>:145:                                    ; preds = %331, %originalBBpart216
  %146 = load i32, i32* @x.155
  %147 = load i32, i32* @y.156
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %145, %originalBB18alteredBB
  %154 = load i32, i32* %16, align 4
  %155 = icmp ult i32 %154, 12
  %156 = load i32, i32* @x.155
  %157 = load i32, i32* @y.156
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %155, label %164, label %358

; <label>:164:                                    ; preds = %originalBBpart220
  %165 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %166 = bitcast %class.TriaIterator* %165 to %class.TriaRawIterator*
  %167 = invoke %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %166)
          to label %168 unwind label %338

; <label>:168:                                    ; preds = %164
  %169 = bitcast %class.CellAccessor* %167 to %class.TriaObjectAccessor*
  %170 = load i32, i32* %16, align 4
  invoke void @_ZNK18TriaObjectAccessorILi3ELi3EE4lineEj(%class.TriaIterator.69* sret %17, %class.TriaObjectAccessor* %169, i32 %170)
          to label %171 unwind label %338

; <label>:171:                                    ; preds = %168
  %172 = bitcast %class.TriaIterator.69* %17 to %class.TriaRawIterator.70*
  %173 = invoke %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70* %172)
          to label %174 unwind label %338

; <label>:174:                                    ; preds = %171
  %175 = invoke zeroext i1 @_ZNK18TriaObjectAccessorILi1ELi3EE11at_boundaryEv(%class.TriaObjectAccessor.72* %173)
          to label %176 unwind label %338

; <label>:176:                                    ; preds = %174
  br i1 %175, label %177, label %240

; <label>:177:                                    ; preds = %176
  %178 = load i32, i32* @x.155
  %179 = load i32, i32* @y.156
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %177, %originalBB22alteredBB
  %186 = bitcast %class.TriaIterator.69* %17 to %class.TriaRawIterator.70*
  %187 = load i32, i32* @x.155
  %188 = load i32, i32* @y.156
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  %195 = invoke %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70* %186)
          to label %196 unwind label %338

; <label>:196:                                    ; preds = %originalBBpart224
  %197 = bitcast %class.TriaObjectAccessor.72* %195 to %class.TriaAccessor*
  %198 = invoke dereferenceable(2352) %class.Triangulation* @_ZNK12TriaAccessorILi3EE17get_triangulationEv(%class.TriaAccessor* %197)
          to label %199 unwind label %338

; <label>:199:                                    ; preds = %196
  %200 = load i32, i32* @x.155
  %201 = load i32, i32* @y.156
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %199, %originalBB26alteredBB
  %208 = bitcast %class.TriaIterator.69* %17 to %class.TriaRawIterator.70*
  %209 = load i32, i32* @x.155
  %210 = load i32, i32* @y.156
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %217 = invoke %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70* %208)
          to label %218 unwind label %338

; <label>:218:                                    ; preds = %originalBBpart228
  %219 = invoke zeroext i8 @_ZNK18TriaObjectAccessorILi1ELi3EE18boundary_indicatorEv(%class.TriaObjectAccessor.72* %217)
          to label %220 unwind label %338

; <label>:220:                                    ; preds = %218
  %221 = zext i8 %219 to i32
  %222 = invoke dereferenceable(24) %class.Boundary* @_ZNK13TriangulationILi3EE12get_boundaryEj(%class.Triangulation* %198, i32 %221)
          to label %223 unwind label %338

; <label>:223:                                    ; preds = %220
  %224 = load i32, i32* @x.155
  %225 = load i32, i32* @y.156
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %223, %originalBB30alteredBB
  %232 = load i32, i32* @x.155
  %233 = load i32, i32* @y.156
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %241

; <label>:240:                                    ; preds = %176
  br label %241

; <label>:241:                                    ; preds = %240, %originalBBpart232
  %242 = phi %class.Boundary* [ %222, %originalBBpart232 ], [ getelementptr inbounds (%class.StraightBoundary, %class.StraightBoundary* @_ZZNK8MappingQILi3EE23add_line_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EEE17straight_boundary, i32 0, i32 0), %240 ]
  store %class.Boundary* %242, %class.Boundary** %18, align 8
  %243 = load %class.Boundary*, %class.Boundary** %18, align 8
  %244 = bitcast %class.Boundary* %243 to void (%class.Boundary*, %class.TriaIterator.69*, %"class.std::vector.58"*)***
  %245 = load void (%class.Boundary*, %class.TriaIterator.69*, %"class.std::vector.58"*)**, void (%class.Boundary*, %class.TriaIterator.69*, %"class.std::vector.58"*)*** %244, align 8
  %246 = getelementptr inbounds void (%class.Boundary*, %class.TriaIterator.69*, %"class.std::vector.58"*)*, void (%class.Boundary*, %class.TriaIterator.69*, %"class.std::vector.58"*)** %245, i64 4
  %247 = load void (%class.Boundary*, %class.TriaIterator.69*, %"class.std::vector.58"*)*, void (%class.Boundary*, %class.TriaIterator.69*, %"class.std::vector.58"*)** %246, align 8
  invoke void %247(%class.Boundary* %243, %class.TriaIterator.69* dereferenceable(16) %17, %"class.std::vector.58"* dereferenceable(24) %13)
          to label %248 unwind label %338

; <label>:248:                                    ; preds = %241
  %249 = load i32, i32* @x.155
  %250 = load i32, i32* @y.156
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %248, %originalBB34alteredBB
  %257 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %258 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %259 = load i32, i32* @x.155
  %260 = load i32, i32* @y.156
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  %267 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %258)
          to label %268 unwind label %338

; <label>:268:                                    ; preds = %originalBBpart236
  %269 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %class.Point* %267, %class.Point** %269, align 8
  %270 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.58"* %13)
          to label %271 unwind label %338

; <label>:271:                                    ; preds = %268
  %272 = load i32, i32* @x.155
  %273 = load i32, i32* @y.156
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %271, %originalBB38alteredBB
  %280 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %class.Point* %270, %class.Point** %280, align 8
  %281 = load i32, i32* @x.155
  %282 = load i32, i32* @y.156
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  %289 = invoke %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %13)
          to label %290 unwind label %338

; <label>:290:                                    ; preds = %originalBBpart240
  %291 = load i32, i32* @x.155
  %292 = load i32, i32* @y.156
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %290, %originalBB42alteredBB
  %299 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  store %class.Point* %289, %class.Point** %299, align 8
  %300 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  %301 = load %class.Point*, %class.Point** %300, align 8
  %302 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %303 = load %class.Point*, %class.Point** %302, align 8
  %304 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  %305 = load %class.Point*, %class.Point** %304, align 8
  %306 = load i32, i32* @x.155
  %307 = load i32, i32* @y.156
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EE6insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_(%"class.std::vector.58"* %257, %class.Point* %301, %class.Point* %303, %class.Point* %305)
          to label %314 unwind label %338

; <label>:314:                                    ; preds = %originalBBpart244
  %315 = load i32, i32* @x.155
  %316 = load i32, i32* @y.156
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %314, %originalBB46alteredBB
  %323 = load i32, i32* @x.155
  %324 = load i32, i32* @y.156
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %331

; <label>:331:                                    ; preds = %originalBBpart248
  %332 = load i32, i32* %16, align 4
  %333 = add i32 %332, 1
  store i32 %333, i32* %16, align 4
  br label %145

; <label>:334:                                    ; preds = %originalBBpart212
  %335 = landingpad { i8*, i32 }
          cleanup
  %336 = extractvalue { i8*, i32 } %335, 0
  store i8* %336, i8** %7, align 8
  %337 = extractvalue { i8*, i32 } %335, 1
  store i32 %337, i32* %8, align 4
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %15) #2
  br label %393

; <label>:338:                                    ; preds = %originalBBpart244, %originalBBpart240, %268, %originalBBpart236, %241, %220, %218, %originalBBpart228, %196, %originalBBpart224, %174, %171, %168, %164
  %339 = load i32, i32* @x.155
  %340 = load i32, i32* @y.156
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %338, %originalBB50alteredBB
  %347 = landingpad { i8*, i32 }
          cleanup
  %348 = extractvalue { i8*, i32 } %347, 0
  store i8* %348, i8** %7, align 8
  %349 = extractvalue { i8*, i32 } %347, 1
  store i32 %349, i32* %8, align 4
  %350 = load i32, i32* @x.155
  %351 = load i32, i32* @y.156
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %13)
          to label %375 unwind label %398

; <label>:358:                                    ; preds = %originalBBpart220
  %359 = load i32, i32* @x.155
  %360 = load i32, i32* @y.156
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %358, %originalBB54alteredBB
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %13)
  %367 = load i32, i32* @x.155
  %368 = load i32, i32* @y.156
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %392

; <label>:375:                                    ; preds = %originalBBpart252
  %376 = load i32, i32* @x.155
  %377 = load i32, i32* @y.156
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %375, %originalBB58alteredBB
  %384 = load i32, i32* @x.155
  %385 = load i32, i32* @y.156
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %393

; <label>:392:                                    ; preds = %originalBBpart256, %106
  ret void

; <label>:393:                                    ; preds = %originalBBpart260, %334, %102
  %394 = load i8*, i8** %7, align 8
  %395 = load i32, i32* %8, align 4
  %396 = insertvalue { i8*, i32 } undef, i8* %394, 0
  %397 = insertvalue { i8*, i32 } %396, i32 %395, 1
  resume { i8*, i32 } %397

; <label>:398:                                    ; preds = %originalBBpart252
  %399 = landingpad { i8*, i32 }
          catch i8* null
  %400 = extractvalue { i8*, i32 } %399, 0
  call void @__clang_call_terminate(i8* %400) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %28
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %74
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %107
  %401 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %22, i32 0, i32 3
  %402 = load i32, i32* %401, align 8
  %_ = sub i32 0, %402
  %gen = add i32 %_, 1
  %_7 = sub i32 0, %402
  %gen8 = add i32 %_7, 1
  %_9 = sub i32 %402, 1
  %gen10 = mul i32 %_9, 1
  %403 = sub i32 %402, 1
  %404 = zext i32 %403 to i64
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %14)
  call void @_ZNSaI5PointILi3EEEC2Ev(%"class.std::allocator.60"* %15) #2
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %128
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %15) #2
  store i32 0, i32* %16, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %145
  %405 = load i32, i32* %16, align 4
  %406 = icmp ult i32 %405, 12
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %177
  %407 = bitcast %class.TriaIterator.69* %17 to %class.TriaRawIterator.70*
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %199
  %408 = bitcast %class.TriaIterator.69* %17 to %class.TriaRawIterator.70*
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %223
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %248
  %409 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %410 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %271
  %411 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %class.Point* %270, %class.Point** %411, align 8
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %290
  %412 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  store %class.Point* %289, %class.Point** %412, align 8
  %413 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  %414 = load %class.Point*, %class.Point** %413, align 8
  %415 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %416 = load %class.Point*, %class.Point** %415, align 8
  %417 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  %418 = load %class.Point*, %class.Point** %417, align 8
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %314
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %338
  %419 = landingpad { i8*, i32 }
          cleanup
  %420 = extractvalue { i8*, i32 } %419, 0
  store i8* %420, i8** %7, align 8
  %421 = extractvalue { i8*, i32 } %419, 1
  store i32 %421, i32* %8, align 4
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %358
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %13)
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %375
  br label %originalBB58
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK18TriaObjectAccessorILi3ELi3EE4lineEj(%class.TriaIterator.69* noalias sret, %class.TriaObjectAccessor*, i32) #0 comdat align 2 {
  %4 = alloca %class.TriaObjectAccessor*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.TriaIterator.65, align 8
  store %class.TriaObjectAccessor* %1, %class.TriaObjectAccessor** %4, align 8
  store i32 %2, i32* %5, align 4
  %7 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [12 x [3 x i32]], [12 x [3 x i32]]* @_ZZNK18TriaObjectAccessorILi3ELi3EE4lineEjE12lookup_table, i64 0, i64 %9
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 0
  %12 = load i32, i32* %11, align 4
  call void @_ZNK18TriaObjectAccessorILi3ELi3EE4quadEj(%class.TriaIterator.65* sret %6, %class.TriaObjectAccessor* %7, i32 %12)
  %13 = bitcast %class.TriaIterator.65* %6 to %class.TriaRawIterator.66*
  %14 = call %class.TriaObjectAccessor.68* @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.66* %13)
  %15 = load i32, i32* %5, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [12 x [3 x i32]], [12 x [3 x i32]]* @_ZZNK18TriaObjectAccessorILi3ELi3EE4lineEjE12lookup_table, i64 0, i64 %16
  %18 = getelementptr inbounds [3 x i32], [3 x i32]* %17, i64 0, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = call zeroext i1 @_ZNK18TriaObjectAccessorILi3ELi3EE16face_orientationEj(%class.TriaObjectAccessor* %7, i32 %19)
  br i1 %20, label %21, label %27

; <label>:21:                                     ; preds = %3
  %22 = load i32, i32* %5, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [12 x [3 x i32]], [12 x [3 x i32]]* @_ZZNK18TriaObjectAccessorILi3ELi3EE4lineEjE12lookup_table, i64 0, i64 %23
  %25 = getelementptr inbounds [3 x i32], [3 x i32]* %24, i64 0, i64 1
  %26 = load i32, i32* %25, align 4
  br label %33

; <label>:27:                                     ; preds = %3
  %28 = load i32, i32* %5, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [12 x [3 x i32]], [12 x [3 x i32]]* @_ZZNK18TriaObjectAccessorILi3ELi3EE4lineEjE12lookup_table, i64 0, i64 %29
  %31 = getelementptr inbounds [3 x i32], [3 x i32]* %30, i64 0, i64 2
  %32 = load i32, i32* %31, align 4
  br label %33

; <label>:33:                                     ; preds = %27, %21
  %34 = phi i32 [ %26, %21 ], [ %32, %27 ]
  call void @_ZNK18TriaObjectAccessorILi2ELi3EE4lineEj(%class.TriaIterator.69* sret %0, %class.TriaObjectAccessor.68* %14, i32 %34)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEptEv(%class.TriaRawIterator.70*) #0 comdat align 2 {
  %2 = alloca %class.TriaRawIterator.70*, align 8
  store %class.TriaRawIterator.70* %0, %class.TriaRawIterator.70** %2, align 8
  %3 = load %class.TriaRawIterator.70*, %class.TriaRawIterator.70** %2, align 8
  %4 = call dereferenceable(16) %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEdeEv(%class.TriaRawIterator.70* %3)
  ret %class.TriaObjectAccessor.72* %4
}

declare zeroext i8 @_ZNK18TriaObjectAccessorILi1ELi3EE18boundary_indicatorEv(%class.TriaObjectAccessor.72*) #3

; Function Attrs: noinline uwtable
define weak_odr %"class.Mapping<3>::InternalDataBase"* @_ZNK8MappingQILi3EE8get_dataE11UpdateFlagsRK10QuadratureILi3EE(%class.MappingQ*, i32, %class.Quadrature* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MappingQ*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Quadrature*, align 8
  %7 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.MappingQ* %0, %class.MappingQ** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Quadrature* %2, %class.Quadrature** %6, align 8
  %10 = load %class.MappingQ*, %class.MappingQ** %4, align 8
  %11 = call i8* @_Znwm(i64 608) #13
  %12 = bitcast i8* %11 to %"class.MappingQ<3>::InternalData"*
  %13 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %10, i32 0, i32 7
  %14 = load i32, i32* %13, align 8
  invoke void @_ZN8MappingQILi3EE12InternalDataC1Ej(%"class.MappingQ<3>::InternalData"* %12, i32 %14)
          to label %15 unwind label %34

; <label>:15:                                     ; preds = %3
  store %"class.MappingQ<3>::InternalData"* %12, %"class.MappingQ<3>::InternalData"** %7, align 8
  %16 = bitcast %class.MappingQ* %10 to %class.MappingQ1*
  %17 = load i32, i32* %5, align 4
  %18 = load %class.Quadrature*, %class.Quadrature** %6, align 8
  %19 = load %class.Quadrature*, %class.Quadrature** %6, align 8
  %20 = getelementptr inbounds %class.Quadrature, %class.Quadrature* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %23 = bitcast %"class.MappingQ<3>::InternalData"* %22 to %"class.MappingQ1<3>::InternalData"*
  call void @_ZNK9MappingQ1ILi3EE12compute_dataE11UpdateFlagsRK10QuadratureILi3EEjRNS0_12InternalDataE(%class.MappingQ1* %16, i32 %17, %class.Quadrature* dereferenceable(80) %18, i32 %21, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %23)
  %24 = bitcast %class.MappingQ* %10 to %class.MappingQ1*
  %25 = load i32, i32* %5, align 4
  %26 = load %class.Quadrature*, %class.Quadrature** %6, align 8
  %27 = load %class.Quadrature*, %class.Quadrature** %6, align 8
  %28 = getelementptr inbounds %class.Quadrature, %class.Quadrature* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %31 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %30, i32 0, i32 3
  call void @_ZNK9MappingQ1ILi3EE12compute_dataE11UpdateFlagsRK10QuadratureILi3EEjRNS0_12InternalDataE(%class.MappingQ1* %24, i32 %25, %class.Quadrature* dereferenceable(80) %26, i32 %29, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %31)
  %32 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %33 = bitcast %"class.MappingQ<3>::InternalData"* %32 to %"class.Mapping<3>::InternalDataBase"*
  ret %"class.Mapping<3>::InternalDataBase"* %33

; <label>:34:                                     ; preds = %3
  %35 = load i32, i32* @x.161
  %36 = load i32, i32* @y.162
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %34, %originalBBalteredBB
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %8, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %9, align 4
  call void @_ZdlPv(i8* %11) #14
  %46 = load i32, i32* @x.161
  %47 = load i32, i32* @y.162
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %54

; <label>:54:                                     ; preds = %originalBBpart2
  %55 = load i8*, i8** %8, align 8
  %56 = load i32, i32* %9, align 4
  %57 = insertvalue { i8*, i32 } undef, i8* %55, 0
  %58 = insertvalue { i8*, i32 } %57, i32 %56, 1
  resume { i8*, i32 } %58

originalBBalteredBB:                              ; preds = %originalBB, %34
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %8, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %9, align 4
  call void @_ZdlPv(i8* %11) #14
  br label %originalBB
}

declare void @_ZNK9MappingQ1ILi3EE12compute_dataE11UpdateFlagsRK10QuadratureILi3EEjRNS0_12InternalDataE(%class.MappingQ1*, i32, %class.Quadrature* dereferenceable(80), i32, %"class.MappingQ1<3>::InternalData"* dereferenceable(288)) #3

; Function Attrs: noinline uwtable
define weak_odr %"class.Mapping<3>::InternalDataBase"* @_ZNK8MappingQILi3EE13get_face_dataE11UpdateFlagsRK10QuadratureILi2EE(%class.MappingQ*, i32, %class.Quadrature.135* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MappingQ*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Quadrature.135*, align 8
  %7 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %class.Quadrature, align 8
  store %class.MappingQ* %0, %class.MappingQ** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Quadrature.135* %2, %class.Quadrature.135** %6, align 8
  %11 = load %class.MappingQ*, %class.MappingQ** %4, align 8
  %12 = call i8* @_Znwm(i64 608) #13
  %13 = bitcast i8* %12 to %"class.MappingQ<3>::InternalData"*
  %14 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %11, i32 0, i32 7
  %15 = load i32, i32* %14, align 8
  invoke void @_ZN8MappingQILi3EE12InternalDataC1Ej(%"class.MappingQ<3>::InternalData"* %13, i32 %15)
          to label %16 unwind label %36

; <label>:16:                                     ; preds = %3
  store %"class.MappingQ<3>::InternalData"* %13, %"class.MappingQ<3>::InternalData"** %7, align 8
  %17 = load %class.Quadrature.135*, %class.Quadrature.135** %6, align 8
  call void @_ZN10QProjectorILi3EE20project_to_all_facesERK10QuadratureILi2EE(%class.Quadrature* sret %10, %class.Quadrature.135* dereferenceable(80) %17)
  %18 = bitcast %class.MappingQ* %11 to %class.MappingQ1*
  %19 = load i32, i32* %5, align 4
  %20 = load %class.Quadrature.135*, %class.Quadrature.135** %6, align 8
  %21 = getelementptr inbounds %class.Quadrature.135, %class.Quadrature.135* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %24 = bitcast %"class.MappingQ<3>::InternalData"* %23 to %"class.MappingQ1<3>::InternalData"*
  invoke void @_ZNK9MappingQ1ILi3EE17compute_face_dataE11UpdateFlagsRK10QuadratureILi3EEjRNS0_12InternalDataE(%class.MappingQ1* %18, i32 %19, %class.Quadrature* dereferenceable(80) %10, i32 %22, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %24)
          to label %25 unwind label %40

; <label>:25:                                     ; preds = %16
  %26 = bitcast %class.MappingQ* %11 to %class.MappingQ1*
  %27 = load i32, i32* %5, align 4
  %28 = load %class.Quadrature.135*, %class.Quadrature.135** %6, align 8
  %29 = getelementptr inbounds %class.Quadrature.135, %class.Quadrature.135* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %32 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %31, i32 0, i32 3
  invoke void @_ZNK9MappingQ1ILi3EE17compute_face_dataE11UpdateFlagsRK10QuadratureILi3EEjRNS0_12InternalDataE(%class.MappingQ1* %26, i32 %27, %class.Quadrature* dereferenceable(80) %10, i32 %30, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %32)
          to label %33 unwind label %40

; <label>:33:                                     ; preds = %25
  %34 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %35 = bitcast %"class.MappingQ<3>::InternalData"* %34 to %"class.Mapping<3>::InternalDataBase"*
  call void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature* %10)
  ret %"class.Mapping<3>::InternalDataBase"* %35

; <label>:36:                                     ; preds = %3
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %8, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %9, align 4
  call void @_ZdlPv(i8* %12) #14
  br label %61

; <label>:40:                                     ; preds = %25, %16
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  invoke void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature* %10)
          to label %44 unwind label %66

; <label>:44:                                     ; preds = %40
  %45 = load i32, i32* @x.163
  %46 = load i32, i32* @y.164
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %44, %originalBBalteredBB
  %53 = load i32, i32* @x.163
  %54 = load i32, i32* @y.164
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %61

; <label>:61:                                     ; preds = %originalBBpart2, %36
  %62 = load i8*, i8** %8, align 8
  %63 = load i32, i32* %9, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  resume { i8*, i32 } %65

; <label>:66:                                     ; preds = %40
  %67 = load i32, i32* @x.163
  %68 = load i32, i32* @y.164
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %66, %originalBB1alteredBB
  %75 = landingpad { i8*, i32 }
          catch i8* null
  %76 = extractvalue { i8*, i32 } %75, 0
  call void @__clang_call_terminate(i8* %76) #12
  %77 = load i32, i32* @x.163
  %78 = load i32, i32* @y.164
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %44
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %66
  %85 = landingpad { i8*, i32 }
          catch i8* null
  %86 = extractvalue { i8*, i32 } %85, 0
  call void @__clang_call_terminate(i8* %86) #12
  br label %originalBB1
}

declare void @_ZN10QProjectorILi3EE20project_to_all_facesERK10QuadratureILi2EE(%class.Quadrature* sret, %class.Quadrature.135* dereferenceable(80)) #3

declare void @_ZNK9MappingQ1ILi3EE17compute_face_dataE11UpdateFlagsRK10QuadratureILi3EEjRNS0_12InternalDataE(%class.MappingQ1*, i32, %class.Quadrature* dereferenceable(80), i32, %"class.MappingQ1<3>::InternalData"* dereferenceable(288)) #3

; Function Attrs: noinline uwtable
define weak_odr %"class.Mapping<3>::InternalDataBase"* @_ZNK8MappingQILi3EE16get_subface_dataE11UpdateFlagsRK10QuadratureILi2EE(%class.MappingQ*, i32, %class.Quadrature.135* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MappingQ*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Quadrature.135*, align 8
  %7 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %class.Quadrature, align 8
  store %class.MappingQ* %0, %class.MappingQ** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Quadrature.135* %2, %class.Quadrature.135** %6, align 8
  %11 = load %class.MappingQ*, %class.MappingQ** %4, align 8
  %12 = call i8* @_Znwm(i64 608) #13
  %13 = bitcast i8* %12 to %"class.MappingQ<3>::InternalData"*
  %14 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %11, i32 0, i32 7
  %15 = load i32, i32* %14, align 8
  invoke void @_ZN8MappingQILi3EE12InternalDataC1Ej(%"class.MappingQ<3>::InternalData"* %13, i32 %15)
          to label %16 unwind label %52

; <label>:16:                                     ; preds = %3
  store %"class.MappingQ<3>::InternalData"* %13, %"class.MappingQ<3>::InternalData"** %7, align 8
  %17 = load %class.Quadrature.135*, %class.Quadrature.135** %6, align 8
  call void @_ZN10QProjectorILi3EE23project_to_all_subfacesERK10QuadratureILi2EE(%class.Quadrature* sret %10, %class.Quadrature.135* dereferenceable(80) %17)
  %18 = bitcast %class.MappingQ* %11 to %class.MappingQ1*
  %19 = load i32, i32* %5, align 4
  %20 = load %class.Quadrature.135*, %class.Quadrature.135** %6, align 8
  %21 = getelementptr inbounds %class.Quadrature.135, %class.Quadrature.135* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %24 = bitcast %"class.MappingQ<3>::InternalData"* %23 to %"class.MappingQ1<3>::InternalData"*
  invoke void @_ZNK9MappingQ1ILi3EE17compute_face_dataE11UpdateFlagsRK10QuadratureILi3EEjRNS0_12InternalDataE(%class.MappingQ1* %18, i32 %19, %class.Quadrature* dereferenceable(80) %10, i32 %22, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %24)
          to label %25 unwind label %56

; <label>:25:                                     ; preds = %16
  %26 = load i32, i32* @x.165
  %27 = load i32, i32* @y.166
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = bitcast %class.MappingQ* %11 to %class.MappingQ1*
  %35 = load i32, i32* %5, align 4
  %36 = load %class.Quadrature.135*, %class.Quadrature.135** %6, align 8
  %37 = getelementptr inbounds %class.Quadrature.135, %class.Quadrature.135* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %40 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %39, i32 0, i32 3
  %41 = load i32, i32* @x.165
  %42 = load i32, i32* @y.166
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNK9MappingQ1ILi3EE17compute_face_dataE11UpdateFlagsRK10QuadratureILi3EEjRNS0_12InternalDataE(%class.MappingQ1* %34, i32 %35, %class.Quadrature* dereferenceable(80) %10, i32 %38, %"class.MappingQ1<3>::InternalData"* dereferenceable(288) %40)
          to label %49 unwind label %56

; <label>:49:                                     ; preds = %originalBBpart2
  %50 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %51 = bitcast %"class.MappingQ<3>::InternalData"* %50 to %"class.Mapping<3>::InternalDataBase"*
  call void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature* %10)
  ret %"class.Mapping<3>::InternalDataBase"* %51

; <label>:52:                                     ; preds = %3
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %8, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %9, align 4
  call void @_ZdlPv(i8* %12) #14
  br label %77

; <label>:56:                                     ; preds = %originalBBpart2, %16
  %57 = load i32, i32* @x.165
  %58 = load i32, i32* @y.166
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %56, %originalBB1alteredBB
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %8, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %9, align 4
  %68 = load i32, i32* @x.165
  %69 = load i32, i32* @y.166
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN10QuadratureILi3EED1Ev(%class.Quadrature* %10)
          to label %76 unwind label %82

; <label>:76:                                     ; preds = %originalBBpart24
  br label %77

; <label>:77:                                     ; preds = %76, %52
  %78 = load i8*, i8** %8, align 8
  %79 = load i32, i32* %9, align 4
  %80 = insertvalue { i8*, i32 } undef, i8* %78, 0
  %81 = insertvalue { i8*, i32 } %80, i32 %79, 1
  resume { i8*, i32 } %81

; <label>:82:                                     ; preds = %originalBBpart24
  %83 = landingpad { i8*, i32 }
          catch i8* null
  %84 = extractvalue { i8*, i32 } %83, 0
  call void @__clang_call_terminate(i8* %84) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %25
  %85 = bitcast %class.MappingQ* %11 to %class.MappingQ1*
  %86 = load i32, i32* %5, align 4
  %87 = load %class.Quadrature.135*, %class.Quadrature.135** %6, align 8
  %88 = getelementptr inbounds %class.Quadrature.135, %class.Quadrature.135* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %7, align 8
  %91 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %90, i32 0, i32 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %56
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %8, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %9, align 4
  br label %originalBB1
}

declare void @_ZN10QProjectorILi3EE23project_to_all_subfacesERK10QuadratureILi2EE(%class.Quadrature* sret, %class.Quadrature.135* dereferenceable(80)) #3

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE22compute_shapes_virtualERKSt6vectorI5PointILi3EESaIS3_EERN9MappingQ1ILi3EE12InternalDataE(%class.MappingQ*, %"class.std::vector.58"* dereferenceable(24), %"class.MappingQ1<3>::InternalData"* dereferenceable(288)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.MappingQ*, align 8
  %5 = alloca %"class.std::vector.58"*, align 8
  %6 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::vector.0", align 8
  %9 = alloca %"class.std::vector.103", align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %class.Tensor, align 8
  %13 = alloca %"class.std::vector.108", align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %4, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %5, align 8
  store %"class.MappingQ1<3>::InternalData"* %2, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %17 = load %class.MappingQ*, %class.MappingQ** %4, align 8
  %18 = load %"class.std::vector.58"*, %"class.std::vector.58"** %5, align 8
  %19 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %18)
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %7, align 4
  call void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.0"* %8)
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEC2Ev(%"class.std::vector.103"* %9)
          to label %21 unwind label %48

; <label>:21:                                     ; preds = %3
  %22 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %23 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %22, i32 0, i32 1
  %24 = invoke i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %23)
          to label %25 unwind label %52

; <label>:25:                                     ; preds = %21
  %26 = icmp ne i64 %24, 0
  br i1 %26, label %27, label %56

; <label>:27:                                     ; preds = %25
  %28 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 7
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEmd(%"class.std::vector.0"* %8, i64 %30, double 0.000000e+00)
          to label %31 unwind label %52

; <label>:31:                                     ; preds = %27
  %32 = load i32, i32* @x.167
  %33 = load i32, i32* @y.168
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %31, %originalBBalteredBB
  %40 = load i32, i32* @x.167
  %41 = load i32, i32* @y.168
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56

; <label>:48:                                     ; preds = %originalBBpart252, %3
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %10, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %11, align 4
  br label %414

; <label>:52:                                     ; preds = %originalBBpart248, %68, %66, %62, %56, %27, %21
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %10, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %11, align 4
  br label %396

; <label>:56:                                     ; preds = %originalBBpart2, %25
  %57 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %58 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %57, i32 0, i32 2
  %59 = invoke i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %58)
          to label %60 unwind label %52

; <label>:60:                                     ; preds = %56
  %61 = icmp ne i64 %59, 0
  br i1 %61, label %62, label %68

; <label>:62:                                     ; preds = %60
  %63 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 7
  %64 = load i32, i32* %63, align 8
  %65 = zext i32 %64 to i64
  invoke void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor* %12, i1 zeroext true)
          to label %66 unwind label %52

; <label>:66:                                     ; preds = %62
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.103"* %9, i64 %65, %class.Tensor* %12)
          to label %67 unwind label %52

; <label>:67:                                     ; preds = %66
  br label %68

; <label>:68:                                     ; preds = %67, %60
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2Ev(%"class.std::vector.108"* %13)
          to label %69 unwind label %52

; <label>:69:                                     ; preds = %68
  %70 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %71 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %70, i32 0, i32 1
  %72 = invoke i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %71)
          to label %73 unwind label %253

; <label>:73:                                     ; preds = %69
  %74 = icmp ne i64 %72, 0
  br i1 %74, label %97, label %75

; <label>:75:                                     ; preds = %73
  %76 = load i32, i32* @x.167
  %77 = load i32, i32* @y.168
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %75, %originalBB1alteredBB
  %84 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %85 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %84, i32 0, i32 2
  %86 = load i32, i32* @x.167
  %87 = load i32, i32* @y.168
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %94 = invoke i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %85)
          to label %95 unwind label %253

; <label>:95:                                     ; preds = %originalBBpart24
  %96 = icmp ne i64 %94, 0
  br i1 %96, label %97, label %344

; <label>:97:                                     ; preds = %95, %73
  %98 = load i32, i32* @x.167
  %99 = load i32, i32* @y.168
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %97, %originalBB6alteredBB
  store i32 0, i32* %14, align 4
  %106 = load i32, i32* @x.167
  %107 = load i32, i32* @y.168
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %114

; <label>:114:                                    ; preds = %324, %originalBBpart28
  %115 = load i32, i32* @x.167
  %116 = load i32, i32* @y.168
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %114, %originalBB10alteredBB
  %123 = load i32, i32* %14, align 4
  %124 = load i32, i32* %7, align 4
  %125 = icmp ult i32 %123, %124
  %126 = load i32, i32* @x.167
  %127 = load i32, i32* @y.168
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %125, label %134, label %327

; <label>:134:                                    ; preds = %originalBBpart212
  %135 = load i32, i32* @x.167
  %136 = load i32, i32* @y.168
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %134, %originalBB14alteredBB
  %143 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 6
  %144 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %143, align 8
  %145 = load %"class.std::vector.58"*, %"class.std::vector.58"** %5, align 8
  %146 = load i32, i32* %14, align 4
  %147 = zext i32 %146 to i64
  %148 = load i32, i32* @x.167
  %149 = load i32, i32* @y.168
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %156 = invoke dereferenceable(24) %class.Point* @_ZNKSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %145, i64 %147)
          to label %157 unwind label %253

; <label>:157:                                    ; preds = %originalBBpart216
  %158 = load i32, i32* @x.167
  %159 = load i32, i32* @y.168
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %157, %originalBB18alteredBB
  %166 = load i32, i32* @x.167
  %167 = load i32, i32* @y.168
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZNK24TensorProductPolynomialsILi3EE7computeERK5PointILi3EERSt6vectorIdSaIdEERS5_I6TensorILi1ELi3EESaISA_EERS5_IS9_ILi2ELi3EESaISE_EE(%class.TensorProductPolynomials* %144, %class.Point* dereferenceable(24) %156, %"class.std::vector.0"* dereferenceable(24) %8, %"class.std::vector.103"* dereferenceable(24) %9, %"class.std::vector.108"* dereferenceable(24) %13)
          to label %174 unwind label %253

; <label>:174:                                    ; preds = %originalBBpart220
  %175 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %176 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %175, i32 0, i32 1
  %177 = invoke i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %176)
          to label %178 unwind label %253

; <label>:178:                                    ; preds = %174
  %179 = load i32, i32* @x.167
  %180 = load i32, i32* @y.168
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %178, %originalBB22alteredBB
  %187 = icmp ne i64 %177, 0
  %188 = load i32, i32* @x.167
  %189 = load i32, i32* @y.168
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %187, label %196, label %274

; <label>:196:                                    ; preds = %originalBBpart224
  store i32 0, i32* %15, align 4
  br label %197

; <label>:197:                                    ; preds = %250, %196
  %198 = load i32, i32* %15, align 4
  %199 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 7
  %200 = load i32, i32* %199, align 8
  %201 = icmp ult i32 %198, %200
  br i1 %201, label %202, label %257

; <label>:202:                                    ; preds = %197
  %203 = load i32, i32* @x.167
  %204 = load i32, i32* @y.168
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %202, %originalBB26alteredBB
  %211 = load i32, i32* %15, align 4
  %212 = zext i32 %211 to i64
  %213 = load i32, i32* @x.167
  %214 = load i32, i32* @y.168
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  %221 = invoke dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %8, i64 %212)
          to label %222 unwind label %253

; <label>:222:                                    ; preds = %originalBBpart228
  %223 = load double, double* %221, align 8
  %224 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %225 = load i32, i32* %14, align 4
  %226 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 8
  %227 = load i32, i32* %15, align 4
  %228 = zext i32 %227 to i64
  %229 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %226, i64 %228)
          to label %230 unwind label %253

; <label>:230:                                    ; preds = %222
  %231 = load i32, i32* %229, align 4
  %232 = invoke dereferenceable(8) double* @_ZN9MappingQ1ILi3EE12InternalData5shapeEjj(%"class.MappingQ1<3>::InternalData"* %224, i32 %225, i32 %231)
          to label %233 unwind label %253

; <label>:233:                                    ; preds = %230
  %234 = load i32, i32* @x.167
  %235 = load i32, i32* @y.168
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %233, %originalBB30alteredBB
  store double %223, double* %232, align 8
  %242 = load i32, i32* @x.167
  %243 = load i32, i32* @y.168
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %250

; <label>:250:                                    ; preds = %originalBBpart232
  %251 = load i32, i32* %15, align 4
  %252 = add i32 %251, 1
  store i32 %252, i32* %15, align 4
  br label %197

; <label>:253:                                    ; preds = %316, %originalBBpart240, %290, %286, %274, %230, %222, %originalBBpart228, %174, %originalBBpart220, %originalBBpart216, %originalBBpart24, %69
  %254 = landingpad { i8*, i32 }
          cleanup
  %255 = extractvalue { i8*, i32 } %254, 0
  store i8* %255, i8** %10, align 8
  %256 = extractvalue { i8*, i32 } %254, 1
  store i32 %256, i32* %11, align 4
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.108"* %13)
          to label %379 unwind label %437

; <label>:257:                                    ; preds = %197
  %258 = load i32, i32* @x.167
  %259 = load i32, i32* @y.168
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %257, %originalBB34alteredBB
  %266 = load i32, i32* @x.167
  %267 = load i32, i32* @y.168
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %274

; <label>:274:                                    ; preds = %originalBBpart236, %originalBBpart224
  %275 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %276 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %275, i32 0, i32 2
  %277 = invoke i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %276)
          to label %278 unwind label %253

; <label>:278:                                    ; preds = %274
  %279 = icmp ne i64 %277, 0
  br i1 %279, label %280, label %323

; <label>:280:                                    ; preds = %278
  store i32 0, i32* %16, align 4
  br label %281

; <label>:281:                                    ; preds = %319, %280
  %282 = load i32, i32* %16, align 4
  %283 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 7
  %284 = load i32, i32* %283, align 8
  %285 = icmp ult i32 %282, %284
  br i1 %285, label %286, label %322

; <label>:286:                                    ; preds = %281
  %287 = load i32, i32* %16, align 4
  %288 = zext i32 %287 to i64
  %289 = invoke dereferenceable(24) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.103"* %9, i64 %288)
          to label %290 unwind label %253

; <label>:290:                                    ; preds = %286
  %291 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %292 = load i32, i32* %14, align 4
  %293 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 8
  %294 = load i32, i32* %16, align 4
  %295 = zext i32 %294 to i64
  %296 = invoke dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"* %293, i64 %295)
          to label %297 unwind label %253

; <label>:297:                                    ; preds = %290
  %298 = load i32, i32* @x.167
  %299 = load i32, i32* @y.168
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %297, %originalBB38alteredBB
  %306 = load i32, i32* %296, align 4
  %307 = load i32, i32* @x.167
  %308 = load i32, i32* @y.168
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  %315 = invoke dereferenceable(24) %class.Tensor* @_ZN9MappingQ1ILi3EE12InternalData10derivativeEjj(%"class.MappingQ1<3>::InternalData"* %291, i32 %292, i32 %306)
          to label %316 unwind label %253

; <label>:316:                                    ; preds = %originalBBpart240
  %317 = invoke dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %315, %class.Tensor* dereferenceable(24) %289)
          to label %318 unwind label %253

; <label>:318:                                    ; preds = %316
  br label %319

; <label>:319:                                    ; preds = %318
  %320 = load i32, i32* %16, align 4
  %321 = add i32 %320, 1
  store i32 %321, i32* %16, align 4
  br label %281

; <label>:322:                                    ; preds = %281
  br label %323

; <label>:323:                                    ; preds = %322, %278
  br label %324

; <label>:324:                                    ; preds = %323
  %325 = load i32, i32* %14, align 4
  %326 = add i32 %325, 1
  store i32 %326, i32* %14, align 4
  br label %114

; <label>:327:                                    ; preds = %originalBBpart212
  %328 = load i32, i32* @x.167
  %329 = load i32, i32* @y.168
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %327, %originalBB42alteredBB
  %336 = load i32, i32* @x.167
  %337 = load i32, i32* @y.168
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %344

; <label>:344:                                    ; preds = %originalBBpart244, %95
  %345 = load i32, i32* @x.167
  %346 = load i32, i32* @y.168
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %344, %originalBB46alteredBB
  %353 = load i32, i32* @x.167
  %354 = load i32, i32* @y.168
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.108"* %13)
          to label %361 unwind label %52

; <label>:361:                                    ; preds = %originalBBpart248
  %362 = load i32, i32* @x.167
  %363 = load i32, i32* @y.168
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %361, %originalBB50alteredBB
  %370 = load i32, i32* @x.167
  %371 = load i32, i32* @y.168
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.103"* %9)
          to label %378 unwind label %48

; <label>:378:                                    ; preds = %originalBBpart252
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %8)
  ret void

; <label>:379:                                    ; preds = %253
  %380 = load i32, i32* @x.167
  %381 = load i32, i32* @y.168
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %379, %originalBB54alteredBB
  %388 = load i32, i32* @x.167
  %389 = load i32, i32* @y.168
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %396

; <label>:396:                                    ; preds = %originalBBpart256, %52
  %397 = load i32, i32* @x.167
  %398 = load i32, i32* @y.168
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %396, %originalBB58alteredBB
  %405 = load i32, i32* @x.167
  %406 = load i32, i32* @y.168
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.103"* %9)
          to label %413 unwind label %437

; <label>:413:                                    ; preds = %originalBBpart260
  br label %414

; <label>:414:                                    ; preds = %413, %48
  %415 = load i32, i32* @x.167
  %416 = load i32, i32* @y.168
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %414, %originalBB62alteredBB
  %423 = load i32, i32* @x.167
  %424 = load i32, i32* @y.168
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %8)
          to label %431 unwind label %437

; <label>:431:                                    ; preds = %originalBBpart264
  br label %432

; <label>:432:                                    ; preds = %431
  %433 = load i8*, i8** %10, align 8
  %434 = load i32, i32* %11, align 4
  %435 = insertvalue { i8*, i32 } undef, i8* %433, 0
  %436 = insertvalue { i8*, i32 } %435, i32 %434, 1
  resume { i8*, i32 } %436

; <label>:437:                                    ; preds = %originalBBpart264, %originalBBpart260, %253
  %438 = landingpad { i8*, i32 }
          catch i8* null
  %439 = extractvalue { i8*, i32 } %438, 0
  call void @__clang_call_terminate(i8* %439) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %31
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %75
  %440 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %6, align 8
  %441 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %440, i32 0, i32 2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %97
  store i32 0, i32* %14, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %114
  %442 = load i32, i32* %14, align 4
  %443 = load i32, i32* %7, align 4
  %444 = icmp ult i32 %442, %443
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %134
  %445 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 6
  %446 = load %class.TensorProductPolynomials*, %class.TensorProductPolynomials** %445, align 8
  %447 = load %"class.std::vector.58"*, %"class.std::vector.58"** %5, align 8
  %448 = load i32, i32* %14, align 4
  %449 = zext i32 %448 to i64
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %157
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %178
  %450 = icmp ne i64 %177, 0
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %202
  %451 = load i32, i32* %15, align 4
  %452 = zext i32 %451 to i64
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %233
  store double %223, double* %232, align 8
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %257
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %297
  %453 = load i32, i32* %296, align 4
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %327
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %344
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %361
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %379
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %396
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %414
  br label %originalBB62
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %2, align 8
  %3 = load %"class.std::vector.58"*, %"class.std::vector.58"** %2, align 8
  %4 = bitcast %"class.std::vector.58"* %3 to %"struct.std::_Vector_base.59"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Point*, %class.Point** %7, align 8
  %9 = bitcast %"class.std::vector.58"* %3 to %"struct.std::_Vector_base.59"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Point*, %class.Point** %12, align 8
  %14 = ptrtoint %class.Point* %8 to i64
  %15 = ptrtoint %class.Point* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.0"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.1"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEC2Ev(%"class.std::vector.103"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.103"*, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %2, align 8
  %3 = load %"class.std::vector.103"*, %"class.std::vector.103"** %2, align 8
  %4 = bitcast %"class.std::vector.103"* %3 to %"struct.std::_Vector_base.104"*
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EEC2Ev(%"struct.std::_Vector_base.104"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.175
  %3 = load i32, i32* @y.176
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load double*, double** %15, align 8
  %17 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = ptrtoint double* %16 to i64
  %23 = ptrtoint double* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 8
  %26 = load i32, i32* @x.175
  %27 = load i32, i32* @y.176
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %34, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %36 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %37 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load double*, double** %39, align 8
  %41 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load double*, double** %44, align 8
  %46 = ptrtoint double* %40 to i64
  %47 = ptrtoint double* %45 to i64
  %_ = sub i64 0, %46
  %gen = add i64 %_, %47
  %_1 = shl i64 %46, %47
  %_2 = shl i64 %46, %47
  %48 = sub i64 %46, %47
  %_3 = sub i64 0, %48
  %gen4 = add i64 %_3, 8
  %_5 = sub i64 0, %48
  %gen6 = add i64 %_5, 8
  %_7 = shl i64 %48, 8
  %_8 = sub i64 %48, 8
  %gen9 = mul i64 %_8, 8
  %_10 = sub i64 %48, 8
  %gen11 = mul i64 %_10, 8
  %_12 = sub i64 %48, 8
  %gen13 = mul i64 %_12, 8
  %_14 = sub i64 0, %48
  %gen15 = add i64 %_14, 8
  %_16 = shl i64 %48, 8
  %49 = sdiv exact i64 %48, 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE6resizeEmd(%"class.std::vector.0"*, i64, double) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.144", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store double %2, double* %6, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %8)
  %11 = icmp ugt i64 %9, %10
  br i1 %11, label %12, label %20

; <label>:12:                                     ; preds = %3
  %13 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %8)
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %7, i32 0, i32 0
  store double* %13, double** %14, align 8
  %15 = load i64, i64* %5, align 8
  %16 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %8)
  %17 = sub i64 %15, %16
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %7, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  call void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(%"class.std::vector.0"* %8, double* %19, i64 %17, double* dereferenceable(8) %6)
  br label %49

; <label>:20:                                     ; preds = %3
  %21 = load i32, i32* @x.177
  %22 = load i32, i32* @y.178
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i64, i64* %5, align 8
  %30 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %8)
  %31 = icmp ult i64 %29, %30
  %32 = load i32, i32* @x.177
  %33 = load i32, i32* @y.178
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %48

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = bitcast %"class.std::vector.0"* %8 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load double*, double** %44, align 8
  %46 = load i64, i64* %5, align 8
  %47 = getelementptr inbounds double, double* %45, i64 %46
  call void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(%"class.std::vector.0"* %8, double* %47)
  br label %48

; <label>:48:                                     ; preds = %40, %originalBBpart2
  br label %49

; <label>:49:                                     ; preds = %48, %12
  %50 = load i32, i32* @x.177
  %51 = load i32, i32* @y.178
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i32, i32* @x.177
  %59 = load i32, i32* @y.178
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %20
  %66 = load i64, i64* %5, align 8
  %67 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %8)
  %68 = icmp ult i64 %66, %67
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.103"*, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %2, align 8
  %3 = load %"class.std::vector.103"*, %"class.std::vector.103"** %2, align 8
  %4 = bitcast %"class.std::vector.103"* %3 to %"struct.std::_Vector_base.104"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %class.Tensor*, %class.Tensor** %7, align 8
  %9 = bitcast %"class.std::vector.103"* %3 to %"struct.std::_Vector_base.104"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %class.Tensor*, %class.Tensor** %12, align 8
  %14 = ptrtoint %class.Tensor* %8 to i64
  %15 = ptrtoint %class.Tensor* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.103"*, i64, %class.Tensor*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.103"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.145", align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.103"*, %"class.std::vector.103"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %7)
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %35

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.181
  %13 = load i32, i32* @y.182
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = call %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE3endEv(%"class.std::vector.103"* %7)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %6, i32 0, i32 0
  store %class.Tensor* %20, %class.Tensor** %21, align 8
  %22 = load i64, i64* %5, align 8
  %23 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %7)
  %24 = sub i64 %22, %23
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %6, i32 0, i32 0
  %26 = load %class.Tensor*, %class.Tensor** %25, align 8
  call void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.103"* %7, %class.Tensor* %26, i64 %24, %class.Tensor* dereferenceable(24) %2)
  %27 = load i32, i32* @x.181
  %28 = load i32, i32* @y.182
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %64

; <label>:35:                                     ; preds = %3
  %36 = load i32, i32* @x.181
  %37 = load i32, i32* @y.182
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB2, label %originalBB2alteredBB

originalBB2:                                      ; preds = %35, %originalBB2alteredBB
  %44 = load i64, i64* %5, align 8
  %45 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %7)
  %46 = icmp ult i64 %44, %45
  %47 = load i32, i32* @x.181
  %48 = load i32, i32* @y.182
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB2alteredBB

originalBBpart24:                                 ; preds = %originalBB2
  br i1 %46, label %55, label %63

; <label>:55:                                     ; preds = %originalBBpart24
  %56 = bitcast %"class.std::vector.103"* %7 to %"struct.std::_Vector_base.104"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %56, i32 0, i32 0
  %58 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %57 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %58, i32 0, i32 0
  %60 = load %class.Tensor*, %class.Tensor** %59, align 8
  %61 = load i64, i64* %5, align 8
  %62 = getelementptr inbounds %class.Tensor, %class.Tensor* %60, i64 %61
  call void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.103"* %7, %class.Tensor* %62)
  br label %63

; <label>:63:                                     ; preds = %55, %originalBBpart24
  br label %64

; <label>:64:                                     ; preds = %63, %originalBBpart2
  %65 = load i32, i32* @x.181
  %66 = load i32, i32* @y.182
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = load i32, i32* @x.181
  %74 = load i32, i32* @y.182
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %81 = call %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE3endEv(%"class.std::vector.103"* %7)
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %6, i32 0, i32 0
  store %class.Tensor* %81, %class.Tensor** %82, align 8
  %83 = load i64, i64* %5, align 8
  %84 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %7)
  %_ = shl i64 %83, %84
  %_1 = sub i64 %83, %84
  %gen = mul i64 %_1, %84
  %85 = sub i64 %83, %84
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %6, i32 0, i32 0
  %87 = load %class.Tensor*, %class.Tensor** %86, align 8
  call void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.103"* %7, %class.Tensor* %87, i64 %85, %class.Tensor* dereferenceable(24) %2)
  br label %originalBB

originalBB2alteredBB:                             ; preds = %originalBB2, %35
  %88 = load i64, i64* %5, align 8
  %89 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %7)
  %90 = icmp ult i64 %88, %89
  br label %originalBB2

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EEC2Eb(%class.Tensor*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %class.Tensor*, %class.Tensor** %3, align 8
  %8 = load i8, i8* %4, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %39

; <label>:10:                                     ; preds = %2
  store i32 0, i32* %5, align 4
  br label %11

; <label>:11:                                     ; preds = %35, %10
  %12 = load i32, i32* @x.183
  %13 = load i32, i32* @y.184
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* %5, align 4
  %21 = icmp ne i32 %20, 3
  %22 = load i32, i32* @x.183
  %23 = load i32, i32* @y.184
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %38

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = getelementptr inbounds %class.Tensor, %class.Tensor* %7, i32 0, i32 0
  %32 = load i32, i32* %5, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [3 x double], [3 x double]* %31, i64 0, i64 %33
  store double 0.000000e+00, double* %34, align 8
  br label %35

; <label>:35:                                     ; preds = %30
  %36 = load i32, i32* %5, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %5, align 4
  br label %11

; <label>:38:                                     ; preds = %originalBBpart2
  br label %39

; <label>:39:                                     ; preds = %38, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %11
  %40 = load i32, i32* %5, align 4
  %41 = icmp ne i32 %40, 3
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EEC2Ev(%"class.std::vector.108"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::vector.108"*, align 8
  store %"class.std::vector.108"* %0, %"class.std::vector.108"** %2, align 8
  %3 = load %"class.std::vector.108"*, %"class.std::vector.108"** %2, align 8
  %4 = bitcast %"class.std::vector.108"* %3 to %"struct.std::_Vector_base.109"*
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EEC2Ev(%"struct.std::_Vector_base.109"* %4)
  ret void
}

declare void @_ZNK24TensorProductPolynomialsILi3EE7computeERK5PointILi3EERSt6vectorIdSaIdEERS5_I6TensorILi1ELi3EESaISA_EERS5_IS9_ILi2ELi3EESaISE_EE(%class.TensorProductPolynomials*, %class.Point* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.103"* dereferenceable(24), %"class.std::vector.108"* dereferenceable(24)) #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Point* @_ZNKSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.58"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.58"*, %"class.std::vector.58"** %3, align 8
  %6 = bitcast %"class.std::vector.58"* %5 to %"struct.std::_Vector_base.59"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Point*, %class.Point** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Point, %class.Point* %10, i64 %11
  ret %class.Point* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.189
  %4 = load i32, i32* @y.190
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.0"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %14 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds double, double* %18, i64 %19
  %21 = load i32, i32* @x.189
  %22 = load i32, i32* @y.190
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds double, double* %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) double* @_ZN9MappingQ1ILi3EE12InternalData5shapeEjj(%"class.MappingQ1<3>::InternalData"*, i32, i32) #0 comdat align 2 {
  %4 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %"class.MappingQ1<3>::InternalData"* %0, %"class.MappingQ1<3>::InternalData"** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %4, align 8
  %8 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %7, i32 0, i32 1
  %9 = load i32, i32* %5, align 4
  %10 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %7, i32 0, i32 10
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %9, %11
  %13 = load i32, i32* %6, align 4
  %14 = add i32 %12, %13
  %15 = zext i32 %14 to i64
  %16 = call dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.0"* %8, i64 %15)
  ret double* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt6vectorIjSaIjEEixEm(%"class.std::vector.5"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.103"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.103"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.103"*, %"class.std::vector.103"** %3, align 8
  %6 = bitcast %"class.std::vector.103"* %5 to %"struct.std::_Vector_base.104"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Tensor, %class.Tensor* %10, i64 %11
  ret %class.Tensor* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN9MappingQ1ILi3EE12InternalData10derivativeEjj(%"class.MappingQ1<3>::InternalData"*, i32, i32) #0 comdat align 2 {
  %4 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %"class.MappingQ1<3>::InternalData"* %0, %"class.MappingQ1<3>::InternalData"** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %4, align 8
  %8 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %7, i32 0, i32 2
  %9 = load i32, i32* %5, align 4
  %10 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %7, i32 0, i32 10
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %9, %11
  %13 = load i32, i32* %6, align 4
  %14 = add i32 %12, %13
  %15 = zext i32 %14 to i64
  %16 = call dereferenceable(24) %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EEixEm(%"class.std::vector.103"* %8, i64 %15)
  ret %class.Tensor* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %6 = load %class.Tensor*, %class.Tensor** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %originalBBpart2, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %40

; <label>:10:                                     ; preds = %7
  %11 = load %class.Tensor*, %class.Tensor** %4, align 8
  %12 = getelementptr inbounds %class.Tensor, %class.Tensor* %11, i32 0, i32 0
  %13 = load i32, i32* %5, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 %14
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %18 = load i32, i32* %5, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [3 x double], [3 x double]* %17, i64 0, i64 %19
  store double %16, double* %20, align 8
  br label %21

; <label>:21:                                     ; preds = %10
  %22 = load i32, i32* @x.199
  %23 = load i32, i32* @y.200
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i32, i32* %5, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %5, align 4
  %32 = load i32, i32* @x.199
  %33 = load i32, i32* @y.200
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %7

; <label>:40:                                     ; preds = %7
  ret %class.Tensor* %6

originalBBalteredBB:                              ; preds = %originalBB, %21
  %41 = load i32, i32* %5, align 4
  %_ = shl i32 %41, 1
  %_1 = shl i32 %41, 1
  %_2 = sub i32 0, %41
  %gen = add i32 %_2, 1
  %_3 = sub i32 0, %41
  %gen4 = add i32 %_3, 1
  %_5 = sub i32 0, %41
  %gen6 = add i32 %_5, 1
  %_7 = sub i32 %41, 1
  %gen8 = mul i32 %_7, 1
  %42 = add i32 %41, 1
  store i32 %42, i32* %5, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.108"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.201
  %3 = load i32, i32* @y.202
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.108"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::vector.108"* %0, %"class.std::vector.108"** %10, align 8
  %13 = load %"class.std::vector.108"*, %"class.std::vector.108"** %10, align 8
  %14 = bitcast %"class.std::vector.108"* %13 to %"struct.std::_Vector_base.109"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.Tensor.113*, %class.Tensor.113** %17, align 8
  %19 = bitcast %"class.std::vector.108"* %13 to %"struct.std::_Vector_base.109"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %20 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %21, i32 0, i32 1
  %23 = load %class.Tensor.113*, %class.Tensor.113** %22, align 8
  %24 = bitcast %"class.std::vector.108"* %13 to %"struct.std::_Vector_base.109"*
  %25 = load i32, i32* @x.201
  %26 = load i32, i32* @y.202
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %33 = invoke dereferenceable(1) %"class.std::allocator.110"* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.109"* %24)
          to label %34 unwind label %53

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.201
  %36 = load i32, i32* @y.202
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i32, i32* @x.201
  %44 = load i32, i32* @y.202
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt8_DestroyIP6TensorILi2ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor.113* %18, %class.Tensor.113* %23, %"class.std::allocator.110"* dereferenceable(1) %33)
          to label %51 unwind label %53

; <label>:51:                                     ; preds = %originalBBpart24
  %52 = bitcast %"class.std::vector.108"* %13 to %"struct.std::_Vector_base.109"*
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.109"* %52)
  ret void

; <label>:53:                                     ; preds = %originalBBpart24, %originalBBpart2
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %11, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %12, align 4
  %57 = bitcast %"class.std::vector.108"* %13 to %"struct.std::_Vector_base.109"*
  invoke void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.109"* %57)
          to label %58 unwind label %64

; <label>:58:                                     ; preds = %53
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %11, align 8
  %61 = load i32, i32* %12, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %53
  %65 = load i32, i32* @x.201
  %66 = load i32, i32* @y.202
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #12
  %75 = load i32, i32* @x.201
  %76 = load i32, i32* @y.202
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca %"class.std::vector.108"*, align 8
  %84 = alloca i8*
  %85 = alloca i32
  store %"class.std::vector.108"* %0, %"class.std::vector.108"** %83, align 8
  %86 = load %"class.std::vector.108"*, %"class.std::vector.108"** %83, align 8
  %87 = bitcast %"class.std::vector.108"* %86 to %"struct.std::_Vector_base.109"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %88 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %89, i32 0, i32 0
  %91 = load %class.Tensor.113*, %class.Tensor.113** %90, align 8
  %92 = bitcast %"class.std::vector.108"* %86 to %"struct.std::_Vector_base.109"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %92, i32 0, i32 0
  %94 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %93 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %94, i32 0, i32 1
  %96 = load %class.Tensor.113*, %class.Tensor.113** %95, align 8
  %97 = bitcast %"class.std::vector.108"* %86 to %"struct.std::_Vector_base.109"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  call void @__clang_call_terminate(i8* %99) #12
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.103"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.103"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %2, align 8
  %5 = load %"class.std::vector.103"*, %"class.std::vector.103"** %2, align 8
  %6 = bitcast %"class.std::vector.103"* %5 to %"struct.std::_Vector_base.104"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  %11 = bitcast %"class.std::vector.103"* %5 to %"struct.std::_Vector_base.104"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %class.Tensor*, %class.Tensor** %14, align 8
  %16 = bitcast %"class.std::vector.103"* %5 to %"struct.std::_Vector_base.104"*
  %17 = invoke dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %16)
          to label %18 unwind label %21

; <label>:18:                                     ; preds = %1
  invoke void @_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor* %10, %class.Tensor* %15, %"class.std::allocator.105"* dereferenceable(1) %17)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %18
  %20 = bitcast %"class.std::vector.103"* %5 to %"struct.std::_Vector_base.104"*
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.104"* %20)
  ret void

; <label>:21:                                     ; preds = %18, %1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = bitcast %"class.std::vector.103"* %5 to %"struct.std::_Vector_base.104"*
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.104"* %25)
          to label %26 unwind label %48

; <label>:26:                                     ; preds = %21
  %27 = load i32, i32* @x.203
  %28 = load i32, i32* @y.204
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i32, i32* @x.203
  %36 = load i32, i32* @y.204
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43

; <label>:43:                                     ; preds = %originalBBpart2
  %44 = load i8*, i8** %3, align 8
  %45 = load i32, i32* %4, align 4
  %46 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47

; <label>:48:                                     ; preds = %21
  %49 = load i32, i32* @x.203
  %50 = load i32, i32* @y.204
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  call void @__clang_call_terminate(i8* %58) #12
  %59 = load i32, i32* @x.203
  %60 = load i32, i32* @y.204
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %26
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  call void @__clang_call_terminate(i8* %68) #12
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.205
  %3 = load i32, i32* @y.206
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.0"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %14 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %20 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %21, i32 0, i32 1
  %23 = load double*, double** %22, align 8
  %24 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  %25 = load i32, i32* @x.205
  %26 = load i32, i32* @y.206
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %33 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %24)
          to label %34 unwind label %53

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i32, i32* @x.205
  %36 = load i32, i32* @y.206
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load i32, i32* @x.205
  %44 = load i32, i32* @y.206
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %18, double* %23, %"class.std::allocator.2"* dereferenceable(1) %33)
          to label %51 unwind label %53

; <label>:51:                                     ; preds = %originalBBpart24
  %52 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.1"* %52)
  ret void

; <label>:53:                                     ; preds = %originalBBpart24, %originalBBpart2
  %54 = load i32, i32* @x.205
  %55 = load i32, i32* @y.206
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %11, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %12, align 4
  %65 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  %66 = load i32, i32* @x.205
  %67 = load i32, i32* @y.206
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.1"* %65)
          to label %74 unwind label %80

; <label>:74:                                     ; preds = %originalBBpart28
  br label %75

; <label>:75:                                     ; preds = %74
  %76 = load i8*, i8** %11, align 8
  %77 = load i32, i32* %12, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  resume { i8*, i32 } %79

; <label>:80:                                     ; preds = %originalBBpart28
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %1
  %83 = alloca %"class.std::vector.0"*, align 8
  %84 = alloca i8*
  %85 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %83, align 8
  %86 = load %"class.std::vector.0"*, %"class.std::vector.0"** %83, align 8
  %87 = bitcast %"class.std::vector.0"* %86 to %"struct.std::_Vector_base.1"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %88 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %89, i32 0, i32 0
  %91 = load double*, double** %90, align 8
  %92 = bitcast %"class.std::vector.0"* %86 to %"struct.std::_Vector_base.1"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %92, i32 0, i32 0
  %94 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %93 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %94, i32 0, i32 1
  %96 = load double*, double** %95, align 8
  %97 = bitcast %"class.std::vector.0"* %86 to %"struct.std::_Vector_base.1"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %11, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %12, align 4
  %101 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2EdE6n_rowsEv(%class.Table*) #1 comdat align 2 {
  %2 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %2, align 8
  %3 = load %class.Table*, %class.Table** %2, align 8
  %4 = bitcast %class.Table* %3 to %class.TableBase*
  %5 = getelementptr inbounds %class.TableBase, %class.TableBase* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 0)
  ret i32 %7
}

declare void @_ZN6QGaussILi3EEC1Ej(%class.QGauss*, i32) unnamed_addr #3

declare void @_ZNK9MappingQ1ILi3EE14compute_shapesERKSt6vectorI5PointILi3EESaIS3_EERNS0_12InternalDataE(%class.MappingQ1*, %"class.std::vector.58"* dereferenceable(24), %"class.MappingQ1<3>::InternalData"* dereferenceable(288)) #3

declare dereferenceable(24) %"class.std::vector.58"* @_ZNK10QuadratureILi3EE10get_pointsEv(%class.Quadrature*) #3

declare void @_ZN10FullMatrixIdEC1Ej(%class.FullMatrix*, i32) unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_Z8contractILi3EEdRK6TensorILi1EXT_EES3_(%class.Tensor* dereferenceable(24), %class.Tensor* dereferenceable(24)) #1 comdat {
  %3 = load i32, i32* @x.209
  %4 = load i32, i32* @y.210
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca double, align 8
  %14 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store %class.Tensor* %1, %class.Tensor** %12, align 8
  store double 0.000000e+00, double* %13, align 8
  store i32 0, i32* %14, align 4
  %15 = load i32, i32* @x.209
  %16 = load i32, i32* @y.210
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %23

; <label>:23:                                     ; preds = %52, %originalBBpart2
  %24 = load i32, i32* @x.209
  %25 = load i32, i32* @y.210
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load i32, i32* %14, align 4
  %33 = icmp ult i32 %32, 3
  %34 = load i32, i32* @x.209
  %35 = load i32, i32* @y.210
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %42, label %55

; <label>:42:                                     ; preds = %originalBBpart24
  %43 = load %class.Tensor*, %class.Tensor** %11, align 8
  %44 = load i32, i32* %14, align 4
  %45 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %43, i32 %44)
  %46 = load %class.Tensor*, %class.Tensor** %12, align 8
  %47 = load i32, i32* %14, align 4
  %48 = call double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor* %46, i32 %47)
  %49 = fmul double %45, %48
  %50 = load double, double* %13, align 8
  %51 = fadd double %50, %49
  store double %51, double* %13, align 8
  br label %52

; <label>:52:                                     ; preds = %42
  %53 = load i32, i32* %14, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %14, align 4
  br label %23

; <label>:55:                                     ; preds = %originalBBpart24
  %56 = load double, double* %13, align 8
  ret double %56

originalBBalteredBB:                              ; preds = %originalBB, %2
  %57 = alloca %class.Tensor*, align 8
  %58 = alloca %class.Tensor*, align 8
  %59 = alloca double, align 8
  %60 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %57, align 8
  store %class.Tensor* %1, %class.Tensor** %58, align 8
  store double 0.000000e+00, double* %59, align 8
  store i32 0, i32* %60, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %61 = load i32, i32* %14, align 4
  %62 = icmp ult i32 %61, 3
  br label %originalBB1
}

declare double @_ZNK10QuadratureILi3EE6weightEj(%class.Quadrature*, i32) #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN5TableILi2EdEclEjj(%class.Table*, i32, i32) #1 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Table* %0, %class.Table** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Table*, %class.Table** %4, align 8
  %8 = bitcast %class.Table* %7 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = bitcast %class.Table* %7 to %class.TableBase*
  %13 = getelementptr inbounds %class.TableBase, %class.TableBase* %12, i32 0, i32 3
  %14 = bitcast %class.TableIndices* %13 to %class.TableIndicesBase*
  %15 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %14, i32 1)
  %16 = mul i32 %11, %15
  %17 = load i32, i32* %6, align 4
  %18 = add i32 %16, %17
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds double, double* %10, i64 %19
  ret double* %20
}

declare void @_ZN10FullMatrixIdEC1Ejj(%class.FullMatrix*, i32, i32) unnamed_addr #3

declare void @_ZN10FullMatrixIdE6invertIdEEvRKS_IT_E(%class.FullMatrix*, %class.FullMatrix* dereferenceable(48)) #3

declare void @_ZNK10FullMatrixIdE5mmultIdEEvRS_IT_ERKS3_b(%class.FullMatrix*, %class.FullMatrix* dereferenceable(48), %class.FullMatrix* dereferenceable(48), i1 zeroext) #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN10FullMatrixIdED2Ev(%class.FullMatrix*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.FullMatrix*, align 8
  store %class.FullMatrix* %0, %class.FullMatrix** %2, align 8
  %3 = load %class.FullMatrix*, %class.FullMatrix** %2, align 8
  %4 = bitcast %class.FullMatrix* %3 to %class.Table*
  call void @_ZN5TableILi2EdED2Ev(%class.Table* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN8MappingQILi3EE12InternalDataD2Ev(%"class.MappingQ<3>::InternalData"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.MappingQ<3>::InternalData"* %0, %"class.MappingQ<3>::InternalData"** %2, align 8
  %5 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %2, align 8
  %6 = bitcast %"class.MappingQ<3>::InternalData"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8MappingQILi3EE12InternalDataE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %5, i32 0, i32 3
  invoke void @_ZN9MappingQ1ILi3EE12InternalDataD2Ev(%"class.MappingQ1<3>::InternalData"* %7)
          to label %8 unwind label %28

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %5, i32 0, i32 1
  invoke void @_ZNSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EED2Ev(%"class.std::vector.129"* %9)
          to label %10 unwind label %33

; <label>:10:                                     ; preds = %8
  %11 = load i32, i32* @x.215
  %12 = load i32, i32* @y.216
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = bitcast %"class.MappingQ<3>::InternalData"* %5 to %"class.MappingQ1<3>::InternalData"*
  call void @_ZN9MappingQ1ILi3EE12InternalDataD2Ev(%"class.MappingQ1<3>::InternalData"* %19)
  %20 = load i32, i32* @x.215
  %21 = load i32, i32* @y.216
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:28:                                     ; preds = %1
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %3, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %4, align 4
  %32 = getelementptr inbounds %"class.MappingQ<3>::InternalData", %"class.MappingQ<3>::InternalData"* %5, i32 0, i32 1
  invoke void @_ZNSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EED2Ev(%"class.std::vector.129"* %32)
          to label %37 unwind label %62

; <label>:33:                                     ; preds = %8
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  br label %38

; <label>:37:                                     ; preds = %28
  br label %38

; <label>:38:                                     ; preds = %37, %33
  %39 = load i32, i32* @x.215
  %40 = load i32, i32* @y.216
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = bitcast %"class.MappingQ<3>::InternalData"* %5 to %"class.MappingQ1<3>::InternalData"*
  %48 = load i32, i32* @x.215
  %49 = load i32, i32* @y.216
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN9MappingQ1ILi3EE12InternalDataD2Ev(%"class.MappingQ1<3>::InternalData"* %47)
          to label %56 unwind label %62

; <label>:56:                                     ; preds = %originalBBpart24
  br label %57

; <label>:57:                                     ; preds = %56
  %58 = load i8*, i8** %3, align 8
  %59 = load i32, i32* %4, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  resume { i8*, i32 } %61

; <label>:62:                                     ; preds = %originalBBpart24, %28
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %10
  %65 = bitcast %"class.MappingQ<3>::InternalData"* %5 to %"class.MappingQ1<3>::InternalData"*
  call void @_ZN9MappingQ1ILi3EE12InternalDataD2Ev(%"class.MappingQ1<3>::InternalData"* %65)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %66 = bitcast %"class.MappingQ<3>::InternalData"* %5 to %"class.MappingQ1<3>::InternalData"*
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6QGaussILi3EED2Ev(%class.QGauss*) unnamed_addr #0 comdat align 2 {
  %2 = load i32, i32* @x.217
  %3 = load i32, i32* @y.218
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.QGauss*, align 8
  store %class.QGauss* %0, %class.QGauss** %10, align 8
  %11 = load %class.QGauss*, %class.QGauss** %10, align 8
  %12 = bitcast %class.QGauss* %11 to %class.Quadrature*
  call void @_ZN10QuadratureILi3EED2Ev(%class.Quadrature* %12)
  %13 = load i32, i32* @x.217
  %14 = load i32, i32* @y.218
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.QGauss*, align 8
  store %class.QGauss* %0, %class.QGauss** %21, align 8
  %22 = load %class.QGauss*, %class.QGauss** %21, align 8
  %23 = bitcast %class.QGauss* %22 to %class.Quadrature*
  call void @_ZN10QuadratureILi3EED2Ev(%class.Quadrature* %23)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table*) #1 comdat align 2 {
  %2 = alloca %class.Table*, align 8
  store %class.Table* %0, %class.Table** %2, align 8
  %3 = load %class.Table*, %class.Table** %2, align 8
  %4 = bitcast %class.Table* %3 to %class.TableBase*
  %5 = getelementptr inbounds %class.TableBase, %class.TableBase* %4, i32 0, i32 3
  %6 = bitcast %class.TableIndices* %5 to %class.TableIndicesBase*
  %7 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %6, i32 1)
  ret i32 %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZmlILi3EE5PointIXT_EEdRKS1_(%class.Point* noalias sret, double, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = load i32, i32* @x.221
  %5 = load i32, i32* @y.222
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double, align 8
  %13 = alloca %class.Point*, align 8
  store double %1, double* %12, align 8
  store %class.Point* %2, %class.Point** %13, align 8
  %14 = load %class.Point*, %class.Point** %13, align 8
  %15 = load double, double* %12, align 8
  call void @_ZNK5PointILi3EEmlEd(%class.Point* sret %0, %class.Point* %14, double %15)
  %16 = load i32, i32* @x.221
  %17 = load i32, i32* @y.222
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %24 = alloca double, align 8
  %25 = alloca %class.Point*, align 8
  store double %1, double* %24, align 8
  store %class.Point* %2, %class.Point** %25, align 8
  %26 = load %class.Point*, %class.Point** %25, align 8
  %27 = load double, double* %24, align 8
  call void @_ZNK5PointILi3EEmlEd(%class.Point* sret %0, %class.Point* %26, double %27)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5TableILi2EdEixEj(%"class.internal::TableBaseAccessors::Accessor.136"* noalias sret, %class.Table*, i32) #0 comdat align 2 {
  %4 = alloca %class.Table*, align 8
  %5 = alloca i32, align 4
  store %class.Table* %1, %class.Table** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.Table*, %class.Table** %4, align 8
  %7 = bitcast %class.Table* %6 to %class.TableBase*
  %8 = bitcast %class.Table* %6 to %class.TableBase*
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %8, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  %11 = load i32, i32* %5, align 4
  %12 = call i32 @_ZNK5TableILi2EdE6n_colsEv(%class.Table* %6)
  %13 = mul i32 %11, %12
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds double, double* %10, i64 %14
  call void @_ZN8internal18TableBaseAccessors8AccessorILi2EdLb1ELj1EEC2ERK9TableBaseILi2EdEPKd(%"class.internal::TableBaseAccessors::Accessor.136"* %0, %class.TableBase* dereferenceable(48) %7, double* %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZNK8internal18TableBaseAccessors8AccessorILi2EdLb1ELj1EEixEj(%"class.internal::TableBaseAccessors::Accessor.136"*, i32) #1 comdat align 2 {
  %3 = alloca %"class.internal::TableBaseAccessors::Accessor.136"*, align 8
  %4 = alloca i32, align 4
  store %"class.internal::TableBaseAccessors::Accessor.136"* %0, %"class.internal::TableBaseAccessors::Accessor.136"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.internal::TableBaseAccessors::Accessor.136"*, %"class.internal::TableBaseAccessors::Accessor.136"** %3, align 8
  %6 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.136", %"class.internal::TableBaseAccessors::Accessor.136"* %5, i32 0, i32 1
  %7 = load double*, double** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds double, double* %7, i64 %9
  ret double* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEpLERKS0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %6 = load %class.Tensor*, %class.Tensor** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %23, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %26

; <label>:10:                                     ; preds = %7
  %11 = load %class.Tensor*, %class.Tensor** %4, align 8
  %12 = getelementptr inbounds %class.Tensor, %class.Tensor* %11, i32 0, i32 0
  %13 = load i32, i32* %5, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 %14
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %18 = load i32, i32* %5, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [3 x double], [3 x double]* %17, i64 0, i64 %19
  %21 = load double, double* %20, align 8
  %22 = fadd double %21, %16
  store double %22, double* %20, align 8
  br label %23

; <label>:23:                                     ; preds = %10
  %24 = load i32, i32* %5, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %5, align 4
  br label %7

; <label>:26:                                     ; preds = %7
  ret %class.Tensor* %6
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE30compute_mapping_support_pointsERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE(%class.MappingQ*, %class.TriaIterator* dereferenceable(16), %"class.std::vector.58"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.MappingQ*, align 8
  %5 = alloca %class.TriaIterator*, align 8
  %6 = alloca %"class.std::vector.58"*, align 8
  %7 = alloca %class.Point, align 8
  %8 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %4, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %5, align 8
  store %"class.std::vector.58"* %2, %"class.std::vector.58"** %6, align 8
  %9 = load %class.MappingQ*, %class.MappingQ** %4, align 8
  %10 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %11 = bitcast %class.TriaIterator* %10 to %class.TriaRawIterator*
  %12 = call %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %11)
  %13 = call zeroext i1 @_ZNK12CellAccessorILi3EE18has_boundary_linesEv(%class.CellAccessor* %12)
  br i1 %13, label %14, label %17

; <label>:14:                                     ; preds = %3
  %15 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %16 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  call void @_ZNK8MappingQILi3EE30compute_support_points_laplaceERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE(%class.MappingQ* %9, %class.TriaIterator* dereferenceable(16) %15, %"class.std::vector.58"* dereferenceable(24) %16)
  br label %73

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* @x.229
  %19 = load i32, i32* @y.230
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %7)
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.58"* %26, i64 8, %class.Point* %7)
  store i32 0, i32* %8, align 4
  %27 = load i32, i32* @x.229
  %28 = load i32, i32* @y.230
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %35

; <label>:35:                                     ; preds = %69, %originalBBpart2
  %36 = load i32, i32* %8, align 4
  %37 = icmp ult i32 %36, 8
  br i1 %37, label %38, label %72

; <label>:38:                                     ; preds = %35
  %39 = load i32, i32* @x.229
  %40 = load i32, i32* @y.230
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %48 = bitcast %class.TriaIterator* %47 to %class.TriaRawIterator*
  %49 = call %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %48)
  %50 = bitcast %class.CellAccessor* %49 to %class.TriaObjectAccessor*
  %51 = load i32, i32* %8, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN9MappingQ1ILi3EE14vertex_mappingE, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = call dereferenceable(24) %class.Point* @_ZNK18TriaObjectAccessorILi3ELi3EE6vertexEj(%class.TriaObjectAccessor* %50, i32 %54)
  %56 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %57 = load i32, i32* %8, align 4
  %58 = zext i32 %57 to i64
  %59 = call dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %56, i64 %58)
  %60 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %59, %class.Point* dereferenceable(24) %55)
  %61 = load i32, i32* @x.229
  %62 = load i32, i32* @y.230
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %69

; <label>:69:                                     ; preds = %originalBBpart24
  %70 = load i32, i32* %8, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %8, align 4
  br label %35

; <label>:72:                                     ; preds = %35
  br label %73

; <label>:73:                                     ; preds = %72, %14
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %17
  %74 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %7)
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.58"* %74, i64 8, %class.Point* %7)
  store i32 0, i32* %8, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %75 = load %class.TriaIterator*, %class.TriaIterator** %5, align 8
  %76 = bitcast %class.TriaIterator* %75 to %class.TriaRawIterator*
  %77 = call %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %76)
  %78 = bitcast %class.CellAccessor* %77 to %class.TriaObjectAccessor*
  %79 = load i32, i32* %8, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN9MappingQ1ILi3EE14vertex_mappingE, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = call dereferenceable(24) %class.Point* @_ZNK18TriaObjectAccessorILi3ELi3EE6vertexEj(%class.TriaObjectAccessor* %78, i32 %82)
  %84 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %85 = load i32, i32* %8, align 4
  %86 = zext i32 %85 to i64
  %87 = call dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %84, i64 %86)
  %88 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %87, %class.Point* dereferenceable(24) %83)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE30compute_support_points_laplaceERK12TriaIteratorILi3E12CellAccessorILi3EEERSt6vectorI5PointILi3EESaIS9_EE(%class.MappingQ*, %class.TriaIterator* dereferenceable(16), %"class.std::vector.58"* dereferenceable(24)) #0 comdat align 2 {
  %4 = load i32, i32* @x.231
  %5 = load i32, i32* @y.232
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.MappingQ*, align 8
  %13 = alloca %class.TriaIterator*, align 8
  %14 = alloca %"class.std::vector.58"*, align 8
  %15 = alloca %class.Point, align 8
  %16 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %12, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %13, align 8
  store %"class.std::vector.58"* %2, %"class.std::vector.58"** %14, align 8
  %17 = load %class.MappingQ*, %class.MappingQ** %12, align 8
  %18 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %15)
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.58"* %18, i64 8, %class.Point* %15)
  store i32 0, i32* %16, align 4
  %19 = load i32, i32* @x.231
  %20 = load i32, i32* @y.232
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %58, %originalBBpart2
  %28 = load i32, i32* %16, align 4
  %29 = icmp ult i32 %28, 8
  br i1 %29, label %30, label %61

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* @x.231
  %32 = load i32, i32* @y.232
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %class.TriaIterator*, %class.TriaIterator** %13, align 8
  %40 = bitcast %class.TriaIterator* %39 to %class.TriaRawIterator*
  %41 = call %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %40)
  %42 = bitcast %class.CellAccessor* %41 to %class.TriaObjectAccessor*
  %43 = load i32, i32* %16, align 4
  %44 = call dereferenceable(24) %class.Point* @_ZNK18TriaObjectAccessorILi3ELi3EE6vertexEj(%class.TriaObjectAccessor* %42, i32 %43)
  %45 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  %46 = load i32, i32* %16, align 4
  %47 = zext i32 %46 to i64
  %48 = call dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %45, i64 %47)
  %49 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %48, %class.Point* dereferenceable(24) %44)
  %50 = load i32, i32* @x.231
  %51 = load i32, i32* @y.232
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

; <label>:58:                                     ; preds = %originalBBpart24
  %59 = load i32, i32* %16, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %16, align 4
  br label %27

; <label>:61:                                     ; preds = %27
  %62 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = icmp ugt i32 %63, 1
  br i1 %64, label %65, label %96

; <label>:65:                                     ; preds = %61
  %66 = load i32, i32* @x.231
  %67 = load i32, i32* @y.232
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = bitcast %class.MappingQ* %17 to void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)***
  %75 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)**, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %75, i64 18
  %77 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %76, align 8
  %78 = load %class.TriaIterator*, %class.TriaIterator** %13, align 8
  %79 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  call void %77(%class.MappingQ* %17, %class.TriaIterator* dereferenceable(16) %78, %"class.std::vector.58"* dereferenceable(24) %79)
  %80 = bitcast %class.MappingQ* %17 to void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)***
  %81 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)**, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %81, i64 19
  %83 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %82, align 8
  %84 = load %class.TriaIterator*, %class.TriaIterator** %13, align 8
  %85 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  call void %83(%class.MappingQ* %17, %class.TriaIterator* dereferenceable(16) %84, %"class.std::vector.58"* dereferenceable(24) %85)
  %86 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 2
  %87 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  call void @_ZNK8MappingQILi3EE20apply_laplace_vectorERK5TableILi2EdERSt6vectorI5PointILi3EESaIS7_EE(%class.MappingQ* %17, %class.Table* dereferenceable(48) %86, %"class.std::vector.58"* dereferenceable(24) %87)
  %88 = load i32, i32* @x.231
  %89 = load i32, i32* @y.232
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %96

; <label>:96:                                     ; preds = %originalBBpart28, %61
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %97 = alloca %class.MappingQ*, align 8
  %98 = alloca %class.TriaIterator*, align 8
  %99 = alloca %"class.std::vector.58"*, align 8
  %100 = alloca %class.Point, align 8
  %101 = alloca i32, align 4
  store %class.MappingQ* %0, %class.MappingQ** %97, align 8
  store %class.TriaIterator* %1, %class.TriaIterator** %98, align 8
  store %"class.std::vector.58"* %2, %"class.std::vector.58"** %99, align 8
  %102 = load %class.MappingQ*, %class.MappingQ** %97, align 8
  %103 = load %"class.std::vector.58"*, %"class.std::vector.58"** %99, align 8
  call void @_ZN5PointILi3EEC2Ev(%class.Point* %100)
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE6resizeEmS1_(%"class.std::vector.58"* %103, i64 8, %class.Point* %100)
  store i32 0, i32* %101, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %104 = load %class.TriaIterator*, %class.TriaIterator** %13, align 8
  %105 = bitcast %class.TriaIterator* %104 to %class.TriaRawIterator*
  %106 = call %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEptEv(%class.TriaRawIterator* %105)
  %107 = bitcast %class.CellAccessor* %106 to %class.TriaObjectAccessor*
  %108 = load i32, i32* %16, align 4
  %109 = call dereferenceable(24) %class.Point* @_ZNK18TriaObjectAccessorILi3ELi3EE6vertexEj(%class.TriaObjectAccessor* %107, i32 %108)
  %110 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  %111 = load i32, i32* %16, align 4
  %112 = zext i32 %111 to i64
  %113 = call dereferenceable(24) %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %110, i64 %112)
  %114 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %113, %class.Point* dereferenceable(24) %109)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %115 = bitcast %class.MappingQ* %17 to void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)***
  %116 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)**, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %116, i64 18
  %118 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %117, align 8
  %119 = load %class.TriaIterator*, %class.TriaIterator** %13, align 8
  %120 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  call void %118(%class.MappingQ* %17, %class.TriaIterator* dereferenceable(16) %119, %"class.std::vector.58"* dereferenceable(24) %120)
  %121 = bitcast %class.MappingQ* %17 to void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)***
  %122 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)**, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %122, i64 19
  %124 = load void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)*, void (%class.MappingQ*, %class.TriaIterator*, %"class.std::vector.58"*)** %123, align 8
  %125 = load %class.TriaIterator*, %class.TriaIterator** %13, align 8
  %126 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  call void %124(%class.MappingQ* %17, %class.TriaIterator* dereferenceable(16) %125, %"class.std::vector.58"* dereferenceable(24) %126)
  %127 = getelementptr inbounds %class.MappingQ, %class.MappingQ* %17, i32 0, i32 2
  %128 = load %"class.std::vector.58"*, %"class.std::vector.58"** %14, align 8
  call void @_ZNK8MappingQILi3EE20apply_laplace_vectorERK5TableILi2EdERSt6vectorI5PointILi3EESaIS7_EE(%class.MappingQ* %17, %class.Table* dereferenceable(48) %127, %"class.std::vector.58"* dereferenceable(24) %128)
  br label %originalBB6
}

declare dereferenceable(24) %class.Point* @_ZNK18TriaObjectAccessorILi3ELi3EE6vertexEj(%class.TriaObjectAccessor*, i32) #3

; Function Attrs: noinline uwtable
define weak_odr void @_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetC2Ei(%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, i32) unnamed_addr #0 comdat($_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetC5Ei) align 2 {
  %3 = load i32, i32* @x.233
  %4 = load i32, i32* @y.234
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, align 8
  %12 = alloca i32, align 4
  store %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %0, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %11, align 8
  %14 = bitcast %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %13 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %14)
  %15 = bitcast %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8MappingQILi3EE22ExcLaplaceVectorNotSetE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.MappingQ<3>::ExcLaplaceVectorNotSet", %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %13, i32 0, i32 1
  %17 = load i32, i32* %12, align 4
  store i32 %17, i32* %16, align 8
  %18 = load i32, i32* @x.233
  %19 = load i32, i32* @y.234
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, align 8
  %27 = alloca i32, align 4
  store %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %0, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %26, align 8
  store i32 %1, i32* %27, align 4
  %28 = load %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %26, align 8
  %29 = bitcast %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %28 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase* %29)
  %30 = bitcast %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8MappingQILi3EE22ExcLaplaceVectorNotSetE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.MappingQ<3>::ExcLaplaceVectorNotSet", %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %28, i32 0, i32 1
  %32 = load i32, i32* %27, align 4
  store i32 %32, i32* %31, align 8
  br label %originalBB
}

declare void @_ZN13ExceptionBaseC2Ev(%class.ExceptionBase*) unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD2Ev(%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*) unnamed_addr #1 comdat($_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD5Ev) align 2 {
  %2 = alloca %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, align 8
  store %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %0, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %2, align 8
  %3 = load %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %2, align 8
  %4 = bitcast %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %3 to %class.ExceptionBase*
  call void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase* %4) #2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13ExceptionBaseD2Ev(%class.ExceptionBase*) unnamed_addr #9

; Function Attrs: noinline nounwind uwtable
define weak_odr void @_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD0Ev(%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*) unnamed_addr #1 comdat($_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD5Ev) align 2 {
  %2 = alloca %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, align 8
  store %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %0, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %2, align 8
  %3 = load %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %2, align 8
  call void @_ZN8MappingQILi3EE22ExcLaplaceVectorNotSetD1Ev(%"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %3) #2
  %4 = bitcast %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %3 to i8*
  call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: noinline uwtable
define weak_odr void @_ZNK8MappingQILi3EE22ExcLaplaceVectorNotSet9PrintInfoERSo(%"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, %"class.std::basic_ostream"* dereferenceable(272)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, align 8
  %4 = alloca %"class.std::basic_ostream"*, align 8
  store %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %0, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %3, align 8
  store %"class.std::basic_ostream"* %1, %"class.std::basic_ostream"** %4, align 8
  %5 = load %"class.MappingQ<3>::ExcLaplaceVectorNotSet"*, %"class.MappingQ<3>::ExcLaplaceVectorNotSet"** %3, align 8
  %6 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %4, align 8
  %7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0))
  %8 = getelementptr inbounds %"class.MappingQ<3>::ExcLaplaceVectorNotSet", %"class.MappingQ<3>::ExcLaplaceVectorNotSet"* %5, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* %7, i32 %9)
  %11 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  %12 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %11, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #3

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #3

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #3

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #3

declare i32 @_ZNK9MappingQ1ILi3EE11update_onceE11UpdateFlags(%class.MappingQ1*, i32) unnamed_addr #3

declare i32 @_ZNK9MappingQ1ILi3EE11update_eachE11UpdateFlags(%class.MappingQ1*, i32) unnamed_addr #3

; Function Attrs: nounwind
declare i8* @_ZNK13ExceptionBase4whatEv(%class.ExceptionBase*) unnamed_addr #9

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN8MappingQILi3EE12InternalDataD0Ev(%"class.MappingQ<3>::InternalData"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.MappingQ<3>::InternalData"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.MappingQ<3>::InternalData"* %0, %"class.MappingQ<3>::InternalData"** %2, align 8
  %5 = load %"class.MappingQ<3>::InternalData"*, %"class.MappingQ<3>::InternalData"** %2, align 8
  invoke void @_ZN8MappingQILi3EE12InternalDataD2Ev(%"class.MappingQ<3>::InternalData"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %"class.MappingQ<3>::InternalData"* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %"class.MappingQ<3>::InternalData"* %5 to i8*
  call void @_ZdlPv(i8* %12) #14
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.241
  %15 = load i32, i32* @y.242
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i8*, i8** %3, align 8
  %23 = load i32, i32* %4, align 4
  %24 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  %26 = load i32, i32* @x.241
  %27 = load i32, i32* @y.242
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %25

originalBBalteredBB:                              ; preds = %originalBB, %13
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %4, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7MappingILi3EE16InternalDataBase16clear_first_cellEv(%"class.Mapping<3>::InternalDataBase"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.Mapping<3>::InternalDataBase"*, align 8
  store %"class.Mapping<3>::InternalDataBase"* %0, %"class.Mapping<3>::InternalDataBase"** %2, align 8
  %3 = load %"class.Mapping<3>::InternalDataBase"*, %"class.Mapping<3>::InternalDataBase"** %2, align 8
  %4 = getelementptr inbounds %"class.Mapping<3>::InternalDataBase", %"class.Mapping<3>::InternalDataBase"* %3, i32 0, i32 4
  store i8 0, i8* %4, align 4
  ret void
}

declare void @_ZN8BoundaryILi3EED2Ev(%class.Boundary*) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK18TriaObjectAccessorILi3ELi3EE4quadEj(%class.TriaIterator.65* noalias sret, %class.TriaObjectAccessor*, i32) #0 comdat align 2 {
  %4 = load i32, i32* @x.245
  %5 = load i32, i32* @y.246
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.TriaObjectAccessor*, align 8
  %13 = alloca i32, align 4
  store %class.TriaObjectAccessor* %1, %class.TriaObjectAccessor** %12, align 8
  store i32 %2, i32* %13, align 4
  %14 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %12, align 8
  %15 = bitcast %class.TriaObjectAccessor* %14 to %class.TriaAccessor*
  %16 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %15, i32 0, i32 2
  %17 = load %class.Triangulation*, %class.Triangulation** %16, align 8
  %18 = bitcast %class.TriaObjectAccessor* %14 to %class.TriaAccessor*
  %19 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = load i32, i32* %13, align 4
  %22 = call i32 @_ZNK18TriaObjectAccessorILi3ELi3EE10quad_indexEj(%class.TriaObjectAccessor* %14, i32 %21)
  call void @_ZN12TriaIteratorILi3E18TriaObjectAccessorILi2ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaIterator.65* %0, %class.Triangulation* %17, i32 %20, i32 %22, i8* null)
  %23 = load i32, i32* @x.245
  %24 = load i32, i32* @y.246
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %31 = alloca %class.TriaObjectAccessor*, align 8
  %32 = alloca i32, align 4
  store %class.TriaObjectAccessor* %1, %class.TriaObjectAccessor** %31, align 8
  store i32 %2, i32* %32, align 4
  %33 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %31, align 8
  %34 = bitcast %class.TriaObjectAccessor* %33 to %class.TriaAccessor*
  %35 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %34, i32 0, i32 2
  %36 = load %class.Triangulation*, %class.Triangulation** %35, align 8
  %37 = bitcast %class.TriaObjectAccessor* %33 to %class.TriaAccessor*
  %38 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = load i32, i32* %32, align 4
  %41 = call i32 @_ZNK18TriaObjectAccessorILi3ELi3EE10quad_indexEj(%class.TriaObjectAccessor* %33, i32 %40)
  call void @_ZN12TriaIteratorILi3E18TriaObjectAccessorILi2ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaIterator.65* %0, %class.Triangulation* %36, i32 %39, i32 %41, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK18TriaObjectAccessorILi3ELi3EE10quad_indexEj(%class.TriaObjectAccessor*, i32) #0 comdat align 2 {
  %3 = load i32, i32* @x.247
  %4 = load i32, i32* @y.248
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.TriaObjectAccessor*, align 8
  %12 = alloca i32, align 4
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %11, align 8
  %14 = bitcast %class.TriaObjectAccessor* %13 to %class.TriaAccessor*
  %15 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %14, i32 0, i32 2
  %16 = load %class.Triangulation*, %class.Triangulation** %15, align 8
  %17 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %16, i32 0, i32 1
  %18 = bitcast %class.TriaObjectAccessor* %13 to %class.TriaAccessor*
  %19 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector.10"* %17, i64 %21)
  %23 = load %class.TriangulationLevel*, %class.TriangulationLevel** %22, align 8
  %24 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %23, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %24, i32 0, i32 0
  %26 = bitcast %class.TriaObjectAccessor* %13 to %class.TriaAccessor*
  %27 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = call dereferenceable(24) %class.Hexahedron* @_ZNSt6vectorI10HexahedronSaIS0_EEixEm(%"class.std::vector.53"* %25, i64 %29)
  %31 = load i32, i32* %12, align 4
  %32 = call i32 @_ZNK10Hexahedron4quadEi(%class.Hexahedron* %30, i32 %31)
  %33 = load i32, i32* @x.247
  %34 = load i32, i32* @y.248
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %32

originalBBalteredBB:                              ; preds = %originalBB, %2
  %41 = alloca %class.TriaObjectAccessor*, align 8
  %42 = alloca i32, align 4
  store %class.TriaObjectAccessor* %0, %class.TriaObjectAccessor** %41, align 8
  store i32 %1, i32* %42, align 4
  %43 = load %class.TriaObjectAccessor*, %class.TriaObjectAccessor** %41, align 8
  %44 = bitcast %class.TriaObjectAccessor* %43 to %class.TriaAccessor*
  %45 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %44, i32 0, i32 2
  %46 = load %class.Triangulation*, %class.Triangulation** %45, align 8
  %47 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %46, i32 0, i32 1
  %48 = bitcast %class.TriaObjectAccessor* %43 to %class.TriaAccessor*
  %49 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = sext i32 %50 to i64
  %52 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector.10"* %47, i64 %51)
  %53 = load %class.TriangulationLevel*, %class.TriangulationLevel** %52, align 8
  %54 = getelementptr inbounds %class.TriangulationLevel, %class.TriangulationLevel* %53, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.TriangulationLevel<3>::HexesData", %"struct.TriangulationLevel<3>::HexesData"* %54, i32 0, i32 0
  %56 = bitcast %class.TriaObjectAccessor* %43 to %class.TriaAccessor*
  %57 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = call dereferenceable(24) %class.Hexahedron* @_ZNSt6vectorI10HexahedronSaIS0_EEixEm(%"class.std::vector.53"* %55, i64 %59)
  %61 = load i32, i32* %42, align 4
  %62 = call i32 @_ZNK10Hexahedron4quadEi(%class.Hexahedron* %60, i32 %61)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12TriaIteratorILi3E18TriaObjectAccessorILi2ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaIterator.65*, %class.Triangulation*, i32, i32, i8*) unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* @x.249
  %7 = load i32, i32* @y.250
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.TriaIterator.65*, align 8
  %15 = alloca %class.Triangulation*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  store %class.TriaIterator.65* %0, %class.TriaIterator.65** %14, align 8
  store %class.Triangulation* %1, %class.Triangulation** %15, align 8
  store i32 %2, i32* %16, align 4
  store i32 %3, i32* %17, align 4
  store i8* %4, i8** %18, align 8
  %19 = load %class.TriaIterator.65*, %class.TriaIterator.65** %14, align 8
  %20 = bitcast %class.TriaIterator.65* %19 to %class.TriaRawIterator.66*
  %21 = load %class.Triangulation*, %class.Triangulation** %15, align 8
  %22 = load i32, i32* %16, align 4
  %23 = load i32, i32* %17, align 4
  %24 = load i8*, i8** %18, align 8
  call void @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaRawIterator.66* %20, %class.Triangulation* %21, i32 %22, i32 %23, i8* %24)
  %25 = load i32, i32* @x.249
  %26 = load i32, i32* @y.250
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %33 = alloca %class.TriaIterator.65*, align 8
  %34 = alloca %class.Triangulation*, align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i8*, align 8
  store %class.TriaIterator.65* %0, %class.TriaIterator.65** %33, align 8
  store %class.Triangulation* %1, %class.Triangulation** %34, align 8
  store i32 %2, i32* %35, align 4
  store i32 %3, i32* %36, align 4
  store i8* %4, i8** %37, align 8
  %38 = load %class.TriaIterator.65*, %class.TriaIterator.65** %33, align 8
  %39 = bitcast %class.TriaIterator.65* %38 to %class.TriaRawIterator.66*
  %40 = load %class.Triangulation*, %class.Triangulation** %34, align 8
  %41 = load i32, i32* %35, align 4
  %42 = load i32, i32* %36, align 4
  %43 = load i8*, i8** %37, align 8
  call void @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaRawIterator.66* %39, %class.Triangulation* %40, i32 %41, i32 %42, i8* %43)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector.10"*, i64) #1 comdat align 2 {
  %3 = load i32, i32* @x.251
  %4 = load i32, i32* @y.252
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.10"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::vector.10"*, %"class.std::vector.10"** %11, align 8
  %14 = bitcast %"class.std::vector.10"* %13 to %"struct.std::_Vector_base.11"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %16, i32 0, i32 0
  %18 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %17, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %class.TriangulationLevel*, %class.TriangulationLevel** %18, i64 %19
  %21 = load i32, i32* @x.251
  %22 = load i32, i32* @y.252
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TriangulationLevel** %20

originalBBalteredBB:                              ; preds = %originalBB, %2
  %29 = alloca %"class.std::vector.10"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.10"*, %"class.std::vector.10"** %29, align 8
  %32 = bitcast %"class.std::vector.10"* %31 to %"struct.std::_Vector_base.11"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl"* %33 to %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data", %"struct.std::_Vector_base<TriangulationLevel<3> *, std::allocator<TriangulationLevel<3> *> >::_Vector_impl_data"* %34, i32 0, i32 0
  %36 = load %class.TriangulationLevel**, %class.TriangulationLevel*** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = getelementptr inbounds %class.TriangulationLevel*, %class.TriangulationLevel** %36, i64 %37
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Hexahedron* @_ZNSt6vectorI10HexahedronSaIS0_EEixEm(%"class.std::vector.53"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.53"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.53"* %0, %"class.std::vector.53"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.53"*, %"class.std::vector.53"** %3, align 8
  %6 = bitcast %"class.std::vector.53"* %5 to %"struct.std::_Vector_base.54"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.54", %"struct.std::_Vector_base.54"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data", %"struct.std::_Vector_base<Hexahedron, std::allocator<Hexahedron> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Hexahedron*, %class.Hexahedron** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Hexahedron, %class.Hexahedron* %10, i64 %11
  ret %class.Hexahedron* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK10Hexahedron4quadEi(%class.Hexahedron*, i32) #1 comdat align 2 {
  %3 = load i32, i32* @x.255
  %4 = load i32, i32* @y.256
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Hexahedron*, align 8
  %12 = alloca i32, align 4
  store %class.Hexahedron* %0, %class.Hexahedron** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.Hexahedron*, %class.Hexahedron** %11, align 8
  %14 = getelementptr inbounds %class.Hexahedron, %class.Hexahedron* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [6 x i32], [6 x i32]* %14, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @x.255
  %20 = load i32, i32* @y.256
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.Hexahedron*, align 8
  %28 = alloca i32, align 4
  store %class.Hexahedron* %0, %class.Hexahedron** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.Hexahedron*, %class.Hexahedron** %27, align 8
  %30 = getelementptr inbounds %class.Hexahedron, %class.Hexahedron* %29, i32 0, i32 0
  %31 = load i32, i32* %28, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [6 x i32], [6 x i32]* %30, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaRawIterator.66*, %class.Triangulation*, i32, i32, i8*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.TriaRawIterator.66*, align 8
  %7 = alloca %class.Triangulation*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %class.TriaRawIterator.66* %0, %class.TriaRawIterator.66** %6, align 8
  store %class.Triangulation* %1, %class.Triangulation** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i8* %4, i8** %10, align 8
  %11 = load %class.TriaRawIterator.66*, %class.TriaRawIterator.66** %6, align 8
  %12 = bitcast %class.TriaRawIterator.66* %11 to %"struct.std::iterator.67"*
  %13 = getelementptr inbounds %class.TriaRawIterator.66, %class.TriaRawIterator.66* %11, i32 0, i32 0
  %14 = load %class.Triangulation*, %class.Triangulation** %7, align 8
  %15 = load i32, i32* %8, align 4
  %16 = load i32, i32* %9, align 4
  %17 = load i8*, i8** %10, align 8
  call void @_ZN18TriaObjectAccessorILi2ELi3EEC2EPK13TriangulationILi3EEiiPKv(%class.TriaObjectAccessor.68* %13, %class.Triangulation* %14, i32 %15, i32 %16, i8* %17)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN18TriaObjectAccessorILi2ELi3EEC2EPK13TriangulationILi3EEiiPKv(%class.TriaObjectAccessor.68*, %class.Triangulation*, i32, i32, i8*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.TriaObjectAccessor.68*, align 8
  %7 = alloca %class.Triangulation*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %class.TriaObjectAccessor.68* %0, %class.TriaObjectAccessor.68** %6, align 8
  store %class.Triangulation* %1, %class.Triangulation** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i8* %4, i8** %10, align 8
  %11 = load %class.TriaObjectAccessor.68*, %class.TriaObjectAccessor.68** %6, align 8
  %12 = bitcast %class.TriaObjectAccessor.68* %11 to %class.TriaAccessor*
  %13 = load %class.Triangulation*, %class.Triangulation** %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i32, i32* %9, align 4
  %16 = load i8*, i8** %10, align 8
  call void @_ZN12TriaAccessorILi3EEC2EPK13TriangulationILi3EEiiPKv(%class.TriaAccessor* %12, %class.Triangulation* %13, i32 %14, i32 %15, i8* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TriaAccessorILi3EEC2EPK13TriangulationILi3EEiiPKv(%class.TriaAccessor*, %class.Triangulation*, i32, i32, i8*) unnamed_addr #1 comdat align 2 {
  %6 = alloca %class.TriaAccessor*, align 8
  %7 = alloca %class.Triangulation*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %class.TriaAccessor* %0, %class.TriaAccessor** %6, align 8
  store %class.Triangulation* %1, %class.Triangulation** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i8* %4, i8** %10, align 8
  %11 = load %class.TriaAccessor*, %class.TriaAccessor** %6, align 8
  %12 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %11, i32 0, i32 0
  %13 = load i32, i32* %8, align 4
  store i32 %13, i32* %12, align 8
  %14 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %11, i32 0, i32 1
  %15 = load i32, i32* %9, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %11, i32 0, i32 2
  %17 = load %class.Triangulation*, %class.Triangulation** %7, align 8
  store %class.Triangulation* %17, %class.Triangulation** %16, align 8
  ret void
}

declare void @_ZN11SubscriptorD2Ev(%class.Subscriptor*) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials10PolynomialIdED2Ev(%"class.Polynomials::Polynomial"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.Polynomials::Polynomial"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %2, align 8
  %5 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %2, align 8
  %6 = bitcast %"class.Polynomials::Polynomial"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11Polynomials10PolynomialIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %5, i32 0, i32 1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %7)
          to label %8 unwind label %26

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.263
  %10 = load i32, i32* @y.264
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = bitcast %"class.Polynomials::Polynomial"* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %17)
  %18 = load i32, i32* @x.263
  %19 = load i32, i32* @y.264
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:26:                                     ; preds = %1
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %3, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %4, align 4
  %30 = bitcast %"class.Polynomials::Polynomial"* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %30)
          to label %31 unwind label %37

; <label>:31:                                     ; preds = %26
  br label %32

; <label>:32:                                     ; preds = %31
  %33 = load i8*, i8** %3, align 8
  %34 = load i32, i32* %4, align 4
  %35 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36

; <label>:37:                                     ; preds = %26
  %38 = landingpad { i8*, i32 }
          catch i8* null
  %39 = extractvalue { i8*, i32 } %38, 0
  call void @__clang_call_terminate(i8* %39) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %8
  %40 = bitcast %"class.Polynomials::Polynomial"* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %40)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials10PolynomialIdED0Ev(%"class.Polynomials::Polynomial"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.Polynomials::Polynomial"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %2, align 8
  %5 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %2, align 8
  invoke void @_ZN11Polynomials10PolynomialIdED2Ev(%"class.Polynomials::Polynomial"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %"class.Polynomials::Polynomial"* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.265
  %10 = load i32, i32* @y.266
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  %20 = bitcast %"class.Polynomials::Polynomial"* %5 to i8*
  call void @_ZdlPv(i8* %20) #14
  %21 = load i32, i32* @x.265
  %22 = load i32, i32* @y.266
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %8
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"class.Polynomials::Polynomial"* %5 to i8*
  call void @_ZdlPv(i8* %37) #14
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN4FE_QILi3EED0Ev(%class.FE_Q*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.FE_Q*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.FE_Q* %0, %class.FE_Q** %2, align 8
  %5 = load %class.FE_Q*, %class.FE_Q** %2, align 8
  invoke void @_ZN4FE_QILi3EED2Ev(%class.FE_Q* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.FE_Q* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.267
  %10 = load i32, i32* @y.268
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %3, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %4, align 4
  %20 = bitcast %class.FE_Q* %5 to i8*
  call void @_ZdlPv(i8* %20) #14
  %21 = load i32, i32* @x.267
  %22 = load i32, i32* @y.268
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.267
  %31 = load i32, i32* @y.268
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* %4, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.267
  %43 = load i32, i32* @y.268
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %41

originalBBalteredBB:                              ; preds = %originalBB, %8
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = bitcast %class.FE_Q* %5 to i8*
  call void @_ZdlPv(i8* %53) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %54 = load i8*, i8** %3, align 8
  %55 = load i32, i32* %4, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  br label %originalBB1
}

declare void @_ZNK4FE_QILi3EE8get_nameB5cxx11Ev(%"class.std::__cxx11::basic_string"* sret, %class.FE_Q*) unnamed_addr #3

declare double @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11shape_valueEjRK5PointILi3EE(%class.FE_Poly*, i32, %class.Point* dereferenceable(24)) unnamed_addr #3

declare double @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE21shape_value_componentEjRK5PointILi3EEj(%class.FE_Poly*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #3

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE10shape_gradEjRK5PointILi3EE(%class.Tensor* sret, %class.FE_Poly*, i32, %class.Point* dereferenceable(24)) unnamed_addr #3

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20shape_grad_componentEjRK5PointILi3EEj(%class.Tensor* sret, %class.FE_Poly*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #3

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15shape_grad_gradEjRK5PointILi3EE(%class.Tensor.113* sret, %class.FE_Poly*, i32, %class.Point* dereferenceable(24)) unnamed_addr #3

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE25shape_grad_grad_componentEjRK5PointILi3EEj(%class.Tensor.113* sret, %class.FE_Poly*, i32, %class.Point* dereferenceable(24), i32) unnamed_addr #3

declare void @_ZNK4FE_QILi3EE24get_interpolation_matrixERK17FiniteElementBaseILi3EER10FullMatrixIdE(%class.FE_Q*, %class.FiniteElementBase* dereferenceable(1160), %class.FullMatrix* dereferenceable(48)) unnamed_addr #3

declare void @_ZNK17FiniteElementBaseILi3EE18unit_support_pointEj(%class.Point* sret, %class.FiniteElementBase*, i32) unnamed_addr #3

declare void @_ZNK17FiniteElementBaseILi3EE23unit_face_support_pointEj(%class.Point.96* sret, %class.FiniteElementBase*, i32) unnamed_addr #3

declare i32 @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE15n_base_elementsEv(%class.FE_Poly*) unnamed_addr #3

declare dereferenceable(1160) %class.FiniteElement* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE12base_elementEj(%class.FE_Poly*, i32) unnamed_addr #3

declare i32 @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE20element_multiplicityEj(%class.FE_Poly*, i32) unnamed_addr #3

declare zeroext i1 @_ZNK4FE_QILi3EE19has_support_on_faceEjj(%class.FE_Q*, i32, i32) unnamed_addr #3

declare i32 @_ZNK4FE_QILi3EE18memory_consumptionEv(%class.FE_Q*) unnamed_addr #3

declare i32 @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_onceE11UpdateFlags(%class.FE_Poly*, i32) unnamed_addr #3

declare i32 @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE11update_eachE11UpdateFlags(%class.FE_Poly*, i32) unnamed_addr #3

declare %class.FiniteElement* @_ZNK4FE_QILi3EE5cloneEv(%class.FE_Q*) unnamed_addr #3

declare %"class.Mapping<3>::InternalDataBase"* @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE8get_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi3EE(%class.FE_Poly*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature* dereferenceable(80)) unnamed_addr #3

declare %"class.Mapping<3>::InternalDataBase"* @_ZNK13FiniteElementILi3EE13get_face_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE(%class.FiniteElement*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature.135* dereferenceable(80)) unnamed_addr #3

declare %"class.Mapping<3>::InternalDataBase"* @_ZNK13FiniteElementILi3EE16get_subface_dataE11UpdateFlagsRK7MappingILi3EERK10QuadratureILi2EE(%class.FiniteElement*, i32, %class.Mapping* dereferenceable(24), %class.Quadrature.135* dereferenceable(80)) unnamed_addr #3

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE14fill_fe_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEERK10QuadratureILi3EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE(%class.FE_Poly*, %class.Mapping* dereferenceable(24), %class.TriaIterator.118* dereferenceable(24), %class.Quadrature* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %class.FEValuesData* nonnull) unnamed_addr #3

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE19fill_fe_face_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE(%class.FE_Poly*, %class.Mapping* dereferenceable(24), %class.TriaIterator.118* dereferenceable(24), i32, %class.Quadrature.135* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %class.FEValuesData* nonnull) unnamed_addr #3

declare void @_ZNK7FE_PolyI24TensorProductPolynomialsILi3EELi3EE22fill_fe_subface_valuesERK7MappingILi3EERK12TriaIteratorILi3E15DoFCellAccessorILi3EEEjjRK10QuadratureILi2EERNS4_16InternalDataBaseESI_R12FEValuesDataILi3EE(%class.FE_Poly*, %class.Mapping* dereferenceable(24), %class.TriaIterator.118* dereferenceable(24), i32, i32, %class.Quadrature.135* dereferenceable(80), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %"class.Mapping<3>::InternalDataBase"* dereferenceable(40), %class.FEValuesData* nonnull) unnamed_addr #3

declare void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement*) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev(%class.FE_Poly*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.FE_Poly*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.FE_Poly* %0, %class.FE_Poly** %2, align 8
  %5 = load %class.FE_Poly*, %class.FE_Poly** %2, align 8
  %6 = bitcast %class.FE_Poly* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV7FE_PolyI24TensorProductPolynomialsILi3EELi3EE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.FE_Poly, %class.FE_Poly* %5, i32 0, i32 2
  invoke void @_ZN24TensorProductPolynomialsILi3EED2Ev(%class.TensorProductPolynomials* %7)
          to label %8 unwind label %26

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.269
  %10 = load i32, i32* @y.270
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = bitcast %class.FE_Poly* %5 to %class.FiniteElement*
  call void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement* %17)
  %18 = load i32, i32* @x.269
  %19 = load i32, i32* @y.270
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:26:                                     ; preds = %1
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %3, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %4, align 4
  %30 = bitcast %class.FE_Poly* %5 to %class.FiniteElement*
  invoke void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement* %30)
          to label %31 unwind label %53

; <label>:31:                                     ; preds = %26
  br label %32

; <label>:32:                                     ; preds = %31
  %33 = load i32, i32* @x.269
  %34 = load i32, i32* @y.270
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i8*, i8** %3, align 8
  %42 = load i32, i32* %4, align 4
  %43 = insertvalue { i8*, i32 } undef, i8* %41, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  %45 = load i32, i32* @x.269
  %46 = load i32, i32* @y.270
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %44

; <label>:53:                                     ; preds = %26
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %8
  %56 = bitcast %class.FE_Poly* %5 to %class.FiniteElement*
  call void @_ZN13FiniteElementILi3EED2Ev(%class.FiniteElement* %56)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %57 = load i8*, i8** %3, align 8
  %58 = load i32, i32* %4, align 4
  %59 = insertvalue { i8*, i32 } undef, i8* %57, 0
  %60 = insertvalue { i8*, i32 } %59, i32 %58, 1
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED0Ev(%class.FE_Poly*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.FE_Poly*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.FE_Poly* %0, %class.FE_Poly** %2, align 8
  %5 = load %class.FE_Poly*, %class.FE_Poly** %2, align 8
  invoke void @_ZN7FE_PolyI24TensorProductPolynomialsILi3EELi3EED2Ev(%class.FE_Poly* %5)
          to label %6 unwind label %24

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.271
  %8 = load i32, i32* @y.272
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = bitcast %class.FE_Poly* %5 to i8*
  call void @_ZdlPv(i8* %15) #14
  %16 = load i32, i32* @x.271
  %17 = load i32, i32* @y.272
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = bitcast %class.FE_Poly* %5 to i8*
  call void @_ZdlPv(i8* %28) #14
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.271
  %31 = load i32, i32* @y.272
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* %4, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  %42 = load i32, i32* @x.271
  %43 = load i32, i32* @y.272
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %41

originalBBalteredBB:                              ; preds = %originalBB, %6
  %50 = bitcast %class.FE_Poly* %5 to i8*
  call void @_ZdlPv(i8* %50) #14
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %51 = load i8*, i8** %3, align 8
  %52 = load i32, i32* %4, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  br label %originalBB1
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK17FiniteElementBaseILi3EE24get_interpolation_matrixERKS0_R10FullMatrixIdE(%class.FiniteElementBase*, %class.FiniteElementBase* dereferenceable(1160), %class.FullMatrix* dereferenceable(48)) unnamed_addr #3

declare i32 @_ZNK13FiniteElementILi3EE18memory_consumptionEv(%class.FiniteElement*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdED2Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %3 = load %class.TableBase*, %class.TableBase** %2, align 8
  %4 = bitcast %class.TableBase* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2EdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.TableBase, %class.TableBase* %3, i32 0, i32 1
  %6 = load double*, double** %5, align 8
  %7 = icmp ne double* %6, null
  br i1 %7, label %8, label %47

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.273
  %10 = load i32, i32* @y.274
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %class.TableBase, %class.TableBase* %3, i32 0, i32 1
  %18 = load double*, double** %17, align 8
  %19 = icmp eq double* %18, null
  %20 = load i32, i32* @x.273
  %21 = load i32, i32* @y.274
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %46, label %28

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i32, i32* @x.273
  %30 = load i32, i32* @y.274
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = bitcast double* %18 to i8*
  call void @_ZdaPv(i8* %37) #14
  %38 = load i32, i32* @x.273
  %39 = load i32, i32* @y.274
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24, %originalBBpart2
  br label %47

; <label>:47:                                     ; preds = %46, %1
  %48 = bitcast %class.TableBase* %3 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %48)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  %49 = getelementptr inbounds %class.TableBase, %class.TableBase* %3, i32 0, i32 1
  %50 = load double*, double** %49, align 8
  %51 = icmp eq double* %50, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %52 = bitcast double* %18 to i8*
  call void @_ZdaPv(i8* %52) #14
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdED0Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  invoke void @_ZN9TableBaseILi2EdED2Ev(%class.TableBase* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.TableBase* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %class.TableBase* %5 to i8*
  call void @_ZdlPv(i8* %12) #14
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.275
  %15 = load i32, i32* @y.276
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i8*, i8** %3, align 8
  %23 = load i32, i32* %4, align 4
  %24 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  %26 = load i32, i32* @x.275
  %27 = load i32, i32* @y.276
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %25

originalBBalteredBB:                              ; preds = %originalBB, %13
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %4, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  br label %originalBB
}

declare void @_ZN7MappingILi3EED2Ev(%class.Mapping*) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"class.std::vector"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %12 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %14, align 8
  %16 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %17 = invoke dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %16)
          to label %18 unwind label %37

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.277
  %20 = load i32, i32* @y.278
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.277
  %28 = load i32, i32* @y.278
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEES2_EvT_S4_RSaIT0_E(%"class.Polynomials::Polynomial"* %10, %"class.Polynomials::Polynomial"* %15, %"class.std::allocator"* dereferenceable(1) %17)
          to label %35 unwind label %37

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %36)
  ret void

; <label>:37:                                     ; preds = %originalBBpart2, %1
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %3, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %4, align 4
  %41 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %41)
          to label %42 unwind label %64

; <label>:42:                                     ; preds = %37
  %43 = load i32, i32* @x.277
  %44 = load i32, i32* @y.278
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i32, i32* @x.277
  %52 = load i32, i32* @y.278
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %59

; <label>:59:                                     ; preds = %originalBBpart24
  %60 = load i8*, i8** %3, align 8
  %61 = load i32, i32* %4, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %37
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEES2_EvT_S4_RSaIT0_E(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = load i32, i32* @x.279
  %5 = load i32, i32* @y.280
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.Polynomials::Polynomial"*, align 8
  %13 = alloca %"class.Polynomials::Polynomial"*, align 8
  %14 = alloca %"class.std::allocator"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %12, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %13, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %14, align 8
  %15 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %12, align 8
  %16 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %13, align 8
  call void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_(%"class.Polynomials::Polynomial"* %15, %"class.Polynomials::Polynomial"* %16)
  %17 = load i32, i32* @x.279
  %18 = load i32, i32* @y.280
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca %"class.Polynomials::Polynomial"*, align 8
  %26 = alloca %"class.Polynomials::Polynomial"*, align 8
  %27 = alloca %"class.std::allocator"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %25, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %26, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %27, align 8
  %28 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %25, align 8
  %29 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %26, align 8
  call void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_(%"class.Polynomials::Polynomial"* %28, %"class.Polynomials::Polynomial"* %29)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.283
  %3 = load i32, i32* @y.284
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %10, align 8
  %13 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %19, i32 0, i32 2
  %21 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %22 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %23, i32 0, i32 0
  %25 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %24, align 8
  %26 = ptrtoint %"class.Polynomials::Polynomial"* %21 to i64
  %27 = ptrtoint %"class.Polynomials::Polynomial"* %25 to i64
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 48
  %30 = load i32, i32* @x.283
  %31 = load i32, i32* @y.284
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %13, %"class.Polynomials::Polynomial"* %17, i64 %29)
          to label %38 unwind label %40

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %39) #2
  ret void

; <label>:40:                                     ; preds = %originalBBpart2
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %11, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %12, align 4
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %44) #2
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i8*, i8** %11, align 8
  %47 = load i32, i32* %12, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %1
  %50 = alloca %"struct.std::_Vector_base"*, align 8
  %51 = alloca i8*
  %52 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %50, align 8
  %53 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %50, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %53, i32 0, i32 0
  %55 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %54 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %55, i32 0, i32 0
  %57 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %56, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %53, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %58 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %59, i32 0, i32 2
  %61 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %53, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %62 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %63, i32 0, i32 0
  %65 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %64, align 8
  %66 = ptrtoint %"class.Polynomials::Polynomial"* %61 to i64
  %67 = ptrtoint %"class.Polynomials::Polynomial"* %65 to i64
  %_ = shl i64 %66, %67
  %_1 = sub i64 0, %66
  %gen = add i64 %_1, %67
  %_2 = sub i64 0, %66
  %gen3 = add i64 %_2, %67
  %_4 = shl i64 %66, %67
  %_5 = shl i64 %66, %67
  %_6 = shl i64 %66, %67
  %_7 = sub i64 %66, %67
  %gen8 = mul i64 %_7, %67
  %68 = sub i64 %66, %67
  %_9 = sub i64 0, %68
  %gen10 = add i64 %_9, 48
  %_11 = sub i64 %68, 48
  %gen12 = mul i64 %_11, 48
  %_13 = shl i64 %68, 48
  %69 = sdiv exact i64 %68, 48
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat {
  %3 = alloca %"class.Polynomials::Polynomial"*, align 8
  %4 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %3, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %4, align 8
  %5 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %3, align 8
  %6 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials10PolynomialIdEEEEvT_S6_(%"class.Polynomials::Polynomial"* %5, %"class.Polynomials::Polynomial"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials10PolynomialIdEEEEvT_S6_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"*) #0 comdat align 2 {
  %3 = alloca %"class.Polynomials::Polynomial"*, align 8
  %4 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %3, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %originalBBpart2, %2
  %6 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %3, align 8
  %7 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  %8 = icmp ne %"class.Polynomials::Polynomial"* %6, %7
  br i1 %8, label %9, label %31

; <label>:9:                                      ; preds = %5
  %10 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %3, align 8
  %11 = call %"class.Polynomials::Polynomial"* @_ZSt11__addressofIN11Polynomials10PolynomialIdEEEPT_RS3_(%"class.Polynomials::Polynomial"* dereferenceable(48) %10)
  call void @_ZSt8_DestroyIN11Polynomials10PolynomialIdEEEvPT_(%"class.Polynomials::Polynomial"* %11)
  br label %12

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.287
  %14 = load i32, i32* @y.288
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %3, align 8
  %22 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %21, i32 1
  store %"class.Polynomials::Polynomial"* %22, %"class.Polynomials::Polynomial"** %3, align 8
  %23 = load i32, i32* @x.287
  %24 = load i32, i32* @y.288
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %5

; <label>:31:                                     ; preds = %5
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %12
  %32 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %3, align 8
  %33 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %32, i32 1
  store %"class.Polynomials::Polynomial"* %33, %"class.Polynomials::Polynomial"** %3, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN11Polynomials10PolynomialIdEEEvPT_(%"class.Polynomials::Polynomial"*) #0 comdat {
  %2 = load i32, i32* @x.289
  %3 = load i32, i32* @y.290
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %10, align 8
  %11 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %10, align 8
  %12 = bitcast %"class.Polynomials::Polynomial"* %11 to void (%"class.Polynomials::Polynomial"*)***
  %13 = load void (%"class.Polynomials::Polynomial"*)**, void (%"class.Polynomials::Polynomial"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.Polynomials::Polynomial"*)*, void (%"class.Polynomials::Polynomial"*)** %13, i64 0
  %15 = load void (%"class.Polynomials::Polynomial"*)*, void (%"class.Polynomials::Polynomial"*)** %14, align 8
  call void %15(%"class.Polynomials::Polynomial"* %11)
  %16 = load i32, i32* @x.289
  %17 = load i32, i32* @y.290
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %24, align 8
  %25 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %24, align 8
  %26 = bitcast %"class.Polynomials::Polynomial"* %25 to void (%"class.Polynomials::Polynomial"*)***
  %27 = load void (%"class.Polynomials::Polynomial"*)**, void (%"class.Polynomials::Polynomial"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.Polynomials::Polynomial"*)*, void (%"class.Polynomials::Polynomial"*)** %27, i64 0
  %29 = load void (%"class.Polynomials::Polynomial"*)*, void (%"class.Polynomials::Polynomial"*)** %28, align 8
  call void %29(%"class.Polynomials::Polynomial"* %25)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZSt11__addressofIN11Polynomials10PolynomialIdEEEPT_RS3_(%"class.Polynomials::Polynomial"* dereferenceable(48)) #1 comdat {
  %2 = alloca %"class.Polynomials::Polynomial"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %2, align 8
  %3 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %2, align 8
  ret %"class.Polynomials::Polynomial"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"*, %"class.Polynomials::Polynomial"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca %"class.Polynomials::Polynomial"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %9 = icmp ne %"class.Polynomials::Polynomial"* %8, null
  br i1 %9, label %10, label %31

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.293
  %12 = load i32, i32* @y.294
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %19 to %"class.std::allocator"*
  %21 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %22 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator"* dereferenceable(1) %20, %"class.Polynomials::Polynomial"* %21, i64 %22)
  %23 = load i32, i32* @x.293
  %24 = load i32, i32* @y.294
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %31

; <label>:31:                                     ; preds = %originalBBpart2, %3
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %10
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %32 to %"class.std::allocator"*
  %34 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %35 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator"* dereferenceable(1) %33, %"class.Polynomials::Polynomial"* %34, i64 %35)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E10deallocateERS4_PS3_m(%"class.std::allocator"* dereferenceable(1), %"class.Polynomials::Polynomial"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.Polynomials::Polynomial"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.Polynomials::Polynomial"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"*, %"class.Polynomials::Polynomial"*, i64) #1 comdat align 2 {
  %4 = load i32, i32* @x.299
  %5 = load i32, i32* @y.300
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %13 = alloca %"class.Polynomials::Polynomial"*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %12, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %12, align 8
  %16 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %13, align 8
  %17 = bitcast %"class.Polynomials::Polynomial"* %16 to i8*
  call void @_ZdlPv(i8* %17) #2
  %18 = load i32, i32* @x.299
  %19 = load i32, i32* @y.300
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %27 = alloca %"class.Polynomials::Polynomial"*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %26, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %30 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %27, align 8
  %31 = bitcast %"class.Polynomials::Polynomial"* %30 to i8*
  call void @_ZdlPv(i8* %31) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.114*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Table.114*, align 8
  store %class.Table.114* %0, %class.Table.114** %2, align 8
  %3 = load %class.Table.114*, %class.Table.114** %2, align 8
  %4 = bitcast %class.Table.114* %3 to %class.TableBase.115*
  call void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev(%class.TableBase.115* %4)
  ret void
}

declare void @_ZN7MappingILi3EE16InternalDataBaseD2Ev(%"class.Mapping<3>::InternalDataBase"*) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9MappingQ1ILi3EE12InternalDataD2Ev(%"class.MappingQ1<3>::InternalData"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.MappingQ1<3>::InternalData"* %0, %"class.MappingQ1<3>::InternalData"** %2, align 8
  %5 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %2, align 8
  %6 = bitcast %"class.MappingQ1<3>::InternalData"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9MappingQ1ILi3EE12InternalDataE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 7
  invoke void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %7)
          to label %8 unwind label %38

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 6
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.114* %9)
          to label %10 unwind label %43

; <label>:10:                                     ; preds = %8
  %11 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 5
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.114* %11)
          to label %12 unwind label %48

; <label>:12:                                     ; preds = %10
  %13 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 4
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.108"* %13)
          to label %14 unwind label %71

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 3
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.108"* %15)
          to label %16 unwind label %94

; <label>:16:                                     ; preds = %14
  %17 = load i32, i32* @x.305
  %18 = load i32, i32* @y.306
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 2
  %26 = load i32, i32* @x.305
  %27 = load i32, i32* @y.306
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.103"* %25)
          to label %34 unwind label %117

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %35)
          to label %36 unwind label %124

; <label>:36:                                     ; preds = %34
  %37 = bitcast %"class.MappingQ1<3>::InternalData"* %5 to %"class.Mapping<3>::InternalDataBase"*
  call void @_ZN7MappingILi3EE16InternalDataBaseD2Ev(%"class.Mapping<3>::InternalDataBase"* %37)
  ret void

; <label>:38:                                     ; preds = %1
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  %42 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 6
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.114* %42)
          to label %47 unwind label %171

; <label>:43:                                     ; preds = %8
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %3, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %4, align 4
  br label %52

; <label>:47:                                     ; preds = %38
  br label %52

; <label>:48:                                     ; preds = %10
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %3, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %4, align 4
  br label %75

; <label>:52:                                     ; preds = %47, %43
  %53 = load i32, i32* @x.305
  %54 = load i32, i32* @y.306
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %52, %originalBB1alteredBB
  %61 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 5
  %62 = load i32, i32* @x.305
  %63 = load i32, i32* @y.306
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZN5TableILi2E6TensorILi1ELi3EEED2Ev(%class.Table.114* %61)
          to label %70 unwind label %171

; <label>:70:                                     ; preds = %originalBBpart24
  br label %75

; <label>:71:                                     ; preds = %12
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %3, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %4, align 4
  br label %114

; <label>:75:                                     ; preds = %70, %48
  %76 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 4
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.108"* %76)
          to label %77 unwind label %171

; <label>:77:                                     ; preds = %75
  %78 = load i32, i32* @x.305
  %79 = load i32, i32* @y.306
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %77, %originalBB6alteredBB
  %86 = load i32, i32* @x.305
  %87 = load i32, i32* @y.306
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %114

; <label>:94:                                     ; preds = %14
  %95 = load i32, i32* @x.305
  %96 = load i32, i32* @y.306
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %94, %originalBB10alteredBB
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %3, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %4, align 4
  %106 = load i32, i32* @x.305
  %107 = load i32, i32* @y.306
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %121

; <label>:114:                                    ; preds = %originalBBpart28, %71
  %115 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 3
  invoke void @_ZNSt6vectorI6TensorILi2ELi3EESaIS1_EED2Ev(%"class.std::vector.108"* %115)
          to label %116 unwind label %171

; <label>:116:                                    ; preds = %114
  br label %121

; <label>:117:                                    ; preds = %originalBBpart2
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %3, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %4, align 4
  br label %144

; <label>:121:                                    ; preds = %116, %originalBBpart212
  %122 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 2
  invoke void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EED2Ev(%"class.std::vector.103"* %122)
          to label %123 unwind label %171

; <label>:123:                                    ; preds = %121
  br label %144

; <label>:124:                                    ; preds = %34
  %125 = load i32, i32* @x.305
  %126 = load i32, i32* @y.306
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %124, %originalBB14alteredBB
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  store i8* %134, i8** %3, align 8
  %135 = extractvalue { i8*, i32 } %133, 1
  store i32 %135, i32* %4, align 4
  %136 = load i32, i32* @x.305
  %137 = load i32, i32* @y.306
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %147

; <label>:144:                                    ; preds = %123, %117
  %145 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 1
  invoke void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.0"* %145)
          to label %146 unwind label %171

; <label>:146:                                    ; preds = %144
  br label %147

; <label>:147:                                    ; preds = %146, %originalBBpart216
  %148 = load i32, i32* @x.305
  %149 = load i32, i32* @y.306
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %147, %originalBB18alteredBB
  %156 = bitcast %"class.MappingQ1<3>::InternalData"* %5 to %"class.Mapping<3>::InternalDataBase"*
  %157 = load i32, i32* @x.305
  %158 = load i32, i32* @y.306
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @_ZN7MappingILi3EE16InternalDataBaseD2Ev(%"class.Mapping<3>::InternalDataBase"* %156)
          to label %165 unwind label %171

; <label>:165:                                    ; preds = %originalBBpart220
  br label %166

; <label>:166:                                    ; preds = %165
  %167 = load i8*, i8** %3, align 8
  %168 = load i32, i32* %4, align 4
  %169 = insertvalue { i8*, i32 } undef, i8* %167, 0
  %170 = insertvalue { i8*, i32 } %169, i32 %168, 1
  resume { i8*, i32 } %170

; <label>:171:                                    ; preds = %originalBBpart220, %144, %121, %114, %75, %originalBBpart24, %38
  %172 = landingpad { i8*, i32 }
          catch i8* null
  %173 = extractvalue { i8*, i32 } %172, 0
  call void @__clang_call_terminate(i8* %173) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %16
  %174 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  %175 = getelementptr inbounds %"class.MappingQ1<3>::InternalData", %"class.MappingQ1<3>::InternalData"* %5, i32 0, i32 5
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %77
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %94
  %176 = landingpad { i8*, i32 }
          cleanup
  %177 = extractvalue { i8*, i32 } %176, 0
  store i8* %177, i8** %3, align 8
  %178 = extractvalue { i8*, i32 } %176, 1
  store i32 %178, i32* %4, align 4
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %124
  %179 = landingpad { i8*, i32 }
          cleanup
  %180 = extractvalue { i8*, i32 } %179, 0
  store i8* %180, i8** %3, align 8
  %181 = extractvalue { i8*, i32 } %179, 1
  store i32 %181, i32* %4, align 4
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %147
  %182 = bitcast %"class.MappingQ1<3>::InternalData"* %5 to %"class.Mapping<3>::InternalDataBase"*
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9MappingQ1ILi3EE12InternalDataD0Ev(%"class.MappingQ1<3>::InternalData"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.MappingQ1<3>::InternalData"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.MappingQ1<3>::InternalData"* %0, %"class.MappingQ1<3>::InternalData"** %2, align 8
  %5 = load %"class.MappingQ1<3>::InternalData"*, %"class.MappingQ1<3>::InternalData"** %2, align 8
  invoke void @_ZN9MappingQ1ILi3EE12InternalDataD2Ev(%"class.MappingQ1<3>::InternalData"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %"class.MappingQ1<3>::InternalData"* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %"class.MappingQ1<3>::InternalData"* %5 to i8*
  call void @_ZdlPv(i8* %12) #14
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev(%class.TableBase.115*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.TableBase.115*, align 8
  store %class.TableBase.115* %0, %class.TableBase.115** %2, align 8
  %3 = load %class.TableBase.115*, %class.TableBase.115** %2, align 8
  %4 = bitcast %class.TableBase.115* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2E6TensorILi1ELi3EEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.TableBase.115, %class.TableBase.115* %3, i32 0, i32 1
  %6 = load %class.Tensor*, %class.Tensor** %5, align 8
  %7 = icmp ne %class.Tensor* %6, null
  br i1 %7, label %8, label %31

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.309
  %10 = load i32, i32* @y.310
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %class.TableBase.115, %class.TableBase.115* %3, i32 0, i32 1
  %18 = load %class.Tensor*, %class.Tensor** %17, align 8
  %19 = icmp eq %class.Tensor* %18, null
  %20 = load i32, i32* @x.309
  %21 = load i32, i32* @y.310
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %30, label %28

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = bitcast %class.Tensor* %18 to i8*
  call void @_ZdaPv(i8* %29) #14
  br label %30

; <label>:30:                                     ; preds = %28, %originalBBpart2
  br label %31

; <label>:31:                                     ; preds = %30, %1
  %32 = bitcast %class.TableBase.115* %3 to %class.Subscriptor*
  call void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %32)
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %8
  %33 = getelementptr inbounds %class.TableBase.115, %class.TableBase.115* %3, i32 0, i32 1
  %34 = load %class.Tensor*, %class.Tensor** %33, align 8
  %35 = icmp eq %class.Tensor* %34, null
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED0Ev(%class.TableBase.115*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.311
  %3 = load i32, i32* @y.312
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableBase.115*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.TableBase.115* %0, %class.TableBase.115** %10, align 8
  %13 = load %class.TableBase.115*, %class.TableBase.115** %10, align 8
  %14 = load i32, i32* @x.311
  %15 = load i32, i32* @y.312
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9TableBaseILi2E6TensorILi1ELi3EEED2Ev(%class.TableBase.115* %13)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %originalBBpart2
  %23 = bitcast %class.TableBase.115* %13 to i8*
  call void @_ZdlPv(i8* %23) #14
  ret void

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %11, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %12, align 4
  %28 = bitcast %class.TableBase.115* %13 to i8*
  call void @_ZdlPv(i8* %28) #14
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %11, align 8
  %31 = load i32, i32* %12, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %class.TableBase.115*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %class.TableBase.115* %0, %class.TableBase.115** %34, align 8
  %37 = load %class.TableBase.115*, %class.TableBase.115** %34, align 8
  br label %originalBB
}

declare void @_ZN10QuadratureILi3EED2Ev(%class.Quadrature*) unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.313
  %3 = load i32, i32* @y.314
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %10, align 8
  %12 = load i32, i32* @x.313
  %13 = load i32, i32* @y.314
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdE6reinitERK12TableIndicesILi2EE(%class.TableBase*, %class.TableIndices* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %class.TableBase*, align 8
  %4 = alloca %class.TableIndices*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.TableIndices, align 4
  store %class.TableBase* %0, %class.TableBase** %3, align 8
  store %class.TableIndices* %1, %class.TableIndices** %4, align 8
  %7 = load %class.TableBase*, %class.TableBase** %3, align 8
  %8 = load %class.TableIndices*, %class.TableIndices** %4, align 8
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  %10 = bitcast %class.TableIndices* %9 to i8*
  %11 = bitcast %class.TableIndices* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  %12 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %7)
  store i32 %12, i32* %5, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %48

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %17 = load double*, double** %16, align 8
  %18 = icmp ne double* %17, null
  br i1 %18, label %19, label %42

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %21 = load double*, double** %20, align 8
  %22 = icmp eq double* %21, null
  br i1 %22, label %25, label %23

; <label>:23:                                     ; preds = %19
  %24 = bitcast double* %21 to i8*
  call void @_ZdaPv(i8* %24) #14
  br label %25

; <label>:25:                                     ; preds = %23, %19
  %26 = load i32, i32* @x.317
  %27 = load i32, i32* @y.318
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = load i32, i32* @x.317
  %35 = load i32, i32* @y.318
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %42

; <label>:42:                                     ; preds = %originalBBpart2, %15
  %43 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store double* null, double** %43, align 8
  %44 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 0, i32* %44, align 8
  call void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %6)
  %45 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 3
  %46 = bitcast %class.TableIndices* %45 to i8*
  %47 = bitcast %class.TableIndices* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 4, i1 false)
  br label %126

; <label>:48:                                     ; preds = %2
  %49 = load i32, i32* @x.317
  %50 = load i32, i32* @y.318
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = load i32, i32* %5, align 4
  %60 = icmp ult i32 %58, %59
  %61 = load i32, i32* @x.317
  %62 = load i32, i32* @y.318
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %60, label %69, label %109

; <label>:69:                                     ; preds = %originalBBpart24
  %70 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %71 = load double*, double** %70, align 8
  %72 = icmp ne double* %71, null
  br i1 %72, label %73, label %96

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* @x.317
  %75 = load i32, i32* @y.318
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %73, %originalBB6alteredBB
  %82 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %83 = load double*, double** %82, align 8
  %84 = icmp eq double* %83, null
  %85 = load i32, i32* @x.317
  %86 = load i32, i32* @y.318
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %84, label %95, label %93

; <label>:93:                                     ; preds = %originalBBpart28
  %94 = bitcast double* %83 to i8*
  call void @_ZdaPv(i8* %94) #14
  br label %95

; <label>:95:                                     ; preds = %93, %originalBBpart28
  br label %96

; <label>:96:                                     ; preds = %95, %69
  %97 = load i32, i32* %5, align 4
  %98 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  store i32 %97, i32* %98, align 8
  %99 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = zext i32 %100 to i64
  %102 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %101, i64 8)
  %103 = extractvalue { i64, i1 } %102, 1
  %104 = extractvalue { i64, i1 } %102, 0
  %105 = select i1 %103, i64 -1, i64 %104
  %106 = call i8* @_Znam(i64 %105) #13
  %107 = bitcast i8* %106 to double*
  %108 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  store double* %107, double** %108, align 8
  br label %109

; <label>:109:                                    ; preds = %96, %originalBBpart24
  %110 = load i32, i32* @x.317
  %111 = load i32, i32* @y.318
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %109, %originalBB10alteredBB
  call void @_ZN9TableBaseILi2EdE12reset_valuesEv(%class.TableBase* %7)
  %118 = load i32, i32* @x.317
  %119 = load i32, i32* @y.318
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %126

; <label>:126:                                    ; preds = %originalBBpart212, %42
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %25
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %127 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 2
  %128 = load i32, i32* %127, align 8
  %129 = load i32, i32* %5, align 4
  %130 = icmp ult i32 %128, %129
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %73
  %131 = getelementptr inbounds %class.TableBase, %class.TableBase* %7, i32 0, i32 1
  %132 = load double*, double** %131, align 8
  %133 = icmp eq double* %132, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %109
  call void @_ZN9TableBaseILi2EdE12reset_valuesEv(%class.TableBase* %7)
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ejj(%class.TableIndices*, i32, i32) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* @x.319
  %5 = load i32, i32* @y.320
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.TableIndices*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.TableIndices* %0, %class.TableIndices** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  %15 = load %class.TableIndices*, %class.TableIndices** %12, align 8
  %16 = bitcast %class.TableIndices* %15 to %class.TableIndicesBase*
  %17 = load i32, i32* %13, align 4
  %18 = bitcast %class.TableIndices* %15 to %class.TableIndicesBase*
  %19 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %18, i32 0, i32 0
  %20 = getelementptr inbounds [2 x i32], [2 x i32]* %19, i64 0, i64 0
  store i32 %17, i32* %20, align 4
  %21 = load i32, i32* %14, align 4
  %22 = bitcast %class.TableIndices* %15 to %class.TableIndicesBase*
  %23 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %22, i32 0, i32 0
  %24 = getelementptr inbounds [2 x i32], [2 x i32]* %23, i64 0, i64 1
  store i32 %21, i32* %24, align 4
  %25 = load i32, i32* @x.319
  %26 = load i32, i32* @y.320
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %33 = alloca %class.TableIndices*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  store %class.TableIndices* %0, %class.TableIndices** %33, align 8
  store i32 %1, i32* %34, align 4
  store i32 %2, i32* %35, align 4
  %36 = load %class.TableIndices*, %class.TableIndices** %33, align 8
  %37 = bitcast %class.TableIndices* %36 to %class.TableIndicesBase*
  %38 = load i32, i32* %34, align 4
  %39 = bitcast %class.TableIndices* %36 to %class.TableIndicesBase*
  %40 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %39, i32 0, i32 0
  %41 = getelementptr inbounds [2 x i32], [2 x i32]* %40, i64 0, i64 0
  store i32 %38, i32* %41, align 4
  %42 = load i32, i32* %35, align 4
  %43 = bitcast %class.TableIndices* %36 to %class.TableIndicesBase*
  %44 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %43, i32 0, i32 0
  %45 = getelementptr inbounds [2 x i32], [2 x i32]* %44, i64 0, i64 1
  store i32 %42, i32* %45, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase*) #0 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %6

; <label>:6:                                      ; preds = %16, %1
  %7 = load i32, i32* %4, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %19

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 3
  %11 = bitcast %class.TableIndices* %10 to %class.TableIndicesBase*
  %12 = load i32, i32* %4, align 4
  %13 = call i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase* %11, i32 %12)
  %14 = load i32, i32* %3, align 4
  %15 = mul i32 %14, %13
  store i32 %15, i32* %3, align 4
  br label %16

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* %4, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %4, align 4
  br label %6

; <label>:19:                                     ; preds = %6
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.323
  %3 = load i32, i32* @y.324
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %10, align 8
  %11 = load %class.TableIndices*, %class.TableIndices** %10, align 8
  %12 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %13 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %14 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %13, i32 0, i32 0
  %15 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 1
  store i32 0, i32* %15, align 4
  %16 = bitcast %class.TableIndices* %11 to %class.TableIndicesBase*
  %17 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %16, i32 0, i32 0
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 0
  store i32 0, i32* %18, align 4
  %19 = load i32, i32* @x.323
  %20 = load i32, i32* @y.324
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %class.TableIndices*, align 8
  store %class.TableIndices* %0, %class.TableIndices** %27, align 8
  %28 = load %class.TableIndices*, %class.TableIndices** %27, align 8
  %29 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %30 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %31 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %30, i32 0, i32 0
  %32 = getelementptr inbounds [2 x i32], [2 x i32]* %31, i64 0, i64 1
  store i32 0, i32* %32, align 4
  %33 = bitcast %class.TableIndices* %28 to %class.TableIndicesBase*
  %34 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %33, i32 0, i32 0
  %35 = getelementptr inbounds [2 x i32], [2 x i32]* %34, i64 0, i64 0
  store i32 0, i32* %35, align 4
  br label %originalBB
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #5

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdE12reset_valuesEv(%class.TableBase*) #0 comdat align 2 {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca double, align 8
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %4 = load %class.TableBase*, %class.TableBase** %2, align 8
  %5 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %12

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %class.TableBase, %class.TableBase* %4, i32 0, i32 1
  %9 = load double*, double** %8, align 8
  %10 = call i32 @_ZNK9TableBaseILi2EdE10n_elementsEv(%class.TableBase* %4)
  store double 0.000000e+00, double* %3, align 8
  %11 = call double* @_ZSt6fill_nIPdjdET_S1_T0_RKT1_(double* %9, i32 %10, double* dereferenceable(8) %3)
  br label %12

; <label>:12:                                     ; preds = %7, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK16TableIndicesBaseILi2EEixEj(%class.TableIndicesBase*, i32) #1 comdat align 2 {
  %3 = alloca %class.TableIndicesBase*, align 8
  %4 = alloca i32, align 4
  store %class.TableIndicesBase* %0, %class.TableIndicesBase** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.TableIndicesBase*, %class.TableIndicesBase** %3, align 8
  %6 = getelementptr inbounds %class.TableIndicesBase, %class.TableIndicesBase* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt6fill_nIPdjdET_S1_T0_RKT1_(double*, i32, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i32 %1, i32* %5, align 4
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load i32, i32* %5, align 4
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %8, i32 %9, double* dereferenceable(8) %10)
  %12 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %4, double* %11)
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8), double*) #1 comdat {
  %3 = alloca double**, align 8
  %4 = alloca double*, align 8
  store double** %0, double*** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt10__fill_n_aIPdjdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double*, i32, double* dereferenceable(8)) #1 comdat {
  %4 = load i32, i32* @x.333
  %5 = load i32, i32* @y.334
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca i32, align 4
  %14 = alloca double*, align 8
  %15 = alloca double, align 8
  %16 = alloca i32, align 4
  store double* %0, double** %12, align 8
  store i32 %1, i32* %13, align 4
  store double* %2, double** %14, align 8
  %17 = load double*, double** %14, align 8
  %18 = load double, double* %17, align 8
  store double %18, double* %15, align 8
  %19 = load i32, i32* %13, align 4
  store i32 %19, i32* %16, align 4
  %20 = load i32, i32* @x.333
  %21 = load i32, i32* @y.334
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %34, %originalBBpart2
  %29 = load i32, i32* %16, align 4
  %30 = icmp ugt i32 %29, 0
  br i1 %30, label %31, label %39

; <label>:31:                                     ; preds = %28
  %32 = load double, double* %15, align 8
  %33 = load double*, double** %12, align 8
  store double %32, double* %33, align 8
  br label %34

; <label>:34:                                     ; preds = %31
  %35 = load i32, i32* %16, align 4
  %36 = add i32 %35, -1
  store i32 %36, i32* %16, align 4
  %37 = load double*, double** %12, align 8
  %38 = getelementptr inbounds double, double* %37, i32 1
  store double* %38, double** %12, align 8
  br label %28

; <label>:39:                                     ; preds = %28
  %40 = load double*, double** %12, align 8
  ret double* %40

originalBBalteredBB:                              ; preds = %originalBB, %3
  %41 = alloca double*, align 8
  %42 = alloca i32, align 4
  %43 = alloca double*, align 8
  %44 = alloca double, align 8
  %45 = alloca i32, align 4
  store double* %0, double** %41, align 8
  store i32 %1, i32* %42, align 4
  store double* %2, double** %43, align 8
  %46 = load double*, double** %43, align 8
  %47 = load double, double* %46, align 8
  store double %47, double* %44, align 8
  %48 = load i32, i32* %42, align 4
  store i32 %48, i32* %45, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdET_S1_(double*) #1 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2EdLb0ELj1EEC2ERK9TableBaseILi2EdEPd(%"class.internal::TableBaseAccessors::Accessor"*, %class.TableBase* dereferenceable(48), double*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.internal::TableBaseAccessors::Accessor"*, align 8
  %5 = alloca %class.TableBase*, align 8
  %6 = alloca double*, align 8
  store %"class.internal::TableBaseAccessors::Accessor"* %0, %"class.internal::TableBaseAccessors::Accessor"** %4, align 8
  store %class.TableBase* %1, %class.TableBase** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.internal::TableBaseAccessors::Accessor"*, %"class.internal::TableBaseAccessors::Accessor"** %4, align 8
  %8 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %7, i32 0, i32 0
  %9 = load %class.TableBase*, %class.TableBase** %5, align 8
  store %class.TableBase* %9, %class.TableBase** %8, align 8
  %10 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor", %"class.internal::TableBaseAccessors::Accessor"* %7, i32 0, i32 1
  %11 = load double*, double** %6, align 8
  store double* %11, double** %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.61"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.339
  %3 = load i32, i32* @y.340
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %10, align 8
  %12 = load i32, i32* @x.339
  %13 = load i32, i32* @y.340
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEED2Ev(%"class.__gnu_cxx::new_allocator.61"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE17_S_check_init_lenEmRKS2_(i64, %"class.std::allocator.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.343
  %4 = load i32, i32* @y.344
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::allocator.60"*, align 8
  %13 = alloca %"class.std::allocator.60", align 1
  %14 = alloca i8*
  %15 = alloca i32
  store i64 %0, i64* %11, align 8
  store %"class.std::allocator.60"* %1, %"class.std::allocator.60"** %12, align 8
  %16 = load i64, i64* %11, align 8
  %17 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %12, align 8
  call void @_ZNSaI5PointILi3EEEC2ERKS1_(%"class.std::allocator.60"* %13, %"class.std::allocator.60"* dereferenceable(1) %17) #2
  %18 = load i32, i32* @x.343
  %19 = load i32, i32* @y.344
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %26 = invoke i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.60"* dereferenceable(1) %13)
          to label %27 unwind label %62

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.343
  %29 = load i32, i32* @y.344
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = icmp ugt i64 %16, %26
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %13) #2
  %37 = load i32, i32* @x.343
  %38 = load i32, i32* @y.344
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %36, label %45, label %66

; <label>:45:                                     ; preds = %originalBBpart24
  %46 = load i32, i32* @x.343
  %47 = load i32, i32* @y.344
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0)) #15
  %54 = load i32, i32* @x.343
  %55 = load i32, i32* @y.344
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

; <label>:62:                                     ; preds = %originalBBpart2
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %14, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %15, align 4
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %13) #2
  br label %68

; <label>:66:                                     ; preds = %originalBBpart24
  %67 = load i64, i64* %11, align 8
  ret i64 %67

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @x.343
  %70 = load i32, i32* @y.344
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i8*, i8** %14, align 8
  %78 = load i32, i32* %15, align 4
  %79 = insertvalue { i8*, i32 } undef, i8* %77, 0
  %80 = insertvalue { i8*, i32 } %79, i32 %78, 1
  %81 = load i32, i32* @x.343
  %82 = load i32, i32* @y.344
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %80

originalBBalteredBB:                              ; preds = %originalBB, %2
  %89 = alloca i64, align 8
  %90 = alloca %"class.std::allocator.60"*, align 8
  %91 = alloca %"class.std::allocator.60", align 1
  %92 = alloca i8*
  %93 = alloca i32
  store i64 %0, i64* %89, align 8
  store %"class.std::allocator.60"* %1, %"class.std::allocator.60"** %90, align 8
  %94 = load i64, i64* %89, align 8
  %95 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %90, align 8
  call void @_ZNSaI5PointILi3EEEC2ERKS1_(%"class.std::allocator.60"* %91, %"class.std::allocator.60"* dereferenceable(1) %95) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %96 = icmp ugt i64 %16, %26
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %13) #2
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0)) #15
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  %97 = load i8*, i8** %14, align 8
  %98 = load i32, i32* %15, align 4
  %99 = insertvalue { i8*, i32 } undef, i8* %97, 0
  %100 = insertvalue { i8*, i32 } %99, i32 %98, 1
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.59"*, i64, %"class.std::allocator.60"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.59"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.60"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.59"* %0, %"struct.std::_Vector_base.59"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.60"* %2, %"class.std::allocator.60"** %6, align 8
  %9 = load %"struct.std::_Vector_base.59"*, %"struct.std::_Vector_base.59"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %6, align 8
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %10, %"class.std::allocator.60"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.59"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.345
  %16 = load i32, i32* @y.346
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %7, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %8, align 4
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %10) #2
  %26 = load i32, i32* @x.345
  %27 = load i32, i32* @y.346
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i8*, i8** %7, align 8
  %36 = load i32, i32* %8, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

originalBBalteredBB:                              ; preds = %originalBB, %14
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %7, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %8, align 4
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %10) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.58"*, i64, %class.Point* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.58"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Point*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %"class.std::vector.58"*, %"class.std::vector.58"** %4, align 8
  %8 = bitcast %"class.std::vector.58"* %7 to %"struct.std::_Vector_base.59"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %9 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %10, i32 0, i32 0
  %12 = load %class.Point*, %class.Point** %11, align 8
  %13 = load i64, i64* %5, align 8
  %14 = load %class.Point*, %class.Point** %6, align 8
  %15 = bitcast %"class.std::vector.58"* %7 to %"struct.std::_Vector_base.59"*
  %16 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %15)
  %17 = call %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point* %12, i64 %13, %class.Point* dereferenceable(24) %14, %"class.std::allocator.60"* dereferenceable(1) %16)
  %18 = bitcast %"class.std::vector.58"* %7 to %"struct.std::_Vector_base.59"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %19 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %20, i32 0, i32 1
  store %class.Point* %17, %class.Point** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.59"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.59"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.59"* %0, %"struct.std::_Vector_base.59"** %2, align 8
  %5 = load %"struct.std::_Vector_base.59"*, %"struct.std::_Vector_base.59"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %class.Point*, %class.Point** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %class.Point*, %class.Point** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %class.Point*, %class.Point** %16, align 8
  %18 = ptrtoint %class.Point* %13 to i64
  %19 = ptrtoint %class.Point* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"* %5, %class.Point* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %23) #2
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %28) #2
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.60"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.60"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %2, align 8
  store i64 384307168202282325, i64* %3, align 8
  %5 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.60"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI5PointILi3EEEC2ERKS1_(%"class.std::allocator.60"*, %"class.std::allocator.60"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.60"*, align 8
  %4 = alloca %"class.std::allocator.60"*, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %3, align 8
  store %"class.std::allocator.60"* %1, %"class.std::allocator.60"** %4, align 8
  %5 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %3, align 8
  %6 = bitcast %"class.std::allocator.60"* %5 to %"class.__gnu_cxx::new_allocator.61"*
  %7 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %4, align 8
  %8 = bitcast %"class.std::allocator.60"* %7 to %"class.__gnu_cxx::new_allocator.61"*
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.61"* %6, %"class.__gnu_cxx::new_allocator.61"* dereferenceable(1) %8) #2
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.60"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.60"*, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %2, align 8
  %3 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %2, align 8
  %4 = bitcast %"class.std::allocator.60"* %3 to %"class.__gnu_cxx::new_allocator.61"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.61"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = load i32, i32* @x.357
  %4 = load i32, i32* @y.358
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %14, align 8
  %16 = load i64*, i64** %12, align 8
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  %19 = load i32, i32* @x.357
  %20 = load i32, i32* @y.358
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %29

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i64*, i64** %13, align 8
  store i64* %28, i64** %11, align 8
  br label %31

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i64*, i64** %12, align 8
  store i64* %30, i64** %11, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %27
  %32 = load i64*, i64** %11, align 8
  ret i64* %32

originalBBalteredBB:                              ; preds = %originalBB, %2
  %33 = alloca i64*, align 8
  %34 = alloca i64*, align 8
  %35 = alloca i64*, align 8
  store i64* %0, i64** %34, align 8
  store i64* %1, i64** %35, align 8
  %36 = load i64*, i64** %35, align 8
  %37 = load i64, i64* %36, align 8
  %38 = load i64*, i64** %34, align 8
  %39 = load i64, i64* %38, align 8
  %40 = icmp ult i64 %37, %39
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.61"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %1, %"class.__gnu_cxx::new_allocator.61"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"*, %"class.std::allocator.60"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.60"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.60"* %1, %"class.std::allocator.60"** %4, align 8
  %7 = load %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %7 to %"class.std::allocator.60"*
  %9 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %4, align 8
  call void @_ZNSaI5PointILi3EEEC2ERKS1_(%"class.std::allocator.60"* %8, %"class.std::allocator.60"* dereferenceable(1) %9) #2
  %10 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.363
  %14 = load i32, i32* @y.364
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %5, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %6, align 4
  %24 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %7 to %"class.std::allocator.60"*
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %24) #2
  %25 = load i32, i32* @x.363
  %26 = load i32, i32* @y.364
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i8*, i8** %5, align 8
  %35 = load i32, i32* %6, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

originalBBalteredBB:                              ; preds = %originalBB, %12
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %5, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %6, align 4
  %41 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %7 to %"class.std::allocator.60"*
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %41) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.59"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.59"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.59"* %0, %"struct.std::_Vector_base.59"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.59"*, %"struct.std::_Vector_base.59"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.59"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %8 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %9, i32 0, i32 0
  store %class.Point* %7, %class.Point** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %11 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load %class.Point*, %class.Point** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %15 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %16, i32 0, i32 1
  store %class.Point* %14, %class.Point** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Point*, %class.Point** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds %class.Point, %class.Point* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %24 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %25, i32 0, i32 2
  store %class.Point* %23, %class.Point** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %3 to %"class.std::allocator.60"*
  call void @_ZNSaI5PointILi3EEED2Ev(%"class.std::allocator.60"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %class.Point* null, %class.Point** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %class.Point* null, %class.Point** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %class.Point* null, %class.Point** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.59"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.371
  %4 = load i32, i32* @y.372
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.59"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.59"* %0, %"struct.std::_Vector_base.59"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.59"*, %"struct.std::_Vector_base.59"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.371
  %17 = load i32, i32* @y.372
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %45

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.371
  %26 = load i32, i32* @y.372
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %13, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %33 to %"class.std::allocator.60"*
  %35 = load i64, i64* %12, align 8
  %36 = call %class.Point* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m(%"class.std::allocator.60"* dereferenceable(1) %34, i64 %35)
  %37 = load i32, i32* @x.371
  %38 = load i32, i32* @y.372
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:45:                                     ; preds = %originalBBpart2
  br label %46

; <label>:46:                                     ; preds = %45, %originalBBpart24
  %47 = phi %class.Point* [ %36, %originalBBpart24 ], [ null, %45 ]
  ret %class.Point* %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"struct.std::_Vector_base.59"*, align 8
  %49 = alloca i64, align 8
  store %"struct.std::_Vector_base.59"* %0, %"struct.std::_Vector_base.59"** %48, align 8
  store i64 %1, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.59"*, %"struct.std::_Vector_base.59"** %48, align 8
  %51 = load i64, i64* %49, align 8
  %52 = icmp ne i64 %51, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %53 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %13, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %53 to %"class.std::allocator.60"*
  %55 = load i64, i64* %12, align 8
  %56 = call %class.Point* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m(%"class.std::allocator.60"* dereferenceable(1) %54, i64 %55)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E8allocateERS3_m(%"class.std::allocator.60"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.60"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %3, align 8
  %6 = bitcast %"class.std::allocator.60"* %5 to %"class.__gnu_cxx::new_allocator.61"*
  %7 = load i64, i64* %4, align 8
  %8 = call %class.Point* @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.61"* %6, i64 %7, i8* null)
  ret %class.Point* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.61"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorI5PointILi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.61"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.375
  %13 = load i32, i32* @y.376
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  call void @_ZSt17__throw_bad_allocv() #15
  %20 = load i32, i32* @x.375
  %21 = load i32, i32* @y.376
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:28:                                     ; preds = %3
  %29 = load i32, i32* @x.375
  %30 = load i32, i32* @y.376
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i64, i64* %5, align 8
  %38 = mul i64 %37, 24
  %39 = call i8* @_Znwm(i64 %38)
  %40 = bitcast i8* %39 to %class.Point*
  %41 = load i32, i32* @x.375
  %42 = load i32, i32* @y.376
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret %class.Point* %40

originalBBalteredBB:                              ; preds = %originalBB, %11
  call void @_ZSt17__throw_bad_allocv() #15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %49 = load i64, i64* %5, align 8
  %_ = shl i64 %49, 24
  %50 = mul i64 %49, 24
  %51 = call i8* @_Znwm(i64 %50)
  %52 = bitcast i8* %51 to %class.Point*
  br label %originalBB1
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #11

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point*, i64, %class.Point* dereferenceable(24), %"class.std::allocator.60"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.377
  %6 = load i32, i32* @y.378
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %class.Point*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca %"class.std::allocator.60"*, align 8
  store %class.Point* %0, %class.Point** %13, align 8
  store i64 %1, i64* %14, align 8
  store %class.Point* %2, %class.Point** %15, align 8
  store %"class.std::allocator.60"* %3, %"class.std::allocator.60"** %16, align 8
  %17 = load %class.Point*, %class.Point** %13, align 8
  %18 = load i64, i64* %14, align 8
  %19 = load %class.Point*, %class.Point** %15, align 8
  %20 = call %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point* %17, i64 %18, %class.Point* dereferenceable(24) %19)
  %21 = load i32, i32* @x.377
  %22 = load i32, i32* @y.378
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca %class.Point*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %class.Point*, align 8
  %32 = alloca %"class.std::allocator.60"*, align 8
  store %class.Point* %0, %class.Point** %29, align 8
  store i64 %1, i64* %30, align 8
  store %class.Point* %2, %class.Point** %31, align 8
  store %"class.std::allocator.60"* %3, %"class.std::allocator.60"** %32, align 8
  %33 = load %class.Point*, %class.Point** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load %class.Point*, %class.Point** %31, align 8
  %36 = call %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point* %33, i64 %34, %class.Point* dereferenceable(24) %35)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.59"*, align 8
  store %"struct.std::_Vector_base.59"* %0, %"struct.std::_Vector_base.59"** %2, align 8
  %3 = load %"struct.std::_Vector_base.59"*, %"struct.std::_Vector_base.59"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %4 to %"class.std::allocator.60"*
  ret %"class.std::allocator.60"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt20uninitialized_fill_nIP5PointILi3EEmS1_ET_S3_T0_RKT1_(%class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = load i32, i32* @x.381
  %5 = load i32, i32* @y.382
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %12, align 8
  store i64 %1, i64* %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load %class.Point*, %class.Point** %12, align 8
  %17 = load i64, i64* %13, align 8
  %18 = load %class.Point*, %class.Point** %14, align 8
  %19 = call %class.Point* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_(%class.Point* %16, i64 %17, %class.Point* dereferenceable(24) %18)
  %20 = load i32, i32* @x.381
  %21 = load i32, i32* @y.382
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Point*, align 8
  %29 = alloca i64, align 8
  %30 = alloca %class.Point*, align 8
  %31 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %28, align 8
  store i64 %1, i64* %29, align 8
  store %class.Point* %2, %class.Point** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load %class.Point*, %class.Point** %28, align 8
  %33 = load i64, i64* %29, align 8
  %34 = load %class.Point*, %class.Point** %30, align 8
  %35 = call %class.Point* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_(%class.Point* %32, i64 %33, %class.Point* dereferenceable(24) %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5PointILi3EEmS3_EET_S5_T0_RKT1_(%class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.383
  %5 = load i32, i32* @y.384
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %class.Point* %0, %class.Point** %12, align 8
  store i64 %1, i64* %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %18 = load %class.Point*, %class.Point** %12, align 8
  store %class.Point* %18, %class.Point** %15, align 8
  %19 = load i32, i32* @x.383
  %20 = load i32, i32* @y.384
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart228, %originalBBpart2
  %28 = load i32, i32* @x.383
  %29 = load i32, i32* @y.384
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i64, i64* %13, align 8
  %37 = icmp ugt i64 %36, 0
  %38 = load i32, i32* @x.383
  %39 = load i32, i32* @y.384
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %37, label %46, label %115

; <label>:46:                                     ; preds = %originalBBpart24
  %47 = load %class.Point*, %class.Point** %15, align 8
  %48 = invoke %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24) %47)
          to label %49 unwind label %105

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* @x.383
  %51 = load i32, i32* @y.384
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load %class.Point*, %class.Point** %14, align 8
  %59 = load i32, i32* @x.383
  %60 = load i32, i32* @y.384
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point* %48, %class.Point* dereferenceable(24) %58)
          to label %67 unwind label %105

; <label>:67:                                     ; preds = %originalBBpart28
  %68 = load i32, i32* @x.383
  %69 = load i32, i32* @y.384
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i32, i32* @x.383
  %77 = load i32, i32* @y.384
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %84

; <label>:84:                                     ; preds = %originalBBpart212
  %85 = load i32, i32* @x.383
  %86 = load i32, i32* @y.384
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %84, %originalBB14alteredBB
  %93 = load i64, i64* %13, align 8
  %94 = add i64 %93, -1
  store i64 %94, i64* %13, align 8
  %95 = load %class.Point*, %class.Point** %15, align 8
  %96 = getelementptr inbounds %class.Point, %class.Point* %95, i32 1
  store %class.Point* %96, %class.Point** %15, align 8
  %97 = load i32, i32* @x.383
  %98 = load i32, i32* @y.384
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart228, label %originalBB14alteredBB

originalBBpart228:                                ; preds = %originalBB14
  br label %27

; <label>:105:                                    ; preds = %originalBBpart28, %46
  %106 = landingpad { i8*, i32 }
          catch i8* null
  %107 = extractvalue { i8*, i32 } %106, 0
  store i8* %107, i8** %16, align 8
  %108 = extractvalue { i8*, i32 } %106, 1
  store i32 %108, i32* %17, align 4
  br label %109

; <label>:109:                                    ; preds = %105
  %110 = load i8*, i8** %16, align 8
  %111 = call i8* @__cxa_begin_catch(i8* %110) #2
  %112 = load %class.Point*, %class.Point** %12, align 8
  %113 = load %class.Point*, %class.Point** %15, align 8
  invoke void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %112, %class.Point* %113)
          to label %114 unwind label %117

; <label>:114:                                    ; preds = %109
  invoke void @__cxa_rethrow() #15
          to label %131 unwind label %117

; <label>:115:                                    ; preds = %originalBBpart24
  %116 = load %class.Point*, %class.Point** %15, align 8
  ret %class.Point* %116

; <label>:117:                                    ; preds = %114, %109
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %16, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %121 unwind label %128

; <label>:121:                                    ; preds = %117
  br label %123
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:123:                                    ; preds = %121
  %124 = load i8*, i8** %16, align 8
  %125 = load i32, i32* %17, align 4
  %126 = insertvalue { i8*, i32 } undef, i8* %124, 0
  %127 = insertvalue { i8*, i32 } %126, i32 %125, 1
  resume { i8*, i32 } %127

; <label>:128:                                    ; preds = %117
  %129 = landingpad { i8*, i32 }
          catch i8* null
  %130 = extractvalue { i8*, i32 } %129, 0
  call void @__clang_call_terminate(i8* %130) #12
  unreachable

; <label>:131:                                    ; preds = %114
  %132 = load i32, i32* @x.383
  %133 = load i32, i32* @y.384
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %131, %originalBB30alteredBB
  %140 = load i32, i32* @x.383
  %141 = load i32, i32* @y.384
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %148 = alloca %class.Point*, align 8
  %149 = alloca i64, align 8
  %150 = alloca %class.Point*, align 8
  %151 = alloca %class.Point*, align 8
  %152 = alloca i8*
  %153 = alloca i32
  store %class.Point* %0, %class.Point** %148, align 8
  store i64 %1, i64* %149, align 8
  store %class.Point* %2, %class.Point** %150, align 8
  %154 = load %class.Point*, %class.Point** %148, align 8
  store %class.Point* %154, %class.Point** %151, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %155 = load i64, i64* %13, align 8
  %156 = icmp ugt i64 %155, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %157 = load %class.Point*, %class.Point** %14, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %84
  %158 = load i64, i64* %13, align 8
  %_ = shl i64 %158, -1
  %_15 = shl i64 %158, -1
  %_16 = sub i64 0, %158
  %gen = add i64 %_16, -1
  %_17 = sub i64 %158, -1
  %gen18 = mul i64 %_17, -1
  %_19 = sub i64 0, %158
  %gen20 = add i64 %_19, -1
  %_21 = shl i64 %158, -1
  %_22 = shl i64 %158, -1
  %_23 = sub i64 0, %158
  %gen24 = add i64 %_23, -1
  %_25 = sub i64 %158, -1
  %gen26 = mul i64 %_25, -1
  %159 = add i64 %158, -1
  store i64 %159, i64* %13, align 8
  %160 = load %class.Point*, %class.Point** %15, align 8
  %161 = getelementptr inbounds %class.Point, %class.Point* %160, i32 1
  store %class.Point* %161, %class.Point** %15, align 8
  br label %originalBB14

originalBB30alteredBB:                            ; preds = %originalBB30, %131
  br label %originalBB30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %3 = load i32, i32* @x.385
  %4 = load i32, i32* @y.386
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point*, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load %class.Point*, %class.Point** %11, align 8
  %14 = bitcast %class.Point* %13 to i8*
  %15 = bitcast i8* %14 to %class.Point*
  %16 = load %class.Point*, %class.Point** %12, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %15, %class.Point* dereferenceable(24) %16)
  %17 = load i32, i32* @x.385
  %18 = load i32, i32* @y.386
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %class.Point*, align 8
  %26 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %25, align 8
  store %class.Point* %1, %class.Point** %26, align 8
  %27 = load %class.Point*, %class.Point** %25, align 8
  %28 = bitcast %class.Point* %27 to i8*
  %29 = bitcast i8* %28 to %class.Point*
  %30 = load %class.Point*, %class.Point** %26, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %29, %class.Point* dereferenceable(24) %30)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24)) #1 comdat {
  %2 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %2, align 8
  %3 = load %class.Point*, %class.Point** %2, align 8
  ret %class.Point* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point*, %class.Point*) #0 comdat {
  %3 = load i32, i32* @x.389
  %4 = load i32, i32* @y.390
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point*, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load %class.Point*, %class.Point** %11, align 8
  %14 = load %class.Point*, %class.Point** %12, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_(%class.Point* %13, %class.Point* %14)
  %15 = load i32, i32* @x.389
  %16 = load i32, i32* @y.390
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %23 = alloca %class.Point*, align 8
  %24 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %23, align 8
  store %class.Point* %1, %class.Point** %24, align 8
  %25 = load %class.Point*, %class.Point** %23, align 8
  %26 = load %class.Point*, %class.Point** %24, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_(%class.Point* %25, %class.Point* %26)
  br label %originalBB
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5PointILi3EEC2ERKS0_(%class.Point*, %class.Point* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to %class.Tensor*
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = bitcast %class.Point* %7 to %class.Tensor*
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %6, %class.Tensor* dereferenceable(24) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP5PointILi3EEEEvT_S5_(%class.Point*, %class.Point*) #1 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"*, %class.Point*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.59"*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.59"* %0, %"struct.std::_Vector_base.59"** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.59"*, %"struct.std::_Vector_base.59"** %4, align 8
  %8 = load %class.Point*, %class.Point** %5, align 8
  %9 = icmp ne %class.Point* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %11 to %"class.std::allocator.60"*
  %13 = load %class.Point*, %class.Point** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.60"* dereferenceable(1) %12, %class.Point* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.60"* dereferenceable(1), %class.Point*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.60"*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %4, align 8
  %8 = bitcast %"class.std::allocator.60"* %7 to %"class.__gnu_cxx::new_allocator.61"*
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.61"* %8, %class.Point* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.61"*, %class.Point*, i64) #1 comdat align 2 {
  %4 = load i32, i32* @x.399
  %5 = load i32, i32* @y.400
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %12, align 8
  %16 = load %class.Point*, %class.Point** %13, align 8
  %17 = bitcast %class.Point* %16 to i8*
  call void @_ZdlPv(i8* %17) #2
  %18 = load i32, i32* @x.399
  %19 = load i32, i32* @y.400
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  %27 = alloca %class.Point*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %26, align 8
  store %class.Point* %1, %class.Point** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %26, align 8
  %30 = load %class.Point*, %class.Point** %27, align 8
  %31 = bitcast %class.Point* %30 to i8*
  call void @_ZdlPv(i8* %31) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point*, %class.Point*, %"class.std::allocator.60"* dereferenceable(1)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %"class.std::allocator.60"*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %"class.std::allocator.60"* %2, %"class.std::allocator.60"** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = load %class.Point*, %class.Point** %5, align 8
  call void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %7, %class.Point* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.CellAccessor* @_ZNK15TriaRawIteratorILi3E12CellAccessorILi3EEEdeEv(%class.TriaRawIterator*) #1 comdat align 2 {
  %2 = alloca %class.TriaRawIterator*, align 8
  store %class.TriaRawIterator* %0, %class.TriaRawIterator** %2, align 8
  %3 = load %class.TriaRawIterator*, %class.TriaRawIterator** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator, %class.TriaRawIterator* %3, i32 0, i32 0
  ret %class.CellAccessor* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.18"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.405
  %4 = load i32, i32* @y.406
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Bit_reference", align 8
  %12 = alloca %"class.std::vector.18"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %12, align 8
  store i64 %1, i64* %13, align 8
  %15 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %16 = bitcast %"class.std::vector.18"* %15 to %"struct.std::_Bvector_base"*
  %17 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %17 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Bit_iterator"* %19 to %"struct.std::_Bit_iterator_base"*
  %21 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %20, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = load i64, i64* %13, align 8
  %24 = udiv i64 %23, 64
  %25 = getelementptr inbounds i64, i64* %22, i64 %24
  %26 = load i64, i64* %13, align 8
  %27 = urem i64 %26, 64
  %28 = trunc i64 %27 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %25, i32 %28)
  %29 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %14)
  %30 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %31 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %30, i32 0, i32 0
  %32 = extractvalue { i64*, i64 } %29, 0
  store i64* %32, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %30, i32 0, i32 1
  %34 = extractvalue { i64*, i64 } %29, 1
  store i64 %34, i64* %33, align 8
  %35 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %36 = load { i64*, i64 }, { i64*, i64 }* %35, align 8
  %37 = load i32, i32* @x.405
  %38 = load i32, i32* @y.406
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret { i64*, i64 } %36

originalBBalteredBB:                              ; preds = %originalBB, %2
  %45 = alloca %"struct.std::_Bit_reference", align 8
  %46 = alloca %"class.std::vector.18"*, align 8
  %47 = alloca i64, align 8
  %48 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %46, align 8
  store i64 %1, i64* %47, align 8
  %49 = load %"class.std::vector.18"*, %"class.std::vector.18"** %46, align 8
  %50 = bitcast %"class.std::vector.18"* %49 to %"struct.std::_Bvector_base"*
  %51 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %51 to %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Bit_iterator"* %53 to %"struct.std::_Bit_iterator_base"*
  %55 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = load i64, i64* %47, align 8
  %_ = shl i64 %57, 64
  %_1 = sub i64 %57, 64
  %gen = mul i64 %_1, 64
  %_2 = sub i64 0, %57
  %gen3 = add i64 %_2, 64
  %_4 = shl i64 %57, 64
  %58 = udiv i64 %57, 64
  %59 = getelementptr inbounds i64, i64* %56, i64 %58
  %60 = load i64, i64* %47, align 8
  %_5 = shl i64 %60, 64
  %_6 = sub i64 %60, 64
  %gen7 = mul i64 %_6, 64
  %_8 = sub i64 %60, 64
  %gen9 = mul i64 %_8, 64
  %_10 = sub i64 0, %60
  %gen11 = add i64 %_10, 64
  %_12 = sub i64 0, %60
  %gen13 = add i64 %_12, 64
  %_14 = sub i64 %60, 64
  %gen15 = mul i64 %_14, 64
  %61 = urem i64 %60, 64
  %62 = trunc i64 %61 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %48, i64* %59, i32 %62)
  %63 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %48)
  %64 = bitcast %"struct.std::_Bit_reference"* %45 to { i64*, i64 }*
  %65 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %64, i32 0, i32 0
  %66 = extractvalue { i64*, i64 } %63, 0
  store i64* %66, i64** %65, align 8
  %67 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %64, i32 0, i32 1
  %68 = extractvalue { i64*, i64 } %63, 1
  store i64 %68, i64* %67, align 8
  %69 = bitcast %"struct.std::_Bit_reference"* %45 to { i64*, i64 }*
  %70 = load { i64*, i64 }, { i64*, i64 }* %69, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %2, align 8
  %3 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %6, %8
  %10 = icmp ne i64 %9, 0
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  ret i1 %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"*, i64*, i32) unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* @x.409
  %5 = load i32, i32* @y.410
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Bit_iterator"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %12, align 8
  store i64* %1, i64** %13, align 8
  store i32 %2, i32* %14, align 4
  %15 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %15 to %"struct.std::_Bit_iterator_base"*
  %17 = load i64*, i64** %13, align 8
  %18 = load i32, i32* %14, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %16, i64* %17, i32 %18)
  %19 = load i32, i32* @x.409
  %20 = load i32, i32* @y.410
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"struct.std::_Bit_iterator"*, align 8
  %28 = alloca i64*, align 8
  %29 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %27, align 8
  store i64* %1, i64** %28, align 8
  store i32 %2, i32* %29, align 4
  %30 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27, align 8
  %31 = bitcast %"struct.std::_Bit_iterator"* %30 to %"struct.std::_Bit_iterator_base"*
  %32 = load i64*, i64** %28, align 8
  %33 = load i32, i32* %29, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %31, i64* %32, i32 %33)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference", align 8
  %3 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %3, align 8
  %4 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %3, align 8
  %5 = bitcast %"struct.std::_Bit_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %2, i64* %7, i64 %12)
  %13 = bitcast %"struct.std::_Bit_reference"* %2 to { i64*, i64 }*
  %14 = load { i64*, i64 }, { i64*, i64 }* %13, align 8
  ret { i64*, i64 } %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"*, i64*, i32) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* @x.413
  %5 = load i32, i32* @y.414
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %12, align 8
  store i64* %1, i64** %13, align 8
  store i32 %2, i32* %14, align 4
  %15 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %12, align 8
  %16 = bitcast %"struct.std::_Bit_iterator_base"* %15 to %"struct.std::iterator.22"*
  %17 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %15, i32 0, i32 0
  %18 = load i64*, i64** %13, align 8
  store i64* %18, i64** %17, align 8
  %19 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %15, i32 0, i32 1
  %20 = load i32, i32* %14, align 4
  store i32 %20, i32* %19, align 8
  %21 = load i32, i32* @x.413
  %22 = load i32, i32* @y.414
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i32 %2, i32* %31, align 4
  %32 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %29, align 8
  %33 = bitcast %"struct.std::_Bit_iterator_base"* %32 to %"struct.std::iterator.22"*
  %34 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 0
  %35 = load i64*, i64** %30, align 8
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 1
  %37 = load i32, i32* %31, align 4
  store i32 %37, i32* %36, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"*, i64*, i64) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.TriaObjectAccessor.68* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEdeEv(%class.TriaRawIterator.66*) #1 comdat align 2 {
  %2 = load i32, i32* @x.417
  %3 = load i32, i32* @y.418
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaRawIterator.66*, align 8
  store %class.TriaRawIterator.66* %0, %class.TriaRawIterator.66** %10, align 8
  %11 = load %class.TriaRawIterator.66*, %class.TriaRawIterator.66** %10, align 8
  %12 = getelementptr inbounds %class.TriaRawIterator.66, %class.TriaRawIterator.66* %11, i32 0, i32 0
  %13 = load i32, i32* @x.417
  %14 = load i32, i32* @y.418
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TriaObjectAccessor.68* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TriaRawIterator.66*, align 8
  store %class.TriaRawIterator.66* %0, %class.TriaRawIterator.66** %21, align 8
  %22 = load %class.TriaRawIterator.66*, %class.TriaRawIterator.66** %21, align 8
  %23 = getelementptr inbounds %class.TriaRawIterator.66, %class.TriaRawIterator.66* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %class.Point** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.419
  %4 = load i32, i32* @y.420
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %12 = alloca %class.Point**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  store %class.Point** %1, %class.Point*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %15 = load %class.Point**, %class.Point*** %12, align 8
  %16 = load %class.Point*, %class.Point** %15, align 8
  store %class.Point* %16, %class.Point** %14, align 8
  %17 = load i32, i32* @x.419
  %18 = load i32, i32* @y.420
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %26 = alloca %class.Point**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %25, align 8
  store %class.Point** %1, %class.Point*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  %29 = load %class.Point**, %class.Point*** %26, align 8
  %30 = load %class.Point*, %class.Point** %29, align 8
  store %class.Point* %30, %class.Point** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE18_M_insert_dispatchIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St12__false_type(%"class.std::vector.58"*, %class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 {
  %5 = load i32, i32* @x.421
  %6 = load i32, i32* @y.422
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"struct.std::__false_type", align 1
  %17 = alloca %"class.std::vector.58"*, align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %"struct.std::forward_iterator_tag", align 1
  %22 = alloca %"struct.std::random_access_iterator_tag", align 1
  %23 = alloca %"struct.std::random_access_iterator_tag", align 1
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %class.Point* %1, %class.Point** %24, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %class.Point* %2, %class.Point** %25, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %class.Point* %3, %class.Point** %26, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %17, align 8
  %27 = load %"class.std::vector.58"*, %"class.std::vector.58"** %17, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator"* %19 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %20 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %14)
  %34 = bitcast %"struct.std::random_access_iterator_tag"* %22 to %"struct.std::forward_iterator_tag"*
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %36 = load %class.Point*, %class.Point** %35, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  %38 = load %class.Point*, %class.Point** %37, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %40 = load %class.Point*, %class.Point** %39, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St20forward_iterator_tag(%"class.std::vector.58"* %27, %class.Point* %36, %class.Point* %38, %class.Point* %40)
  %41 = load i32, i32* @x.421
  %42 = load i32, i32* @y.422
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %4
  %49 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %52 = alloca %"struct.std::__false_type", align 1
  %53 = alloca %"class.std::vector.58"*, align 8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %55 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %57 = alloca %"struct.std::forward_iterator_tag", align 1
  %58 = alloca %"struct.std::random_access_iterator_tag", align 1
  %59 = alloca %"struct.std::random_access_iterator_tag", align 1
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %49, i32 0, i32 0
  store %class.Point* %1, %class.Point** %60, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  store %class.Point* %2, %class.Point** %61, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %51, i32 0, i32 0
  store %class.Point* %3, %class.Point** %62, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %53, align 8
  %63 = load %"class.std::vector.58"*, %"class.std::vector.58"** %53, align 8
  %64 = bitcast %"class.__gnu_cxx::__normal_iterator"* %54 to i8*
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 8, i1 false)
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator"* %55 to i8*
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %56 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %50)
  %70 = bitcast %"struct.std::random_access_iterator_tag"* %58 to %"struct.std::forward_iterator_tag"*
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %54, i32 0, i32 0
  %72 = load %class.Point*, %class.Point** %71, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %55, i32 0, i32 0
  %74 = load %class.Point*, %class.Point** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %56, i32 0, i32 0
  %76 = load %class.Point*, %class.Point** %75, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St20forward_iterator_tag(%"class.std::vector.58"* %63, %class.Point* %72, %class.Point* %74, %class.Point* %76)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St20forward_iterator_tag(%"class.std::vector.58"*, %class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.423
  %6 = load i32, i32* @y.424
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"struct.std::forward_iterator_tag", align 1
  %17 = alloca %"class.std::vector.58"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %23 = alloca %class.Point*, align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %27 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = alloca i64, align 8
  %36 = alloca %class.Point*, align 8
  %37 = alloca %class.Point*, align 8
  %38 = alloca i8*
  %39 = alloca i32
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %class.Point* %1, %class.Point** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %class.Point* %2, %class.Point** %43, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %class.Point* %3, %class.Point** %44, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %17, align 8
  %45 = load %"class.std::vector.58"*, %"class.std::vector.58"** %17, align 8
  %46 = call zeroext i1 @_ZN9__gnu_cxxneIP5PointILi3EESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %15)
  %47 = load i32, i32* @x.423
  %48 = load i32, i32* @y.424
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %46, label %55, label %408

; <label>:55:                                     ; preds = %originalBBpart2
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator"* %19 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator"* %20 to i8*
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 8, i1 false)
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  %61 = load %class.Point*, %class.Point** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %63 = load %class.Point*, %class.Point** %62, align 8
  %64 = call i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_(%class.Point* %61, %class.Point* %63)
  store i64 %64, i64* %18, align 8
  %65 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %65, i32 0, i32 0
  %67 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %66 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %67, i32 0, i32 2
  %69 = load %class.Point*, %class.Point** %68, align 8
  %70 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %71 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %72, i32 0, i32 1
  %74 = load %class.Point*, %class.Point** %73, align 8
  %75 = ptrtoint %class.Point* %69 to i64
  %76 = ptrtoint %class.Point* %74 to i64
  %77 = sub i64 %75, %76
  %78 = sdiv exact i64 %77, 24
  %79 = load i64, i64* %18, align 8
  %80 = icmp uge i64 %78, %79
  br i1 %80, label %81, label %222

; <label>:81:                                     ; preds = %55
  %82 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %45)
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %22, i32 0, i32 0
  store %class.Point* %82, %class.Point** %83, align 8
  %84 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %22, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %13)
  store i64 %84, i64* %21, align 8
  %85 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %85, i32 0, i32 0
  %87 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %86 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %87, i32 0, i32 1
  %89 = load %class.Point*, %class.Point** %88, align 8
  store %class.Point* %89, %class.Point** %23, align 8
  %90 = load i64, i64* %21, align 8
  %91 = load i64, i64* %18, align 8
  %92 = icmp ugt i64 %90, %91
  br i1 %92, label %93, label %144

; <label>:93:                                     ; preds = %81
  %94 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %94, i32 0, i32 0
  %96 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %95 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %96, i32 0, i32 1
  %98 = load %class.Point*, %class.Point** %97, align 8
  %99 = load i64, i64* %18, align 8
  %100 = sub i64 0, %99
  %101 = getelementptr inbounds %class.Point, %class.Point* %98, i64 %100
  %102 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %103 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %102, i32 0, i32 0
  %104 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %103 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %104, i32 0, i32 1
  %106 = load %class.Point*, %class.Point** %105, align 8
  %107 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %108 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %107, i32 0, i32 0
  %109 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %108 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %109, i32 0, i32 1
  %111 = load %class.Point*, %class.Point** %110, align 8
  %112 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %113 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %112)
  %114 = call %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %101, %class.Point* %106, %class.Point* %111, %"class.std::allocator.60"* dereferenceable(1) %113)
  %115 = load i64, i64* %18, align 8
  %116 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %116, i32 0, i32 0
  %118 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %117 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %118, i32 0, i32 1
  %120 = load %class.Point*, %class.Point** %119, align 8
  %121 = getelementptr inbounds %class.Point, %class.Point* %120, i64 %115
  store %class.Point* %121, %class.Point** %119, align 8
  %122 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
  %123 = load %class.Point*, %class.Point** %122, align 8
  %124 = load %class.Point*, %class.Point** %23, align 8
  %125 = load i64, i64* %18, align 8
  %126 = sub i64 0, %125
  %127 = getelementptr inbounds %class.Point, %class.Point* %124, i64 %126
  %128 = load %class.Point*, %class.Point** %23, align 8
  %129 = call %class.Point* @_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point* %123, %class.Point* %127, %class.Point* %128)
  %130 = bitcast %"class.__gnu_cxx::__normal_iterator"* %24 to i8*
  %131 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %130, i8* %131, i64 8, i32 8, i1 false)
  %132 = bitcast %"class.__gnu_cxx::__normal_iterator"* %25 to i8*
  %133 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 8, i32 8, i1 false)
  %134 = bitcast %"class.__gnu_cxx::__normal_iterator"* %26 to i8*
  %135 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %135, i64 8, i32 8, i1 false)
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %24, i32 0, i32 0
  %137 = load %class.Point*, %class.Point** %136, align 8
  %138 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  %139 = load %class.Point*, %class.Point** %138, align 8
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  %141 = load %class.Point*, %class.Point** %140, align 8
  %142 = call %class.Point* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%class.Point* %137, %class.Point* %139, %class.Point* %141)
  %143 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  store %class.Point* %142, %class.Point** %143, align 8
  br label %205

; <label>:144:                                    ; preds = %81
  %145 = bitcast %"class.__gnu_cxx::__normal_iterator"* %28 to i8*
  %146 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %146, i64 8, i32 8, i1 false)
  %147 = load i64, i64* %21, align 8
  call void @_ZSt7advanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEmEvRT_T0_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %28, i64 %147)
  %148 = bitcast %"class.__gnu_cxx::__normal_iterator"* %29 to i8*
  %149 = bitcast %"class.__gnu_cxx::__normal_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %149, i64 8, i32 8, i1 false)
  %150 = bitcast %"class.__gnu_cxx::__normal_iterator"* %30 to i8*
  %151 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 8, i32 8, i1 false)
  %152 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %153 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %152, i32 0, i32 0
  %154 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %153 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %155 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %154, i32 0, i32 1
  %156 = load %class.Point*, %class.Point** %155, align 8
  %157 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %158 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %157)
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %160 = load %class.Point*, %class.Point** %159, align 8
  %161 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %162 = load %class.Point*, %class.Point** %161, align 8
  %163 = call %class.Point* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_S3_ET0_T_SA_S9_RSaIT1_E(%class.Point* %160, %class.Point* %162, %class.Point* %156, %"class.std::allocator.60"* dereferenceable(1) %158)
  %164 = load i64, i64* %18, align 8
  %165 = load i64, i64* %21, align 8
  %166 = sub i64 %164, %165
  %167 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %168 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %167, i32 0, i32 0
  %169 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %168 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %170 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %169, i32 0, i32 1
  %171 = load %class.Point*, %class.Point** %170, align 8
  %172 = getelementptr inbounds %class.Point, %class.Point* %171, i64 %166
  store %class.Point* %172, %class.Point** %170, align 8
  %173 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
  %174 = load %class.Point*, %class.Point** %173, align 8
  %175 = load %class.Point*, %class.Point** %23, align 8
  %176 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %176, i32 0, i32 0
  %178 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %177 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %179 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %178, i32 0, i32 1
  %180 = load %class.Point*, %class.Point** %179, align 8
  %181 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %182 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %181)
  %183 = call %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %174, %class.Point* %175, %class.Point* %180, %"class.std::allocator.60"* dereferenceable(1) %182)
  %184 = load i64, i64* %21, align 8
  %185 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %186 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %185, i32 0, i32 0
  %187 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %186 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %187, i32 0, i32 1
  %189 = load %class.Point*, %class.Point** %188, align 8
  %190 = getelementptr inbounds %class.Point, %class.Point* %189, i64 %184
  store %class.Point* %190, %class.Point** %188, align 8
  %191 = bitcast %"class.__gnu_cxx::__normal_iterator"* %31 to i8*
  %192 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %191, i8* %192, i64 8, i32 8, i1 false)
  %193 = bitcast %"class.__gnu_cxx::__normal_iterator"* %32 to i8*
  %194 = bitcast %"class.__gnu_cxx::__normal_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %193, i8* %194, i64 8, i32 8, i1 false)
  %195 = bitcast %"class.__gnu_cxx::__normal_iterator"* %33 to i8*
  %196 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %195, i8* %196, i64 8, i32 8, i1 false)
  %197 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  %198 = load %class.Point*, %class.Point** %197, align 8
  %199 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  %200 = load %class.Point*, %class.Point** %199, align 8
  %201 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %202 = load %class.Point*, %class.Point** %201, align 8
  %203 = call %class.Point* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%class.Point* %198, %class.Point* %200, %class.Point* %202)
  %204 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  store %class.Point* %203, %class.Point** %204, align 8
  br label %205

; <label>:205:                                    ; preds = %144, %93
  %206 = load i32, i32* @x.423
  %207 = load i32, i32* @y.424
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %205, %originalBB1alteredBB
  %214 = load i32, i32* @x.423
  %215 = load i32, i32* @y.424
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %391

; <label>:222:                                    ; preds = %55
  %223 = load i64, i64* %18, align 8
  %224 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.58"* %45, i64 %223, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0))
  store i64 %224, i64* %35, align 8
  %225 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %226 = load i64, i64* %35, align 8
  %227 = call %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.59"* %225, i64 %226)
  store %class.Point* %227, %class.Point** %36, align 8
  %228 = load %class.Point*, %class.Point** %36, align 8
  store %class.Point* %228, %class.Point** %37, align 8
  %229 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %229, i32 0, i32 0
  %231 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %230 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %232 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %231, i32 0, i32 0
  %233 = load %class.Point*, %class.Point** %232, align 8
  %234 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %235 unwind label %303

; <label>:235:                                    ; preds = %222
  %236 = load i32, i32* @x.423
  %237 = load i32, i32* @y.424
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %235, %originalBB6alteredBB
  %244 = load %class.Point*, %class.Point** %234, align 8
  %245 = load %class.Point*, %class.Point** %36, align 8
  %246 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %247 = load i32, i32* @x.423
  %248 = load i32, i32* @y.424
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %255 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %246)
          to label %256 unwind label %303

; <label>:256:                                    ; preds = %originalBBpart28
  %257 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %233, %class.Point* %244, %class.Point* %245, %"class.std::allocator.60"* dereferenceable(1) %255)
          to label %258 unwind label %303

; <label>:258:                                    ; preds = %256
  store %class.Point* %257, %class.Point** %37, align 8
  %259 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  %260 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %259, i8* %260, i64 8, i32 8, i1 false)
  %261 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  %262 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %261, i8* %262, i64 8, i32 8, i1 false)
  %263 = load %class.Point*, %class.Point** %37, align 8
  %264 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %265 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %264)
          to label %266 unwind label %303

; <label>:266:                                    ; preds = %258
  %267 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %268 = load %class.Point*, %class.Point** %267, align 8
  %269 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  %270 = load %class.Point*, %class.Point** %269, align 8
  %271 = invoke %class.Point* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_S3_ET0_T_SA_S9_RSaIT1_E(%class.Point* %268, %class.Point* %270, %class.Point* %263, %"class.std::allocator.60"* dereferenceable(1) %265)
          to label %272 unwind label %303

; <label>:272:                                    ; preds = %266
  store %class.Point* %271, %class.Point** %37, align 8
  %273 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %13)
          to label %274 unwind label %303

; <label>:274:                                    ; preds = %272
  %275 = load %class.Point*, %class.Point** %273, align 8
  %276 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %277 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %276, i32 0, i32 0
  %278 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %277 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %279 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %278, i32 0, i32 1
  %280 = load %class.Point*, %class.Point** %279, align 8
  %281 = load %class.Point*, %class.Point** %37, align 8
  %282 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %283 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %282)
          to label %284 unwind label %303

; <label>:284:                                    ; preds = %274
  %285 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %275, %class.Point* %280, %class.Point* %281, %"class.std::allocator.60"* dereferenceable(1) %283)
          to label %286 unwind label %303

; <label>:286:                                    ; preds = %284
  %287 = load i32, i32* @x.423
  %288 = load i32, i32* @y.424
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %286, %originalBB10alteredBB
  store %class.Point* %285, %class.Point** %37, align 8
  %295 = load i32, i32* @x.423
  %296 = load i32, i32* @y.424
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %341

; <label>:303:                                    ; preds = %284, %274, %272, %266, %258, %256, %originalBBpart28, %222
  %304 = landingpad { i8*, i32 }
          catch i8* null
  %305 = extractvalue { i8*, i32 } %304, 0
  store i8* %305, i8** %38, align 8
  %306 = extractvalue { i8*, i32 } %304, 1
  store i32 %306, i32* %39, align 4
  br label %307

; <label>:307:                                    ; preds = %303
  %308 = load i32, i32* @x.423
  %309 = load i32, i32* @y.424
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %307, %originalBB14alteredBB
  %316 = load i8*, i8** %38, align 8
  %317 = call i8* @__cxa_begin_catch(i8* %316) #2
  %318 = load %class.Point*, %class.Point** %36, align 8
  %319 = load %class.Point*, %class.Point** %37, align 8
  %320 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %321 = load i32, i32* @x.423
  %322 = load i32, i32* @y.424
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %329 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %320)
          to label %330 unwind label %336

; <label>:330:                                    ; preds = %originalBBpart216
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %318, %class.Point* %319, %"class.std::allocator.60"* dereferenceable(1) %329)
          to label %331 unwind label %336

; <label>:331:                                    ; preds = %330
  %332 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %333 = load %class.Point*, %class.Point** %36, align 8
  %334 = load i64, i64* %35, align 8
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"* %332, %class.Point* %333, i64 %334)
          to label %335 unwind label %336

; <label>:335:                                    ; preds = %331
  invoke void @__cxa_rethrow() #15
          to label %449 unwind label %336

; <label>:336:                                    ; preds = %335, %331, %330, %originalBBpart216
  %337 = landingpad { i8*, i32 }
          cleanup
  %338 = extractvalue { i8*, i32 } %337, 0
  store i8* %338, i8** %38, align 8
  %339 = extractvalue { i8*, i32 } %337, 1
  store i32 %339, i32* %39, align 4
  invoke void @__cxa_end_catch()
          to label %340 unwind label %430

; <label>:340:                                    ; preds = %336
  br label %425

; <label>:341:                                    ; preds = %originalBBpart212
  %342 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %343 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %342, i32 0, i32 0
  %344 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %343 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %345 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %344, i32 0, i32 0
  %346 = load %class.Point*, %class.Point** %345, align 8
  %347 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %348 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %347, i32 0, i32 0
  %349 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %348 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %350 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %349, i32 0, i32 1
  %351 = load %class.Point*, %class.Point** %350, align 8
  %352 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %353 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %352)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %346, %class.Point* %351, %"class.std::allocator.60"* dereferenceable(1) %353)
  %354 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %355 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %356 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %355, i32 0, i32 0
  %357 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %356 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %358 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %357, i32 0, i32 0
  %359 = load %class.Point*, %class.Point** %358, align 8
  %360 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %361 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %360, i32 0, i32 0
  %362 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %361 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %363 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %362, i32 0, i32 2
  %364 = load %class.Point*, %class.Point** %363, align 8
  %365 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %366 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %365, i32 0, i32 0
  %367 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %366 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %368 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %367, i32 0, i32 0
  %369 = load %class.Point*, %class.Point** %368, align 8
  %370 = ptrtoint %class.Point* %364 to i64
  %371 = ptrtoint %class.Point* %369 to i64
  %372 = sub i64 %370, %371
  %373 = sdiv exact i64 %372, 24
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"* %354, %class.Point* %359, i64 %373)
  %374 = load %class.Point*, %class.Point** %36, align 8
  %375 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %376 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %375, i32 0, i32 0
  %377 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %376 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %378 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %377, i32 0, i32 0
  store %class.Point* %374, %class.Point** %378, align 8
  %379 = load %class.Point*, %class.Point** %37, align 8
  %380 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %381 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %380, i32 0, i32 0
  %382 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %381 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %382, i32 0, i32 1
  store %class.Point* %379, %class.Point** %383, align 8
  %384 = load %class.Point*, %class.Point** %36, align 8
  %385 = load i64, i64* %35, align 8
  %386 = getelementptr inbounds %class.Point, %class.Point* %384, i64 %385
  %387 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  %388 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %387, i32 0, i32 0
  %389 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %388 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %390 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %389, i32 0, i32 2
  store %class.Point* %386, %class.Point** %390, align 8
  br label %391

; <label>:391:                                    ; preds = %341, %originalBBpart24
  %392 = load i32, i32* @x.423
  %393 = load i32, i32* @y.424
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %391, %originalBB18alteredBB
  %400 = load i32, i32* @x.423
  %401 = load i32, i32* @y.424
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %408

; <label>:408:                                    ; preds = %originalBBpart220, %originalBBpart2
  %409 = load i32, i32* @x.423
  %410 = load i32, i32* @y.424
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %408, %originalBB22alteredBB
  %417 = load i32, i32* @x.423
  %418 = load i32, i32* @y.424
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void

; <label>:425:                                    ; preds = %340
  %426 = load i8*, i8** %38, align 8
  %427 = load i32, i32* %39, align 4
  %428 = insertvalue { i8*, i32 } undef, i8* %426, 0
  %429 = insertvalue { i8*, i32 } %428, i32 %427, 1
  resume { i8*, i32 } %429

; <label>:430:                                    ; preds = %336
  %431 = load i32, i32* @x.423
  %432 = load i32, i32* @y.424
  %433 = sub i32 %431, 1
  %434 = mul i32 %431, %433
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %436, %437
  br i1 %438, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %430, %originalBB26alteredBB
  %439 = landingpad { i8*, i32 }
          catch i8* null
  %440 = extractvalue { i8*, i32 } %439, 0
  call void @__clang_call_terminate(i8* %440) #12
  %441 = load i32, i32* @x.423
  %442 = load i32, i32* @y.424
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable

; <label>:449:                                    ; preds = %335
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %4
  %450 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %451 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %452 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %453 = alloca %"struct.std::forward_iterator_tag", align 1
  %454 = alloca %"class.std::vector.58"*, align 8
  %455 = alloca i64, align 8
  %456 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %457 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %458 = alloca i64, align 8
  %459 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %460 = alloca %class.Point*, align 8
  %461 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %462 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %463 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %464 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %465 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %466 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %467 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %468 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %469 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %470 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %471 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %472 = alloca i64, align 8
  %473 = alloca %class.Point*, align 8
  %474 = alloca %class.Point*, align 8
  %475 = alloca i8*
  %476 = alloca i32
  %477 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %478 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %479 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %450, i32 0, i32 0
  store %class.Point* %1, %class.Point** %479, align 8
  %480 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %451, i32 0, i32 0
  store %class.Point* %2, %class.Point** %480, align 8
  %481 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %452, i32 0, i32 0
  store %class.Point* %3, %class.Point** %481, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %454, align 8
  %482 = load %"class.std::vector.58"*, %"class.std::vector.58"** %454, align 8
  %483 = call zeroext i1 @_ZN9__gnu_cxxneIP5PointILi3EESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %451, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %452)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %205
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %235
  %484 = load %class.Point*, %class.Point** %234, align 8
  %485 = load %class.Point*, %class.Point** %36, align 8
  %486 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %286
  store %class.Point* %285, %class.Point** %37, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %307
  %487 = load i8*, i8** %38, align 8
  %488 = call i8* @__cxa_begin_catch(i8* %487) #2
  %489 = load %class.Point*, %class.Point** %36, align 8
  %490 = load %class.Point*, %class.Point** %37, align 8
  %491 = bitcast %"class.std::vector.58"* %45 to %"struct.std::_Vector_base.59"*
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %391
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %408
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %430
  %492 = landingpad { i8*, i32 }
          catch i8* null
  %493 = extractvalue { i8*, i32 } %492, 0
  call void @__clang_call_terminate(i8* %493) #12
  br label %originalBB26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #1 comdat {
  %2 = load i32, i32* @x.425
  %3 = load i32, i32* @y.426
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::random_access_iterator_tag", align 1
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %12 = load i32, i32* @x.425
  %13 = load i32, i32* @y.426
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"struct.std::random_access_iterator_tag", align 1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %21, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIP5PointILi3EESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %7 = load %class.Point*, %class.Point** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8)
  %10 = load %class.Point*, %class.Point** %9, align 8
  %11 = icmp ne %class.Point* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_(%class.Point*, %class.Point*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.std::random_access_iterator_tag", align 1
  %8 = alloca %"struct.std::random_access_iterator_tag", align 1
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %class.Point* %0, %class.Point** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %class.Point* %1, %class.Point** %10, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %16 = load %class.Point*, %class.Point** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %18 = load %class.Point*, %class.Point** %17, align 8
  %19 = call i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_St26random_access_iterator_tag(%class.Point* %16, %class.Point* %18)
  ret i64 %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %7 = load %class.Point*, %class.Point** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8)
  %10 = load %class.Point*, %class.Point** %9, align 8
  %11 = ptrtoint %class.Point* %7 to i64
  %12 = ptrtoint %class.Point* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 24
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.60"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.60"*, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store %class.Point* %1, %class.Point** %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.60"* %3, %"class.std::allocator.60"** %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = load %class.Point*, %class.Point** %7, align 8
  %12 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %8, align 8
  %13 = call %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point* %9, %class.Point* %10, %class.Point* %11, %"class.std::allocator.60"* dereferenceable(1) %12)
  ret %class.Point* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  %12 = call %class.Point* @_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point* %8, %class.Point* %10, %class.Point* %11)
  ret %class.Point* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %class.Point** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %class.Point* %0, %class.Point** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %class.Point* %1, %class.Point** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %class.Point* %2, %class.Point** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load %class.Point*, %class.Point** %18, align 8
  %20 = call %class.Point* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEET_S9_(%class.Point* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %class.Point* %20, %class.Point** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %25 = load %class.Point*, %class.Point** %24, align 8
  %26 = call %class.Point* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEET_S9_(%class.Point* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %class.Point* %26, %class.Point** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %31 = load %class.Point*, %class.Point** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %33 = load %class.Point*, %class.Point** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %35 = load %class.Point*, %class.Point** %34, align 8
  %36 = call %class.Point* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%class.Point* %31, %class.Point* %33, %class.Point* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %class.Point* %36, %class.Point** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %39 = load %class.Point*, %class.Point** %38, align 8
  ret %class.Point* %39
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7advanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEmEvRT_T0_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), i64) #0 comdat {
  %3 = load i32, i32* @x.441
  %4 = load i32, i32* @y.442
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.std::random_access_iterator_tag", align 1
  %15 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  store i64 %1, i64* %12, align 8
  %16 = load i64, i64* %12, align 8
  store i64 %16, i64* %13, align 8
  %17 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %18 = load i64, i64* %13, align 8
  %19 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19)
  call void @_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEElEvRT_T0_St26random_access_iterator_tag(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %17, i64 %18)
  %20 = load i32, i32* @x.441
  %21 = load i32, i32* @y.442
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"struct.std::random_access_iterator_tag", align 1
  %32 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store i64 %1, i64* %29, align 8
  %33 = load i64, i64* %29, align 8
  store i64 %33, i64* %30, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %35 = load i64, i64* %30, align 8
  %36 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %36)
  call void @_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEElEvRT_T0_St26random_access_iterator_tag(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %34, i64 %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_S3_ET0_T_SA_S9_RSaIT1_E(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.60"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.443
  %6 = load i32, i32* @y.444
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca %"class.std::allocator.60"*, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %class.Point* %0, %class.Point** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %class.Point* %1, %class.Point** %20, align 8
  store %class.Point* %2, %class.Point** %15, align 8
  store %"class.std::allocator.60"* %3, %"class.std::allocator.60"** %16, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %17 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load %class.Point*, %class.Point** %15, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  %27 = load %class.Point*, %class.Point** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %29 = load %class.Point*, %class.Point** %28, align 8
  %30 = call %class.Point* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_ET0_T_SA_S9_(%class.Point* %27, %class.Point* %29, %class.Point* %25)
  %31 = load i32, i32* @x.443
  %32 = load i32, i32* @y.444
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %30

originalBBalteredBB:                              ; preds = %originalBB, %4
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %class.Point*, align 8
  %42 = alloca %"class.std::allocator.60"*, align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store %class.Point* %0, %class.Point** %45, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store %class.Point* %1, %class.Point** %46, align 8
  store %class.Point* %2, %class.Point** %41, align 8
  store %"class.std::allocator.60"* %3, %"class.std::allocator.60"** %42, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load %class.Point*, %class.Point** %41, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  %53 = load %class.Point*, %class.Point** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %55 = load %class.Point*, %class.Point** %54, align 8
  %56 = call %class.Point* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_ET0_T_SA_S9_(%class.Point* %53, %class.Point* %55, %class.Point* %51)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.58"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.58"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.58"*, %"class.std::vector.58"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.58"* %9)
  %11 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %33

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.445
  %17 = load i32, i32* @y.446
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %24) #15
  %25 = load i32, i32* @x.445
  %26 = load i32, i32* @y.446
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:33:                                     ; preds = %3
  %34 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %9)
  %35 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %9)
  store i64 %35, i64* %8, align 8
  %36 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %34, %37
  store i64 %38, i64* %7, align 8
  %39 = load i64, i64* %7, align 8
  %40 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %9)
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %62, label %42

; <label>:42:                                     ; preds = %33
  %43 = load i32, i32* @x.445
  %44 = load i32, i32* @y.446
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i64, i64* %7, align 8
  %52 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.58"* %9)
  %53 = icmp ugt i64 %51, %52
  %54 = load i32, i32* @x.445
  %55 = load i32, i32* @y.446
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %53, label %62, label %64

; <label>:62:                                     ; preds = %originalBBpart24, %33
  %63 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.58"* %9)
  br label %66

; <label>:64:                                     ; preds = %originalBBpart24
  %65 = load i64, i64* %7, align 8
  br label %66

; <label>:66:                                     ; preds = %64, %62
  %67 = phi i64 [ %63, %62 ], [ %65, %64 ]
  ret i64 %67

originalBBalteredBB:                              ; preds = %originalBB, %15
  %68 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %68) #15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %69 = load i64, i64* %7, align 8
  %70 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.58"* %9)
  %71 = icmp ugt i64 %69, %70
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.60"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.60"*, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store %class.Point* %1, %class.Point** %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.60"* %3, %"class.std::allocator.60"** %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = load %class.Point*, %class.Point** %7, align 8
  %12 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %8, align 8
  %13 = call %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point* %9, %class.Point* %10, %class.Point* %11, %"class.std::allocator.60"* dereferenceable(1) %12)
  ret %class.Point* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_St26random_access_iterator_tag(%class.Point*, %class.Point*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %class.Point* %0, %class.Point** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %class.Point* %1, %class.Point** %7, align 8
  %8 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3)
  ret i64 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__uninitialized_copy_aIP5PointILi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Point*, %class.Point*, %class.Point*, %"class.std::allocator.60"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca %"class.std::allocator.60"*, align 8
  store %class.Point* %0, %class.Point** %5, align 8
  store %class.Point* %1, %class.Point** %6, align 8
  store %class.Point* %2, %class.Point** %7, align 8
  store %"class.std::allocator.60"* %3, %"class.std::allocator.60"** %8, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = load %class.Point*, %class.Point** %7, align 8
  %12 = call %class.Point* @_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point* %9, %class.Point* %10, %class.Point* %11)
  ret %class.Point* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt18uninitialized_copyIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Point*, %class.Point** %4, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = call %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_(%class.Point* %8, %class.Point* %9, %class.Point* %10)
  ret %class.Point* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5PointILi3EES4_EET0_T_S6_S5_(%class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca %class.Point*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  store %class.Point* %10, %class.Point** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %37, %3
  %12 = load %class.Point*, %class.Point** %4, align 8
  %13 = load %class.Point*, %class.Point** %5, align 8
  %14 = icmp ne %class.Point* %12, %13
  br i1 %14, label %15, label %52

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @x.455
  %17 = load i32, i32* @y.456
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load %class.Point*, %class.Point** %7, align 8
  %25 = load i32, i32* @x.455
  %26 = load i32, i32* @y.456
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %33 = invoke %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24) %24)
          to label %34 unwind label %42

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load %class.Point*, %class.Point** %4, align 8
  invoke void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point* %33, %class.Point* dereferenceable(24) %35)
          to label %36 unwind label %42

; <label>:36:                                     ; preds = %34
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load %class.Point*, %class.Point** %4, align 8
  %39 = getelementptr inbounds %class.Point, %class.Point* %38, i32 1
  store %class.Point* %39, %class.Point** %4, align 8
  %40 = load %class.Point*, %class.Point** %7, align 8
  %41 = getelementptr inbounds %class.Point, %class.Point* %40, i32 1
  store %class.Point* %41, %class.Point** %7, align 8
  br label %11

; <label>:42:                                     ; preds = %34, %originalBBpart2
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %8, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %9, align 4
  br label %46

; <label>:46:                                     ; preds = %42
  %47 = load i8*, i8** %8, align 8
  %48 = call i8* @__cxa_begin_catch(i8* %47) #2
  %49 = load %class.Point*, %class.Point** %6, align 8
  %50 = load %class.Point*, %class.Point** %7, align 8
  invoke void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %49, %class.Point* %50)
          to label %51 unwind label %54

; <label>:51:                                     ; preds = %46
  invoke void @__cxa_rethrow() #15
          to label %116 unwind label %54

; <label>:52:                                     ; preds = %11
  %53 = load %class.Point*, %class.Point** %7, align 8
  ret %class.Point* %53

; <label>:54:                                     ; preds = %51, %46
  %55 = load i32, i32* @x.455
  %56 = load i32, i32* @y.456
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %54, %originalBB1alteredBB
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %8, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %9, align 4
  %66 = load i32, i32* @x.455
  %67 = load i32, i32* @y.456
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @__cxa_end_catch()
          to label %74 unwind label %113

; <label>:74:                                     ; preds = %originalBBpart24
  %75 = load i32, i32* @x.455
  %76 = load i32, i32* @y.456
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %74, %originalBB6alteredBB
  %83 = load i32, i32* @x.455
  %84 = load i32, i32* @y.456
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %92
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:92:                                     ; preds = %originalBBpart28
  %93 = load i32, i32* @x.455
  %94 = load i32, i32* @y.456
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %92, %originalBB10alteredBB
  %101 = load i8*, i8** %8, align 8
  %102 = load i32, i32* %9, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  %105 = load i32, i32* @x.455
  %106 = load i32, i32* @y.456
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  resume { i8*, i32 } %104

; <label>:113:                                    ; preds = %originalBBpart24
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  call void @__clang_call_terminate(i8* %115) #12
  unreachable

; <label>:116:                                    ; preds = %51
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %15
  %117 = load %class.Point*, %class.Point** %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %8, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %9, align 4
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %74
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %92
  %121 = load i8*, i8** %8, align 8
  %122 = load i32, i32* %9, align 4
  %123 = insertvalue { i8*, i32 } undef, i8* %121, 0
  %124 = insertvalue { i8*, i32 } %123, i32 %122, 1
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt23__copy_move_backward_a2ILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  %12 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %11)
  %13 = call %class.Point* @_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point* %8, %class.Point* %10, %class.Point* %12)
  %14 = call %class.Point* @_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_(%class.Point** dereferenceable(8) %6, %class.Point* %13)
  ret %class.Point* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__miter_baseIP5PointILi3EEET_S3_(%class.Point*) #1 comdat {
  %2 = load i32, i32* @x.459
  %3 = load i32, i32* @y.460
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %10, align 8
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = load i32, i32* @x.459
  %13 = load i32, i32* @y.460
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %20, align 8
  %21 = load %class.Point*, %class.Point** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__niter_wrapIP5PointILi3EEET_RKS3_S3_(%class.Point** dereferenceable(8), %class.Point*) #1 comdat {
  %3 = load i32, i32* @x.461
  %4 = load i32, i32* @y.462
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Point**, align 8
  %12 = alloca %class.Point*, align 8
  store %class.Point** %0, %class.Point*** %11, align 8
  store %class.Point* %1, %class.Point** %12, align 8
  %13 = load %class.Point*, %class.Point** %12, align 8
  %14 = load i32, i32* @x.461
  %15 = load i32, i32* @y.462
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %13

originalBBalteredBB:                              ; preds = %originalBB, %2
  %22 = alloca %class.Point**, align 8
  %23 = alloca %class.Point*, align 8
  store %class.Point** %0, %class.Point*** %22, align 8
  store %class.Point* %1, %class.Point** %23, align 8
  %24 = load %class.Point*, %class.Point** %23, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt22__copy_move_backward_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %class.Point*, %class.Point** %4, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = call %class.Point* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point* %8, %class.Point* %9, %class.Point* %10)
  ret %class.Point* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point*) #1 comdat {
  %2 = load i32, i32* @x.465
  %3 = load i32, i32* @y.466
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %10, align 8
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = load i32, i32* @x.465
  %13 = load i32, i32* @y.466
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Point* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %20, align 8
  %21 = load %class.Point*, %class.Point** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 {
  %4 = load i32, i32* @x.467
  %5 = load i32, i32* @y.468
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Point*, align 8
  %13 = alloca %class.Point*, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca i64, align 8
  store %class.Point* %0, %class.Point** %12, align 8
  store %class.Point* %1, %class.Point** %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %16 = load %class.Point*, %class.Point** %13, align 8
  %17 = load %class.Point*, %class.Point** %12, align 8
  %18 = ptrtoint %class.Point* %16 to i64
  %19 = ptrtoint %class.Point* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  store i64 %21, i64* %15, align 8
  %22 = load i32, i32* @x.467
  %23 = load i32, i32* @y.468
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %39, %originalBBpart2
  %31 = load i64, i64* %15, align 8
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %33, label %42

; <label>:33:                                     ; preds = %30
  %34 = load %class.Point*, %class.Point** %13, align 8
  %35 = getelementptr inbounds %class.Point, %class.Point* %34, i32 -1
  store %class.Point* %35, %class.Point** %13, align 8
  %36 = load %class.Point*, %class.Point** %14, align 8
  %37 = getelementptr inbounds %class.Point, %class.Point* %36, i32 -1
  store %class.Point* %37, %class.Point** %14, align 8
  %38 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %37, %class.Point* dereferenceable(24) %35)
  br label %39

; <label>:39:                                     ; preds = %33
  %40 = load i64, i64* %15, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %15, align 8
  br label %30

; <label>:42:                                     ; preds = %30
  %43 = load %class.Point*, %class.Point** %14, align 8
  ret %class.Point* %43

originalBBalteredBB:                              ; preds = %originalBB, %3
  %44 = alloca %class.Point*, align 8
  %45 = alloca %class.Point*, align 8
  %46 = alloca %class.Point*, align 8
  %47 = alloca i64, align 8
  store %class.Point* %0, %class.Point** %44, align 8
  store %class.Point* %1, %class.Point** %45, align 8
  store %class.Point* %2, %class.Point** %46, align 8
  %48 = load %class.Point*, %class.Point** %45, align 8
  %49 = load %class.Point*, %class.Point** %44, align 8
  %50 = ptrtoint %class.Point* %48 to i64
  %51 = ptrtoint %class.Point* %49 to i64
  %_ = shl i64 %50, %51
  %_1 = shl i64 %50, %51
  %_2 = shl i64 %50, %51
  %_3 = sub i64 %50, %51
  %gen = mul i64 %_3, %51
  %_4 = shl i64 %50, %51
  %52 = sub i64 %50, %51
  %_5 = sub i64 %52, 24
  %gen6 = mul i64 %_5, 24
  %_7 = sub i64 %52, 24
  %gen8 = mul i64 %_7, 24
  %_9 = shl i64 %52, 24
  %_10 = sub i64 0, %52
  %gen11 = add i64 %_10, 24
  %53 = sdiv exact i64 %52, 24
  store i64 %53, i64* %47, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %class.Point* %0, %class.Point** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %class.Point* %1, %class.Point** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %class.Point* %2, %class.Point** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 8, i1 false)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load %class.Point*, %class.Point** %19, align 8
  %21 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE(%class.Point* %20)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %25 = load %class.Point*, %class.Point** %24, align 8
  %26 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE(%class.Point* %25)
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %30 = load %class.Point*, %class.Point** %29, align 8
  %31 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE(%class.Point* %30)
  %32 = call %class.Point* @_ZSt13__copy_move_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point* %21, %class.Point* %26, %class.Point* %31)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %34 = load %class.Point*, %class.Point** %33, align 8
  %35 = call %class.Point* @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_(%class.Point* %34, %class.Point* %32)
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %class.Point* %35, %class.Point** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %38 = load %class.Point*, %class.Point** %37, align 8
  ret %class.Point* %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEEET_S9_(%class.Point*) #1 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %class.Point* %0, %class.Point** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load %class.Point*, %class.Point** %7, align 8
  ret %class.Point* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_(%class.Point*, %class.Point*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %class.Point* %0, %class.Point** %7, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  %8 = load %class.Point*, %class.Point** %5, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %12 = load %class.Point*, %class.Point** %11, align 8
  %13 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE(%class.Point* %12)
  %14 = ptrtoint %class.Point* %8 to i64
  %15 = ptrtoint %class.Point* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  %18 = call %class.Point* @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 %17)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %class.Point* %18, %class.Point** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %21 = load %class.Point*, %class.Point** %20, align 8
  ret %class.Point* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt13__copy_move_aILb0EP5PointILi3EES2_ET1_T0_S4_S3_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i8, align 1
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %class.Point*, %class.Point** %4, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  %11 = call %class.Point* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point* %8, %class.Point* %9, %class.Point* %10)
  ret %class.Point* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Point* @_ZSt12__niter_baseIP5PointILi3EESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE(%class.Point*) #1 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %class.Point* %0, %class.Point** %3, align 8
  %4 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2)
  %5 = load %class.Point*, %class.Point** %4, align 8
  ret %class.Point* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Point*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %class.Point*, %class.Point** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %class.Point, %class.Point* %9, i64 %10
  store %class.Point* %11, %class.Point** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %3, %class.Point** dereferenceable(8) %6)
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %13 = load %class.Point*, %class.Point** %12, align 8
  ret %class.Point* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP5PointILi3EES5_EET0_T_S7_S6_(%class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i64, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %8 = load %class.Point*, %class.Point** %5, align 8
  %9 = load %class.Point*, %class.Point** %4, align 8
  %10 = ptrtoint %class.Point* %8 to i64
  %11 = ptrtoint %class.Point* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 24
  store i64 %13, i64* %7, align 8
  br label %14

; <label>:14:                                     ; preds = %originalBBpart2, %3
  %15 = load i64, i64* %7, align 8
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %44

; <label>:17:                                     ; preds = %14
  %18 = load %class.Point*, %class.Point** %4, align 8
  %19 = load %class.Point*, %class.Point** %6, align 8
  %20 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %19, %class.Point* dereferenceable(24) %18)
  %21 = load %class.Point*, %class.Point** %4, align 8
  %22 = getelementptr inbounds %class.Point, %class.Point* %21, i32 1
  store %class.Point* %22, %class.Point** %4, align 8
  %23 = load %class.Point*, %class.Point** %6, align 8
  %24 = getelementptr inbounds %class.Point, %class.Point* %23, i32 1
  store %class.Point* %24, %class.Point** %6, align 8
  br label %25

; <label>:25:                                     ; preds = %17
  %26 = load i32, i32* @x.481
  %27 = load i32, i32* @y.482
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = load i64, i64* %7, align 8
  %35 = add nsw i64 %34, -1
  store i64 %35, i64* %7, align 8
  %36 = load i32, i32* @x.481
  %37 = load i32, i32* @y.482
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %14

; <label>:44:                                     ; preds = %14
  %45 = load i32, i32* @x.481
  %46 = load i32, i32* @y.482
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %44, %originalBB9alteredBB
  %53 = load %class.Point*, %class.Point** %6, align 8
  %54 = load i32, i32* @x.481
  %55 = load i32, i32* @y.482
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  ret %class.Point* %53

originalBBalteredBB:                              ; preds = %originalBB, %25
  %62 = load i64, i64* %7, align 8
  %_ = sub i64 %62, -1
  %gen = mul i64 %_, -1
  %_1 = sub i64 %62, -1
  %gen2 = mul i64 %_1, -1
  %_3 = sub i64 0, %62
  %gen4 = add i64 %_3, -1
  %_5 = sub i64 0, %62
  %gen6 = add i64 %_5, -1
  %_7 = sub i64 0, %62
  %gen8 = add i64 %_7, -1
  %63 = add nsw i64 %62, -1
  store i64 %63, i64* %7, align 8
  br label %originalBB

originalBB9alteredBB:                             ; preds = %originalBB9, %44
  %64 = load %class.Point*, %class.Point** %6, align 8
  br label %originalBB9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEElEvRT_T0_St26random_access_iterator_tag(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), i64) #0 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEpLEl(%"class.__gnu_cxx::__normal_iterator"* %7, i64 %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEpLEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca i64, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %8 = load %class.Point*, %class.Point** %7, align 8
  %9 = getelementptr inbounds %class.Point, %class.Point* %8, i64 %6
  store %class.Point* %9, %class.Point** %7, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS3_SaIS3_EEEES4_ET0_T_SA_S9_(%class.Point*, %class.Point*, %class.Point*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %class.Point*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %class.Point* %0, %class.Point** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %class.Point* %1, %class.Point** %11, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %class.Point*, %class.Point** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %18 = load %class.Point*, %class.Point** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load %class.Point*, %class.Point** %19, align 8
  %21 = call %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS5_SaIS5_EEEES6_EET0_T_SC_SB_(%class.Point* %18, %class.Point* %20, %class.Point* %16)
  ret %class.Point* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Point* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS5_SaIS5_EEEES6_EET0_T_SC_SB_(%class.Point*, %class.Point*, %class.Point*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.489
  %5 = load i32, i32* @y.490
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca %class.Point*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %class.Point* %0, %class.Point** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %class.Point* %1, %class.Point** %19, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %20 = load %class.Point*, %class.Point** %14, align 8
  store %class.Point* %20, %class.Point** %15, align 8
  %21 = load i32, i32* @x.489
  %22 = load i32, i32* @y.490
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29

; <label>:29:                                     ; preds = %41, %originalBBpart2
  %30 = invoke zeroext i1 @_ZN9__gnu_cxxneIP5PointILi3EESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %13)
          to label %31 unwind label %44

; <label>:31:                                     ; preds = %29
  br i1 %30, label %32, label %54

; <label>:32:                                     ; preds = %31
  %33 = load %class.Point*, %class.Point** %15, align 8
  %34 = invoke %class.Point* @_ZSt11__addressofI5PointILi3EEEPT_RS2_(%class.Point* dereferenceable(24) %33)
          to label %35 unwind label %44

; <label>:35:                                     ; preds = %32
  %36 = invoke dereferenceable(24) %class.Point* @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %12)
          to label %37 unwind label %44

; <label>:37:                                     ; preds = %35
  invoke void @_ZSt10_ConstructI5PointILi3EES1_EvPT_RKT0_(%class.Point* %34, %class.Point* dereferenceable(24) %36)
          to label %38 unwind label %44

; <label>:38:                                     ; preds = %37
  br label %39

; <label>:39:                                     ; preds = %38
  %40 = invoke dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %12)
          to label %41 unwind label %44

; <label>:41:                                     ; preds = %39
  %42 = load %class.Point*, %class.Point** %15, align 8
  %43 = getelementptr inbounds %class.Point, %class.Point* %42, i32 1
  store %class.Point* %43, %class.Point** %15, align 8
  br label %29

; <label>:44:                                     ; preds = %39, %37, %35, %32, %29
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %16, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %17, align 4
  br label %48

; <label>:48:                                     ; preds = %44
  %49 = load i8*, i8** %16, align 8
  %50 = call i8* @__cxa_begin_catch(i8* %49) #2
  %51 = load %class.Point*, %class.Point** %14, align 8
  %52 = load %class.Point*, %class.Point** %15, align 8
  invoke void @_ZSt8_DestroyIP5PointILi3EEEvT_S3_(%class.Point* %51, %class.Point* %52)
          to label %53 unwind label %56

; <label>:53:                                     ; preds = %48
  invoke void @__cxa_rethrow() #15
          to label %86 unwind label %56

; <label>:54:                                     ; preds = %31
  %55 = load %class.Point*, %class.Point** %15, align 8
  ret %class.Point* %55

; <label>:56:                                     ; preds = %53, %48
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %16, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %60 unwind label %83

; <label>:60:                                     ; preds = %56
  %61 = load i32, i32* @x.489
  %62 = load i32, i32* @y.490
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %60, %originalBB1alteredBB
  %69 = load i32, i32* @x.489
  %70 = load i32, i32* @y.490
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %78
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:78:                                     ; preds = %originalBBpart24
  %79 = load i8*, i8** %16, align 8
  %80 = load i32, i32* %17, align 4
  %81 = insertvalue { i8*, i32 } undef, i8* %79, 0
  %82 = insertvalue { i8*, i32 } %81, i32 %80, 1
  resume { i8*, i32 } %82

; <label>:83:                                     ; preds = %56
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  call void @__clang_call_terminate(i8* %85) #12
  unreachable

; <label>:86:                                     ; preds = %53
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %87 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %89 = alloca %class.Point*, align 8
  %90 = alloca %class.Point*, align 8
  %91 = alloca i8*
  %92 = alloca i32
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %87, i32 0, i32 0
  store %class.Point* %0, %class.Point** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %88, i32 0, i32 0
  store %class.Point* %1, %class.Point** %94, align 8
  store %class.Point* %2, %class.Point** %89, align 8
  %95 = load %class.Point*, %class.Point** %89, align 8
  store %class.Point* %95, %class.Point** %90, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %60
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Point* @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %class.Point*, %class.Point** %4, align 8
  ret %class.Point* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.493
  %3 = load i32, i32* @y.494
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %13 = load %class.Point*, %class.Point** %12, align 8
  %14 = getelementptr inbounds %class.Point, %class.Point* %13, i32 1
  store %class.Point* %14, %class.Point** %12, align 8
  %15 = load i32, i32* @x.493
  %16 = load i32, i32* @y.494
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.__gnu_cxx::__normal_iterator"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %23, align 8
  %24 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %24, i32 0, i32 0
  %26 = load %class.Point*, %class.Point** %25, align 8
  %27 = getelementptr inbounds %class.Point, %class.Point* %26, i32 1
  store %class.Point* %27, %class.Point** %25, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8max_sizeEv(%"class.std::vector.58"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %2, align 8
  %3 = load %"class.std::vector.58"*, %"class.std::vector.58"** %2, align 8
  %4 = bitcast %"class.std::vector.58"* %3 to %"struct.std::_Vector_base.59"*
  %5 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %4)
  %6 = call i64 @_ZNSt6vectorI5PointILi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.60"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #1 comdat {
  %3 = load i32, i32* @x.497
  %4 = load i32, i32* @y.498
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  %14 = load i64*, i64** %12, align 8
  %15 = load i64, i64* %14, align 8
  %16 = load i64*, i64** %13, align 8
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  %19 = load i32, i32* @x.497
  %20 = load i32, i32* @y.498
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %29

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i64*, i64** %13, align 8
  store i64* %28, i64** %11, align 8
  br label %31

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i64*, i64** %12, align 8
  store i64* %30, i64** %11, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %27
  %32 = load i32, i32* @x.497
  %33 = load i32, i32* @y.498
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i64*, i64** %11, align 8
  %41 = load i32, i32* @x.497
  %42 = load i32, i32* @y.498
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i64* %40

originalBBalteredBB:                              ; preds = %originalBB, %2
  %49 = alloca i64*, align 8
  %50 = alloca i64*, align 8
  %51 = alloca i64*, align 8
  store i64* %0, i64** %50, align 8
  store i64* %1, i64** %51, align 8
  %52 = load i64*, i64** %50, align 8
  %53 = load i64, i64* %52, align 8
  %54 = load i64*, i64** %51, align 8
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %53, %55
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %57 = load i64*, i64** %11, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.60"* @_ZNKSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.59"*, align 8
  store %"struct.std::_Vector_base.59"* %0, %"struct.std::_Vector_base.59"** %2, align 8
  %3 = load %"struct.std::_Vector_base.59"*, %"struct.std::_Vector_base.59"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %4 to %"class.std::allocator.60"*
  ret %"class.std::allocator.60"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZNK18TriaObjectAccessorILi2ELi3EE10line_indexEj(%class.TriaObjectAccessor.68*, i32) #0 comdat align 2 {
  %3 = alloca %class.TriaObjectAccessor.68*, align 8
  %4 = alloca i32, align 4
  store %class.TriaObjectAccessor.68* %0, %class.TriaObjectAccessor.68** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.TriaObjectAccessor.68*, %class.TriaObjectAccessor.68** %3, align 8
  %6 = bitcast %class.TriaObjectAccessor.68* %5 to %class.TriaAccessor*
  %7 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %6, i32 0, i32 2
  %8 = load %class.Triangulation*, %class.Triangulation** %7, align 8
  %9 = getelementptr inbounds %class.Triangulation, %class.Triangulation* %8, i32 0, i32 1
  %10 = bitcast %class.TriaObjectAccessor.68* %5 to %class.TriaAccessor*
  %11 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = call dereferenceable(8) %class.TriangulationLevel** @_ZNKSt6vectorIP18TriangulationLevelILi3EESaIS2_EEixEm(%"class.std::vector.10"* %9, i64 %13)
  %15 = load %class.TriangulationLevel*, %class.TriangulationLevel** %14, align 8
  %16 = bitcast %class.TriangulationLevel* %15 to %class.TriangulationLevel.15*
  %17 = getelementptr inbounds %class.TriangulationLevel.15, %class.TriangulationLevel.15* %16, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.TriangulationLevel<2>::QuadsData", %"struct.TriangulationLevel<2>::QuadsData"* %17, i32 0, i32 0
  %19 = bitcast %class.TriaObjectAccessor.68* %5 to %class.TriaAccessor*
  %20 = getelementptr inbounds %class.TriaAccessor, %class.TriaAccessor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = call dereferenceable(16) %class.Quad* @_ZNSt6vectorI4QuadSaIS0_EEixEm(%"class.std::vector.48"* %18, i64 %22)
  %24 = load i32, i32* %4, align 4
  %25 = call i32 @_ZNK4Quad4lineEi(%class.Quad* %23, i32 %24)
  ret i32 %25
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12TriaIteratorILi3E18TriaObjectAccessorILi1ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaIterator.69*, %class.Triangulation*, i32, i32, i8*) unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* @x.503
  %7 = load i32, i32* @y.504
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %class.TriaIterator.69*, align 8
  %15 = alloca %class.Triangulation*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  store %class.TriaIterator.69* %0, %class.TriaIterator.69** %14, align 8
  store %class.Triangulation* %1, %class.Triangulation** %15, align 8
  store i32 %2, i32* %16, align 4
  store i32 %3, i32* %17, align 4
  store i8* %4, i8** %18, align 8
  %19 = load %class.TriaIterator.69*, %class.TriaIterator.69** %14, align 8
  %20 = bitcast %class.TriaIterator.69* %19 to %class.TriaRawIterator.70*
  %21 = load %class.Triangulation*, %class.Triangulation** %15, align 8
  %22 = load i32, i32* %16, align 4
  %23 = load i32, i32* %17, align 4
  %24 = load i8*, i8** %18, align 8
  call void @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaRawIterator.70* %20, %class.Triangulation* %21, i32 %22, i32 %23, i8* %24)
  %25 = load i32, i32* @x.503
  %26 = load i32, i32* @y.504
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %33 = alloca %class.TriaIterator.69*, align 8
  %34 = alloca %class.Triangulation*, align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i8*, align 8
  store %class.TriaIterator.69* %0, %class.TriaIterator.69** %33, align 8
  store %class.Triangulation* %1, %class.Triangulation** %34, align 8
  store i32 %2, i32* %35, align 4
  store i32 %3, i32* %36, align 4
  store i8* %4, i8** %37, align 8
  %38 = load %class.TriaIterator.69*, %class.TriaIterator.69** %33, align 8
  %39 = bitcast %class.TriaIterator.69* %38 to %class.TriaRawIterator.70*
  %40 = load %class.Triangulation*, %class.Triangulation** %34, align 8
  %41 = load i32, i32* %35, align 4
  %42 = load i32, i32* %36, align 4
  %43 = load i8*, i8** %37, align 8
  call void @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaRawIterator.70* %39, %class.Triangulation* %40, i32 %41, i32 %42, i8* %43)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.Quad* @_ZNSt6vectorI4QuadSaIS0_EEixEm(%"class.std::vector.48"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.48"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.48"* %0, %"class.std::vector.48"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.48"*, %"class.std::vector.48"** %3, align 8
  %6 = bitcast %"class.std::vector.48"* %5 to %"struct.std::_Vector_base.49"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.49", %"struct.std::_Vector_base.49"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data", %"struct.std::_Vector_base<Quad, std::allocator<Quad> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %class.Quad*, %class.Quad** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %class.Quad, %class.Quad* %10, i64 %11
  ret %class.Quad* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNK4Quad4lineEi(%class.Quad*, i32) #1 comdat align 2 {
  %3 = alloca %class.Quad*, align 8
  %4 = alloca i32, align 4
  store %class.Quad* %0, %class.Quad** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Quad*, %class.Quad** %3, align 8
  %6 = getelementptr inbounds %class.Quad, %class.Quad* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEC2EPK13TriangulationILi3EEiiPKv(%class.TriaRawIterator.70*, %class.Triangulation*, i32, i32, i8*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.TriaRawIterator.70*, align 8
  %7 = alloca %class.Triangulation*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %class.TriaRawIterator.70* %0, %class.TriaRawIterator.70** %6, align 8
  store %class.Triangulation* %1, %class.Triangulation** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i8* %4, i8** %10, align 8
  %11 = load %class.TriaRawIterator.70*, %class.TriaRawIterator.70** %6, align 8
  %12 = bitcast %class.TriaRawIterator.70* %11 to %"struct.std::iterator.71"*
  %13 = getelementptr inbounds %class.TriaRawIterator.70, %class.TriaRawIterator.70* %11, i32 0, i32 0
  %14 = load %class.Triangulation*, %class.Triangulation** %7, align 8
  %15 = load i32, i32* %8, align 4
  %16 = load i32, i32* %9, align 4
  %17 = load i8*, i8** %10, align 8
  call void @_ZN18TriaObjectAccessorILi1ELi3EEC2EPK13TriangulationILi3EEiiPKv(%class.TriaObjectAccessor.72* %13, %class.Triangulation* %14, i32 %15, i32 %16, i8* %17)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN18TriaObjectAccessorILi1ELi3EEC2EPK13TriangulationILi3EEiiPKv(%class.TriaObjectAccessor.72*, %class.Triangulation*, i32, i32, i8*) unnamed_addr #1 comdat align 2 {
  %6 = alloca %class.TriaObjectAccessor.72*, align 8
  %7 = alloca %class.Triangulation*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store %class.TriaObjectAccessor.72* %0, %class.TriaObjectAccessor.72** %6, align 8
  store %class.Triangulation* %1, %class.Triangulation** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i8* %4, i8** %10, align 8
  %11 = load %class.TriaObjectAccessor.72*, %class.TriaObjectAccessor.72** %6, align 8
  %12 = bitcast %class.TriaObjectAccessor.72* %11 to %class.TriaAccessor*
  %13 = load %class.Triangulation*, %class.Triangulation** %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i32, i32* %9, align 4
  %16 = load i8*, i8** %10, align 8
  call void @_ZN12TriaAccessorILi3EEC2EPK13TriangulationILi3EEiiPKv(%class.TriaAccessor* %12, %class.Triangulation* %13, i32 %14, i32 %15, i8* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.TriaObjectAccessor.72* @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEdeEv(%class.TriaRawIterator.70*) #1 comdat align 2 {
  %2 = alloca %class.TriaRawIterator.70*, align 8
  store %class.TriaRawIterator.70* %0, %class.TriaRawIterator.70** %2, align 8
  %3 = load %class.TriaRawIterator.70*, %class.TriaRawIterator.70** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator.70, %class.TriaRawIterator.70* %3, i32 0, i32 0
  ret %class.TriaObjectAccessor.72* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.58"*, %class.Point*, i64, %class.Point* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.std::vector.58"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %class.Point*, align 8
  %9 = alloca %class.Point, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %class.Point*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %class.Point*, align 8
  %17 = alloca %class.Point*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %class.Point* %1, %class.Point** %20, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %class.Point* %3, %class.Point** %8, align 8
  %21 = load %"class.std::vector.58"*, %"class.std::vector.58"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %356

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %26 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load %class.Point*, %class.Point** %28, align 8
  %30 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load %class.Point*, %class.Point** %33, align 8
  %35 = ptrtoint %class.Point* %29 to i64
  %36 = ptrtoint %class.Point* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 24
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %135

; <label>:41:                                     ; preds = %24
  %42 = load %class.Point*, %class.Point** %8, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %9, %class.Point* dereferenceable(24) %42)
  %43 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE3endEv(%"class.std::vector.58"* %21)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %class.Point* %43, %class.Point** %44, align 8
  %45 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5)
  store i64 %45, i64* %10, align 8
  %46 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %47 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %48, i32 0, i32 1
  %50 = load %class.Point*, %class.Point** %49, align 8
  store %class.Point* %50, %class.Point** %12, align 8
  %51 = load i64, i64* %10, align 8
  %52 = load i64, i64* %7, align 8
  %53 = icmp ugt i64 %51, %52
  br i1 %53, label %54, label %97

; <label>:54:                                     ; preds = %41
  %55 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %55, i32 0, i32 0
  %57 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %56 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %57, i32 0, i32 1
  %59 = load %class.Point*, %class.Point** %58, align 8
  %60 = load i64, i64* %7, align 8
  %61 = sub i64 0, %60
  %62 = getelementptr inbounds %class.Point, %class.Point* %59, i64 %61
  %63 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %64 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %65, i32 0, i32 1
  %67 = load %class.Point*, %class.Point** %66, align 8
  %68 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %68, i32 0, i32 0
  %70 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %69 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %70, i32 0, i32 1
  %72 = load %class.Point*, %class.Point** %71, align 8
  %73 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %74 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %73)
  %75 = call %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %62, %class.Point* %67, %class.Point* %72, %"class.std::allocator.60"* dereferenceable(1) %74)
  %76 = load i64, i64* %7, align 8
  %77 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %78 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %79, i32 0, i32 1
  %81 = load %class.Point*, %class.Point** %80, align 8
  %82 = getelementptr inbounds %class.Point, %class.Point* %81, i64 %76
  store %class.Point* %82, %class.Point** %80, align 8
  %83 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %84 = load %class.Point*, %class.Point** %83, align 8
  %85 = load %class.Point*, %class.Point** %12, align 8
  %86 = load i64, i64* %7, align 8
  %87 = sub i64 0, %86
  %88 = getelementptr inbounds %class.Point, %class.Point* %85, i64 %87
  %89 = load %class.Point*, %class.Point** %12, align 8
  %90 = call %class.Point* @_ZSt13copy_backwardIP5PointILi3EES2_ET0_T_S4_S3_(%class.Point* %84, %class.Point* %88, %class.Point* %89)
  %91 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %92 = load %class.Point*, %class.Point** %91, align 8
  %93 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %94 = load %class.Point*, %class.Point** %93, align 8
  %95 = load i64, i64* %7, align 8
  %96 = getelementptr inbounds %class.Point, %class.Point* %94, i64 %95
  call void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point* %92, %class.Point* %96, %class.Point* dereferenceable(24) %9)
  br label %134

; <label>:97:                                     ; preds = %41
  %98 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %99 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %98, i32 0, i32 0
  %100 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %99 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %100, i32 0, i32 1
  %102 = load %class.Point*, %class.Point** %101, align 8
  %103 = load i64, i64* %7, align 8
  %104 = load i64, i64* %10, align 8
  %105 = sub i64 %103, %104
  %106 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %107 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %106)
  %108 = call %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point* %102, i64 %105, %class.Point* dereferenceable(24) %9, %"class.std::allocator.60"* dereferenceable(1) %107)
  %109 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %109, i32 0, i32 0
  %111 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %110 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %111, i32 0, i32 1
  store %class.Point* %108, %class.Point** %112, align 8
  %113 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %114 = load %class.Point*, %class.Point** %113, align 8
  %115 = load %class.Point*, %class.Point** %12, align 8
  %116 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %116, i32 0, i32 0
  %118 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %117 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %118, i32 0, i32 1
  %120 = load %class.Point*, %class.Point** %119, align 8
  %121 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %122 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %121)
  %123 = call %class.Point* @_ZSt22__uninitialized_move_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %114, %class.Point* %115, %class.Point* %120, %"class.std::allocator.60"* dereferenceable(1) %122)
  %124 = load i64, i64* %10, align 8
  %125 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %125, i32 0, i32 0
  %127 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %126 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %127, i32 0, i32 1
  %129 = load %class.Point*, %class.Point** %128, align 8
  %130 = getelementptr inbounds %class.Point, %class.Point* %129, i64 %124
  store %class.Point* %130, %class.Point** %128, align 8
  %131 = call dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
  %132 = load %class.Point*, %class.Point** %131, align 8
  %133 = load %class.Point*, %class.Point** %12, align 8
  call void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point* %132, %class.Point* %133, %class.Point* dereferenceable(24) %9)
  br label %134

; <label>:134:                                    ; preds = %97, %54
  br label %355

; <label>:135:                                    ; preds = %24
  %136 = load i64, i64* %7, align 8
  %137 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.58"* %21, i64 %136, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %137, i64* %13, align 8
  %138 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.58"* %21)
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %class.Point* %138, %class.Point** %139, align 8
  %140 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %15)
  store i64 %140, i64* %14, align 8
  %141 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %142 = load i64, i64* %13, align 8
  %143 = call %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.59"* %141, i64 %142)
  store %class.Point* %143, %class.Point** %16, align 8
  %144 = load %class.Point*, %class.Point** %16, align 8
  store %class.Point* %144, %class.Point** %17, align 8
  %145 = load %class.Point*, %class.Point** %16, align 8
  %146 = load i64, i64* %14, align 8
  %147 = getelementptr inbounds %class.Point, %class.Point* %145, i64 %146
  %148 = load i64, i64* %7, align 8
  %149 = load %class.Point*, %class.Point** %8, align 8
  %150 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %151 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %150)
          to label %152 unwind label %202

; <label>:152:                                    ; preds = %135
  %153 = invoke %class.Point* @_ZSt24__uninitialized_fill_n_aIP5PointILi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Point* %147, i64 %148, %class.Point* dereferenceable(24) %149, %"class.std::allocator.60"* dereferenceable(1) %151)
          to label %154 unwind label %202

; <label>:154:                                    ; preds = %152
  store %class.Point* null, %class.Point** %17, align 8
  %155 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %156 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %155, i32 0, i32 0
  %157 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %156 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %158 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %157, i32 0, i32 0
  %159 = load %class.Point*, %class.Point** %158, align 8
  %160 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
          to label %161 unwind label %202

; <label>:161:                                    ; preds = %154
  %162 = load i32, i32* @x.515
  %163 = load i32, i32* @y.516
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %161, %originalBBalteredBB
  %170 = load %class.Point*, %class.Point** %160, align 8
  %171 = load %class.Point*, %class.Point** %16, align 8
  %172 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %173 = load i32, i32* @x.515
  %174 = load i32, i32* @y.516
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %181 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %172)
          to label %182 unwind label %202

; <label>:182:                                    ; preds = %originalBBpart2
  %183 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %159, %class.Point* %170, %class.Point* %171, %"class.std::allocator.60"* dereferenceable(1) %181)
          to label %184 unwind label %202

; <label>:184:                                    ; preds = %182
  store %class.Point* %183, %class.Point** %17, align 8
  %185 = load i64, i64* %7, align 8
  %186 = load %class.Point*, %class.Point** %17, align 8
  %187 = getelementptr inbounds %class.Point, %class.Point* %186, i64 %185
  store %class.Point* %187, %class.Point** %17, align 8
  %188 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5)
          to label %189 unwind label %202

; <label>:189:                                    ; preds = %184
  %190 = load %class.Point*, %class.Point** %188, align 8
  %191 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %192 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %191, i32 0, i32 0
  %193 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %192 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %194 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %193, i32 0, i32 1
  %195 = load %class.Point*, %class.Point** %194, align 8
  %196 = load %class.Point*, %class.Point** %17, align 8
  %197 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %198 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %197)
          to label %199 unwind label %202

; <label>:199:                                    ; preds = %189
  %200 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %190, %class.Point* %195, %class.Point* %196, %"class.std::allocator.60"* dereferenceable(1) %198)
          to label %201 unwind label %202

; <label>:201:                                    ; preds = %199
  store %class.Point* %200, %class.Point** %17, align 8
  br label %289

; <label>:202:                                    ; preds = %199, %189, %184, %182, %originalBBpart2, %154, %152, %135
  %203 = landingpad { i8*, i32 }
          catch i8* null
  %204 = extractvalue { i8*, i32 } %203, 0
  store i8* %204, i8** %18, align 8
  %205 = extractvalue { i8*, i32 } %203, 1
  store i32 %205, i32* %19, align 4
  br label %206

; <label>:206:                                    ; preds = %202
  %207 = load i32, i32* @x.515
  %208 = load i32, i32* @y.516
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %206, %originalBB1alteredBB
  %215 = load i8*, i8** %18, align 8
  %216 = call i8* @__cxa_begin_catch(i8* %215) #2
  %217 = load %class.Point*, %class.Point** %17, align 8
  %218 = icmp ne %class.Point* %217, null
  %219 = load i32, i32* @x.515
  %220 = load i32, i32* @y.516
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %218, label %260, label %227

; <label>:227:                                    ; preds = %originalBBpart24
  %228 = load %class.Point*, %class.Point** %16, align 8
  %229 = load i64, i64* %14, align 8
  %230 = getelementptr inbounds %class.Point, %class.Point* %228, i64 %229
  %231 = load %class.Point*, %class.Point** %16, align 8
  %232 = load i64, i64* %14, align 8
  %233 = getelementptr inbounds %class.Point, %class.Point* %231, i64 %232
  %234 = load i64, i64* %7, align 8
  %235 = getelementptr inbounds %class.Point, %class.Point* %233, i64 %234
  %236 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %237 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %236)
          to label %238 unwind label %240

; <label>:238:                                    ; preds = %227
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %230, %class.Point* %235, %"class.std::allocator.60"* dereferenceable(1) %237)
          to label %239 unwind label %240

; <label>:239:                                    ; preds = %238
  br label %267

; <label>:240:                                    ; preds = %287, %originalBBpart212, %265, %260, %238, %227
  %241 = load i32, i32* @x.515
  %242 = load i32, i32* @y.516
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %240, %originalBB6alteredBB
  %249 = landingpad { i8*, i32 }
          cleanup
  %250 = extractvalue { i8*, i32 } %249, 0
  store i8* %250, i8** %18, align 8
  %251 = extractvalue { i8*, i32 } %249, 1
  store i32 %251, i32* %19, align 4
  %252 = load i32, i32* @x.515
  %253 = load i32, i32* @y.516
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @__cxa_end_catch()
          to label %288 unwind label %378

; <label>:260:                                    ; preds = %originalBBpart24
  %261 = load %class.Point*, %class.Point** %16, align 8
  %262 = load %class.Point*, %class.Point** %17, align 8
  %263 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %264 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %263)
          to label %265 unwind label %240

; <label>:265:                                    ; preds = %260
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %261, %class.Point* %262, %"class.std::allocator.60"* dereferenceable(1) %264)
          to label %266 unwind label %240

; <label>:266:                                    ; preds = %265
  br label %267

; <label>:267:                                    ; preds = %266, %239
  %268 = load i32, i32* @x.515
  %269 = load i32, i32* @y.516
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %267, %originalBB10alteredBB
  %276 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %277 = load %class.Point*, %class.Point** %16, align 8
  %278 = load i64, i64* %13, align 8
  %279 = load i32, i32* @x.515
  %280 = load i32, i32* @y.516
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"* %276, %class.Point* %277, i64 %278)
          to label %287 unwind label %240

; <label>:287:                                    ; preds = %originalBBpart212
  invoke void @__cxa_rethrow() #15
          to label %397 unwind label %240

; <label>:288:                                    ; preds = %originalBBpart28
  br label %357

; <label>:289:                                    ; preds = %201
  %290 = load i32, i32* @x.515
  %291 = load i32, i32* @y.516
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %289, %originalBB14alteredBB
  %298 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %299 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %298, i32 0, i32 0
  %300 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %299 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %301 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %300, i32 0, i32 0
  %302 = load %class.Point*, %class.Point** %301, align 8
  %303 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %304 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %303, i32 0, i32 0
  %305 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %304 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %306 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %305, i32 0, i32 1
  %307 = load %class.Point*, %class.Point** %306, align 8
  %308 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %309 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %308)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %302, %class.Point* %307, %"class.std::allocator.60"* dereferenceable(1) %309)
  %310 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %311 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %312 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %311, i32 0, i32 0
  %313 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %312 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %314 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %313, i32 0, i32 0
  %315 = load %class.Point*, %class.Point** %314, align 8
  %316 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %317 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %316, i32 0, i32 0
  %318 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %317 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %319 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %318, i32 0, i32 2
  %320 = load %class.Point*, %class.Point** %319, align 8
  %321 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %322 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %321, i32 0, i32 0
  %323 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %322 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %323, i32 0, i32 0
  %325 = load %class.Point*, %class.Point** %324, align 8
  %326 = ptrtoint %class.Point* %320 to i64
  %327 = ptrtoint %class.Point* %325 to i64
  %328 = sub i64 %326, %327
  %329 = sdiv exact i64 %328, 24
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"* %310, %class.Point* %315, i64 %329)
  %330 = load %class.Point*, %class.Point** %16, align 8
  %331 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %332 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %331, i32 0, i32 0
  %333 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %332 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %334 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %333, i32 0, i32 0
  store %class.Point* %330, %class.Point** %334, align 8
  %335 = load %class.Point*, %class.Point** %17, align 8
  %336 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %337 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %336, i32 0, i32 0
  %338 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %337 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %338, i32 0, i32 1
  store %class.Point* %335, %class.Point** %339, align 8
  %340 = load %class.Point*, %class.Point** %16, align 8
  %341 = load i64, i64* %13, align 8
  %342 = getelementptr inbounds %class.Point, %class.Point* %340, i64 %341
  %343 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %343, i32 0, i32 0
  %345 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %344 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %346 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %345, i32 0, i32 2
  store %class.Point* %342, %class.Point** %346, align 8
  %347 = load i32, i32* @x.515
  %348 = load i32, i32* @y.516
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart231, label %originalBB14alteredBB

originalBBpart231:                                ; preds = %originalBB14
  br label %355

; <label>:355:                                    ; preds = %originalBBpart231, %134
  br label %356

; <label>:356:                                    ; preds = %355, %4
  ret void

; <label>:357:                                    ; preds = %288
  %358 = load i32, i32* @x.515
  %359 = load i32, i32* @y.516
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %357, %originalBB33alteredBB
  %366 = load i8*, i8** %18, align 8
  %367 = load i32, i32* %19, align 4
  %368 = insertvalue { i8*, i32 } undef, i8* %366, 0
  %369 = insertvalue { i8*, i32 } %368, i32 %367, 1
  %370 = load i32, i32* @x.515
  %371 = load i32, i32* @y.516
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  resume { i8*, i32 } %369

; <label>:378:                                    ; preds = %originalBBpart28
  %379 = load i32, i32* @x.515
  %380 = load i32, i32* @y.516
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %378, %originalBB37alteredBB
  %387 = landingpad { i8*, i32 }
          catch i8* null
  %388 = extractvalue { i8*, i32 } %387, 0
  call void @__clang_call_terminate(i8* %388) #12
  %389 = load i32, i32* @x.515
  %390 = load i32, i32* @y.516
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  unreachable

; <label>:397:                                    ; preds = %287
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %161
  %398 = load %class.Point*, %class.Point** %160, align 8
  %399 = load %class.Point*, %class.Point** %16, align 8
  %400 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %206
  %401 = load i8*, i8** %18, align 8
  %402 = call i8* @__cxa_begin_catch(i8* %401) #2
  %403 = load %class.Point*, %class.Point** %17, align 8
  %404 = icmp ne %class.Point* %403, null
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %240
  %405 = landingpad { i8*, i32 }
          cleanup
  %406 = extractvalue { i8*, i32 } %405, 0
  store i8* %406, i8** %18, align 8
  %407 = extractvalue { i8*, i32 } %405, 1
  store i32 %407, i32* %19, align 4
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %267
  %408 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %409 = load %class.Point*, %class.Point** %16, align 8
  %410 = load i64, i64* %13, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %289
  %411 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %412 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %411, i32 0, i32 0
  %413 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %412 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %414 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %413, i32 0, i32 0
  %415 = load %class.Point*, %class.Point** %414, align 8
  %416 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %417 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %416, i32 0, i32 0
  %418 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %417 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %419 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %418, i32 0, i32 1
  %420 = load %class.Point*, %class.Point** %419, align 8
  %421 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %422 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %421)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %415, %class.Point* %420, %"class.std::allocator.60"* dereferenceable(1) %422)
  %423 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %424 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %425 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %424, i32 0, i32 0
  %426 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %425 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %427 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %426, i32 0, i32 0
  %428 = load %class.Point*, %class.Point** %427, align 8
  %429 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %430 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %429, i32 0, i32 0
  %431 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %430 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %432 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %431, i32 0, i32 2
  %433 = load %class.Point*, %class.Point** %432, align 8
  %434 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %435 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %434, i32 0, i32 0
  %436 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %435 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %437 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %436, i32 0, i32 0
  %438 = load %class.Point*, %class.Point** %437, align 8
  %439 = ptrtoint %class.Point* %433 to i64
  %440 = ptrtoint %class.Point* %438 to i64
  %_ = shl i64 %439, %440
  %_15 = sub i64 %439, %440
  %gen = mul i64 %_15, %440
  %_16 = sub i64 %439, %440
  %gen17 = mul i64 %_16, %440
  %_18 = sub i64 %439, %440
  %gen19 = mul i64 %_18, %440
  %441 = sub i64 %439, %440
  %_20 = sub i64 %441, 24
  %gen21 = mul i64 %_20, 24
  %_22 = sub i64 0, %441
  %gen23 = add i64 %_22, 24
  %_24 = sub i64 %441, 24
  %gen25 = mul i64 %_24, 24
  %_26 = sub i64 0, %441
  %gen27 = add i64 %_26, 24
  %_28 = sub i64 %441, 24
  %gen29 = mul i64 %_28, 24
  %442 = sdiv exact i64 %441, 24
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"* %423, %class.Point* %428, i64 %442)
  %443 = load %class.Point*, %class.Point** %16, align 8
  %444 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %445 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %444, i32 0, i32 0
  %446 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %445 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %447 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %446, i32 0, i32 0
  store %class.Point* %443, %class.Point** %447, align 8
  %448 = load %class.Point*, %class.Point** %17, align 8
  %449 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %450 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %449, i32 0, i32 0
  %451 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %450 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %452 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %451, i32 0, i32 1
  store %class.Point* %448, %class.Point** %452, align 8
  %453 = load %class.Point*, %class.Point** %16, align 8
  %454 = load i64, i64* %13, align 8
  %455 = getelementptr inbounds %class.Point, %class.Point* %453, i64 %454
  %456 = bitcast %"class.std::vector.58"* %21 to %"struct.std::_Vector_base.59"*
  %457 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %456, i32 0, i32 0
  %458 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %457 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %459 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %458, i32 0, i32 2
  store %class.Point* %455, %class.Point** %459, align 8
  br label %originalBB14

originalBB33alteredBB:                            ; preds = %originalBB33, %357
  %460 = load i8*, i8** %18, align 8
  %461 = load i32, i32* %19, align 4
  %462 = insertvalue { i8*, i32 } undef, i8* %460, 0
  %463 = insertvalue { i8*, i32 } %462, i32 %461, 1
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %378
  %464 = landingpad { i8*, i32 }
          catch i8* null
  %465 = extractvalue { i8*, i32 } %464, 0
  call void @__clang_call_terminate(i8* %465) #12
  br label %originalBB37
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.58"*, %class.Point*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.58"*, align 8
  %4 = alloca %class.Point*, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %6 = load %"class.std::vector.58"*, %"class.std::vector.58"** %3, align 8
  %7 = bitcast %"class.std::vector.58"* %6 to %"struct.std::_Vector_base.59"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %8 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load %class.Point*, %class.Point** %10, align 8
  %12 = load %class.Point*, %class.Point** %4, align 8
  %13 = ptrtoint %class.Point* %11 to i64
  %14 = ptrtoint %class.Point* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 24
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %49

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.517
  %21 = load i32, i32* @y.518
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load %class.Point*, %class.Point** %4, align 8
  %29 = bitcast %"class.std::vector.58"* %6 to %"struct.std::_Vector_base.59"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %30 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %31, i32 0, i32 1
  %33 = load %class.Point*, %class.Point** %32, align 8
  %34 = bitcast %"class.std::vector.58"* %6 to %"struct.std::_Vector_base.59"*
  %35 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %34)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %28, %class.Point* %33, %"class.std::allocator.60"* dereferenceable(1) %35)
  %36 = load %class.Point*, %class.Point** %4, align 8
  %37 = bitcast %"class.std::vector.58"* %6 to %"struct.std::_Vector_base.59"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %38 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %39, i32 0, i32 1
  store %class.Point* %36, %class.Point** %40, align 8
  %41 = load i32, i32* @x.517
  %42 = load i32, i32* @y.518
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:49:                                     ; preds = %originalBBpart2, %2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %50 = load %class.Point*, %class.Point** %4, align 8
  %51 = bitcast %"class.std::vector.58"* %6 to %"struct.std::_Vector_base.59"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %52 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %53, i32 0, i32 1
  %55 = load %class.Point*, %class.Point** %54, align 8
  %56 = bitcast %"class.std::vector.58"* %6 to %"struct.std::_Vector_base.59"*
  %57 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %56)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %50, %class.Point* %55, %"class.std::allocator.60"* dereferenceable(1) %57)
  %58 = load %class.Point*, %class.Point** %4, align 8
  %59 = bitcast %"class.std::vector.58"* %6 to %"struct.std::_Vector_base.59"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %60 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %61, i32 0, i32 1
  store %class.Point* %58, %class.Point** %62, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIP5PointILi3EES1_EvT_S3_RKT0_(%class.Point*, %class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  %8 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %7)
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = call %class.Point* @_ZSt12__niter_baseIP5PointILi3EEET_S3_(%class.Point* %9)
  %11 = load %class.Point*, %class.Point** %6, align 8
  call void @_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Point* %8, %class.Point* %10, %class.Point* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIP5PointILi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Point*, %class.Point*, %class.Point* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Point*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %15, %3
  %8 = load %class.Point*, %class.Point** %4, align 8
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = icmp ne %class.Point* %8, %9
  br i1 %10, label %11, label %18

; <label>:11:                                     ; preds = %7
  %12 = load %class.Point*, %class.Point** %6, align 8
  %13 = load %class.Point*, %class.Point** %4, align 8
  %14 = call dereferenceable(24) %class.Point* @_ZN5PointILi3EEaSERKS0_(%class.Point* %13, %class.Point* dereferenceable(24) %12)
  br label %15

; <label>:15:                                     ; preds = %11
  %16 = load %class.Point*, %class.Point** %4, align 8
  %17 = getelementptr inbounds %class.Point, %class.Point* %16, i32 1
  store %class.Point* %17, %class.Point** %4, align 8
  br label %7

; <label>:18:                                     ; preds = %7
  %19 = load i32, i32* @x.521
  %20 = load i32, i32* @y.522
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i32, i32* @x.521
  %28 = load i32, i32* @y.522
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %18
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E9constructIS2_EEvRS3_PS2_RKT_(%"class.std::allocator.60"* dereferenceable(1), %class.Point*, %class.Point* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.60"*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %4, align 8
  %8 = bitcast %"class.std::allocator.60"* %7 to %"class.__gnu_cxx::new_allocator.61"*
  %9 = load %class.Point*, %class.Point** %5, align 8
  %10 = load %class.Point*, %class.Point** %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE9constructEPS2_RKS2_(%"class.__gnu_cxx::new_allocator.61"* %8, %class.Point* %9, %class.Point* dereferenceable(24) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI5PointILi3EESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(%"class.std::vector.58"*, %class.Point*, %class.Point* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.525
  %5 = load i32, i32* @y.526
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.std::vector.58"*, align 8
  %14 = alloca %class.Point*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %class.Point*, align 8
  %17 = alloca %class.Point*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %class.Point*, align 8
  %21 = alloca %class.Point*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %class.Point* %1, %class.Point** %24, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %13, align 8
  store %class.Point* %2, %class.Point** %14, align 8
  %25 = load %"class.std::vector.58"*, %"class.std::vector.58"** %13, align 8
  %26 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.58"* %25, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0))
  store i64 %26, i64* %15, align 8
  %27 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %27, i32 0, i32 0
  %29 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %28 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %29, i32 0, i32 0
  %31 = load %class.Point*, %class.Point** %30, align 8
  store %class.Point* %31, %class.Point** %16, align 8
  %32 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %33 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %34, i32 0, i32 1
  %36 = load %class.Point*, %class.Point** %35, align 8
  store %class.Point* %36, %class.Point** %17, align 8
  %37 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.58"* %25)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %class.Point* %37, %class.Point** %38, align 8
  %39 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19)
  store i64 %39, i64* %18, align 8
  %40 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %41 = load i64, i64* %15, align 8
  %42 = call %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.59"* %40, i64 %41)
  store %class.Point* %42, %class.Point** %20, align 8
  %43 = load %class.Point*, %class.Point** %20, align 8
  store %class.Point* %43, %class.Point** %21, align 8
  %44 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %44, i32 0, i32 0
  %46 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %45 to %"class.std::allocator.60"*
  %47 = load %class.Point*, %class.Point** %20, align 8
  %48 = load i64, i64* %18, align 8
  %49 = getelementptr inbounds %class.Point, %class.Point* %47, i64 %48
  %50 = load %class.Point*, %class.Point** %14, align 8
  %51 = load i32, i32* @x.525
  %52 = load i32, i32* @y.526
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E9constructIS2_EEvRS3_PS2_RKT_(%"class.std::allocator.60"* dereferenceable(1) %46, %class.Point* %49, %class.Point* dereferenceable(24) %50)
          to label %59 unwind label %98

; <label>:59:                                     ; preds = %originalBBpart2
  store %class.Point* null, %class.Point** %21, align 8
  %60 = load %class.Point*, %class.Point** %16, align 8
  %61 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %12)
          to label %62 unwind label %98

; <label>:62:                                     ; preds = %59
  %63 = load %class.Point*, %class.Point** %61, align 8
  %64 = load %class.Point*, %class.Point** %20, align 8
  %65 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %66 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %65)
          to label %67 unwind label %98

; <label>:67:                                     ; preds = %62
  %68 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %60, %class.Point* %63, %class.Point* %64, %"class.std::allocator.60"* dereferenceable(1) %66)
          to label %69 unwind label %98

; <label>:69:                                     ; preds = %67
  store %class.Point* %68, %class.Point** %21, align 8
  %70 = load %class.Point*, %class.Point** %21, align 8
  %71 = getelementptr inbounds %class.Point, %class.Point* %70, i32 1
  store %class.Point* %71, %class.Point** %21, align 8
  %72 = invoke dereferenceable(8) %class.Point** @_ZNK9__gnu_cxx17__normal_iteratorIP5PointILi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %12)
          to label %73 unwind label %98

; <label>:73:                                     ; preds = %69
  %74 = load %class.Point*, %class.Point** %72, align 8
  %75 = load %class.Point*, %class.Point** %17, align 8
  %76 = load %class.Point*, %class.Point** %21, align 8
  %77 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %78 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %77)
          to label %79 unwind label %98

; <label>:79:                                     ; preds = %73
  %80 = load i32, i32* @x.525
  %81 = load i32, i32* @y.526
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %79, %originalBB1alteredBB
  %88 = load i32, i32* @x.525
  %89 = load i32, i32* @y.526
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %96 = invoke %class.Point* @_ZSt34__uninitialized_move_if_noexcept_aIP5PointILi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Point* %74, %class.Point* %75, %class.Point* %76, %"class.std::allocator.60"* dereferenceable(1) %78)
          to label %97 unwind label %98

; <label>:97:                                     ; preds = %originalBBpart24
  store %class.Point* %96, %class.Point** %21, align 8
  br label %164

; <label>:98:                                     ; preds = %originalBBpart24, %73, %69, %67, %62, %59, %originalBBpart2
  %99 = landingpad { i8*, i32 }
          catch i8* null
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %22, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %23, align 4
  br label %102

; <label>:102:                                    ; preds = %98
  %103 = load i32, i32* @x.525
  %104 = load i32, i32* @y.526
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %102, %originalBB6alteredBB
  %111 = load i8*, i8** %22, align 8
  %112 = call i8* @__cxa_begin_catch(i8* %111) #2
  %113 = load %class.Point*, %class.Point** %21, align 8
  %114 = icmp ne %class.Point* %113, null
  %115 = load i32, i32* @x.525
  %116 = load i32, i32* @y.526
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %114, label %151, label %123

; <label>:123:                                    ; preds = %originalBBpart28
  %124 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %124, i32 0, i32 0
  %126 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %125 to %"class.std::allocator.60"*
  %127 = load %class.Point*, %class.Point** %20, align 8
  %128 = load i64, i64* %18, align 8
  %129 = getelementptr inbounds %class.Point, %class.Point* %127, i64 %128
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E7destroyERS3_PS2_(%"class.std::allocator.60"* dereferenceable(1) %126, %class.Point* %129)
          to label %130 unwind label %131

; <label>:130:                                    ; preds = %123
  br label %158

; <label>:131:                                    ; preds = %162, %158, %156, %151, %123
  %132 = load i32, i32* @x.525
  %133 = load i32, i32* @y.526
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %131, %originalBB10alteredBB
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %22, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %23, align 4
  %143 = load i32, i32* @x.525
  %144 = load i32, i32* @y.526
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @__cxa_end_catch()
          to label %163 unwind label %203

; <label>:151:                                    ; preds = %originalBBpart28
  %152 = load %class.Point*, %class.Point** %20, align 8
  %153 = load %class.Point*, %class.Point** %21, align 8
  %154 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %155 = invoke dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %154)
          to label %156 unwind label %131

; <label>:156:                                    ; preds = %151
  invoke void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %152, %class.Point* %153, %"class.std::allocator.60"* dereferenceable(1) %155)
          to label %157 unwind label %131

; <label>:157:                                    ; preds = %156
  br label %158

; <label>:158:                                    ; preds = %157, %130
  %159 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %160 = load %class.Point*, %class.Point** %20, align 8
  %161 = load i64, i64* %15, align 8
  invoke void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"* %159, %class.Point* %160, i64 %161)
          to label %162 unwind label %131

; <label>:162:                                    ; preds = %158
  invoke void @__cxa_rethrow() #15
          to label %206 unwind label %131

; <label>:163:                                    ; preds = %originalBBpart212
  br label %198

; <label>:164:                                    ; preds = %97
  %165 = load %class.Point*, %class.Point** %16, align 8
  %166 = load %class.Point*, %class.Point** %17, align 8
  %167 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %168 = call dereferenceable(1) %"class.std::allocator.60"* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.59"* %167)
  call void @_ZSt8_DestroyIP5PointILi3EES1_EvT_S3_RSaIT0_E(%class.Point* %165, %class.Point* %166, %"class.std::allocator.60"* dereferenceable(1) %168)
  %169 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %170 = load %class.Point*, %class.Point** %16, align 8
  %171 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %172 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %171, i32 0, i32 0
  %173 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %172 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %174 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %173, i32 0, i32 2
  %175 = load %class.Point*, %class.Point** %174, align 8
  %176 = load %class.Point*, %class.Point** %16, align 8
  %177 = ptrtoint %class.Point* %175 to i64
  %178 = ptrtoint %class.Point* %176 to i64
  %179 = sub i64 %177, %178
  %180 = sdiv exact i64 %179, 24
  call void @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.59"* %169, %class.Point* %170, i64 %180)
  %181 = load %class.Point*, %class.Point** %20, align 8
  %182 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %182, i32 0, i32 0
  %184 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %183 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %185 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %184, i32 0, i32 0
  store %class.Point* %181, %class.Point** %185, align 8
  %186 = load %class.Point*, %class.Point** %21, align 8
  %187 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %187, i32 0, i32 0
  %189 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %188 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %189, i32 0, i32 1
  store %class.Point* %186, %class.Point** %190, align 8
  %191 = load %class.Point*, %class.Point** %20, align 8
  %192 = load i64, i64* %15, align 8
  %193 = getelementptr inbounds %class.Point, %class.Point* %191, i64 %192
  %194 = bitcast %"class.std::vector.58"* %25 to %"struct.std::_Vector_base.59"*
  %195 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %194, i32 0, i32 0
  %196 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %195 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %196, i32 0, i32 2
  store %class.Point* %193, %class.Point** %197, align 8
  ret void

; <label>:198:                                    ; preds = %163
  %199 = load i8*, i8** %22, align 8
  %200 = load i32, i32* %23, align 4
  %201 = insertvalue { i8*, i32 } undef, i8* %199, 0
  %202 = insertvalue { i8*, i32 } %201, i32 %200, 1
  resume { i8*, i32 } %202

; <label>:203:                                    ; preds = %originalBBpart212
  %204 = landingpad { i8*, i32 }
          catch i8* null
  %205 = extractvalue { i8*, i32 } %204, 0
  call void @__clang_call_terminate(i8* %205) #12
  unreachable

; <label>:206:                                    ; preds = %162
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %207 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %208 = alloca %"class.std::vector.58"*, align 8
  %209 = alloca %class.Point*, align 8
  %210 = alloca i64, align 8
  %211 = alloca %class.Point*, align 8
  %212 = alloca %class.Point*, align 8
  %213 = alloca i64, align 8
  %214 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %215 = alloca %class.Point*, align 8
  %216 = alloca %class.Point*, align 8
  %217 = alloca i8*
  %218 = alloca i32
  %219 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %207, i32 0, i32 0
  store %class.Point* %1, %class.Point** %219, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %208, align 8
  store %class.Point* %2, %class.Point** %209, align 8
  %220 = load %"class.std::vector.58"*, %"class.std::vector.58"** %208, align 8
  %221 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.58"* %220, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0))
  store i64 %221, i64* %210, align 8
  %222 = bitcast %"class.std::vector.58"* %220 to %"struct.std::_Vector_base.59"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %222, i32 0, i32 0
  %224 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %223 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %225 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %224, i32 0, i32 0
  %226 = load %class.Point*, %class.Point** %225, align 8
  store %class.Point* %226, %class.Point** %211, align 8
  %227 = bitcast %"class.std::vector.58"* %220 to %"struct.std::_Vector_base.59"*
  %228 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %227, i32 0, i32 0
  %229 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %228 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %229, i32 0, i32 1
  %231 = load %class.Point*, %class.Point** %230, align 8
  store %class.Point* %231, %class.Point** %212, align 8
  %232 = call %class.Point* @_ZNSt6vectorI5PointILi3EESaIS1_EE5beginEv(%"class.std::vector.58"* %220)
  %233 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %214, i32 0, i32 0
  store %class.Point* %232, %class.Point** %233, align 8
  %234 = call i64 @_ZN9__gnu_cxxmiIP5PointILi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %207, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %214)
  store i64 %234, i64* %213, align 8
  %235 = bitcast %"class.std::vector.58"* %220 to %"struct.std::_Vector_base.59"*
  %236 = load i64, i64* %210, align 8
  %237 = call %class.Point* @_ZNSt12_Vector_baseI5PointILi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.59"* %235, i64 %236)
  store %class.Point* %237, %class.Point** %215, align 8
  %238 = load %class.Point*, %class.Point** %215, align 8
  store %class.Point* %238, %class.Point** %216, align 8
  %239 = bitcast %"class.std::vector.58"* %220 to %"struct.std::_Vector_base.59"*
  %240 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %239, i32 0, i32 0
  %241 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %240 to %"class.std::allocator.60"*
  %242 = load %class.Point*, %class.Point** %215, align 8
  %243 = load i64, i64* %213, align 8
  %244 = getelementptr inbounds %class.Point, %class.Point* %242, i64 %243
  %245 = load %class.Point*, %class.Point** %209, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %79
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %102
  %246 = load i8*, i8** %22, align 8
  %247 = call i8* @__cxa_begin_catch(i8* %246) #2
  %248 = load %class.Point*, %class.Point** %21, align 8
  %249 = icmp ne %class.Point* %248, null
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %131
  %250 = landingpad { i8*, i32 }
          cleanup
  %251 = extractvalue { i8*, i32 } %250, 0
  store i8* %251, i8** %22, align 8
  %252 = extractvalue { i8*, i32 } %250, 1
  store i32 %252, i32* %23, align 4
  br label %originalBB10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE9constructEPS2_RKS2_(%"class.__gnu_cxx::new_allocator.61"*, %class.Point*, %class.Point* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  %5 = alloca %class.Point*, align 8
  %6 = alloca %class.Point*, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %4, align 8
  store %class.Point* %1, %class.Point** %5, align 8
  store %class.Point* %2, %class.Point** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %4, align 8
  %8 = load %class.Point*, %class.Point** %5, align 8
  %9 = bitcast %class.Point* %8 to i8*
  %10 = bitcast i8* %9 to %class.Point*
  %11 = load %class.Point*, %class.Point** %6, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %10, %class.Point* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI5PointILi3EEES2_E7destroyERS3_PS2_(%"class.std::allocator.60"* dereferenceable(1), %class.Point*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.60"*, align 8
  %4 = alloca %class.Point*, align 8
  store %"class.std::allocator.60"* %0, %"class.std::allocator.60"** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %"class.std::allocator.60"*, %"class.std::allocator.60"** %3, align 8
  %6 = bitcast %"class.std::allocator.60"* %5 to %"class.__gnu_cxx::new_allocator.61"*
  %7 = load %class.Point*, %class.Point** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE7destroyEPS2_(%"class.__gnu_cxx::new_allocator.61"* %6, %class.Point* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI5PointILi3EEE7destroyEPS2_(%"class.__gnu_cxx::new_allocator.61"*, %class.Point*) #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.61"*, align 8
  %4 = alloca %class.Point*, align 8
  store %"class.__gnu_cxx::new_allocator.61"* %0, %"class.__gnu_cxx::new_allocator.61"** %3, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.61"*, %"class.__gnu_cxx::new_allocator.61"** %3, align 8
  %6 = load %class.Point*, %class.Point** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_(i64, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.533
  %4 = load i32, i32* @y.534
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::allocator.7"*, align 8
  %13 = alloca %"class.std::allocator.7", align 1
  %14 = alloca i8*
  %15 = alloca i32
  store i64 %0, i64* %11, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %12, align 8
  %16 = load i64, i64* %11, align 8
  %17 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %12, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.7"* %13, %"class.std::allocator.7"* dereferenceable(1) %17) #2
  %18 = load i32, i32* @x.533
  %19 = load i32, i32* @y.534
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %26 = invoke i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %13)
          to label %27 unwind label %46

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = icmp ugt i64 %16, %26
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %13) #2
  br i1 %28, label %29, label %50

; <label>:29:                                     ; preds = %27
  %30 = load i32, i32* @x.533
  %31 = load i32, i32* @y.534
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0)) #15
  %38 = load i32, i32* @x.533
  %39 = load i32, i32* @y.534
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

; <label>:46:                                     ; preds = %originalBBpart2
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  store i8* %48, i8** %14, align 8
  %49 = extractvalue { i8*, i32 } %47, 1
  store i32 %49, i32* %15, align 4
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %13) #2
  br label %52

; <label>:50:                                     ; preds = %27
  %51 = load i64, i64* %11, align 8
  ret i64 %51

; <label>:52:                                     ; preds = %46
  %53 = load i32, i32* @x.533
  %54 = load i32, i32* @y.534
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i8*, i8** %14, align 8
  %62 = load i32, i32* %15, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  %65 = load i32, i32* @x.533
  %66 = load i32, i32* @y.534
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %64

originalBBalteredBB:                              ; preds = %originalBB, %2
  %73 = alloca i64, align 8
  %74 = alloca %"class.std::allocator.7"*, align 8
  %75 = alloca %"class.std::allocator.7", align 1
  %76 = alloca i8*
  %77 = alloca i32
  store i64 %0, i64* %73, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %74, align 8
  %78 = load i64, i64* %73, align 8
  %79 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %74, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.7"* %75, %"class.std::allocator.7"* dereferenceable(1) %79) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0)) #15
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  %80 = load i8*, i8** %14, align 8
  %81 = load i32, i32* %15, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEEC2EmRKS0_(%"struct.std::_Vector_base.6"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %6, align 8
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10, %"class.std::allocator.7"* dereferenceable(1) %11)
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base.6"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.535
  %16 = load i32, i32* @y.536
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %7, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10) #2
  %26 = load i32, i32* @x.535
  %27 = load i32, i32* @y.536
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34

; <label>:34:                                     ; preds = %originalBBpart2
  %35 = load i8*, i8** %7, align 8
  %36 = load i32, i32* %8, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

originalBBalteredBB:                              ; preds = %originalBB, %14
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %7, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj(%"class.std::vector.5"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = load i32, i32* @x.537
  %5 = load i32, i32* @y.538
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.5"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %15 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %16 = bitcast %"class.std::vector.5"* %15 to %"struct.std::_Vector_base.6"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %17 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %18, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = load i64, i64* %13, align 8
  %22 = load i32*, i32** %14, align 8
  %23 = bitcast %"class.std::vector.5"* %15 to %"struct.std::_Vector_base.6"*
  %24 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %23)
  %25 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %20, i64 %21, i32* dereferenceable(4) %22, %"class.std::allocator.7"* dereferenceable(1) %24)
  %26 = bitcast %"class.std::vector.5"* %15 to %"struct.std::_Vector_base.6"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %27 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %28, i32 0, i32 1
  store i32* %25, i32** %29, align 8
  %30 = load i32, i32* @x.537
  %31 = load i32, i32* @y.538
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.std::vector.5"*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %38, align 8
  store i64 %1, i64* %39, align 8
  store i32* %2, i32** %40, align 8
  %41 = load %"class.std::vector.5"*, %"class.std::vector.5"** %38, align 8
  %42 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %43 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i64, i64* %39, align 8
  %48 = load i32*, i32** %40, align 8
  %49 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %50 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %49)
  %51 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %46, i64 %47, i32* dereferenceable(4) %48, %"class.std::allocator.7"* dereferenceable(1) %50)
  %52 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %52, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %53 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %54, i32 0, i32 1
  store i32* %51, i32** %55, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEED2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = ptrtoint i32* %13 to i64
  %19 = ptrtoint i32* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 4
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.6"* %5, i32* %9, i64 %21)
          to label %22 unwind label %40

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.539
  %24 = load i32, i32* @y.540
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31) #2
  %32 = load i32, i32* @x.539
  %33 = load i32, i32* @y.540
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:40:                                     ; preds = %1
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %3, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %4, align 4
  %44 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %44) #2
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %22
  %50 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %50) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  store i64 2305843009213693951, i64* %3, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.7"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIjEC2ERKS_(%"class.std::allocator.7"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"* %6, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %8) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8max_sizeERKS1_(%"class.std::allocator.7"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %7 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"class.std::allocator.7"*
  %9 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZNSaIjEC2ERKS_(%"class.std::allocator.7"* %8, %"class.std::allocator.7"* dereferenceable(1) %9) #2
  %10 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"class.std::allocator.7"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %16) #2
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %9, i32 0, i32 0
  store i32* %7, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %11 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %16, i32 0, i32 1
  store i32* %14, i32** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds i32, i32* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %24 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %25, i32 0, i32 2
  store i32* %23, i32** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.555
  %3 = load i32, i32* @y.556
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %10, align 8
  %11 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %10, align 8
  %12 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %11 to %"class.std::allocator.7"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %12) #2
  %13 = load i32, i32* @x.555
  %14 = load i32, i32* @y.556
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %21, align 8
  %22 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"** %21, align 8
  %23 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %22 to %"class.std::allocator.7"*
  call void @_ZNSaIjED2Ev(%"class.std::allocator.7"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.557
  %3 = load i32, i32* @y.558
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 0
  store i32* null, i32** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 1
  store i32* null, i32** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 2
  store i32* null, i32** %14, align 8
  %15 = load i32, i32* @x.557
  %16 = load i32, i32* @y.558
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*, %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 0
  store i32* null, i32** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 1
  store i32* null, i32** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %24, i32 0, i32 2
  store i32* null, i32** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %29

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.559
  %10 = load i32, i32* @y.560
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %17 to %"class.std::allocator.7"*
  %19 = load i64, i64* %4, align 8
  %20 = call i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.7"* dereferenceable(1) %18, i64 %19)
  %21 = load i32, i32* @x.559
  %22 = load i32, i32* @y.560
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %46

; <label>:29:                                     ; preds = %2
  %30 = load i32, i32* @x.559
  %31 = load i32, i32* @y.560
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i32, i32* @x.559
  %39 = load i32, i32* @y.560
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:46:                                     ; preds = %originalBBpart24, %originalBBpart2
  %47 = phi i32* [ %20, %originalBBpart2 ], [ null, %originalBBpart24 ]
  ret i32* %47

originalBBalteredBB:                              ; preds = %originalBB, %8
  %48 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %48 to %"class.std::allocator.7"*
  %50 = load i64, i64* %4, align 8
  %51 = call i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.7"* dereferenceable(1) %49, i64 %50)
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE8allocateERS1_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.561
  %4 = load i32, i32* @y.562
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.7"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %11, align 8
  %14 = bitcast %"class.std::allocator.7"* %13 to %"class.__gnu_cxx::new_allocator.8"*
  %15 = load i64, i64* %12, align 8
  %16 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.561
  %18 = load i32, i32* @y.562
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.7"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %25, align 8
  %28 = bitcast %"class.std::allocator.7"* %27 to %"class.__gnu_cxx::new_allocator.8"*
  %29 = load i64, i64* %26, align 8
  %30 = call i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.563
  %13 = load i32, i32* @y.564
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  call void @_ZSt17__throw_bad_allocv() #15
  %20 = load i32, i32* @x.563
  %21 = load i32, i32* @y.564
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:28:                                     ; preds = %3
  %29 = load i64, i64* %5, align 8
  %30 = mul i64 %29, 4
  %31 = call i8* @_Znwm(i64 %30)
  %32 = bitcast i8* %31 to i32*
  ret i32* %32

originalBBalteredBB:                              ; preds = %originalBB, %11
  call void @_ZSt17__throw_bad_allocv() #15
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.567
  %3 = load i32, i32* @y.568
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %10, align 8
  %11 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %12 to %"class.std::allocator.7"*
  %14 = load i32, i32* @x.567
  %15 = load i32, i32* @y.568
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.7"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %22, align 8
  %23 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %24 to %"class.std::allocator.7"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = load i32, i32* @x.569
  %5 = load i32, i32* @y.570
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8, align 1
  store i32* %0, i32** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load i32*, i32** %12, align 8
  %17 = load i64, i64* %13, align 8
  %18 = load i32*, i32** %14, align 8
  %19 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32* %16, i64 %17, i32* dereferenceable(4) %18)
  %20 = load i32, i32* @x.569
  %21 = load i32, i32* @y.570
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca i32*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i8, align 1
  store i32* %0, i32** %28, align 8
  store i64 %1, i64* %29, align 8
  store i32* %2, i32** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load i32*, i32** %28, align 8
  %33 = load i64, i64* %29, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32* %32, i64 %33, i32* dereferenceable(4) %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPjmjEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPjmjET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  %12 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %4, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8), i32*) #1 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPjmjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #1 comdat {
  %4 = load i32, i32* @x.577
  %5 = load i32, i32* @y.578
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store i32* %0, i32** %12, align 8
  store i64 %1, i64* %13, align 8
  store i32* %2, i32** %14, align 8
  %17 = load i32*, i32** %14, align 8
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %15, align 4
  %19 = load i64, i64* %13, align 8
  store i64 %19, i64* %16, align 8
  %20 = load i32, i32* @x.577
  %21 = load i32, i32* @y.578
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %34, %originalBBpart2
  %29 = load i64, i64* %16, align 8
  %30 = icmp ugt i64 %29, 0
  br i1 %30, label %31, label %39

; <label>:31:                                     ; preds = %28
  %32 = load i32, i32* %15, align 4
  %33 = load i32*, i32** %12, align 8
  store i32 %32, i32* %33, align 4
  br label %34

; <label>:34:                                     ; preds = %31
  %35 = load i64, i64* %16, align 8
  %36 = add i64 %35, -1
  store i64 %36, i64* %16, align 8
  %37 = load i32*, i32** %12, align 8
  %38 = getelementptr inbounds i32, i32* %37, i32 1
  store i32* %38, i32** %12, align 8
  br label %28

; <label>:39:                                     ; preds = %28
  %40 = load i32, i32* @x.577
  %41 = load i32, i32* @y.578
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32*, i32** %12, align 8
  %49 = load i32, i32* @x.577
  %50 = load i32, i32* @y.578
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i32* %48

originalBBalteredBB:                              ; preds = %originalBB, %3
  %57 = alloca i32*, align 8
  %58 = alloca i64, align 8
  %59 = alloca i32*, align 8
  %60 = alloca i32, align 4
  %61 = alloca i64, align 8
  store i32* %0, i32** %57, align 8
  store i64 %1, i64* %58, align 8
  store i32* %2, i32** %59, align 8
  %62 = load i32*, i32** %59, align 8
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %60, align 4
  %64 = load i64, i64* %58, align 8
  store i64 %64, i64* %61, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %65 = load i32*, i32** %12, align 8
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPjET_S1_(i32*) #1 comdat {
  %2 = load i32, i32* @x.579
  %3 = load i32, i32* @y.580
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  %11 = load i32*, i32** %10, align 8
  %12 = load i32, i32* @x.579
  %13 = load i32, i32* @y.580
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i32*, align 8
  store i32* %0, i32** %20, align 8
  %21 = load i32*, i32** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.6"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.6"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %11 to %"class.std::allocator.7"*
  %13 = load i32*, i32** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.7"* dereferenceable(1) %12, i32* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIjEjE10deallocateERS1_Pjm(%"class.std::allocator.7"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.8"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm(%"class.__gnu_cxx::new_allocator.8"*, i32*, i64) #1 comdat align 2 {
  %4 = load i32, i32* @x.585
  %5 = load i32, i32* @y.586
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %12, align 8
  store i32* %1, i32** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %12, align 8
  %16 = load i32*, i32** %13, align 8
  %17 = bitcast i32* %16 to i8*
  call void @_ZdlPv(i8* %17) #2
  %18 = load i32, i32* @x.585
  %19 = load i32, i32* @y.586
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %27 = alloca i32*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %26, align 8
  store i32* %1, i32** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %26, align 8
  %30 = load i32*, i32** %27, align 8
  %31 = bitcast i32* %30 to i8*
  call void @_ZdlPv(i8* %31) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9TableBaseILi2EdEC2Ev(%class.TableBase*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.TableBase*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.TableBase* %0, %class.TableBase** %2, align 8
  %5 = load %class.TableBase*, %class.TableBase** %2, align 8
  %6 = bitcast %class.TableBase* %5 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2Ev(%class.Subscriptor* %6)
  %7 = bitcast %class.TableBase* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV9TableBaseILi2EdE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 1
  store double* null, double** %8, align 8
  %9 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.TableBase, %class.TableBase* %5, i32 0, i32 3
  invoke void @_ZN12TableIndicesILi2EEC2Ev(%class.TableIndices* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %3, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %4, align 4
  %16 = bitcast %class.TableBase* %5 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %16)
          to label %17 unwind label %39

; <label>:17:                                     ; preds = %12
  br label %18

; <label>:18:                                     ; preds = %17
  %19 = load i32, i32* @x.587
  %20 = load i32, i32* @y.588
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %18, %originalBBalteredBB
  %27 = load i8*, i8** %3, align 8
  %28 = load i32, i32* %4, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  %31 = load i32, i32* @x.587
  %32 = load i32, i32* @y.588
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %30

; <label>:39:                                     ; preds = %12
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  call void @__clang_call_terminate(i8* %41) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %18
  %42 = load i8*, i8** %3, align 8
  %43 = load i32, i32* %4, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5TableILi2EdED0Ev(%class.Table*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Table*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.Table* %0, %class.Table** %2, align 8
  %5 = load %class.Table*, %class.Table** %2, align 8
  invoke void @_ZN5TableILi2EdED2Ev(%class.Table* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %class.Table* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %class.Table* %5 to i8*
  call void @_ZdlPv(i8* %12) #14
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.589
  %15 = load i32, i32* @y.590
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i8*, i8** %3, align 8
  %23 = load i32, i32* %4, align 4
  %24 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  %26 = load i32, i32* @x.589
  %27 = load i32, i32* @y.590
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %25

originalBBalteredBB:                              ; preds = %originalBB, %13
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %4, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  br label %originalBB
}

declare void @_ZN11SubscriptorC2Ev(%class.Subscriptor*) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPjEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPjEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_(i32*, i32*) #1 comdat align 2 {
  %3 = load i32, i32* @x.595
  %4 = load i32, i32* @y.596
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store i32* %0, i32** %11, align 8
  store i32* %1, i32** %12, align 8
  %13 = load i32, i32* @x.595
  %14 = load i32, i32* @y.596
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  store i32* %0, i32** %21, align 8
  store i32* %1, i32** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EEC2Ev(%"struct.std::_Vector_base.74"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.74"*, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %2, align 8
  %3 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"*, %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %5 to %"class.std::allocator.75"*
  call void @_ZNSaIN11Polynomials19LagrangeEquidistantEEC2Ev(%"class.std::allocator.75"* %6) #2
  %7 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %7)
          to label %8 unwind label %25

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.599
  %10 = load i32, i32* @y.600
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i32, i32* @x.599
  %18 = load i32, i32* @y.600
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:25:                                     ; preds = %1
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %3, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %4, align 4
  %29 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %5 to %"class.std::allocator.75"*
  call void @_ZNSaIN11Polynomials19LagrangeEquidistantEED2Ev(%"class.std::allocator.75"* %29) #2
  br label %30

; <label>:30:                                     ; preds = %25
  %31 = load i8*, i8** %3, align 8
  %32 = load i32, i32* %4, align 4
  %33 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

originalBBalteredBB:                              ; preds = %originalBB, %8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11Polynomials19LagrangeEquidistantEEC2Ev(%"class.std::allocator.75"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.601
  %3 = load i32, i32* @y.602
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %10, align 8
  %11 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %10, align 8
  %12 = bitcast %"class.std::allocator.75"* %11 to %"class.__gnu_cxx::new_allocator.76"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEEC2Ev(%"class.__gnu_cxx::new_allocator.76"* %12) #2
  %13 = load i32, i32* @x.601
  %14 = load i32, i32* @y.602
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %21, align 8
  %22 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %21, align 8
  %23 = bitcast %"class.std::allocator.75"* %22 to %"class.__gnu_cxx::new_allocator.76"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEEC2Ev(%"class.__gnu_cxx::new_allocator.76"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*, %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %3, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* null, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %3, i32 0, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* null, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %3, i32 0, i32 2
  store %"class.Polynomials::LagrangeEquidistant"* null, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11Polynomials19LagrangeEquidistantEED2Ev(%"class.std::allocator.75"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %2, align 8
  %3 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %2, align 8
  %4 = bitcast %"class.std::allocator.75"* %3 to %"class.__gnu_cxx::new_allocator.76"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEED2Ev(%"class.__gnu_cxx::new_allocator.76"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEEC2Ev(%"class.__gnu_cxx::new_allocator.76"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.607
  %3 = load i32, i32* @y.608
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %10, align 8
  %12 = load i32, i32* @x.607
  %13 = load i32, i32* @y.608
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEED2Ev(%"class.__gnu_cxx::new_allocator.76"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantES1_EvT_S3_RSaIT0_E(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.std::allocator.75"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca %"class.std::allocator.75"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store %"class.std::allocator.75"* %2, %"class.std::allocator.75"** %6, align 8
  %7 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %8 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  call void @_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantEEvT_S3_(%"class.Polynomials::LagrangeEquidistant"* %7, %"class.Polynomials::LagrangeEquidistant"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.74"*, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %2, align 8
  %3 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %4 to %"class.std::allocator.75"*
  ret %"class.std::allocator.75"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EED2Ev(%"struct.std::_Vector_base.74"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.74"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %2, align 8
  %5 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %16, align 8
  %18 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %13 to i64
  %19 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 48
  invoke void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.74"* %5, %"class.Polynomials::LagrangeEquidistant"* %9, i64 %21)
          to label %22 unwind label %40

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.615
  %24 = load i32, i32* @y.616
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %31) #2
  %32 = load i32, i32* @x.615
  %33 = load i32, i32* @y.616
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:40:                                     ; preds = %1
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %3, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %4, align 4
  %44 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %44) #2
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %22
  %50 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %50) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantEEvT_S3_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat {
  %3 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %5 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %6 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials19LagrangeEquidistantEEEvT_S5_(%"class.Polynomials::LagrangeEquidistant"* %5, %"class.Polynomials::LagrangeEquidistant"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN11Polynomials19LagrangeEquidistantEEEvT_S5_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat align 2 {
  %3 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %originalBBpart28, %2
  %6 = load i32, i32* @x.619
  %7 = load i32, i32* @y.620
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %15 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %16 = icmp ne %"class.Polynomials::LagrangeEquidistant"* %14, %15
  %17 = load i32, i32* @x.619
  %18 = load i32, i32* @y.620
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %63

; <label>:25:                                     ; preds = %originalBBpart2
  %26 = load i32, i32* @x.619
  %27 = load i32, i32* @y.620
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  %34 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %35 = call %"class.Polynomials::LagrangeEquidistant"* @_ZSt11__addressofIN11Polynomials19LagrangeEquidistantEEPT_RS2_(%"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %34)
  call void @_ZSt8_DestroyIN11Polynomials19LagrangeEquidistantEEvPT_(%"class.Polynomials::LagrangeEquidistant"* %35)
  %36 = load i32, i32* @x.619
  %37 = load i32, i32* @y.620
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44

; <label>:44:                                     ; preds = %originalBBpart24
  %45 = load i32, i32* @x.619
  %46 = load i32, i32* @y.620
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %54 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %53, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %54, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %55 = load i32, i32* @x.619
  %56 = load i32, i32* @y.620
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %5

; <label>:63:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %64 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %65 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %66 = icmp ne %"class.Polynomials::LagrangeEquidistant"* %64, %65
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  %67 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %68 = call %"class.Polynomials::LagrangeEquidistant"* @_ZSt11__addressofIN11Polynomials19LagrangeEquidistantEEPT_RS2_(%"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %67)
  call void @_ZSt8_DestroyIN11Polynomials19LagrangeEquidistantEEvPT_(%"class.Polynomials::LagrangeEquidistant"* %68)
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %69 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %70 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %69, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %70, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN11Polynomials19LagrangeEquidistantEEvPT_(%"class.Polynomials::LagrangeEquidistant"*) #0 comdat {
  %2 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %2, align 8
  %3 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %2, align 8
  %4 = bitcast %"class.Polynomials::LagrangeEquidistant"* %3 to void (%"class.Polynomials::LagrangeEquidistant"*)***
  %5 = load void (%"class.Polynomials::LagrangeEquidistant"*)**, void (%"class.Polynomials::LagrangeEquidistant"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.Polynomials::LagrangeEquidistant"*)*, void (%"class.Polynomials::LagrangeEquidistant"*)** %5, i64 0
  %7 = load void (%"class.Polynomials::LagrangeEquidistant"*)*, void (%"class.Polynomials::LagrangeEquidistant"*)** %6, align 8
  call void %7(%"class.Polynomials::LagrangeEquidistant"* %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZSt11__addressofIN11Polynomials19LagrangeEquidistantEEPT_RS2_(%"class.Polynomials::LagrangeEquidistant"* dereferenceable(48)) #1 comdat {
  %2 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %2, align 8
  %3 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %2, align 8
  ret %"class.Polynomials::LagrangeEquidistant"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.74"*, %"class.Polynomials::LagrangeEquidistant"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.74"*, align 8
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %4, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %4, align 8
  %8 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %9 = icmp ne %"class.Polynomials::LagrangeEquidistant"* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %11 to %"class.std::allocator.75"*
  %13 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.75"* dereferenceable(1) %12, %"class.Polynomials::LagrangeEquidistant"* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  %16 = load i32, i32* @x.625
  %17 = load i32, i32* @y.626
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i32, i32* @x.625
  %25 = load i32, i32* @y.626
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %15
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"*, %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %3 to %"class.std::allocator.75"*
  call void @_ZNSaIN11Polynomials19LagrangeEquidistantEED2Ev(%"class.std::allocator.75"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.75"* dereferenceable(1), %"class.Polynomials::LagrangeEquidistant"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.75"*, align 8
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %4, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %4, align 8
  %8 = bitcast %"class.std::allocator.75"* %7 to %"class.__gnu_cxx::new_allocator.76"*
  %9 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.76"* %8, %"class.Polynomials::LagrangeEquidistant"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.76"*, %"class.Polynomials::LagrangeEquidistant"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  %8 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %9 = bitcast %"class.Polynomials::LagrangeEquidistant"* %8 to i8*
  call void @_ZdlPv(i8* %9) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E9constructIS2_EEvRS3_PS2_RKT_(%"class.std::allocator.75"* dereferenceable(1), %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.75"*, align 8
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %4, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %7 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %4, align 8
  %8 = bitcast %"class.std::allocator.75"* %7 to %"class.__gnu_cxx::new_allocator.76"*
  %9 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE9constructEPS2_RKS2_(%"class.__gnu_cxx::new_allocator.76"* %8, %"class.Polynomials::LagrangeEquidistant"* %9, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(%"class.std::vector.73"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.140", align 8
  %5 = alloca %"class.std::vector.73"*, align 8
  %6 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %9 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.140", align 8
  %12 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %13 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %14 = alloca i8*
  %15 = alloca i32
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %4, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %16, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %5, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %17 = load %"class.std::vector.73"*, %"class.std::vector.73"** %5, align 8
  %18 = call i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.73"* %17, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0))
  store i64 %18, i64* %7, align 8
  %19 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %20 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %21, i32 0, i32 0
  %23 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %22, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %23, %"class.Polynomials::LagrangeEquidistant"** %8, align 8
  %24 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %24, i32 0, i32 0
  %26 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %25 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %26, i32 0, i32 1
  %28 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %27, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %28, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %29 = call %"class.Polynomials::LagrangeEquidistant"* @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE5beginEv(%"class.std::vector.73"* %17)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %11, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %29, %"class.Polynomials::LagrangeEquidistant"** %30, align 8
  %31 = call i64 @_ZN9__gnu_cxxmiIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.140"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.140"* dereferenceable(8) %11)
  store i64 %31, i64* %10, align 8
  %32 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %33 = load i64, i64* %7, align 8
  %34 = call %"class.Polynomials::LagrangeEquidistant"* @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.74"* %32, i64 %33)
  store %"class.Polynomials::LagrangeEquidistant"* %34, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %35 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %35, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %36 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %37 to %"class.std::allocator.75"*
  %39 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %40 = load i64, i64* %10, align 8
  %41 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %39, i64 %40
  %42 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E9constructIS2_EEvRS3_PS2_RKT_(%"class.std::allocator.75"* dereferenceable(1) %38, %"class.Polynomials::LagrangeEquidistant"* %41, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %42)
          to label %43 unwind label %98

; <label>:43:                                     ; preds = %3
  store %"class.Polynomials::LagrangeEquidistant"* null, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %44 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %8, align 8
  %45 = invoke dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.140"* %4)
          to label %46 unwind label %98

; <label>:46:                                     ; preds = %43
  %47 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %45, align 8
  %48 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %49 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %50 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %49)
          to label %51 unwind label %98

; <label>:51:                                     ; preds = %46
  %52 = invoke %"class.Polynomials::LagrangeEquidistant"* @_ZSt34__uninitialized_move_if_noexcept_aIPN11Polynomials19LagrangeEquidistantES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.Polynomials::LagrangeEquidistant"* %44, %"class.Polynomials::LagrangeEquidistant"* %47, %"class.Polynomials::LagrangeEquidistant"* %48, %"class.std::allocator.75"* dereferenceable(1) %50)
          to label %53 unwind label %98

; <label>:53:                                     ; preds = %51
  store %"class.Polynomials::LagrangeEquidistant"* %52, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %54 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %55 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %54, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %55, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %56 = invoke dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.140"* %4)
          to label %57 unwind label %98

; <label>:57:                                     ; preds = %53
  %58 = load i32, i32* @x.635
  %59 = load i32, i32* @y.636
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %57, %originalBBalteredBB
  %66 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %56, align 8
  %67 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %68 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %69 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %70 = load i32, i32* @x.635
  %71 = load i32, i32* @y.636
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %78 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %69)
          to label %79 unwind label %98

; <label>:79:                                     ; preds = %originalBBpart2
  %80 = load i32, i32* @x.635
  %81 = load i32, i32* @y.636
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %79, %originalBB1alteredBB
  %88 = load i32, i32* @x.635
  %89 = load i32, i32* @y.636
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %96 = invoke %"class.Polynomials::LagrangeEquidistant"* @_ZSt34__uninitialized_move_if_noexcept_aIPN11Polynomials19LagrangeEquidistantES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.Polynomials::LagrangeEquidistant"* %66, %"class.Polynomials::LagrangeEquidistant"* %67, %"class.Polynomials::LagrangeEquidistant"* %68, %"class.std::allocator.75"* dereferenceable(1) %78)
          to label %97 unwind label %98

; <label>:97:                                     ; preds = %originalBBpart24
  store %"class.Polynomials::LagrangeEquidistant"* %96, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  br label %180

; <label>:98:                                     ; preds = %originalBBpart24, %originalBBpart2, %53, %51, %46, %43, %3
  %99 = landingpad { i8*, i32 }
          catch i8* null
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %14, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %15, align 4
  br label %102

; <label>:102:                                    ; preds = %98
  %103 = load i8*, i8** %14, align 8
  %104 = call i8* @__cxa_begin_catch(i8* %103) #2
  %105 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %106 = icmp ne %"class.Polynomials::LagrangeEquidistant"* %105, null
  br i1 %106, label %119, label %107

; <label>:107:                                    ; preds = %102
  %108 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %108, i32 0, i32 0
  %110 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %109 to %"class.std::allocator.75"*
  %111 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %112 = load i64, i64* %10, align 8
  %113 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %111, i64 %112
  invoke void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E7destroyERS3_PS2_(%"class.std::allocator.75"* dereferenceable(1) %110, %"class.Polynomials::LagrangeEquidistant"* %113)
          to label %114 unwind label %115

; <label>:114:                                    ; preds = %107
  br label %158

; <label>:115:                                    ; preds = %originalBBpart216, %158, %140, %originalBBpart28, %107
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %14, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %15, align 4
  invoke void @__cxa_end_catch()
          to label %179 unwind label %219

; <label>:119:                                    ; preds = %102
  %120 = load i32, i32* @x.635
  %121 = load i32, i32* @y.636
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %119, %originalBB6alteredBB
  %128 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %129 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %130 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %131 = load i32, i32* @x.635
  %132 = load i32, i32* @y.636
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %139 = invoke dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %130)
          to label %140 unwind label %115

; <label>:140:                                    ; preds = %originalBBpart28
  invoke void @_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantES1_EvT_S3_RSaIT0_E(%"class.Polynomials::LagrangeEquidistant"* %128, %"class.Polynomials::LagrangeEquidistant"* %129, %"class.std::allocator.75"* dereferenceable(1) %139)
          to label %141 unwind label %115

; <label>:141:                                    ; preds = %140
  %142 = load i32, i32* @x.635
  %143 = load i32, i32* @y.636
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %141, %originalBB10alteredBB
  %150 = load i32, i32* @x.635
  %151 = load i32, i32* @y.636
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %158

; <label>:158:                                    ; preds = %originalBBpart212, %114
  %159 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %160 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %161 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.74"* %159, %"class.Polynomials::LagrangeEquidistant"* %160, i64 %161)
          to label %162 unwind label %115

; <label>:162:                                    ; preds = %158
  %163 = load i32, i32* @x.635
  %164 = load i32, i32* @y.636
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %162, %originalBB14alteredBB
  %171 = load i32, i32* @x.635
  %172 = load i32, i32* @y.636
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @__cxa_rethrow() #15
          to label %222 unwind label %115

; <label>:179:                                    ; preds = %115
  br label %214

; <label>:180:                                    ; preds = %97
  %181 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %8, align 8
  %182 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %183 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %184 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %183)
  call void @_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantES1_EvT_S3_RSaIT0_E(%"class.Polynomials::LagrangeEquidistant"* %181, %"class.Polynomials::LagrangeEquidistant"* %182, %"class.std::allocator.75"* dereferenceable(1) %184)
  %185 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %186 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %8, align 8
  %187 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %187, i32 0, i32 0
  %189 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %188 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %189, i32 0, i32 2
  %191 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %190, align 8
  %192 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %8, align 8
  %193 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %191 to i64
  %194 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %192 to i64
  %195 = sub i64 %193, %194
  %196 = sdiv exact i64 %195, 48
  call void @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.74"* %185, %"class.Polynomials::LagrangeEquidistant"* %186, i64 %196)
  %197 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %198 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %199 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %198, i32 0, i32 0
  %200 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %199 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %200, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %197, %"class.Polynomials::LagrangeEquidistant"** %201, align 8
  %202 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %203 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %204 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %203, i32 0, i32 0
  %205 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %204 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %205, i32 0, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %202, %"class.Polynomials::LagrangeEquidistant"** %206, align 8
  %207 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %208 = load i64, i64* %7, align 8
  %209 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %207, i64 %208
  %210 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  %211 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %210, i32 0, i32 0
  %212 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %211 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %213 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %212, i32 0, i32 2
  store %"class.Polynomials::LagrangeEquidistant"* %209, %"class.Polynomials::LagrangeEquidistant"** %213, align 8
  ret void

; <label>:214:                                    ; preds = %179
  %215 = load i8*, i8** %14, align 8
  %216 = load i32, i32* %15, align 4
  %217 = insertvalue { i8*, i32 } undef, i8* %215, 0
  %218 = insertvalue { i8*, i32 } %217, i32 %216, 1
  resume { i8*, i32 } %218

; <label>:219:                                    ; preds = %115
  %220 = landingpad { i8*, i32 }
          catch i8* null
  %221 = extractvalue { i8*, i32 } %220, 0
  call void @__clang_call_terminate(i8* %221) #12
  unreachable

; <label>:222:                                    ; preds = %originalBBpart216
  %223 = load i32, i32* @x.635
  %224 = load i32, i32* @y.636
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %222, %originalBB18alteredBB
  %231 = load i32, i32* @x.635
  %232 = load i32, i32* @y.636
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %57
  %239 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %56, align 8
  %240 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %241 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %242 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %79
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %119
  %243 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %244 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %245 = bitcast %"class.std::vector.73"* %17 to %"struct.std::_Vector_base.74"*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %141
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %162
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %222
  br label %originalBB18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE3endEv(%"class.std::vector.73"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.637
  %3 = load i32, i32* @y.638
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.140", align 8
  %11 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %11, align 8
  %12 = load %"class.std::vector.73"*, %"class.std::vector.73"** %11, align 8
  %13 = bitcast %"class.std::vector.73"* %12 to %"struct.std::_Vector_base.74"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %15, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.140"* %10, %"class.Polynomials::LagrangeEquidistant"** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %10, i32 0, i32 0
  %18 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %17, align 8
  %19 = load i32, i32* @x.637
  %20 = load i32, i32* @y.638
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::LagrangeEquidistant"* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.140", align 8
  %28 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %28, align 8
  %29 = load %"class.std::vector.73"*, %"class.std::vector.73"** %28, align 8
  %30 = bitcast %"class.std::vector.73"* %29 to %"struct.std::_Vector_base.74"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.140"* %27, %"class.Polynomials::LagrangeEquidistant"** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %27, i32 0, i32 0
  %35 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE9constructEPS2_RKS2_(%"class.__gnu_cxx::new_allocator.76"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  %8 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %9 = bitcast %"class.Polynomials::LagrangeEquidistant"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.Polynomials::LagrangeEquidistant"*
  %11 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  call void @_ZN11Polynomials19LagrangeEquidistantC2ERKS0_(%"class.Polynomials::LagrangeEquidistant"* %10, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials19LagrangeEquidistantC2ERKS0_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %5 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %6 = bitcast %"class.Polynomials::LagrangeEquidistant"* %5 to %"class.Polynomials::Polynomial"*
  %7 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %8 = bitcast %"class.Polynomials::LagrangeEquidistant"* %7 to %"class.Polynomials::Polynomial"*
  call void @_ZN11Polynomials10PolynomialIdEC2ERKS1_(%"class.Polynomials::Polynomial"* %6, %"class.Polynomials::Polynomial"* dereferenceable(48) %8)
  %9 = bitcast %"class.Polynomials::LagrangeEquidistant"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11Polynomials19LagrangeEquidistantE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %9, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials19LagrangeEquidistantD0Ev(%"class.Polynomials::LagrangeEquidistant"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %2, align 8
  %5 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %2, align 8
  invoke void @_ZN11Polynomials19LagrangeEquidistantD2Ev(%"class.Polynomials::LagrangeEquidistant"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = bitcast %"class.Polynomials::LagrangeEquidistant"* %5 to i8*
  call void @_ZdlPv(i8* %7) #14
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = bitcast %"class.Polynomials::LagrangeEquidistant"* %5 to i8*
  call void @_ZdlPv(i8* %12) #14
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

declare void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor*, %class.Subscriptor* dereferenceable(24)) unnamed_addr #3

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEEC2ERKS1_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.645
  %4 = load i32, i32* @y.646
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.0"*, align 8
  %12 = alloca %"class.std::vector.0"*, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %12, align 8
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %18 = bitcast %"class.std::vector.0"* %17 to %"struct.std::_Vector_base.1"*
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %20 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %19)
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %22 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %23 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %22)
  %24 = call dereferenceable(1) %"class.std::allocator.2"* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* dereferenceable(1) %23)
  call void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %18, i64 %20, %"class.std::allocator.2"* dereferenceable(1) %24)
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %26 = load i32, i32* @x.645
  %27 = load i32, i32* @y.646
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %34 = invoke double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %25)
          to label %35 unwind label %59

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %13, i32 0, i32 0
  store double* %34, double** %36, align 8
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %38 = invoke double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %37)
          to label %39 unwind label %59

; <label>:39:                                     ; preds = %35
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %16, i32 0, i32 0
  store double* %38, double** %40, align 8
  %41 = bitcast %"class.std::vector.0"* %17 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load double*, double** %44, align 8
  %46 = bitcast %"class.std::vector.0"* %17 to %"struct.std::_Vector_base.1"*
  %47 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %46)
          to label %48 unwind label %59

; <label>:48:                                     ; preds = %39
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %13, i32 0, i32 0
  %50 = load double*, double** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %16, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = invoke double* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E(double* %50, double* %52, double* %45, %"class.std::allocator.2"* dereferenceable(1) %47)
          to label %54 unwind label %59

; <label>:54:                                     ; preds = %48
  %55 = bitcast %"class.std::vector.0"* %17 to %"struct.std::_Vector_base.1"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %55, i32 0, i32 0
  %57 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %56 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %57, i32 0, i32 1
  store double* %53, double** %58, align 8
  ret void

; <label>:59:                                     ; preds = %48, %39, %35, %originalBBpart2
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %14, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %15, align 4
  %63 = bitcast %"class.std::vector.0"* %17 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.1"* %63)
          to label %64 unwind label %102

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* @x.645
  %66 = load i32, i32* @y.646
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %64, %originalBB1alteredBB
  %73 = load i32, i32* @x.645
  %74 = load i32, i32* @y.646
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %81

; <label>:81:                                     ; preds = %originalBBpart24
  %82 = load i32, i32* @x.645
  %83 = load i32, i32* @y.646
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %81, %originalBB6alteredBB
  %90 = load i8*, i8** %14, align 8
  %91 = load i32, i32* %15, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  %94 = load i32, i32* @x.645
  %95 = load i32, i32* @y.646
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  resume { i8*, i32 } %93

; <label>:102:                                    ; preds = %59
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  call void @__clang_call_terminate(i8* %104) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %2
  %105 = alloca %"class.std::vector.0"*, align 8
  %106 = alloca %"class.std::vector.0"*, align 8
  %107 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %108 = alloca i8*
  %109 = alloca i32
  %110 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %105, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %106, align 8
  %111 = load %"class.std::vector.0"*, %"class.std::vector.0"** %105, align 8
  %112 = bitcast %"class.std::vector.0"* %111 to %"struct.std::_Vector_base.1"*
  %113 = load %"class.std::vector.0"*, %"class.std::vector.0"** %106, align 8
  %114 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %113)
  %115 = load %"class.std::vector.0"*, %"class.std::vector.0"** %106, align 8
  %116 = bitcast %"class.std::vector.0"* %115 to %"struct.std::_Vector_base.1"*
  %117 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %116)
  %118 = call dereferenceable(1) %"class.std::allocator.2"* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* dereferenceable(1) %117)
  call void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %112, i64 %114, %"class.std::allocator.2"* dereferenceable(1) %118)
  %119 = load %"class.std::vector.0"*, %"class.std::vector.0"** %106, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %64
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %81
  %120 = load i8*, i8** %14, align 8
  %121 = load i32, i32* %15, align 4
  %122 = insertvalue { i8*, i32 } undef, i8* %120, 0
  %123 = insertvalue { i8*, i32 } %122, i32 %121, 1
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  ret %"class.std::allocator.2"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.649
  %3 = load i32, i32* @y.650
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %10, align 8
  %11 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %12 to %"class.std::allocator.2"*
  %14 = load i32, i32* @x.649
  %15 = load i32, i32* @y.650
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.2"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %22, align 8
  %23 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %24 to %"class.std::allocator.2"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.651
  %5 = load i32, i32* @y.652
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.1"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::allocator.2"*, align 8
  %15 = alloca i8*
  %16 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %12, align 8
  store i64 %1, i64* %13, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %14, align 8
  %17 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %12, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %19 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %14, align 8
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %18, %"class.std::allocator.2"* dereferenceable(1) %19)
  %20 = load i64, i64* %13, align 8
  %21 = load i32, i32* @x.651
  %22 = load i32, i32* @y.652
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %17, i64 %20)
          to label %29 unwind label %30

; <label>:29:                                     ; preds = %originalBBpart2
  ret void

; <label>:30:                                     ; preds = %originalBBpart2
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %15, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %16, align 4
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %18) #2
  br label %34

; <label>:34:                                     ; preds = %30
  %35 = load i8*, i8** %15, align 8
  %36 = load i32, i32* %16, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

originalBBalteredBB:                              ; preds = %originalBB, %3
  %39 = alloca %"struct.std::_Vector_base.1"*, align 8
  %40 = alloca i64, align 8
  %41 = alloca %"class.std::allocator.2"*, align 8
  %42 = alloca i8*
  %43 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %39, align 8
  store i64 %1, i64* %40, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %41, align 8
  %44 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %39, align 8
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %44, i32 0, i32 0
  %46 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %45, %"class.std::allocator.2"* dereferenceable(1) %46)
  %47 = load i64, i64* %40, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E(double*, double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %5, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %6, i32 0, i32 0
  store double* %1, double** %12, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load double*, double** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %9, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %10, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = call double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %19, double* %21, double* %17)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNKSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load double*, double** %9, align 8
  store double* %10, double** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.141"* %2, double** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %2, i32 0, i32 0
  %12 = load double*, double** %11, align 8
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNKSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.657
  %3 = load i32, i32* @y.658
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %11 = alloca %"class.std::vector.0"*, align 8
  %12 = alloca double*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %14 = bitcast %"class.std::vector.0"* %13 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 1
  %18 = load double*, double** %17, align 8
  store double* %18, double** %12, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.141"* %10, double** dereferenceable(8) %12)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %10, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = load i32, i32* @x.657
  %22 = load i32, i32* @y.658
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca double*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %33 = bitcast %"class.std::vector.0"* %32 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %34 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %35, i32 0, i32 1
  %37 = load double*, double** %36, align 8
  store double* %37, double** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.141"* %29, double** dereferenceable(8) %31)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %29, i32 0, i32 0
  %39 = load double*, double** %38, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load double*, double** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = ptrtoint double* %13 to i64
  %19 = ptrtoint double* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %5, double* %9, i64 %21)
          to label %22 unwind label %40

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.661
  %24 = load i32, i32* @y.662
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31) #2
  %32 = load i32, i32* @x.661
  %33 = load i32, i32* @y.662
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:40:                                     ; preds = %1
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %3, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %4, align 4
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %44) #2
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %22
  %50 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %50) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.663
  %4 = load i32, i32* @y.664
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %12 = alloca %"class.std::allocator.2"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %11, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %12, align 8
  %15 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %11, align 8
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"class.std::allocator.2"*
  %17 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %12, align 8
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.2"* %16, %"class.std::allocator.2"* dereferenceable(1) %17) #2
  %18 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %19 = load i32, i32* @x.663
  %20 = load i32, i32* @y.664
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %18)
          to label %27 unwind label %44

; <label>:27:                                     ; preds = %originalBBpart2
  %28 = load i32, i32* @x.663
  %29 = load i32, i32* @y.664
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* @x.663
  %37 = load i32, i32* @y.664
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

; <label>:44:                                     ; preds = %originalBBpart2
  %45 = load i32, i32* @x.663
  %46 = load i32, i32* @y.664
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %13, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %14, align 4
  %56 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %56) #2
  %57 = load i32, i32* @x.663
  %58 = load i32, i32* @y.664
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65

; <label>:65:                                     ; preds = %originalBBpart28
  %66 = load i8*, i8** %13, align 8
  %67 = load i32, i32* %14, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  resume { i8*, i32 } %69

originalBBalteredBB:                              ; preds = %originalBB, %2
  %70 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %71 = alloca %"class.std::allocator.2"*, align 8
  %72 = alloca i8*
  %73 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %70, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %71, align 8
  %74 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %70, align 8
  %75 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %74 to %"class.std::allocator.2"*
  %76 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %71, align 8
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.2"* %75, %"class.std::allocator.2"* dereferenceable(1) %76) #2
  %77 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %74 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %13, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %14, align 4
  %81 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %81) #2
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %9, i32 0, i32 0
  store double* %7, double** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %11 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %12, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %16 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %15 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %16, i32 0, i32 1
  store double* %14, double** %17, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds double, double* %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %24 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %25, i32 0, i32 2
  store double* %23, double** %26, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2ERKS_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 0
  store double* null, double** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 1
  store double* null, double** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %3, i32 0, i32 2
  store double* null, double** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdED2Ev(%"class.std::allocator.2"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.677
  %3 = load i32, i32* @y.678
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %10, align 8
  %12 = load i32, i32* @x.677
  %13 = load i32, i32* @y.678
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %9 to %"class.std::allocator.2"*
  %11 = load i64, i64* %4, align 8
  %12 = call double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi double* [ %12, %8 ], [ null, %13 ]
  ret double* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8allocateERS1_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret double* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.683
  %14 = load i32, i32* @y.684
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64, i64* %5, align 8
  %22 = mul i64 %21, 8
  %23 = call i8* @_Znwm(i64 %22)
  %24 = bitcast i8* %23 to double*
  %25 = load i32, i32* @x.683
  %26 = load i32, i32* @y.684
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %24

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i64, i64* %5, align 8
  %34 = mul i64 %33, 8
  %35 = call i8* @_Znwm(i64 %34)
  %36 = bitcast i8* %35 to double*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %4, i32 0, i32 0
  store double* %0, double** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %5, i32 0, i32 0
  store double* %1, double** %11, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load double*, double** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %8, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %9, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double* %18, double* %20, double* %16)
  ret double* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_(double*, double*, double*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load double*, double** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %7, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double* %17, double* %19, double* %15)
  ret double* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %4, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %5, i32 0, i32 0
  store double* %1, double** %12, align 8
  store double* %2, double** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %8, i32 0, i32 0
  %16 = load double*, double** %15, align 8
  %17 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %7, i32 0, i32 0
  store double* %17, double** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %10, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = call double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %9, i32 0, i32 0
  store double* %23, double** %24, align 8
  %25 = load double*, double** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %7, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %9, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = call double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double* %27, double* %29, double* %25)
  ret double* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.693
  %5 = load i32, i32* @y.694
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %14 = alloca double*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %12, i32 0, i32 0
  store double* %0, double** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %13, i32 0, i32 0
  store double* %1, double** %18, align 8
  store double* %2, double** %14, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %15 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %15, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %22)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %16 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %16, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %27)
  %29 = load double*, double** %14, align 8
  %30 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %29)
  %31 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %23, double* %28, double* %30)
  %32 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %14, double* %31)
  %33 = load i32, i32* @x.693
  %34 = load i32, i32* @y.694
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %43 = alloca double*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %41, i32 0, i32 0
  store double* %0, double** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %42, i32 0, i32 0
  store double* %1, double** %47, align 8
  store double* %2, double** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %44, i32 0, i32 0
  %51 = load double*, double** %50, align 8
  %52 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %45, i32 0, i32 0
  %56 = load double*, double** %55, align 8
  %57 = call double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double* %56)
  %58 = load double*, double** %43, align 8
  %59 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %58)
  %60 = call double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double* %52, double* %57, double* %59)
  %61 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %43, double* %60)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_(double*) #1 comdat {
  %2 = load i32, i32* @x.695
  %3 = load i32, i32* @y.696
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %11, i32 0, i32 0
  store double* %0, double** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %10 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %10, i32 0, i32 0
  %16 = load double*, double** %15, align 8
  %17 = load i32, i32* @x.695
  %18 = load i32, i32* @y.696
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %26, i32 0, i32 0
  store double* %0, double** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %25 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.141"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %25, i32 0, i32 0
  %31 = load double*, double** %30, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPKdPdET1_T0_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.697
  %5 = load i32, i32* @y.698
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i8, align 1
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load double*, double** %12, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %16, double* %17, double* %18)
  %20 = load i32, i32* @x.697
  %21 = load i32, i32* @y.698
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca double*, align 8
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca i8, align 1
  store double* %0, double** %28, align 8
  store double* %1, double** %29, align 8
  store double* %2, double** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load double*, double** %28, align 8
  %33 = load double*, double** %29, align 8
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %32, double* %33, double* %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(double*) #0 comdat {
  %2 = load i32, i32* @x.699
  %3 = load i32, i32* @y.700
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %10, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.141"* %10)
  %13 = load double*, double** %12, align 8
  %14 = load i32, i32* @x.699
  %15 = load i32, i32* @y.700
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.141", align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %22, i32 0, i32 0
  store double* %0, double** %23, align 8
  %24 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.141"* %22)
  %25 = load double*, double** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #1 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double*, double** %4, align 8
  %10 = ptrtoint double* %8 to i64
  %11 = ptrtoint double* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %3
  %17 = load double*, double** %6, align 8
  %18 = bitcast double* %17 to i8*
  %19 = load double*, double** %4, align 8
  %20 = bitcast double* %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 8, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %22, i32 8, i1 false)
  br label %23

; <label>:23:                                     ; preds = %16, %3
  %24 = load double*, double** %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.141"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.141"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.141"* %0, %"class.__gnu_cxx::__normal_iterator.141"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.141"*, %"class.__gnu_cxx::__normal_iterator.141"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %3, i32 0, i32 0
  ret double** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.141"*, double** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.141"*, align 8
  %4 = alloca double**, align 8
  store %"class.__gnu_cxx::__normal_iterator.141"* %0, %"class.__gnu_cxx::__normal_iterator.141"** %3, align 8
  store double** %1, double*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.141"*, %"class.__gnu_cxx::__normal_iterator.141"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.141", %"class.__gnu_cxx::__normal_iterator.141"* %5, i32 0, i32 0
  %7 = load double**, double*** %4, align 8
  %8 = load double*, double** %7, align 8
  store double* %8, double** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"*, double*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.707
  %5 = load i32, i32* @y.708
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.1"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %12, align 8
  store double* %1, double** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %12, align 8
  %16 = load double*, double** %13, align 8
  %17 = icmp ne double* %16, null
  %18 = load i32, i32* @x.707
  %19 = load i32, i32* @y.708
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %31

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %27 to %"class.std::allocator.2"*
  %29 = load double*, double** %13, align 8
  %30 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.2"* dereferenceable(1) %28, double* %29, i64 %30)
  br label %31

; <label>:31:                                     ; preds = %26, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca %"struct.std::_Vector_base.1"*, align 8
  %33 = alloca double*, align 8
  %34 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %32, align 8
  store double* %1, double** %33, align 8
  store i64 %2, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %32, align 8
  %36 = load double*, double** %33, align 8
  %37 = icmp ne double* %36, null
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE10deallocateERS1_Pdm(%"class.std::allocator.2"* dereferenceable(1), double*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.709
  %5 = load i32, i32* @y.710
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.2"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %12, align 8
  store double* %1, double** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %12, align 8
  %16 = bitcast %"class.std::allocator.2"* %15 to %"class.__gnu_cxx::new_allocator.3"*
  %17 = load double*, double** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.3"* %16, double* %17, i64 %18)
  %19 = load i32, i32* @x.709
  %20 = load i32, i32* @y.710
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.2"*, align 8
  %28 = alloca double*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %27, align 8
  store double* %1, double** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %27, align 8
  %31 = bitcast %"class.std::allocator.2"* %30 to %"class.__gnu_cxx::new_allocator.3"*
  %32 = load double*, double** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.3"* %31, double* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.3"*, double*, i64) #1 comdat align 2 {
  %4 = load i32, i32* @x.711
  %5 = load i32, i32* @y.712
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %12, align 8
  store double* %1, double** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %12, align 8
  %16 = load double*, double** %13, align 8
  %17 = bitcast double* %16 to i8*
  call void @_ZdlPv(i8* %17) #2
  %18 = load i32, i32* @x.711
  %19 = load i32, i32* @y.712
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %26 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %27 = alloca double*, align 8
  %28 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %26, align 8
  store double* %1, double** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %26, align 8
  %30 = load double*, double** %27, align 8
  %31 = bitcast double* %30 to i8*
  call void @_ZdlPv(i8* %31) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.73"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.73"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.73"*, %"class.std::vector.73"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE8max_sizeEv(%"class.std::vector.73"* %9)
  %11 = call i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE4sizeEv(%"class.std::vector.73"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %33

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.713
  %17 = load i32, i32* @y.714
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %24) #15
  %25 = load i32, i32* @x.713
  %26 = load i32, i32* @y.714
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:33:                                     ; preds = %3
  %34 = call i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE4sizeEv(%"class.std::vector.73"* %9)
  %35 = call i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE4sizeEv(%"class.std::vector.73"* %9)
  store i64 %35, i64* %8, align 8
  %36 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %34, %37
  store i64 %38, i64* %7, align 8
  %39 = load i64, i64* %7, align 8
  %40 = call i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE4sizeEv(%"class.std::vector.73"* %9)
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %33
  %43 = load i64, i64* %7, align 8
  %44 = call i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE8max_sizeEv(%"class.std::vector.73"* %9)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %48

; <label>:46:                                     ; preds = %42, %33
  %47 = call i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE8max_sizeEv(%"class.std::vector.73"* %9)
  br label %50

; <label>:48:                                     ; preds = %42
  %49 = load i64, i64* %7, align 8
  br label %50

; <label>:50:                                     ; preds = %48, %46
  %51 = phi i64 [ %47, %46 ], [ %49, %48 ]
  %52 = load i32, i32* @x.713
  %53 = load i32, i32* @y.714
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %60 = load i32, i32* @x.713
  %61 = load i32, i32* @y.714
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i64 %51

originalBBalteredBB:                              ; preds = %originalBB, %15
  %68 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %68) #15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.140"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.140"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.140"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.140"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.140"* %0, %"class.__gnu_cxx::__normal_iterator.140"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.140"* %1, %"class.__gnu_cxx::__normal_iterator.140"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.140"*, %"class.__gnu_cxx::__normal_iterator.140"** %3, align 8
  %6 = call dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.140"* %5)
  %7 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.140"*, %"class.__gnu_cxx::__normal_iterator.140"** %4, align 8
  %9 = call dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.140"* %8)
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %11 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %7 to i64
  %12 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 48
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE5beginEv(%"class.std::vector.73"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.717
  %3 = load i32, i32* @y.718
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.140", align 8
  %11 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %11, align 8
  %12 = load %"class.std::vector.73"*, %"class.std::vector.73"** %11, align 8
  %13 = bitcast %"class.std::vector.73"* %12 to %"struct.std::_Vector_base.74"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.140"* %10, %"class.Polynomials::LagrangeEquidistant"** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %10, i32 0, i32 0
  %18 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %17, align 8
  %19 = load i32, i32* @x.717
  %20 = load i32, i32* @y.718
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::LagrangeEquidistant"* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.140", align 8
  %28 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %28, align 8
  %29 = load %"class.std::vector.73"*, %"class.std::vector.73"** %28, align 8
  %30 = bitcast %"class.std::vector.73"* %29 to %"struct.std::_Vector_base.74"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %32, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.140"* %27, %"class.Polynomials::LagrangeEquidistant"** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %27, i32 0, i32 0
  %35 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZNSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.74"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.719
  %4 = load i32, i32* @y.720
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base.74"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.719
  %17 = load i32, i32* @y.720
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %45

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.719
  %26 = load i32, i32* @y.720
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %33 to %"class.std::allocator.75"*
  %35 = load i64, i64* %12, align 8
  %36 = call %"class.Polynomials::LagrangeEquidistant"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E8allocateERS3_m(%"class.std::allocator.75"* dereferenceable(1) %34, i64 %35)
  %37 = load i32, i32* @x.719
  %38 = load i32, i32* @y.720
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:45:                                     ; preds = %originalBBpart2
  br label %46

; <label>:46:                                     ; preds = %45, %originalBBpart24
  %47 = phi %"class.Polynomials::LagrangeEquidistant"* [ %36, %originalBBpart24 ], [ null, %45 ]
  ret %"class.Polynomials::LagrangeEquidistant"* %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"struct.std::_Vector_base.74"*, align 8
  %49 = alloca i64, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %48, align 8
  store i64 %1, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %48, align 8
  %51 = load i64, i64* %49, align 8
  %52 = icmp ne i64 %51, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %53 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %13, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %53 to %"class.std::allocator.75"*
  %55 = load i64, i64* %12, align 8
  %56 = call %"class.Polynomials::LagrangeEquidistant"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E8allocateERS3_m(%"class.std::allocator.75"* dereferenceable(1) %54, i64 %55)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZSt34__uninitialized_move_if_noexcept_aIPN11Polynomials19LagrangeEquidistantES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.std::allocator.75"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %7 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %8 = alloca %"class.std::allocator.75"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %7, align 8
  store %"class.std::allocator.75"* %3, %"class.std::allocator.75"** %8, align 8
  %9 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %11 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %7, align 8
  %12 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %8, align 8
  %13 = call %"class.Polynomials::LagrangeEquidistant"* @_ZSt22__uninitialized_copy_aIPN11Polynomials19LagrangeEquidistantES2_S1_ET0_T_S4_S3_RSaIT1_E(%"class.Polynomials::LagrangeEquidistant"* %9, %"class.Polynomials::LagrangeEquidistant"* %10, %"class.Polynomials::LagrangeEquidistant"* %11, %"class.std::allocator.75"* dereferenceable(1) %12)
  ret %"class.Polynomials::LagrangeEquidistant"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.140"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.140"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.140"* %0, %"class.__gnu_cxx::__normal_iterator.140"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.140"*, %"class.__gnu_cxx::__normal_iterator.140"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %3, i32 0, i32 0
  ret %"class.Polynomials::LagrangeEquidistant"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E7destroyERS3_PS2_(%"class.std::allocator.75"* dereferenceable(1), %"class.Polynomials::LagrangeEquidistant"*) #0 comdat align 2 {
  %3 = load i32, i32* @x.725
  %4 = load i32, i32* @y.726
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.75"*, align 8
  %12 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %11, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %13 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %11, align 8
  %14 = bitcast %"class.std::allocator.75"* %13 to %"class.__gnu_cxx::new_allocator.76"*
  %15 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE7destroyEPS2_(%"class.__gnu_cxx::new_allocator.76"* %14, %"class.Polynomials::LagrangeEquidistant"* %15)
  %16 = load i32, i32* @x.725
  %17 = load i32, i32* @y.726
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %"class.std::allocator.75"*, align 8
  %25 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %24, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %25, align 8
  %26 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %24, align 8
  %27 = bitcast %"class.std::allocator.75"* %26 to %"class.__gnu_cxx::new_allocator.76"*
  %28 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %25, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE7destroyEPS2_(%"class.__gnu_cxx::new_allocator.76"* %27, %"class.Polynomials::LagrangeEquidistant"* %28)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE8max_sizeEv(%"class.std::vector.73"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.727
  %3 = load i32, i32* @y.728
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %10, align 8
  %11 = load %"class.std::vector.73"*, %"class.std::vector.73"** %10, align 8
  %12 = bitcast %"class.std::vector.73"* %11 to %"struct.std::_Vector_base.74"*
  %13 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNKSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %12)
  %14 = call i64 @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.75"* dereferenceable(1) %13)
  %15 = load i32, i32* @x.727
  %16 = load i32, i32* @y.728
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %23, align 8
  %24 = load %"class.std::vector.73"*, %"class.std::vector.73"** %23, align 8
  %25 = bitcast %"class.std::vector.73"* %24 to %"struct.std::_Vector_base.74"*
  %26 = call dereferenceable(1) %"class.std::allocator.75"* @_ZNKSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"* %25)
  %27 = call i64 @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.75"* dereferenceable(1) %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE4sizeEv(%"class.std::vector.73"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.729
  %3 = load i32, i32* @y.730
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %10, align 8
  %11 = load %"class.std::vector.73"*, %"class.std::vector.73"** %10, align 8
  %12 = bitcast %"class.std::vector.73"* %11 to %"struct.std::_Vector_base.74"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %14, i32 0, i32 1
  %16 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  %17 = bitcast %"class.std::vector.73"* %11 to %"struct.std::_Vector_base.74"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %20, align 8
  %22 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %16 to i64
  %23 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 48
  %26 = load i32, i32* @x.729
  %27 = load i32, i32* @y.730
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.73"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %34, align 8
  %35 = load %"class.std::vector.73"*, %"class.std::vector.73"** %34, align 8
  %36 = bitcast %"class.std::vector.73"* %35 to %"struct.std::_Vector_base.74"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %38, i32 0, i32 1
  %40 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %39, align 8
  %41 = bitcast %"class.std::vector.73"* %35 to %"struct.std::_Vector_base.74"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %44, align 8
  %46 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %40 to i64
  %47 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %45 to i64
  %_ = sub i64 0, %46
  %gen = add i64 %_, %47
  %_1 = sub i64 0, %46
  %gen2 = add i64 %_1, %47
  %_3 = sub i64 0, %46
  %gen4 = add i64 %_3, %47
  %_5 = sub i64 %46, %47
  %gen6 = mul i64 %_5, %47
  %_7 = sub i64 0, %46
  %gen8 = add i64 %_7, %47
  %48 = sub i64 %46, %47
  %_9 = sub i64 0, %48
  %gen10 = add i64 %_9, 48
  %_11 = sub i64 %48, 48
  %gen12 = mul i64 %_11, 48
  %49 = sdiv exact i64 %48, 48
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.75"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator.75"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %2, align 8
  store i64 192153584101141162, i64* %3, align 8
  %5 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E8max_sizeERKS3_(%"class.std::allocator.75"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.75"* @_ZNKSt12_Vector_baseIN11Polynomials19LagrangeEquidistantESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.74"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.733
  %3 = load i32, i32* @y.734
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.74"*, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %10, align 8
  %11 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %12 to %"class.std::allocator.75"*
  %14 = load i32, i32* @x.733
  %15 = load i32, i32* @y.734
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.75"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.74"*, align 8
  store %"struct.std::_Vector_base.74"* %0, %"struct.std::_Vector_base.74"** %22, align 8
  %23 = load %"struct.std::_Vector_base.74"*, %"struct.std::_Vector_base.74"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %24 to %"class.std::allocator.75"*
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E8max_sizeERKS3_(%"class.std::allocator.75"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.75"*, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %2, align 8
  %3 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %2, align 8
  %4 = bitcast %"class.std::allocator.75"* %3 to %"class.__gnu_cxx::new_allocator.76"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.76"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.76"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.737
  %3 = load i32, i32* @y.738
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %10, align 8
  %12 = load i32, i32* @x.737
  %13 = load i32, i32* @y.738
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 192153584101141162

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.140"*, %"class.Polynomials::LagrangeEquidistant"** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.739
  %4 = load i32, i32* @y.740
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.140"*, align 8
  %12 = alloca %"class.Polynomials::LagrangeEquidistant"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.140"* %0, %"class.__gnu_cxx::__normal_iterator.140"** %11, align 8
  store %"class.Polynomials::LagrangeEquidistant"** %1, %"class.Polynomials::LagrangeEquidistant"*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.140"*, %"class.__gnu_cxx::__normal_iterator.140"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %13, i32 0, i32 0
  %15 = load %"class.Polynomials::LagrangeEquidistant"**, %"class.Polynomials::LagrangeEquidistant"*** %12, align 8
  %16 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %16, %"class.Polynomials::LagrangeEquidistant"** %14, align 8
  %17 = load i32, i32* @x.739
  %18 = load i32, i32* @y.740
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.140"*, align 8
  %26 = alloca %"class.Polynomials::LagrangeEquidistant"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.140"* %0, %"class.__gnu_cxx::__normal_iterator.140"** %25, align 8
  store %"class.Polynomials::LagrangeEquidistant"** %1, %"class.Polynomials::LagrangeEquidistant"*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.140"*, %"class.__gnu_cxx::__normal_iterator.140"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.140", %"class.__gnu_cxx::__normal_iterator.140"* %27, i32 0, i32 0
  %29 = load %"class.Polynomials::LagrangeEquidistant"**, %"class.Polynomials::LagrangeEquidistant"*** %26, align 8
  %30 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %29, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %30, %"class.Polynomials::LagrangeEquidistant"** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials19LagrangeEquidistantEES2_E8allocateERS3_m(%"class.std::allocator.75"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.75"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.75"* %0, %"class.std::allocator.75"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.75"*, %"class.std::allocator.75"** %3, align 8
  %6 = bitcast %"class.std::allocator.75"* %5 to %"class.__gnu_cxx::new_allocator.76"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.Polynomials::LagrangeEquidistant"* @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.76"* %6, i64 %7, i8* null)
  ret %"class.Polynomials::LagrangeEquidistant"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.76"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.76"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.743
  %13 = load i32, i32* @y.744
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  call void @_ZSt17__throw_bad_allocv() #15
  %20 = load i32, i32* @x.743
  %21 = load i32, i32* @y.744
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable

; <label>:28:                                     ; preds = %3
  %29 = load i64, i64* %5, align 8
  %30 = mul i64 %29, 48
  %31 = call i8* @_Znwm(i64 %30)
  %32 = bitcast i8* %31 to %"class.Polynomials::LagrangeEquidistant"*
  ret %"class.Polynomials::LagrangeEquidistant"* %32

originalBBalteredBB:                              ; preds = %originalBB, %11
  call void @_ZSt17__throw_bad_allocv() #15
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZSt22__uninitialized_copy_aIPN11Polynomials19LagrangeEquidistantES2_S1_ET0_T_S4_S3_RSaIT1_E(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.std::allocator.75"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %7 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %8 = alloca %"class.std::allocator.75"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %7, align 8
  store %"class.std::allocator.75"* %3, %"class.std::allocator.75"** %8, align 8
  %9 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %11 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %7, align 8
  %12 = call %"class.Polynomials::LagrangeEquidistant"* @_ZSt18uninitialized_copyIPN11Polynomials19LagrangeEquidistantES2_ET0_T_S4_S3_(%"class.Polynomials::LagrangeEquidistant"* %9, %"class.Polynomials::LagrangeEquidistant"* %10, %"class.Polynomials::LagrangeEquidistant"* %11)
  ret %"class.Polynomials::LagrangeEquidistant"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZSt18uninitialized_copyIPN11Polynomials19LagrangeEquidistantES2_ET0_T_S4_S3_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat {
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %5 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %6 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %7 = alloca i8, align 1
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %9 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %5, align 8
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %11 = call %"class.Polynomials::LagrangeEquidistant"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11Polynomials19LagrangeEquidistantES4_EET0_T_S6_S5_(%"class.Polynomials::LagrangeEquidistant"* %8, %"class.Polynomials::LagrangeEquidistant"* %9, %"class.Polynomials::LagrangeEquidistant"* %10)
  ret %"class.Polynomials::LagrangeEquidistant"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN11Polynomials19LagrangeEquidistantES4_EET0_T_S6_S5_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.749
  %5 = load i32, i32* @y.750
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %13 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %14 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %15 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %14, align 8
  %18 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %14, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %18, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  %19 = load i32, i32* @x.749
  %20 = load i32, i32* @y.750
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %53, %originalBBpart2
  %28 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %29 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %30 = icmp ne %"class.Polynomials::LagrangeEquidistant"* %28, %29
  br i1 %30, label %31, label %68

; <label>:31:                                     ; preds = %27
  %32 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  %33 = invoke %"class.Polynomials::LagrangeEquidistant"* @_ZSt11__addressofIN11Polynomials19LagrangeEquidistantEEPT_RS2_(%"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %32)
          to label %34 unwind label %58

; <label>:34:                                     ; preds = %31
  %35 = load i32, i32* @x.749
  %36 = load i32, i32* @y.750
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %44 = load i32, i32* @x.749
  %45 = load i32, i32* @y.750
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt10_ConstructIN11Polynomials19LagrangeEquidistantES1_EvPT_RKT0_(%"class.Polynomials::LagrangeEquidistant"* %33, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %43)
          to label %52 unwind label %58

; <label>:52:                                     ; preds = %originalBBpart24
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %55 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %54, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %55, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %56 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  %57 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %56, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %57, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  br label %27

; <label>:58:                                     ; preds = %originalBBpart24, %31
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %16, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %17, align 4
  br label %62

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %16, align 8
  %64 = call i8* @__cxa_begin_catch(i8* %63) #2
  %65 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %14, align 8
  %66 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  invoke void @_ZSt8_DestroyIPN11Polynomials19LagrangeEquidistantEEvT_S3_(%"class.Polynomials::LagrangeEquidistant"* %65, %"class.Polynomials::LagrangeEquidistant"* %66)
          to label %67 unwind label %86

; <label>:67:                                     ; preds = %62
  invoke void @__cxa_rethrow() #15
          to label %132 unwind label %86

; <label>:68:                                     ; preds = %27
  %69 = load i32, i32* @x.749
  %70 = load i32, i32* @y.750
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %68, %originalBB6alteredBB
  %77 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  %78 = load i32, i32* @x.749
  %79 = load i32, i32* @y.750
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret %"class.Polynomials::LagrangeEquidistant"* %77

; <label>:86:                                     ; preds = %67, %62
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %16, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %90 unwind label %129

; <label>:90:                                     ; preds = %86
  %91 = load i32, i32* @x.749
  %92 = load i32, i32* @y.750
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %90, %originalBB10alteredBB
  %99 = load i32, i32* @x.749
  %100 = load i32, i32* @y.750
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %108
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:108:                                    ; preds = %originalBBpart212
  %109 = load i32, i32* @x.749
  %110 = load i32, i32* @y.750
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %108, %originalBB14alteredBB
  %117 = load i8*, i8** %16, align 8
  %118 = load i32, i32* %17, align 4
  %119 = insertvalue { i8*, i32 } undef, i8* %117, 0
  %120 = insertvalue { i8*, i32 } %119, i32 %118, 1
  %121 = load i32, i32* @x.749
  %122 = load i32, i32* @y.750
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  resume { i8*, i32 } %120

; <label>:129:                                    ; preds = %86
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #12
  unreachable

; <label>:132:                                    ; preds = %67
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %133 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %134 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %135 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %136 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %137 = alloca i8*
  %138 = alloca i32
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %133, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %134, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %135, align 8
  %139 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %135, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %139, %"class.Polynomials::LagrangeEquidistant"** %136, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %140 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  %141 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %90
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %108
  %142 = load i8*, i8** %16, align 8
  %143 = load i32, i32* %17, align 4
  %144 = insertvalue { i8*, i32 } undef, i8* %142, 0
  %145 = insertvalue { i8*, i32 } %144, i32 %143, 1
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructIN11Polynomials19LagrangeEquidistantES1_EvPT_RKT0_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48)) #0 comdat {
  %3 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %5 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %3, align 8
  %6 = bitcast %"class.Polynomials::LagrangeEquidistant"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.Polynomials::LagrangeEquidistant"*
  %8 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  call void @_ZN11Polynomials19LagrangeEquidistantC2ERKS0_(%"class.Polynomials::LagrangeEquidistant"* %7, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials19LagrangeEquidistantEE7destroyEPS2_(%"class.__gnu_cxx::new_allocator.76"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.76"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.__gnu_cxx::new_allocator.76"* %0, %"class.__gnu_cxx::new_allocator.76"** %3, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.76"*, %"class.__gnu_cxx::new_allocator.76"** %3, align 8
  %6 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %7 = bitcast %"class.Polynomials::LagrangeEquidistant"* %6 to void (%"class.Polynomials::LagrangeEquidistant"*)***
  %8 = load void (%"class.Polynomials::LagrangeEquidistant"*)**, void (%"class.Polynomials::LagrangeEquidistant"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.Polynomials::LagrangeEquidistant"*)*, void (%"class.Polynomials::LagrangeEquidistant"*)** %8, i64 0
  %10 = load void (%"class.Polynomials::LagrangeEquidistant"*)*, void (%"class.Polynomials::LagrangeEquidistant"*)** %9, align 8
  call void %10(%"class.Polynomials::LagrangeEquidistant"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load double*, double** %5, align 8
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %7, double* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPdEvT_S1_(double*, double*) #0 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %3, align 8
  %6 = load double*, double** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %5, double* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double*, double*) #1 comdat align 2 {
  %3 = load i32, i32* @x.759
  %4 = load i32, i32* @y.760
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  store double* %0, double** %11, align 8
  store double* %1, double** %12, align 8
  %13 = load i32, i32* @x.759
  %14 = load i32, i32* @y.760
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %21 = alloca double*, align 8
  %22 = alloca double*, align 8
  store double* %0, double** %21, align 8
  store double* %1, double** %22, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE5beginEv(%"class.std::vector.73"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %3 = alloca %"class.std::vector.73"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %3, align 8
  %5 = load %"class.std::vector.73"*, %"class.std::vector.73"** %3, align 8
  %6 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %10, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.142"* %2, %"class.Polynomials::LagrangeEquidistant"** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %2, i32 0, i32 0
  %12 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %11, align 8
  ret %"class.Polynomials::LagrangeEquidistant"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::LagrangeEquidistant"* @_ZNKSt6vectorIN11Polynomials19LagrangeEquidistantESaIS1_EE3endEv(%"class.std::vector.73"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %3 = alloca %"class.std::vector.73"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.std::vector.73"* %0, %"class.std::vector.73"** %3, align 8
  %5 = load %"class.std::vector.73"*, %"class.std::vector.73"** %3, align 8
  %6 = bitcast %"class.std::vector.73"* %5 to %"struct.std::_Vector_base.74"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.74", %"struct.std::_Vector_base.74"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::LagrangeEquidistant, std::allocator<Polynomials::LagrangeEquidistant> >::_Vector_impl_data"* %8, i32 0, i32 1
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %10, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.142"* %2, %"class.Polynomials::LagrangeEquidistant"** dereferenceable(8) %4)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %2, i32 0, i32 0
  %12 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %11, align 8
  ret %"class.Polynomials::LagrangeEquidistant"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11Polynomials10PolynomialIdEEEC2Ev(%"class.std::allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEET_SE_RKS3_(%"class.std::vector"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %11 = alloca %"struct.std::__false_type", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %5, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %6, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %16 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %17 = bitcast %"class.std::vector"* %16 to %"struct.std::_Vector_base"*
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EEC2ERKS3_(%"struct.std::_Vector_base"* %17, %"class.std::allocator"* dereferenceable(1) %18)
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %9 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %10 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %9, i32 0, i32 0
  %24 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %10, i32 0, i32 0
  %26 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %25, align 8
  invoke void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEEvT_SE_St12__false_type(%"class.std::vector"* %16, %"class.Polynomials::LagrangeEquidistant"* %24, %"class.Polynomials::LagrangeEquidistant"* %26)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %4
  ret void

; <label>:28:                                     ; preds = %4
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %12, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %13, align 4
  %32 = bitcast %"class.std::vector"* %16 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %32)
          to label %33 unwind label %55

; <label>:33:                                     ; preds = %28
  %34 = load i32, i32* @x.767
  %35 = load i32, i32* @y.768
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %33, %originalBBalteredBB
  %42 = load i32, i32* @x.767
  %43 = load i32, i32* @y.768
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %50

; <label>:50:                                     ; preds = %originalBBpart2
  %51 = load i8*, i8** %12, align 8
  %52 = load i32, i32* %13, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

; <label>:55:                                     ; preds = %28
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %33
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.769
  %3 = load i32, i32* @y.770
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %10, align 8
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %10, align 8
  %12 = bitcast %"class.std::allocator"* %11 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEED2Ev(%"class.__gnu_cxx::new_allocator"* %12) #2
  %13 = load i32, i32* @x.769
  %14 = load i32, i32* @y.770
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %21, align 8
  %22 = load %"class.std::allocator"*, %"class.std::allocator"** %21, align 8
  %23 = bitcast %"class.std::allocator"* %22 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEED2Ev(%"class.__gnu_cxx::new_allocator"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZN24TensorProductPolynomialsILi3EE12x_to_the_dimEj(i32) #1 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 1, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %5

; <label>:5:                                      ; preds = %originalBBpart2, %1
  %6 = load i32, i32* %4, align 4
  %7 = icmp ult i32 %6, 3
  br i1 %7, label %8, label %31

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* %2, align 4
  %10 = load i32, i32* %3, align 4
  %11 = mul i32 %10, %9
  store i32 %11, i32* %3, align 4
  br label %12

; <label>:12:                                     ; preds = %8
  %13 = load i32, i32* @x.771
  %14 = load i32, i32* @y.772
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i32, i32* %4, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %4, align 4
  %23 = load i32, i32* @x.771
  %24 = load i32, i32* @y.772
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %5

; <label>:31:                                     ; preds = %5
  %32 = load i32, i32* %3, align 4
  ret i32 %32

originalBBalteredBB:                              ; preds = %originalBB, %12
  %33 = load i32, i32* %4, align 4
  %_ = shl i32 %33, 1
  %34 = add i32 %33, 1
  store i32 %34, i32* %4, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIjSaIjEEixEm(%"class.std::vector.5"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.142"*, %"class.Polynomials::LagrangeEquidistant"** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  %4 = alloca %"class.Polynomials::LagrangeEquidistant"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %3, align 8
  store %"class.Polynomials::LagrangeEquidistant"** %1, %"class.Polynomials::LagrangeEquidistant"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %5, i32 0, i32 0
  %7 = load %"class.Polynomials::LagrangeEquidistant"**, %"class.Polynomials::LagrangeEquidistant"*** %4, align 8
  %8 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %7, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %8, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.777
  %3 = load i32, i32* @y.778
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %10, align 8
  %12 = load i32, i32* @x.777
  %13 = load i32, i32* @y.778
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EEC2ERKS3_(%"struct.std::_Vector_base"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* @x.779
  %4 = load i32, i32* @y.780
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base"*, align 8
  %12 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %11, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %12, align 8
  %13 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %11, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %15 = load %"class.std::allocator"*, %"class.std::allocator"** %12, align 8
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %14, %"class.std::allocator"* dereferenceable(1) %15)
  %16 = load i32, i32* @x.779
  %17 = load i32, i32* @y.780
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca %"struct.std::_Vector_base"*, align 8
  %25 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %24, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %25, align 8
  %26 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %24, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %26, i32 0, i32 0
  %28 = load %"class.std::allocator"*, %"class.std::allocator"** %25, align 8
  call void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %27, %"class.std::allocator"* dereferenceable(1) %28)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEEvT_SE_St12__false_type(%"class.std::vector"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %6 = alloca %"struct.std::__false_type", align 1
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %10 = alloca %"struct.std::forward_iterator_tag", align 1
  %11 = alloca %"struct.std::random_access_iterator_tag", align 1
  %12 = alloca %"struct.std::random_access_iterator_tag", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %4, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %5, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %14, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  %15 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %9 to i8*
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSB_(%"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8) %4)
  %20 = bitcast %"struct.std::random_access_iterator_tag"* %11 to %"struct.std::forward_iterator_tag"*
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %8, i32 0, i32 0
  %22 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %9, i32 0, i32 0
  %24 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %23, align 8
  call void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEEvT_SE_St20forward_iterator_tag(%"class.std::vector"* %15, %"class.Polynomials::LagrangeEquidistant"* %22, %"class.Polynomials::LagrangeEquidistant"* %24)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %7 = load %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"*, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %7 to %"class.std::allocator"*
  %9 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_(%"class.std::allocator"* %8, %"class.std::allocator"* dereferenceable(1) %9) #2
  %10 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %10)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %7 to %"class.std::allocator"*
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %16) #2
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %"class.Polynomials::Polynomial"* null, %"class.Polynomials::Polynomial"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKNS0_19LagrangeEquidistantES_IS8_SaIS8_EEEEEEvT_SE_St20forward_iterator_tag(%"class.std::vector"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat align 2 {
  %4 = load i32, i32* @x.789
  %5 = load i32, i32* @y.790
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %14 = alloca %"struct.std::forward_iterator_tag", align 1
  %15 = alloca %"class.std::vector"*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %12, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %21, align 8
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %13, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %22, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %15, align 8
  %23 = load %"class.std::vector"*, %"class.std::vector"** %15, align 8
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %17 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %18 to i8*
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %17, i32 0, i32 0
  %29 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %18, i32 0, i32 0
  %31 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %30, align 8
  %32 = call i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESB_SB_(%"class.Polynomials::LagrangeEquidistant"* %29, %"class.Polynomials::LagrangeEquidistant"* %31)
  store i64 %32, i64* %16, align 8
  %33 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %34 = load i64, i64* %16, align 8
  %35 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %36 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %35)
  %37 = call i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %34, %"class.std::allocator"* dereferenceable(1) %36)
  %38 = call %"class.Polynomials::Polynomial"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %33, i64 %37)
  %39 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %39, i32 0, i32 0
  %41 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %40 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %41, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %38, %"class.Polynomials::Polynomial"** %42, align 8
  %43 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %44 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %45, i32 0, i32 0
  %47 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %46, align 8
  %48 = load i64, i64* %16, align 8
  %49 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %47, i64 %48
  %50 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %51 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %52, i32 0, i32 2
  store %"class.Polynomials::Polynomial"* %49, %"class.Polynomials::Polynomial"** %53, align 8
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %19 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %20 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %59 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %60, i32 0, i32 0
  %62 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %61, align 8
  %63 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %64 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %63)
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %19, i32 0, i32 0
  %66 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %65, align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %20, i32 0, i32 0
  %68 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %67, align 8
  %69 = call %"class.Polynomials::Polynomial"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEPNS2_10PolynomialIdEESB_ET0_T_SE_SD_RSaIT1_E(%"class.Polynomials::LagrangeEquidistant"* %66, %"class.Polynomials::LagrangeEquidistant"* %68, %"class.Polynomials::Polynomial"* %62, %"class.std::allocator"* dereferenceable(1) %64)
  %70 = bitcast %"class.std::vector"* %23 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %71 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %72, i32 0, i32 1
  store %"class.Polynomials::Polynomial"* %69, %"class.Polynomials::Polynomial"** %73, align 8
  %74 = load i32, i32* @x.789
  %75 = load i32, i32* @y.790
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %84 = alloca %"struct.std::forward_iterator_tag", align 1
  %85 = alloca %"class.std::vector"*, align 8
  %86 = alloca i64, align 8
  %87 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %82, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %91, align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %83, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %2, %"class.Polynomials::LagrangeEquidistant"** %92, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %85, align 8
  %93 = load %"class.std::vector"*, %"class.std::vector"** %85, align 8
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %87 to i8*
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 8, i1 false)
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %88 to i8*
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 8, i32 8, i1 false)
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %87, i32 0, i32 0
  %99 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %98, align 8
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %88, i32 0, i32 0
  %101 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %100, align 8
  %102 = call i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESB_SB_(%"class.Polynomials::LagrangeEquidistant"* %99, %"class.Polynomials::LagrangeEquidistant"* %101)
  store i64 %102, i64* %86, align 8
  %103 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %104 = load i64, i64* %86, align 8
  %105 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %106 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %105)
  %107 = call i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %104, %"class.std::allocator"* dereferenceable(1) %106)
  %108 = call %"class.Polynomials::Polynomial"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %103, i64 %107)
  %109 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %109, i32 0, i32 0
  %111 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %110 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %111, i32 0, i32 0
  store %"class.Polynomials::Polynomial"* %108, %"class.Polynomials::Polynomial"** %112, align 8
  %113 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %113, i32 0, i32 0
  %115 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %114 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %115, i32 0, i32 0
  %117 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %116, align 8
  %118 = load i64, i64* %86, align 8
  %119 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %117, i64 %118
  %120 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %120, i32 0, i32 0
  %122 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %121 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %122, i32 0, i32 2
  store %"class.Polynomials::Polynomial"* %119, %"class.Polynomials::Polynomial"** %123, align 8
  %124 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %89 to i8*
  %125 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %124, i8* %125, i64 8, i32 8, i1 false)
  %126 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %90 to i8*
  %127 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 8, i32 8, i1 false)
  %128 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %128, i32 0, i32 0
  %130 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %129 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %131 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %130, i32 0, i32 0
  %132 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %131, align 8
  %133 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %134 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %133)
  %135 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %89, i32 0, i32 0
  %136 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %135, align 8
  %137 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %90, i32 0, i32 0
  %138 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %137, align 8
  %139 = call %"class.Polynomials::Polynomial"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEPNS2_10PolynomialIdEESB_ET0_T_SE_SD_RSaIT1_E(%"class.Polynomials::LagrangeEquidistant"* %136, %"class.Polynomials::LagrangeEquidistant"* %138, %"class.Polynomials::Polynomial"* %132, %"class.std::allocator"* dereferenceable(1) %134)
  %140 = bitcast %"class.std::vector"* %93 to %"struct.std::_Vector_base"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %140, i32 0, i32 0
  %142 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %141 to %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data", %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl_data"* %142, i32 0, i32 1
  store %"class.Polynomials::Polynomial"* %139, %"class.Polynomials::Polynomial"** %143, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSB_(%"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8)) #1 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESB_SB_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %7 = alloca %"struct.std::random_access_iterator_tag", align 1
  %8 = alloca %"struct.std::random_access_iterator_tag", align 1
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %3, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %4, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %10, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %5 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSB_(%"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8) %3)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %5, i32 0, i32 0
  %16 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %6, i32 0, i32 0
  %18 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %17, align 8
  %19 = call i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESB_SB_St26random_access_iterator_tag(%"class.Polynomials::LagrangeEquidistant"* %16, %"class.Polynomials::LagrangeEquidistant"* %18)
  ret i64 %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZNSt12_Vector_baseIN11Polynomials10PolynomialIdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.795
  %4 = load i32, i32* @y.796
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"struct.std::_Vector_base"*, align 8
  %12 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %11, align 8
  %14 = load i64, i64* %12, align 8
  %15 = icmp ne i64 %14, 0
  %16 = load i32, i32* @x.795
  %17 = load i32, i32* @y.796
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %45

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.795
  %26 = load i32, i32* @y.796
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %33 to %"class.std::allocator"*
  %35 = load i64, i64* %12, align 8
  %36 = call %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8allocateERS4_m(%"class.std::allocator"* dereferenceable(1) %34, i64 %35)
  %37 = load i32, i32* @x.795
  %38 = load i32, i32* @y.796
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %46

; <label>:45:                                     ; preds = %originalBBpart2
  br label %46

; <label>:46:                                     ; preds = %45, %originalBBpart24
  %47 = phi %"class.Polynomials::Polynomial"* [ %36, %originalBBpart24 ], [ null, %45 ]
  ret %"class.Polynomials::Polynomial"* %47

originalBBalteredBB:                              ; preds = %originalBB, %2
  %48 = alloca %"struct.std::_Vector_base"*, align 8
  %49 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %48, align 8
  store i64 %1, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %48, align 8
  %51 = load i64, i64* %49, align 8
  %52 = icmp ne i64 %51, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %53 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %13, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<Polynomials::Polynomial<double>, std::allocator<Polynomials::Polynomial<double> > >::_Vector_impl"* %53 to %"class.std::allocator"*
  %55 = load i64, i64* %12, align 8
  %56 = call %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8allocateERS4_m(%"class.std::allocator"* dereferenceable(1) %54, i64 %55)
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::allocator", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %0, i64* %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_(%"class.std::allocator"* %5, %"class.std::allocator"* dereferenceable(1) %9) #2
  %10 = invoke i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator"* dereferenceable(1) %5)
          to label %11 unwind label %46

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.797
  %13 = load i32, i32* @y.798
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = icmp ugt i64 %8, %10
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %5) #2
  %21 = load i32, i32* @x.797
  %22 = load i32, i32* @y.798
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %66

; <label>:29:                                     ; preds = %originalBBpart2
  %30 = load i32, i32* @x.797
  %31 = load i32, i32* @y.798
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0)) #15
  %38 = load i32, i32* @x.797
  %39 = load i32, i32* @y.798
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable

; <label>:46:                                     ; preds = %2
  %47 = load i32, i32* @x.797
  %48 = load i32, i32* @y.798
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %6, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %7, align 4
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %5) #2
  %58 = load i32, i32* @x.797
  %59 = load i32, i32* @y.798
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68

; <label>:66:                                     ; preds = %originalBBpart2
  %67 = load i64, i64* %3, align 8
  ret i64 %67

; <label>:68:                                     ; preds = %originalBBpart28
  %69 = load i8*, i8** %6, align 8
  %70 = load i32, i32* %7, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  resume { i8*, i32 } %72

originalBBalteredBB:                              ; preds = %originalBB, %11
  %73 = icmp ugt i64 %8, %10
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %5) #2
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0)) #15
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %6, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %7, align 4
  call void @_ZNSaIN11Polynomials10PolynomialIdEEED2Ev(%"class.std::allocator"* %5) #2
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEPNS2_10PolynomialIdEESB_ET0_T_SE_SD_RSaIT1_E(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::Polynomial"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %7 = alloca %"class.Polynomials::Polynomial"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %5, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %6, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %9, i32 0, i32 0
  %19 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %10, i32 0, i32 0
  %21 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %20, align 8
  %22 = call %"class.Polynomials::Polynomial"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEPNS2_10PolynomialIdEEET0_T_SE_SD_(%"class.Polynomials::LagrangeEquidistant"* %19, %"class.Polynomials::LagrangeEquidistant"* %21, %"class.Polynomials::Polynomial"* %17)
  ret %"class.Polynomials::Polynomial"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEENSt15iterator_traitsIT_E15difference_typeESB_SB_St26random_access_iterator_tag(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %3, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %4, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %7, align 8
  %8 = call i64 @_ZN9__gnu_cxxmiIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8) %3)
  ret i64 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %1, %"class.__gnu_cxx::__normal_iterator.142"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %3, align 8
  %6 = call dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.142"* %5)
  %7 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %4, align 8
  %9 = call dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.142"* %8)
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %11 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %7 to i64
  %12 = ptrtoint %"class.Polynomials::LagrangeEquidistant"* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 48
  ret i64 %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.142"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.805
  %3 = load i32, i32* @y.806
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.805
  %14 = load i32, i32* @y.806
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::LagrangeEquidistant"** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8allocateERS4_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"class.Polynomials::Polynomial"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %7) #2
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 48
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to %"class.Polynomials::Polynomial"*
  ret %"class.Polynomials::Polynomial"* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 192153584101141162
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIN11Polynomials10PolynomialIdEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  store i64 192153584101141162, i64* %3, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %6 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8max_sizeERKS4_(%"class.std::allocator"* dereferenceable(1) %5)
  store i64 %6, i64* %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN11Polynomials10PolynomialIdEEEC2ERKS2_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIN11Polynomials10PolynomialIdEEES3_E8max_sizeERKS4_(%"class.std::allocator"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN11Polynomials10PolynomialIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS3_SaIS3_EEEEPNS2_10PolynomialIdEEET0_T_SE_SD_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::Polynomial"*) #0 comdat {
  %4 = load i32, i32* @x.819
  %5 = load i32, i32* @y.820
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %14 = alloca %"class.Polynomials::Polynomial"*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %12, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %13, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %19, align 8
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %14, align 8
  store i8 1, i8* %15, align 1
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %16 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %17 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %14, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %16, i32 0, i32 0
  %26 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %17, i32 0, i32 0
  %28 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %27, align 8
  %29 = call %"class.Polynomials::Polynomial"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS5_SaIS5_EEEEPNS4_10PolynomialIdEEEET0_T_SG_SF_(%"class.Polynomials::LagrangeEquidistant"* %26, %"class.Polynomials::LagrangeEquidistant"* %28, %"class.Polynomials::Polynomial"* %24)
  %30 = load i32, i32* @x.819
  %31 = load i32, i32* @y.820
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::Polynomial"* %29

originalBBalteredBB:                              ; preds = %originalBB, %3
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %40 = alloca %"class.Polynomials::Polynomial"*, align 8
  %41 = alloca i8, align 1
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %38, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %44, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %39, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %45, align 8
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %40, align 8
  store i8 1, i8* %41, align 1
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %42 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %43 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.142"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %40, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %42, i32 0, i32 0
  %52 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %43, i32 0, i32 0
  %54 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %53, align 8
  %55 = call %"class.Polynomials::Polynomial"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS5_SaIS5_EEEEPNS4_10PolynomialIdEEEET0_T_SG_SF_(%"class.Polynomials::LagrangeEquidistant"* %52, %"class.Polynomials::LagrangeEquidistant"* %54, %"class.Polynomials::Polynomial"* %50)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.Polynomials::Polynomial"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS5_SaIS5_EEEEPNS4_10PolynomialIdEEEET0_T_SG_SF_(%"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::Polynomial"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.142", align 8
  %6 = alloca %"class.Polynomials::Polynomial"*, align 8
  %7 = alloca %"class.Polynomials::Polynomial"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %4, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %0, %"class.Polynomials::LagrangeEquidistant"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %5, i32 0, i32 0
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %11, align 8
  store %"class.Polynomials::Polynomial"* %2, %"class.Polynomials::Polynomial"** %6, align 8
  %12 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %6, align 8
  store %"class.Polynomials::Polynomial"* %12, %"class.Polynomials::Polynomial"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %57, %3
  %14 = load i32, i32* @x.821
  %15 = load i32, i32* @y.822
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* @x.821
  %23 = load i32, i32* @y.822
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %30 = invoke zeroext i1 @_ZN9__gnu_cxxneIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8) %5)
          to label %31 unwind label %60

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i32, i32* @x.821
  %33 = load i32, i32* @y.822
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* @x.821
  %41 = load i32, i32* @y.822
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %30, label %48, label %86

; <label>:48:                                     ; preds = %originalBBpart24
  %49 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  %50 = invoke %"class.Polynomials::Polynomial"* @_ZSt11__addressofIN11Polynomials10PolynomialIdEEEPT_RS3_(%"class.Polynomials::Polynomial"* dereferenceable(48) %49)
          to label %51 unwind label %60

; <label>:51:                                     ; preds = %48
  %52 = invoke dereferenceable(48) %"class.Polynomials::LagrangeEquidistant"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.142"* %4)
          to label %53 unwind label %60

; <label>:53:                                     ; preds = %51
  invoke void @_ZSt10_ConstructIN11Polynomials10PolynomialIdEENS0_19LagrangeEquidistantEEvPT_RKT0_(%"class.Polynomials::Polynomial"* %50, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48) %52)
          to label %54 unwind label %60

; <label>:54:                                     ; preds = %53
  br label %55

; <label>:55:                                     ; preds = %54
  %56 = invoke dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.142"* @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.142"* %4)
          to label %57 unwind label %60

; <label>:57:                                     ; preds = %55
  %58 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  %59 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %58, i32 1
  store %"class.Polynomials::Polynomial"* %59, %"class.Polynomials::Polynomial"** %7, align 8
  br label %13

; <label>:60:                                     ; preds = %55, %53, %51, %48, %originalBBpart2
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %8, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %9, align 4
  br label %64

; <label>:64:                                     ; preds = %60
  %65 = load i8*, i8** %8, align 8
  %66 = call i8* @__cxa_begin_catch(i8* %65) #2
  %67 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %6, align 8
  %68 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  invoke void @_ZSt8_DestroyIPN11Polynomials10PolynomialIdEEEvT_S4_(%"class.Polynomials::Polynomial"* %67, %"class.Polynomials::Polynomial"* %68)
          to label %69 unwind label %88

; <label>:69:                                     ; preds = %64
  %70 = load i32, i32* @x.821
  %71 = load i32, i32* @y.822
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = load i32, i32* @x.821
  %79 = load i32, i32* @y.822
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @__cxa_rethrow() #15
          to label %118 unwind label %88

; <label>:86:                                     ; preds = %originalBBpart24
  %87 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %7, align 8
  ret %"class.Polynomials::Polynomial"* %87

; <label>:88:                                     ; preds = %originalBBpart28, %64
  %89 = load i32, i32* @x.821
  %90 = load i32, i32* @y.822
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %88, %originalBB10alteredBB
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %8, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %9, align 4
  %100 = load i32, i32* @x.821
  %101 = load i32, i32* @y.822
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  invoke void @__cxa_end_catch()
          to label %108 unwind label %115

; <label>:108:                                    ; preds = %originalBBpart212
  br label %110
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:110:                                    ; preds = %108
  %111 = load i8*, i8** %8, align 8
  %112 = load i32, i32* %9, align 4
  %113 = insertvalue { i8*, i32 } undef, i8* %111, 0
  %114 = insertvalue { i8*, i32 } %113, i32 %112, 1
  resume { i8*, i32 } %114

; <label>:115:                                    ; preds = %originalBBpart212
  %116 = landingpad { i8*, i32 }
          catch i8* null
  %117 = extractvalue { i8*, i32 } %116, 0
  call void @__clang_call_terminate(i8* %117) #12
  unreachable

; <label>:118:                                    ; preds = %originalBBpart28
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %88
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %8, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %9, align 4
  br label %originalBB10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.142"* dereferenceable(8)) #1 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %1, %"class.__gnu_cxx::__normal_iterator.142"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %3, align 8
  %6 = call dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.142"* %5)
  %7 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %4, align 8
  %9 = call dereferenceable(8) %"class.Polynomials::LagrangeEquidistant"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.142"* %8)
  %10 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %9, align 8
  %11 = icmp ne %"class.Polynomials::LagrangeEquidistant"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructIN11Polynomials10PolynomialIdEENS0_19LagrangeEquidistantEEvPT_RKT0_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::LagrangeEquidistant"* dereferenceable(48)) #0 comdat {
  %3 = load i32, i32* @x.825
  %4 = load i32, i32* @y.826
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.Polynomials::Polynomial"*, align 8
  %12 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %11, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %11, align 8
  %14 = bitcast %"class.Polynomials::Polynomial"* %13 to i8*
  %15 = bitcast i8* %14 to %"class.Polynomials::Polynomial"*
  %16 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %17 = bitcast %"class.Polynomials::LagrangeEquidistant"* %16 to %"class.Polynomials::Polynomial"*
  call void @_ZN11Polynomials10PolynomialIdEC2ERKS1_(%"class.Polynomials::Polynomial"* %15, %"class.Polynomials::Polynomial"* dereferenceable(48) %17)
  %18 = load i32, i32* @x.825
  %19 = load i32, i32* @y.826
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %"class.Polynomials::Polynomial"*, align 8
  %27 = alloca %"class.Polynomials::LagrangeEquidistant"*, align 8
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %26, align 8
  store %"class.Polynomials::LagrangeEquidistant"* %1, %"class.Polynomials::LagrangeEquidistant"** %27, align 8
  %28 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %26, align 8
  %29 = bitcast %"class.Polynomials::Polynomial"* %28 to i8*
  %30 = bitcast i8* %29 to %"class.Polynomials::Polynomial"*
  %31 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %27, align 8
  %32 = bitcast %"class.Polynomials::LagrangeEquidistant"* %31 to %"class.Polynomials::Polynomial"*
  call void @_ZN11Polynomials10PolynomialIdEC2ERKS1_(%"class.Polynomials::Polynomial"* %30, %"class.Polynomials::Polynomial"* dereferenceable(48) %32)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.Polynomials::LagrangeEquidistant"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.142"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.827
  %3 = load i32, i32* @y.828
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %11, i32 0, i32 0
  %13 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %12, align 8
  %14 = load i32, i32* @x.827
  %15 = load i32, i32* @y.828
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.Polynomials::LagrangeEquidistant"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %22, align 8
  %23 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %22, align 8
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %23, i32 0, i32 0
  %25 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %24, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.142"* @_ZN9__gnu_cxx17__normal_iteratorIPKN11Polynomials19LagrangeEquidistantESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.142"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.142"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.142"* %0, %"class.__gnu_cxx::__normal_iterator.142"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.142"*, %"class.__gnu_cxx::__normal_iterator.142"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.142", %"class.__gnu_cxx::__normal_iterator.142"* %3, i32 0, i32 0
  %5 = load %"class.Polynomials::LagrangeEquidistant"*, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  %6 = getelementptr inbounds %"class.Polynomials::LagrangeEquidistant", %"class.Polynomials::LagrangeEquidistant"* %5, i32 1
  store %"class.Polynomials::LagrangeEquidistant"* %6, %"class.Polynomials::LagrangeEquidistant"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.142"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11Polynomials10PolynomialIdEC2ERKS1_(%"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"* dereferenceable(48)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.Polynomials::Polynomial"*, align 8
  %4 = alloca %"class.Polynomials::Polynomial"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.Polynomials::Polynomial"* %0, %"class.Polynomials::Polynomial"** %3, align 8
  store %"class.Polynomials::Polynomial"* %1, %"class.Polynomials::Polynomial"** %4, align 8
  %7 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %3, align 8
  %8 = bitcast %"class.Polynomials::Polynomial"* %7 to %class.Subscriptor*
  %9 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  %10 = bitcast %"class.Polynomials::Polynomial"* %9 to %class.Subscriptor*
  call void @_ZN11SubscriptorC2ERKS_(%class.Subscriptor* %8, %class.Subscriptor* dereferenceable(24) %10)
  %11 = bitcast %"class.Polynomials::Polynomial"* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN11Polynomials10PolynomialIdEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %7, i32 0, i32 1
  %13 = load %"class.Polynomials::Polynomial"*, %"class.Polynomials::Polynomial"** %4, align 8
  %14 = getelementptr inbounds %"class.Polynomials::Polynomial", %"class.Polynomials::Polynomial"* %13, i32 0, i32 1
  invoke void @_ZNSt6vectorIdSaIdEEC2ERKS1_(%"class.std::vector.0"* %12, %"class.std::vector.0"* dereferenceable(24) %14)
          to label %15 unwind label %16

; <label>:15:                                     ; preds = %2
  ret void

; <label>:16:                                     ; preds = %2
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %5, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %6, align 4
  %20 = bitcast %"class.Polynomials::Polynomial"* %7 to %class.Subscriptor*
  invoke void @_ZN11SubscriptorD2Ev(%class.Subscriptor* %20)
          to label %21 unwind label %43

; <label>:21:                                     ; preds = %16
  %22 = load i32, i32* @x.831
  %23 = load i32, i32* @y.832
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i32, i32* @x.831
  %31 = load i32, i32* @y.832
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %38

; <label>:38:                                     ; preds = %originalBBpart2
  %39 = load i8*, i8** %5, align 8
  %40 = load i32, i32* %6, align 4
  %41 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  resume { i8*, i32 } %42

; <label>:43:                                     ; preds = %16
  %44 = landingpad { i8*, i32 }
          catch i8* null
  %45 = extractvalue { i8*, i32 } %44, 0
  call void @__clang_call_terminate(i8* %45) #12
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %21
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = ptrtoint i32* %8 to i64
  %15 = ptrtoint i32* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 4
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(%"class.std::vector.5"*, i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.143", align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.143", align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.143", align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %5, i32 0, i32 0
  store i32* %1, i32** %20, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32* %3, i32** %8, align 8
  %21 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %389

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load i32*, i32** %28, align 8
  %30 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = ptrtoint i32* %29 to i64
  %36 = ptrtoint i32* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 4
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %136

; <label>:41:                                     ; preds = %24
  %42 = load i32*, i32** %8, align 8
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %9, align 4
  %44 = call i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"* %21)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %11, i32 0, i32 0
  store i32* %44, i32** %45, align 8
  %46 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.143"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.143"* dereferenceable(8) %5)
  store i64 %46, i64* %10, align 8
  %47 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %49, i32 0, i32 1
  %51 = load i32*, i32** %50, align 8
  store i32* %51, i32** %12, align 8
  %52 = load i64, i64* %10, align 8
  %53 = load i64, i64* %7, align 8
  %54 = icmp ugt i64 %52, %53
  br i1 %54, label %55, label %98

; <label>:55:                                     ; preds = %41
  %56 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %56, i32 0, i32 0
  %58 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %57 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %58, i32 0, i32 1
  %60 = load i32*, i32** %59, align 8
  %61 = load i64, i64* %7, align 8
  %62 = sub i64 0, %61
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %65 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %66, i32 0, i32 1
  %68 = load i32*, i32** %67, align 8
  %69 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %70 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %71, i32 0, i32 1
  %73 = load i32*, i32** %72, align 8
  %74 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %75 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %74)
  %76 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %63, i32* %68, i32* %73, %"class.std::allocator.7"* dereferenceable(1) %75)
  %77 = load i64, i64* %7, align 8
  %78 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %80 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %79 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %80, i32 0, i32 1
  %82 = load i32*, i32** %81, align 8
  %83 = getelementptr inbounds i32, i32* %82, i64 %77
  store i32* %83, i32** %81, align 8
  %84 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %5)
  %85 = load i32*, i32** %84, align 8
  %86 = load i32*, i32** %12, align 8
  %87 = load i64, i64* %7, align 8
  %88 = sub i64 0, %87
  %89 = getelementptr inbounds i32, i32* %86, i64 %88
  %90 = load i32*, i32** %12, align 8
  %91 = call i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32* %85, i32* %89, i32* %90)
  %92 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %5)
  %93 = load i32*, i32** %92, align 8
  %94 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %5)
  %95 = load i32*, i32** %94, align 8
  %96 = load i64, i64* %7, align 8
  %97 = getelementptr inbounds i32, i32* %95, i64 %96
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %93, i32* %97, i32* dereferenceable(4) %9)
  br label %135

; <label>:98:                                     ; preds = %41
  %99 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %99, i32 0, i32 0
  %101 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %100 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %101, i32 0, i32 1
  %103 = load i32*, i32** %102, align 8
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %10, align 8
  %106 = sub i64 %104, %105
  %107 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %108 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %107)
  %109 = call i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %103, i64 %106, i32* dereferenceable(4) %9, %"class.std::allocator.7"* dereferenceable(1) %108)
  %110 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %111 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %110, i32 0, i32 0
  %112 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %111 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %113 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %112, i32 0, i32 1
  store i32* %109, i32** %113, align 8
  %114 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %5)
  %115 = load i32*, i32** %114, align 8
  %116 = load i32*, i32** %12, align 8
  %117 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %117, i32 0, i32 0
  %119 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %118 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %120 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %119, i32 0, i32 1
  %121 = load i32*, i32** %120, align 8
  %122 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %123 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %122)
  %124 = call i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %115, i32* %116, i32* %121, %"class.std::allocator.7"* dereferenceable(1) %123)
  %125 = load i64, i64* %10, align 8
  %126 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %126, i32 0, i32 0
  %128 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %127 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %128, i32 0, i32 1
  %130 = load i32*, i32** %129, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 %125
  store i32* %131, i32** %129, align 8
  %132 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %5)
  %133 = load i32*, i32** %132, align 8
  %134 = load i32*, i32** %12, align 8
  call void @_ZSt4fillIPjjEvT_S1_RKT0_(i32* %133, i32* %134, i32* dereferenceable(4) %9)
  br label %135

; <label>:135:                                    ; preds = %98, %55
  br label %372

; <label>:136:                                    ; preds = %24
  %137 = load i64, i64* %7, align 8
  %138 = call i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector.5"* %21, i64 %137, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %138, i64* %13, align 8
  %139 = call i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.5"* %21)
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %15, i32 0, i32 0
  store i32* %139, i32** %140, align 8
  %141 = call i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.143"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.143"* dereferenceable(8) %15)
  store i64 %141, i64* %14, align 8
  %142 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %143 = load i64, i64* %13, align 8
  %144 = call i32* @_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %142, i64 %143)
  store i32* %144, i32** %16, align 8
  %145 = load i32*, i32** %16, align 8
  store i32* %145, i32** %17, align 8
  %146 = load i32*, i32** %16, align 8
  %147 = load i64, i64* %14, align 8
  %148 = getelementptr inbounds i32, i32* %146, i64 %147
  %149 = load i64, i64* %7, align 8
  %150 = load i32*, i32** %8, align 8
  %151 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %152 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %151)
          to label %153 unwind label %219

; <label>:153:                                    ; preds = %136
  %154 = load i32, i32* @x.835
  %155 = load i32, i32* @y.836
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %153, %originalBBalteredBB
  %162 = load i32, i32* @x.835
  %163 = load i32, i32* @y.836
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  %170 = invoke i32* @_ZSt24__uninitialized_fill_n_aIPjmjjET_S1_T0_RKT1_RSaIT2_E(i32* %148, i64 %149, i32* dereferenceable(4) %150, %"class.std::allocator.7"* dereferenceable(1) %152)
          to label %171 unwind label %219

; <label>:171:                                    ; preds = %originalBBpart2
  store i32* null, i32** %17, align 8
  %172 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %172, i32 0, i32 0
  %174 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %173 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %174, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = invoke dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %5)
          to label %178 unwind label %219

; <label>:178:                                    ; preds = %171
  %179 = load i32*, i32** %177, align 8
  %180 = load i32*, i32** %16, align 8
  %181 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %182 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %181)
          to label %183 unwind label %219

; <label>:183:                                    ; preds = %178
  %184 = load i32, i32* @x.835
  %185 = load i32, i32* @y.836
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %183, %originalBB1alteredBB
  %192 = load i32, i32* @x.835
  %193 = load i32, i32* @y.836
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  %200 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %176, i32* %179, i32* %180, %"class.std::allocator.7"* dereferenceable(1) %182)
          to label %201 unwind label %219

; <label>:201:                                    ; preds = %originalBBpart24
  store i32* %200, i32** %17, align 8
  %202 = load i64, i64* %7, align 8
  %203 = load i32*, i32** %17, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 %202
  store i32* %204, i32** %17, align 8
  %205 = invoke dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %5)
          to label %206 unwind label %219

; <label>:206:                                    ; preds = %201
  %207 = load i32*, i32** %205, align 8
  %208 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %209 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %208, i32 0, i32 0
  %210 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %209 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %211 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %210, i32 0, i32 1
  %212 = load i32*, i32** %211, align 8
  %213 = load i32*, i32** %17, align 8
  %214 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %215 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %214)
          to label %216 unwind label %219

; <label>:216:                                    ; preds = %206
  %217 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32* %207, i32* %212, i32* %213, %"class.std::allocator.7"* dereferenceable(1) %215)
          to label %218 unwind label %219

; <label>:218:                                    ; preds = %216
  store i32* %217, i32** %17, align 8
  br label %322

; <label>:219:                                    ; preds = %216, %206, %201, %originalBBpart24, %178, %171, %originalBBpart2, %136
  %220 = landingpad { i8*, i32 }
          catch i8* null
  %221 = extractvalue { i8*, i32 } %220, 0
  store i8* %221, i8** %18, align 8
  %222 = extractvalue { i8*, i32 } %220, 1
  store i32 %222, i32* %19, align 4
  br label %223

; <label>:223:                                    ; preds = %219
  %224 = load i8*, i8** %18, align 8
  %225 = call i8* @__cxa_begin_catch(i8* %224) #2
  %226 = load i32*, i32** %17, align 8
  %227 = icmp ne i32* %226, null
  br i1 %227, label %277, label %228

; <label>:228:                                    ; preds = %223
  %229 = load i32*, i32** %16, align 8
  %230 = load i64, i64* %14, align 8
  %231 = getelementptr inbounds i32, i32* %229, i64 %230
  %232 = load i32*, i32** %16, align 8
  %233 = load i64, i64* %14, align 8
  %234 = getelementptr inbounds i32, i32* %232, i64 %233
  %235 = load i64, i64* %7, align 8
  %236 = getelementptr inbounds i32, i32* %234, i64 %235
  %237 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %238 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %237)
          to label %239 unwind label %273

; <label>:239:                                    ; preds = %228
  %240 = load i32, i32* @x.835
  %241 = load i32, i32* @y.836
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %239, %originalBB6alteredBB
  %248 = load i32, i32* @x.835
  %249 = load i32, i32* @y.836
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %231, i32* %236, %"class.std::allocator.7"* dereferenceable(1) %238)
          to label %256 unwind label %273

; <label>:256:                                    ; preds = %originalBBpart28
  %257 = load i32, i32* @x.835
  %258 = load i32, i32* @y.836
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %256, %originalBB10alteredBB
  %265 = load i32, i32* @x.835
  %266 = load i32, i32* @y.836
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %300

; <label>:273:                                    ; preds = %304, %300, %originalBBpart216, %277, %originalBBpart28, %228
  %274 = landingpad { i8*, i32 }
          cleanup
  %275 = extractvalue { i8*, i32 } %274, 0
  store i8* %275, i8** %18, align 8
  %276 = extractvalue { i8*, i32 } %274, 1
  store i32 %276, i32* %19, align 4
  invoke void @__cxa_end_catch()
          to label %305 unwind label %411

; <label>:277:                                    ; preds = %223
  %278 = load i32*, i32** %16, align 8
  %279 = load i32*, i32** %17, align 8
  %280 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %281 = invoke dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %280)
          to label %282 unwind label %273

; <label>:282:                                    ; preds = %277
  %283 = load i32, i32* @x.835
  %284 = load i32, i32* @y.836
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %282, %originalBB14alteredBB
  %291 = load i32, i32* @x.835
  %292 = load i32, i32* @y.836
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  invoke void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %278, i32* %279, %"class.std::allocator.7"* dereferenceable(1) %281)
          to label %299 unwind label %273

; <label>:299:                                    ; preds = %originalBBpart216
  br label %300

; <label>:300:                                    ; preds = %299, %originalBBpart212
  %301 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %302 = load i32*, i32** %16, align 8
  %303 = load i64, i64* %13, align 8
  invoke void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.6"* %301, i32* %302, i64 %303)
          to label %304 unwind label %273

; <label>:304:                                    ; preds = %300
  invoke void @__cxa_rethrow() #15
          to label %414 unwind label %273

; <label>:305:                                    ; preds = %273
  %306 = load i32, i32* @x.835
  %307 = load i32, i32* @y.836
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %305, %originalBB18alteredBB
  %314 = load i32, i32* @x.835
  %315 = load i32, i32* @y.836
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %390

; <label>:322:                                    ; preds = %218
  %323 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %323, i32 0, i32 0
  %325 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %324 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %325, i32 0, i32 0
  %327 = load i32*, i32** %326, align 8
  %328 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %329 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %328, i32 0, i32 0
  %330 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %329 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %331 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %330, i32 0, i32 1
  %332 = load i32*, i32** %331, align 8
  %333 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %334 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %333)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %327, i32* %332, %"class.std::allocator.7"* dereferenceable(1) %334)
  %335 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %336 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %337 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %336, i32 0, i32 0
  %338 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %337 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %338, i32 0, i32 0
  %340 = load i32*, i32** %339, align 8
  %341 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %342 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %341, i32 0, i32 0
  %343 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %342 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %343, i32 0, i32 2
  %345 = load i32*, i32** %344, align 8
  %346 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %347 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %346, i32 0, i32 0
  %348 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %347 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %349 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %348, i32 0, i32 0
  %350 = load i32*, i32** %349, align 8
  %351 = ptrtoint i32* %345 to i64
  %352 = ptrtoint i32* %350 to i64
  %353 = sub i64 %351, %352
  %354 = sdiv exact i64 %353, 4
  call void @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm(%"struct.std::_Vector_base.6"* %335, i32* %340, i64 %354)
  %355 = load i32*, i32** %16, align 8
  %356 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %357 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %356, i32 0, i32 0
  %358 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %357 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %358, i32 0, i32 0
  store i32* %355, i32** %359, align 8
  %360 = load i32*, i32** %17, align 8
  %361 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %361, i32 0, i32 0
  %363 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %362 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %364 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %363, i32 0, i32 1
  store i32* %360, i32** %364, align 8
  %365 = load i32*, i32** %16, align 8
  %366 = load i64, i64* %13, align 8
  %367 = getelementptr inbounds i32, i32* %365, i64 %366
  %368 = bitcast %"class.std::vector.5"* %21 to %"struct.std::_Vector_base.6"*
  %369 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %368, i32 0, i32 0
  %370 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %369 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %371 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %370, i32 0, i32 2
  store i32* %367, i32** %371, align 8
  br label %372

; <label>:372:                                    ; preds = %322, %135
  %373 = load i32, i32* @x.835
  %374 = load i32, i32* @y.836
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %372, %originalBB22alteredBB
  %381 = load i32, i32* @x.835
  %382 = load i32, i32* @y.836
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %389

; <label>:389:                                    ; preds = %originalBBpart224, %4
  ret void

; <label>:390:                                    ; preds = %originalBBpart220
  %391 = load i32, i32* @x.835
  %392 = load i32, i32* @y.836
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %390, %originalBB26alteredBB
  %399 = load i8*, i8** %18, align 8
  %400 = load i32, i32* %19, align 4
  %401 = insertvalue { i8*, i32 } undef, i8* %399, 0
  %402 = insertvalue { i8*, i32 } %401, i32 %400, 1
  %403 = load i32, i32* @x.835
  %404 = load i32, i32* @y.836
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  resume { i8*, i32 } %402

; <label>:411:                                    ; preds = %273
  %412 = landingpad { i8*, i32 }
          catch i8* null
  %413 = extractvalue { i8*, i32 } %412, 0
  call void @__clang_call_terminate(i8* %413) #12
  unreachable

; <label>:414:                                    ; preds = %304
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %153
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %183
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %239
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %256
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %282
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %305
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %372
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %390
  %415 = load i8*, i8** %18, align 8
  %416 = load i32, i32* %19, align 4
  %417 = insertvalue { i8*, i32 } undef, i8* %415, 0
  %418 = insertvalue { i8*, i32 } %417, i32 %416, 1
  br label %originalBB26
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE3endEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.837
  %3 = load i32, i32* @y.838
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.143", align 8
  %11 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %11, align 8
  %12 = load %"class.std::vector.5"*, %"class.std::vector.5"** %11, align 8
  %13 = bitcast %"class.std::vector.5"* %12 to %"struct.std::_Vector_base.6"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %15, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.143"* %10, i32** dereferenceable(8) %16)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %10, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* @x.837
  %20 = load i32, i32* @y.838
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32* %18

originalBBalteredBB:                              ; preds = %originalBB, %1
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.143", align 8
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %30 = bitcast %"class.std::vector.5"* %29 to %"struct.std::_Vector_base.6"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.143"* %27, i32** dereferenceable(8) %33)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %27, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj(%"class.std::vector.5"*, i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %7 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = load i32*, i32** %4, align 8
  %13 = ptrtoint i32* %11 to i64
  %14 = ptrtoint i32* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 4
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %33

; <label>:19:                                     ; preds = %2
  %20 = load i32*, i32** %4, align 8
  %21 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %21, i32 0, i32 0
  %23 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %22 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %23, i32 0, i32 1
  %25 = load i32*, i32** %24, align 8
  %26 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %27 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %26)
  call void @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E(i32* %20, i32* %25, %"class.std::allocator.7"* dereferenceable(1) %27)
  %28 = load i32*, i32** %4, align 8
  %29 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %30 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %31, i32 0, i32 1
  store i32* %28, i32** %32, align 8
  br label %33

; <label>:33:                                     ; preds = %19, %2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPjSt6vectorIjSaIjEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.143"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.143"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.143"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.143"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.143"* %0, %"class.__gnu_cxx::__normal_iterator.143"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.143"* %1, %"class.__gnu_cxx::__normal_iterator.143"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.143"*, %"class.__gnu_cxx::__normal_iterator.143"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %5)
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.143"*, %"class.__gnu_cxx::__normal_iterator.143"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"* %8)
  %10 = load i32*, i32** %9, align 8
  %11 = ptrtoint i32* %7 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 4
  ret i64 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_move_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %13 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %9, i32* %10, i32* %11, %"class.std::allocator.7"* dereferenceable(1) %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13copy_backwardIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.143"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.143"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.143"* %0, %"class.__gnu_cxx::__normal_iterator.143"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.143"*, %"class.__gnu_cxx::__normal_iterator.143"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPjjEvT_S1_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %8, i32* %10, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc(%"class.std::vector.5"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.5"* %9)
  %11 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %9)
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #15
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %9)
  %19 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %9)
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorIjSaIjEE4sizeEv(%"class.std::vector.5"* %9)
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

; <label>:26:                                     ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.5"* %9)
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %32

; <label>:30:                                     ; preds = %26, %17
  %31 = call i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.5"* %9)
  br label %50

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* @x.851
  %34 = load i32, i32* @y.852
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = load i64, i64* %7, align 8
  %42 = load i32, i32* @x.851
  %43 = load i32, i32* @y.852
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %50

; <label>:50:                                     ; preds = %originalBBpart2, %30
  %51 = phi i64 [ %31, %30 ], [ %41, %originalBBpart2 ]
  %52 = load i32, i32* @x.851
  %53 = load i32, i32* @y.852
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  %60 = load i32, i32* @x.851
  %61 = load i32, i32* @y.852
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i64 %51

originalBBalteredBB:                              ; preds = %originalBB, %32
  %68 = load i64, i64* %7, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt6vectorIjSaIjEE5beginEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.143", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.143"* %2, i32** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPjS0_SaIjEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %13 = call i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32* %9, i32* %10, i32* %11, %"class.std::allocator.7"* dereferenceable(1) %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIPjS0_jET0_T_S2_S1_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32* %9, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPjS2_EET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32* %7, i32* %8, i32* %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIPjS0_ET0_T_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  %14 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %6, i32* %13)
  ret i32* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIPjET_S1_(i32*) #1 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #1 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = ptrtoint i32* %8 to i64
  %11 = ptrtoint i32* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 4
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %3
  %17 = load i32*, i32** %6, align 8
  %18 = bitcast i32* %17 to i8*
  %19 = load i32*, i32** %4, align 8
  %20 = bitcast i32* %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 4, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %22, i32 4, i1 false)
  br label %23

; <label>:23:                                     ; preds = %16, %3
  %24 = load i32*, i32** %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt23__copy_move_backward_a2ILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPjET_S1_(i32* %11)
  %13 = call i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  %14 = call i32* @_ZSt12__niter_wrapIPjET_RKS1_S1_(i32** dereferenceable(8) %6, i32* %13)
  ret i32* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__copy_move_backward_aILb0EPjS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIjEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #1 comdat align 2 {
  %4 = load i32, i32* @x.877
  %5 = load i32, i32* @y.878
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i64, align 8
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %16 = load i32*, i32** %13, align 8
  %17 = load i32*, i32** %12, align 8
  %18 = ptrtoint i32* %16 to i64
  %19 = ptrtoint i32* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 4
  store i64 %21, i64* %15, align 8
  %22 = load i64, i64* %15, align 8
  %23 = icmp ne i64 %22, 0
  %24 = load i32, i32* @x.877
  %25 = load i32, i32* @y.878
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %42

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32*, i32** %14, align 8
  %34 = load i64, i64* %15, align 8
  %35 = sub i64 0, %34
  %36 = getelementptr inbounds i32, i32* %33, i64 %35
  %37 = bitcast i32* %36 to i8*
  %38 = load i32*, i32** %12, align 8
  %39 = bitcast i32* %38 to i8*
  %40 = load i64, i64* %15, align 8
  %41 = mul i64 4, %40
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %37, i8* %39, i64 %41, i32 4, i1 false)
  br label %42

; <label>:42:                                     ; preds = %32, %originalBBpart2
  %43 = load i32*, i32** %14, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 0, %44
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  ret i32* %46

originalBBalteredBB:                              ; preds = %originalBB, %3
  %47 = alloca i32*, align 8
  %48 = alloca i32*, align 8
  %49 = alloca i32*, align 8
  %50 = alloca i64, align 8
  store i32* %0, i32** %47, align 8
  store i32* %1, i32** %48, align 8
  store i32* %2, i32** %49, align 8
  %51 = load i32*, i32** %48, align 8
  %52 = load i32*, i32** %47, align 8
  %53 = ptrtoint i32* %51 to i64
  %54 = ptrtoint i32* %52 to i64
  %_ = sub i64 %53, %54
  %gen = mul i64 %_, %54
  %_1 = shl i64 %53, %54
  %_2 = sub i64 0, %53
  %gen3 = add i64 %_2, %54
  %_4 = sub i64 %53, %54
  %gen5 = mul i64 %_4, %54
  %_6 = sub i64 0, %53
  %gen7 = add i64 %_6, %54
  %_8 = shl i64 %53, %54
  %_9 = sub i64 %53, %54
  %gen10 = mul i64 %_9, %54
  %_11 = shl i64 %53, %54
  %55 = sub i64 %53, %54
  %_12 = sub i64 %55, 4
  %gen13 = mul i64 %_12, 4
  %56 = sdiv exact i64 %55, 4
  store i64 %56, i64* %50, align 8
  %57 = load i64, i64* %50, align 8
  %58 = icmp ne i64 %57, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPjjEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #1 comdat {
  %4 = load i32, i32* @x.879
  %5 = load i32, i32* @y.880
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  store i32* %0, i32** %12, align 8
  store i32* %1, i32** %13, align 8
  store i32* %2, i32** %14, align 8
  %16 = load i32*, i32** %14, align 8
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %15, align 4
  %18 = load i32, i32* @x.879
  %19 = load i32, i32* @y.880
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26

; <label>:26:                                     ; preds = %33, %originalBBpart2
  %27 = load i32*, i32** %12, align 8
  %28 = load i32*, i32** %13, align 8
  %29 = icmp ne i32* %27, %28
  br i1 %29, label %30, label %36

; <label>:30:                                     ; preds = %26
  %31 = load i32, i32* %15, align 4
  %32 = load i32*, i32** %12, align 8
  store i32 %31, i32* %32, align 4
  br label %33

; <label>:33:                                     ; preds = %30
  %34 = load i32*, i32** %12, align 8
  %35 = getelementptr inbounds i32, i32* %34, i32 1
  store i32* %35, i32** %12, align 8
  br label %26

; <label>:36:                                     ; preds = %26
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %37 = alloca i32*, align 8
  %38 = alloca i32*, align 8
  %39 = alloca i32*, align 8
  %40 = alloca i32, align 4
  store i32* %0, i32** %37, align 8
  store i32* %1, i32** %38, align 8
  store i32* %2, i32** %39, align 8
  %41 = load i32*, i32** %39, align 8
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %40, align 4
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIjSaIjEE8max_sizeEv(%"class.std::vector.5"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.881
  %3 = load i32, i32* @y.882
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %10, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %10, align 8
  %12 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %13 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %12)
  %14 = call i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %13)
  %15 = load i32, i32* @x.881
  %16 = load i32, i32* @y.882
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %14

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %23, align 8
  %24 = load %"class.std::vector.5"*, %"class.std::vector.5"** %23, align 8
  %25 = bitcast %"class.std::vector.5"* %24 to %"struct.std::_Vector_base.6"*
  %26 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %25)
  %27 = call i64 @_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %26)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.143"*, i32** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.143"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.143"* %0, %"class.__gnu_cxx::__normal_iterator.143"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.143"*, %"class.__gnu_cxx::__normal_iterator.143"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.143", %"class.__gnu_cxx::__normal_iterator.143"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPK6TensorILi2ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.134"*, %class.Tensor.113** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.134"*, align 8
  %4 = alloca %class.Tensor.113**, align 8
  store %"class.__gnu_cxx::__normal_iterator.134"* %0, %"class.__gnu_cxx::__normal_iterator.134"** %3, align 8
  store %class.Tensor.113** %1, %class.Tensor.113*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.134"*, %"class.__gnu_cxx::__normal_iterator.134"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.134", %"class.__gnu_cxx::__normal_iterator.134"* %5, i32 0, i32 0
  %7 = load %class.Tensor.113**, %class.Tensor.113*** %4, align 8
  %8 = load %class.Tensor.113*, %class.Tensor.113** %7, align 8
  store %class.Tensor.113* %8, %class.Tensor.113** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EE5clearEv(%class.Tensor*) #1 comdat align 2 {
  %2 = alloca %class.Tensor*, align 8
  %3 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %2, align 8
  %4 = load %class.Tensor*, %class.Tensor** %2, align 8
  store i32 0, i32* %3, align 4
  br label %5

; <label>:5:                                      ; preds = %originalBBpart216, %1
  %6 = load i32, i32* @x.889
  %7 = load i32, i32* @y.890
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i32, i32* %3, align 4
  %15 = icmp ult i32 %14, 3
  %16 = load i32, i32* @x.889
  %17 = load i32, i32* @y.890
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %64

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = load i32, i32* @x.889
  %26 = load i32, i32* @y.890
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = getelementptr inbounds %class.Tensor, %class.Tensor* %4, i32 0, i32 0
  %34 = load i32, i32* %3, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [3 x double], [3 x double]* %33, i64 0, i64 %35
  store double 0.000000e+00, double* %36, align 8
  %37 = load i32, i32* @x.889
  %38 = load i32, i32* @y.890
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %45

; <label>:45:                                     ; preds = %originalBBpart24
  %46 = load i32, i32* @x.889
  %47 = load i32, i32* @y.890
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  %56 = load i32, i32* @x.889
  %57 = load i32, i32* @y.890
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br label %5

; <label>:64:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %65 = load i32, i32* %3, align 4
  %66 = icmp ult i32 %65, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %67 = getelementptr inbounds %class.Tensor, %class.Tensor* %4, i32 0, i32 0
  %68 = load i32, i32* %3, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds [3 x double], [3 x double]* %67, i64 0, i64 %69
  store double 0.000000e+00, double* %70, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %71 = load i32, i32* %3, align 4
  %_ = shl i32 %71, 1
  %_7 = sub i32 0, %71
  %gen = add i32 %_7, 1
  %_8 = sub i32 0, %71
  %gen9 = add i32 %_8, 1
  %_10 = shl i32 %71, 1
  %_11 = shl i32 %71, 1
  %_12 = sub i32 %71, 1
  %gen13 = mul i32 %_12, 1
  %_14 = shl i32 %71, 1
  %72 = add i32 %71, 1
  store i32 %72, i32* %3, align 4
  br label %originalBB6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZNK6TensorILi1ELi3EEixEj(%class.Tensor*, i32) #1 comdat align 2 {
  %3 = load i32, i32* @x.891
  %4 = load i32, i32* @y.892
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.Tensor*, %class.Tensor** %11, align 8
  %14 = getelementptr inbounds %class.Tensor, %class.Tensor* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 %16
  %18 = load double, double* %17, align 8
  %19 = load i32, i32* @x.891
  %20 = load i32, i32* @y.892
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double %18

originalBBalteredBB:                              ; preds = %originalBB, %2
  %27 = alloca %class.Tensor*, align 8
  %28 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %27, align 8
  store i32 %1, i32* %28, align 4
  %29 = load %class.Tensor*, %class.Tensor** %27, align 8
  %30 = getelementptr inbounds %class.Tensor, %class.Tensor* %29, i32 0, i32 0
  %31 = load i32, i32* %28, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [3 x double], [3 x double]* %30, i64 0, i64 %32
  %34 = load double, double* %33, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZNK6TensorILi2ELi3EEixEj(%class.Tensor.113*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor.113*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor.113* %0, %class.Tensor.113** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor.113*, %class.Tensor.113** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %6, i64 0, i64 %8
  ret %class.Tensor* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZN6TensorILi1ELi3EEixEj(%class.Tensor*, i32) #1 comdat align 2 {
  %3 = load i32, i32* @x.895
  %4 = load i32, i32* @y.896
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store i32 %1, i32* %12, align 4
  %13 = load %class.Tensor*, %class.Tensor** %11, align 8
  %14 = getelementptr inbounds %class.Tensor, %class.Tensor* %13, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 %16
  %18 = load i32, i32* @x.895
  %19 = load i32, i32* @y.896
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %17

originalBBalteredBB:                              ; preds = %originalBB, %2
  %26 = alloca %class.Tensor*, align 8
  %27 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %26, align 8
  store i32 %1, i32* %27, align 4
  %28 = load %class.Tensor*, %class.Tensor** %26, align 8
  %29 = getelementptr inbounds %class.Tensor, %class.Tensor* %28, i32 0, i32 0
  %30 = load i32, i32* %27, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [3 x double], [3 x double]* %29, i64 0, i64 %31
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi2ELi3EE5clearEv(%class.Tensor.113*) #1 comdat align 2 {
  %2 = alloca %class.Tensor.113*, align 8
  %3 = alloca i32, align 4
  store %class.Tensor.113* %0, %class.Tensor.113** %2, align 8
  %4 = load %class.Tensor.113*, %class.Tensor.113** %2, align 8
  store i32 0, i32* %3, align 4
  br label %5

; <label>:5:                                      ; preds = %29, %1
  %6 = load i32, i32* @x.897
  %7 = load i32, i32* @y.898
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i32, i32* %3, align 4
  %15 = icmp ult i32 %14, 3
  %16 = load i32, i32* @x.897
  %17 = load i32, i32* @y.898
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %32

; <label>:24:                                     ; preds = %originalBBpart2
  %25 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %4, i32 0, i32 0
  %26 = load i32, i32* %3, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %25, i64 0, i64 %27
  call void @_ZN6TensorILi1ELi3EE5clearEv(%class.Tensor* %28)
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  br label %5

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load i32, i32* @x.897
  %34 = load i32, i32* @y.898
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* @x.897
  %42 = load i32, i32* @y.898
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %5
  %49 = load i32, i32* %3, align 4
  %50 = icmp ult i32 %49, 3
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi2ELi3EEixEj(%class.Tensor.113*, i32) #1 comdat align 2 {
  %3 = alloca %class.Tensor.113*, align 8
  %4 = alloca i32, align 4
  store %class.Tensor.113* %0, %class.Tensor.113** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Tensor.113*, %class.Tensor.113** %3, align 8
  %6 = getelementptr inbounds %class.Tensor.113, %class.Tensor.113* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds [3 x %class.Tensor], [3 x %class.Tensor]* %6, i64 0, i64 %8
  ret %class.Tensor* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.130"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.130"*, align 8
  store %"struct.std::_Vector_base.130"* %0, %"struct.std::_Vector_base.130"** %2, align 8
  %3 = load %"struct.std::_Vector_base.130"*, %"struct.std::_Vector_base.130"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %5 to %"class.std::allocator.131"*
  call void @_ZNSaISt6vectorI5PointILi3EESaIS1_EEEC2Ev(%"class.std::allocator.131"* %6) #2
  %7 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %5 to %"class.std::allocator.131"*
  call void @_ZNSaISt6vectorI5PointILi3EESaIS1_EEED2Ev(%"class.std::allocator.131"* %13) #2
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i32, i32* @x.903
  %16 = load i32, i32* @y.904
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i8*, i8** %3, align 8
  %24 = load i32, i32* %4, align 4
  %25 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  %27 = load i32, i32* @x.903
  %28 = load i32, i32* @y.904
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  resume { i8*, i32 } %26

originalBBalteredBB:                              ; preds = %originalBB, %14
  %35 = load i8*, i8** %3, align 8
  %36 = load i32, i32* %4, align 4
  %37 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI5PointILi3EESaIS1_EEEC2Ev(%"class.std::allocator.131"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.131"*, align 8
  store %"class.std::allocator.131"* %0, %"class.std::allocator.131"** %2, align 8
  %3 = load %"class.std::allocator.131"*, %"class.std::allocator.131"** %2, align 8
  %4 = bitcast %"class.std::allocator.131"* %3 to %"class.__gnu_cxx::new_allocator.132"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.132"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*, %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %"class.std::vector.58"* null, %"class.std::vector.58"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %"class.std::vector.58"* null, %"class.std::vector.58"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %"class.std::vector.58"* null, %"class.std::vector.58"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI5PointILi3EESaIS1_EEED2Ev(%"class.std::allocator.131"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.909
  %3 = load i32, i32* @y.910
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.131"*, align 8
  store %"class.std::allocator.131"* %0, %"class.std::allocator.131"** %10, align 8
  %11 = load %"class.std::allocator.131"*, %"class.std::allocator.131"** %10, align 8
  %12 = bitcast %"class.std::allocator.131"* %11 to %"class.__gnu_cxx::new_allocator.132"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.132"* %12) #2
  %13 = load i32, i32* @x.909
  %14 = load i32, i32* @y.910
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.131"*, align 8
  store %"class.std::allocator.131"* %0, %"class.std::allocator.131"** %21, align 8
  %22 = load %"class.std::allocator.131"*, %"class.std::allocator.131"** %21, align 8
  %23 = bitcast %"class.std::allocator.131"* %22 to %"class.__gnu_cxx::new_allocator.132"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.132"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.132"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.132"*, align 8
  store %"class.__gnu_cxx::new_allocator.132"* %0, %"class.__gnu_cxx::new_allocator.132"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.132"*, %"class.__gnu_cxx::new_allocator.132"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.132"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.132"*, align 8
  store %"class.__gnu_cxx::new_allocator.132"* %0, %"class.__gnu_cxx::new_allocator.132"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.132"*, %"class.__gnu_cxx::new_allocator.132"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI5PointILi3EESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.58"*, %"class.std::vector.58"*, %"class.std::allocator.131"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.58"*, align 8
  %5 = alloca %"class.std::vector.58"*, align 8
  %6 = alloca %"class.std::allocator.131"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %4, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %5, align 8
  store %"class.std::allocator.131"* %2, %"class.std::allocator.131"** %6, align 8
  %7 = load %"class.std::vector.58"*, %"class.std::vector.58"** %4, align 8
  %8 = load %"class.std::vector.58"*, %"class.std::vector.58"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorI5PointILi3EESaIS2_EEEvT_S6_(%"class.std::vector.58"* %7, %"class.std::vector.58"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.131"* @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.130"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.130"*, align 8
  store %"struct.std::_Vector_base.130"* %0, %"struct.std::_Vector_base.130"** %2, align 8
  %3 = load %"struct.std::_Vector_base.130"*, %"struct.std::_Vector_base.130"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %4 to %"class.std::allocator.131"*
  ret %"class.std::allocator.131"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.130"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.130"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.130"* %0, %"struct.std::_Vector_base.130"** %2, align 8
  %5 = load %"struct.std::_Vector_base.130"*, %"struct.std::_Vector_base.130"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.58"*, %"class.std::vector.58"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %"class.std::vector.58"*, %"class.std::vector.58"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.58"*, %"class.std::vector.58"** %16, align 8
  %18 = ptrtoint %"class.std::vector.58"* %13 to i64
  %19 = ptrtoint %"class.std::vector.58"* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.130"* %5, %"class.std::vector.58"* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %23) #2
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %28) #2
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI5PointILi3EESaIS2_EEEvT_S6_(%"class.std::vector.58"*, %"class.std::vector.58"*) #0 comdat {
  %3 = alloca %"class.std::vector.58"*, align 8
  %4 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %3, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %4, align 8
  %5 = load %"class.std::vector.58"*, %"class.std::vector.58"** %3, align 8
  %6 = load %"class.std::vector.58"*, %"class.std::vector.58"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5PointILi3EESaIS4_EEEEvT_S8_(%"class.std::vector.58"* %5, %"class.std::vector.58"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI5PointILi3EESaIS4_EEEEvT_S8_(%"class.std::vector.58"*, %"class.std::vector.58"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.58"*, align 8
  %4 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %3, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %12, %2
  %6 = load %"class.std::vector.58"*, %"class.std::vector.58"** %3, align 8
  %7 = load %"class.std::vector.58"*, %"class.std::vector.58"** %4, align 8
  %8 = icmp ne %"class.std::vector.58"* %6, %7
  br i1 %8, label %9, label %15

; <label>:9:                                      ; preds = %5
  %10 = load %"class.std::vector.58"*, %"class.std::vector.58"** %3, align 8
  %11 = call %"class.std::vector.58"* @_ZSt11__addressofISt6vectorI5PointILi3EESaIS2_EEEPT_RS5_(%"class.std::vector.58"* dereferenceable(24) %10)
  call void @_ZSt8_DestroyISt6vectorI5PointILi3EESaIS2_EEEvPT_(%"class.std::vector.58"* %11)
  br label %12

; <label>:12:                                     ; preds = %9
  %13 = load %"class.std::vector.58"*, %"class.std::vector.58"** %3, align 8
  %14 = getelementptr inbounds %"class.std::vector.58", %"class.std::vector.58"* %13, i32 1
  store %"class.std::vector.58"* %14, %"class.std::vector.58"** %3, align 8
  br label %5

; <label>:15:                                     ; preds = %5
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorI5PointILi3EESaIS2_EEEvPT_(%"class.std::vector.58"*) #0 comdat {
  %2 = load i32, i32* @x.925
  %3 = load i32, i32* @y.926
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %10, align 8
  %11 = load %"class.std::vector.58"*, %"class.std::vector.58"** %10, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %11)
  %12 = load i32, i32* @x.925
  %13 = load i32, i32* @y.926
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %20, align 8
  %21 = load %"class.std::vector.58"*, %"class.std::vector.58"** %20, align 8
  call void @_ZNSt6vectorI5PointILi3EESaIS1_EED2Ev(%"class.std::vector.58"* %21)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.58"* @_ZSt11__addressofISt6vectorI5PointILi3EESaIS2_EEEPT_RS5_(%"class.std::vector.58"* dereferenceable(24)) #1 comdat {
  %2 = load i32, i32* @x.927
  %3 = load i32, i32* @y.928
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %10, align 8
  %11 = load %"class.std::vector.58"*, %"class.std::vector.58"** %10, align 8
  %12 = load i32, i32* @x.927
  %13 = load i32, i32* @y.928
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::vector.58"* %11

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %20, align 8
  %21 = load %"class.std::vector.58"*, %"class.std::vector.58"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.130"*, %"class.std::vector.58"*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.929
  %5 = load i32, i32* @y.930
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.130"*, align 8
  %13 = alloca %"class.std::vector.58"*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.130"* %0, %"struct.std::_Vector_base.130"** %12, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.130"*, %"struct.std::_Vector_base.130"** %12, align 8
  %16 = load %"class.std::vector.58"*, %"class.std::vector.58"** %13, align 8
  %17 = icmp ne %"class.std::vector.58"* %16, null
  %18 = load i32, i32* @x.929
  %19 = load i32, i32* @y.930
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %31

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %15, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %27 to %"class.std::allocator.131"*
  %29 = load %"class.std::vector.58"*, %"class.std::vector.58"** %13, align 8
  %30 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorI5PointILi3EESaIS3_EEES5_E10deallocateERS6_PS5_m(%"class.std::allocator.131"* dereferenceable(1) %28, %"class.std::vector.58"* %29, i64 %30)
  br label %31

; <label>:31:                                     ; preds = %26, %originalBBpart2
  %32 = load i32, i32* @x.929
  %33 = load i32, i32* @y.930
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* @x.929
  %41 = load i32, i32* @y.930
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %48 = alloca %"struct.std::_Vector_base.130"*, align 8
  %49 = alloca %"class.std::vector.58"*, align 8
  %50 = alloca i64, align 8
  store %"struct.std::_Vector_base.130"* %0, %"struct.std::_Vector_base.130"** %48, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %49, align 8
  store i64 %2, i64* %50, align 8
  %51 = load %"struct.std::_Vector_base.130"*, %"struct.std::_Vector_base.130"** %48, align 8
  %52 = load %"class.std::vector.58"*, %"class.std::vector.58"** %49, align 8
  %53 = icmp ne %"class.std::vector.58"* %52, null
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  br label %originalBB1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI5PointILi3EESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %3 to %"class.std::allocator.131"*
  call void @_ZNSaISt6vectorI5PointILi3EESaIS1_EEED2Ev(%"class.std::allocator.131"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt6vectorI5PointILi3EESaIS3_EEES5_E10deallocateERS6_PS5_m(%"class.std::allocator.131"* dereferenceable(1), %"class.std::vector.58"*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.933
  %5 = load i32, i32* @y.934
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.131"*, align 8
  %13 = alloca %"class.std::vector.58"*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.131"* %0, %"class.std::allocator.131"** %12, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.131"*, %"class.std::allocator.131"** %12, align 8
  %16 = bitcast %"class.std::allocator.131"* %15 to %"class.__gnu_cxx::new_allocator.132"*
  %17 = load %"class.std::vector.58"*, %"class.std::vector.58"** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.132"* %16, %"class.std::vector.58"* %17, i64 %18)
  %19 = load i32, i32* @x.933
  %20 = load i32, i32* @y.934
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.131"*, align 8
  %28 = alloca %"class.std::vector.58"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.131"* %0, %"class.std::allocator.131"** %27, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.131"*, %"class.std::allocator.131"** %27, align 8
  %31 = bitcast %"class.std::allocator.131"* %30 to %"class.__gnu_cxx::new_allocator.132"*
  %32 = load %"class.std::vector.58"*, %"class.std::vector.58"** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.132"* %31, %"class.std::vector.58"* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI5PointILi3EESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.132"*, %"class.std::vector.58"*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.132"*, align 8
  %5 = alloca %"class.std::vector.58"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.132"* %0, %"class.__gnu_cxx::new_allocator.132"** %4, align 8
  store %"class.std::vector.58"* %1, %"class.std::vector.58"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.132"*, %"class.__gnu_cxx::new_allocator.132"** %4, align 8
  %8 = load %"class.std::vector.58"*, %"class.std::vector.58"** %5, align 8
  %9 = bitcast %"class.std::vector.58"* %8 to i8*
  call void @_ZdlPv(i8* %9) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor*, %class.Tensor*, %"class.std::allocator.105"* dereferenceable(1)) #0 comdat {
  %4 = load i32, i32* @x.937
  %5 = load i32, i32* @y.938
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca %class.Tensor*, align 8
  %14 = alloca %"class.std::allocator.105"*, align 8
  store %class.Tensor* %0, %class.Tensor** %12, align 8
  store %class.Tensor* %1, %class.Tensor** %13, align 8
  store %"class.std::allocator.105"* %2, %"class.std::allocator.105"** %14, align 8
  %15 = load %class.Tensor*, %class.Tensor** %12, align 8
  %16 = load %class.Tensor*, %class.Tensor** %13, align 8
  call void @_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_(%class.Tensor* %15, %class.Tensor* %16)
  %17 = load i32, i32* @x.937
  %18 = load i32, i32* @y.938
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %25 = alloca %class.Tensor*, align 8
  %26 = alloca %class.Tensor*, align 8
  %27 = alloca %"class.std::allocator.105"*, align 8
  store %class.Tensor* %0, %class.Tensor** %25, align 8
  store %class.Tensor* %1, %class.Tensor** %26, align 8
  store %"class.std::allocator.105"* %2, %"class.std::allocator.105"** %27, align 8
  %28 = load %class.Tensor*, %class.Tensor** %25, align 8
  %29 = load %class.Tensor*, %class.Tensor** %26, align 8
  call void @_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_(%class.Tensor* %28, %class.Tensor* %29)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.104"*, align 8
  store %"struct.std::_Vector_base.104"* %0, %"struct.std::_Vector_base.104"** %2, align 8
  %3 = load %"struct.std::_Vector_base.104"*, %"struct.std::_Vector_base.104"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %4 to %"class.std::allocator.105"*
  ret %"class.std::allocator.105"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.104"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.104"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.104"* %0, %"struct.std::_Vector_base.104"** %2, align 8
  %5 = load %"struct.std::_Vector_base.104"*, %"struct.std::_Vector_base.104"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %class.Tensor*, %class.Tensor** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %class.Tensor*, %class.Tensor** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %class.Tensor*, %class.Tensor** %16, align 8
  %18 = ptrtoint %class.Tensor* %13 to i64
  %19 = ptrtoint %class.Tensor* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.104"* %5, %class.Tensor* %9, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %23) #2
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %28) #2
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_(%class.Tensor*, %class.Tensor*) #0 comdat {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %5 = load %class.Tensor*, %class.Tensor** %3, align 8
  %6 = load %class.Tensor*, %class.Tensor** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi1ELi3EEEEvT_S5_(%class.Tensor* %5, %class.Tensor* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi1ELi3EEEEvT_S5_(%class.Tensor*, %class.Tensor*) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.104"*, %class.Tensor*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.104"*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.104"* %0, %"struct.std::_Vector_base.104"** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.104"*, %"struct.std::_Vector_base.104"** %4, align 8
  %8 = load %class.Tensor*, %class.Tensor** %5, align 8
  %9 = icmp ne %class.Tensor* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %11 to %"class.std::allocator.105"*
  %13 = load %class.Tensor*, %class.Tensor** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.105"* dereferenceable(1) %12, %class.Tensor* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %3 to %"class.std::allocator.105"*
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.105"* %4) #2
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.105"* dereferenceable(1), %class.Tensor*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.951
  %5 = load i32, i32* @y.952
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::allocator.105"*, align 8
  %13 = alloca %class.Tensor*, align 8
  %14 = alloca i64, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %12, align 8
  store %class.Tensor* %1, %class.Tensor** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %12, align 8
  %16 = bitcast %"class.std::allocator.105"* %15 to %"class.__gnu_cxx::new_allocator.106"*
  %17 = load %class.Tensor*, %class.Tensor** %13, align 8
  %18 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.106"* %16, %class.Tensor* %17, i64 %18)
  %19 = load i32, i32* @x.951
  %20 = load i32, i32* @y.952
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca %"class.std::allocator.105"*, align 8
  %28 = alloca %class.Tensor*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %27, align 8
  store %class.Tensor* %1, %class.Tensor** %28, align 8
  store i64 %2, i64* %29, align 8
  %30 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %27, align 8
  %31 = bitcast %"class.std::allocator.105"* %30 to %"class.__gnu_cxx::new_allocator.106"*
  %32 = load %class.Tensor*, %class.Tensor** %28, align 8
  %33 = load i64, i64* %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.106"* %31, %class.Tensor* %32, i64 %33)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.106"*, %class.Tensor*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.106"*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.106"* %0, %"class.__gnu_cxx::new_allocator.106"** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.106"*, %"class.__gnu_cxx::new_allocator.106"** %4, align 8
  %8 = load %class.Tensor*, %class.Tensor** %5, align 8
  %9 = bitcast %class.Tensor* %8 to i8*
  call void @_ZdlPv(i8* %9) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.105"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.955
  %3 = load i32, i32* @y.956
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.105"*, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %10, align 8
  %11 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %10, align 8
  %12 = bitcast %"class.std::allocator.105"* %11 to %"class.__gnu_cxx::new_allocator.106"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.106"* %12) #2
  %13 = load i32, i32* @x.955
  %14 = load i32, i32* @y.956
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.std::allocator.105"*, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %21, align 8
  %22 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %21, align 8
  %23 = bitcast %"class.std::allocator.105"* %22 to %"class.__gnu_cxx::new_allocator.106"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.106"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.106"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.106"*, align 8
  store %"class.__gnu_cxx::new_allocator.106"* %0, %"class.__gnu_cxx::new_allocator.106"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.106"*, %"class.__gnu_cxx::new_allocator.106"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6TensorILi2ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor.113*, %class.Tensor.113*, %"class.std::allocator.110"* dereferenceable(1)) #0 comdat {
  %4 = alloca %class.Tensor.113*, align 8
  %5 = alloca %class.Tensor.113*, align 8
  %6 = alloca %"class.std::allocator.110"*, align 8
  store %class.Tensor.113* %0, %class.Tensor.113** %4, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %5, align 8
  store %"class.std::allocator.110"* %2, %"class.std::allocator.110"** %6, align 8
  %7 = load %class.Tensor.113*, %class.Tensor.113** %4, align 8
  %8 = load %class.Tensor.113*, %class.Tensor.113** %5, align 8
  call void @_ZSt8_DestroyIP6TensorILi2ELi3EEEvT_S3_(%class.Tensor.113* %7, %class.Tensor.113* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.110"* @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.109"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.961
  %3 = load i32, i32* @y.962
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base.109"*, align 8
  store %"struct.std::_Vector_base.109"* %0, %"struct.std::_Vector_base.109"** %10, align 8
  %11 = load %"struct.std::_Vector_base.109"*, %"struct.std::_Vector_base.109"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %12 to %"class.std::allocator.110"*
  %14 = load i32, i32* @x.961
  %15 = load i32, i32* @y.962
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %"class.std::allocator.110"* %13

originalBBalteredBB:                              ; preds = %originalBB, %1
  %22 = alloca %"struct.std::_Vector_base.109"*, align 8
  store %"struct.std::_Vector_base.109"* %0, %"struct.std::_Vector_base.109"** %22, align 8
  %23 = load %"struct.std::_Vector_base.109"*, %"struct.std::_Vector_base.109"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %23, i32 0, i32 0
  %25 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %24 to %"class.std::allocator.110"*
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EED2Ev(%"struct.std::_Vector_base.109"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.109"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.109"* %0, %"struct.std::_Vector_base.109"** %2, align 8
  %5 = load %"struct.std::_Vector_base.109"*, %"struct.std::_Vector_base.109"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %class.Tensor.113*, %class.Tensor.113** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %class.Tensor.113*, %class.Tensor.113** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %14 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %class.Tensor.113*, %class.Tensor.113** %16, align 8
  %18 = ptrtoint %class.Tensor.113* %13 to i64
  %19 = ptrtoint %class.Tensor.113* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 72
  invoke void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.109"* %5, %class.Tensor.113* %9, i64 %21)
          to label %22 unwind label %40

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.963
  %24 = load i32, i32* @y.964
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %31) #2
  %32 = load i32, i32* @x.963
  %33 = load i32, i32* @y.964
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

; <label>:40:                                     ; preds = %1
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %3, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %4, align 4
  %44 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %44) #2
  br label %45

; <label>:45:                                     ; preds = %40
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %4, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

originalBBalteredBB:                              ; preds = %originalBB, %22
  %50 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %50) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP6TensorILi2ELi3EEEvT_S3_(%class.Tensor.113*, %class.Tensor.113*) #0 comdat {
  %3 = alloca %class.Tensor.113*, align 8
  %4 = alloca %class.Tensor.113*, align 8
  store %class.Tensor.113* %0, %class.Tensor.113** %3, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %4, align 8
  %5 = load %class.Tensor.113*, %class.Tensor.113** %3, align 8
  %6 = load %class.Tensor.113*, %class.Tensor.113** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi2ELi3EEEEvT_S5_(%class.Tensor.113* %5, %class.Tensor.113* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP6TensorILi2ELi3EEEEvT_S5_(%class.Tensor.113*, %class.Tensor.113*) #1 comdat align 2 {
  %3 = alloca %class.Tensor.113*, align 8
  %4 = alloca %class.Tensor.113*, align 8
  store %class.Tensor.113* %0, %class.Tensor.113** %3, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.109"*, %class.Tensor.113*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.969
  %5 = load i32, i32* @y.970
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"struct.std::_Vector_base.109"*, align 8
  %13 = alloca %class.Tensor.113*, align 8
  %14 = alloca i64, align 8
  store %"struct.std::_Vector_base.109"* %0, %"struct.std::_Vector_base.109"** %12, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %13, align 8
  store i64 %2, i64* %14, align 8
  %15 = load %"struct.std::_Vector_base.109"*, %"struct.std::_Vector_base.109"** %12, align 8
  %16 = load %class.Tensor.113*, %class.Tensor.113** %13, align 8
  %17 = icmp ne %class.Tensor.113* %16, null
  %18 = load i32, i32* @x.969
  %19 = load i32, i32* @y.970
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %31

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %15, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %27 to %"class.std::allocator.110"*
  %29 = load %class.Tensor.113*, %class.Tensor.113** %13, align 8
  %30 = load i64, i64* %14, align 8
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.110"* dereferenceable(1) %28, %class.Tensor.113* %29, i64 %30)
  br label %31

; <label>:31:                                     ; preds = %26, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %3
  %32 = alloca %"struct.std::_Vector_base.109"*, align 8
  %33 = alloca %class.Tensor.113*, align 8
  %34 = alloca i64, align 8
  store %"struct.std::_Vector_base.109"* %0, %"struct.std::_Vector_base.109"** %32, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %33, align 8
  store i64 %2, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.109"*, %"struct.std::_Vector_base.109"** %32, align 8
  %36 = load %class.Tensor.113*, %class.Tensor.113** %33, align 8
  %37 = icmp ne %class.Tensor.113* %36, null
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.971
  %3 = load i32, i32* @y.972
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %10, align 8
  %11 = load %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %10, align 8
  %12 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %11 to %"class.std::allocator.110"*
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.110"* %12) #2
  %13 = load i32, i32* @x.971
  %14 = load i32, i32* @y.972
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %21, align 8
  %22 = load %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %21, align 8
  %23 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %22 to %"class.std::allocator.110"*
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.110"* %23) #2
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi2ELi3EEES2_E10deallocateERS3_PS2_m(%"class.std::allocator.110"* dereferenceable(1), %class.Tensor.113*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.110"*, align 8
  %5 = alloca %class.Tensor.113*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.110"* %0, %"class.std::allocator.110"** %4, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.110"*, %"class.std::allocator.110"** %4, align 8
  %8 = bitcast %"class.std::allocator.110"* %7 to %"class.__gnu_cxx::new_allocator.111"*
  %9 = load %class.Tensor.113*, %class.Tensor.113** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.111"* %8, %class.Tensor.113* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.111"*, %class.Tensor.113*, i64) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.111"*, align 8
  %5 = alloca %class.Tensor.113*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.111"* %0, %"class.__gnu_cxx::new_allocator.111"** %4, align 8
  store %class.Tensor.113* %1, %class.Tensor.113** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.111"*, %"class.__gnu_cxx::new_allocator.111"** %4, align 8
  %8 = load %class.Tensor.113*, %class.Tensor.113** %5, align 8
  %9 = bitcast %class.Tensor.113* %8 to i8*
  call void @_ZdlPv(i8* %9) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.110"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.110"*, align 8
  store %"class.std::allocator.110"* %0, %"class.std::allocator.110"** %2, align 8
  %3 = load %"class.std::allocator.110"*, %"class.std::allocator.110"** %2, align 8
  %4 = bitcast %"class.std::allocator.110"* %3 to %"class.__gnu_cxx::new_allocator.111"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.111"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEED2Ev(%"class.__gnu_cxx::new_allocator.111"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.111"*, align 8
  store %"class.__gnu_cxx::new_allocator.111"* %0, %"class.__gnu_cxx::new_allocator.111"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.111"*, %"class.__gnu_cxx::new_allocator.111"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.129"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.129"*, align 8
  store %"class.std::vector.129"* %0, %"class.std::vector.129"** %2, align 8
  %3 = load %"class.std::vector.129"*, %"class.std::vector.129"** %2, align 8
  %4 = bitcast %"class.std::vector.129"* %3 to %"struct.std::_Vector_base.130"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %"class.std::vector.58"*, %"class.std::vector.58"** %7, align 8
  %9 = bitcast %"class.std::vector.129"* %3 to %"struct.std::_Vector_base.130"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.std::vector.58"*, %"class.std::vector.58"** %12, align 8
  %14 = ptrtoint %"class.std::vector.58"* %8 to i64
  %15 = ptrtoint %"class.std::vector.58"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN17MemoryConsumption18memory_consumptionI5PointILi3EEEEjRKSt6vectorIT_SaIS4_EE(%"class.std::vector.58"* dereferenceable(24)) #0 comdat {
  %2 = alloca %"class.std::vector.58"*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %2, align 8
  store i32 24, i32* %3, align 4
  %6 = load %"class.std::vector.58"*, %"class.std::vector.58"** %2, align 8
  %7 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE4sizeEv(%"class.std::vector.58"* %6)
  %8 = trunc i64 %7 to i32
  store i32 %8, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %9

; <label>:9:                                      ; preds = %21, %1
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %24

; <label>:13:                                     ; preds = %9
  %14 = load %"class.std::vector.58"*, %"class.std::vector.58"** %2, align 8
  %15 = load i32, i32* %5, align 4
  %16 = zext i32 %15 to i64
  %17 = call dereferenceable(24) %class.Point* @_ZNKSt6vectorI5PointILi3EESaIS1_EEixEm(%"class.std::vector.58"* %14, i64 %16)
  %18 = call i32 @_ZN17MemoryConsumption18memory_consumptionI5PointILi3EEEEjRKT_(%class.Point* dereferenceable(24) %17)
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, %18
  store i32 %20, i32* %3, align 4
  br label %21

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* %5, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %5, align 4
  br label %9

; <label>:24:                                     ; preds = %9
  %25 = load i32, i32* @x.983
  %26 = load i32, i32* @y.984
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = load %"class.std::vector.58"*, %"class.std::vector.58"** %2, align 8
  %34 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8capacityEv(%"class.std::vector.58"* %33)
  %35 = load i32, i32* %4, align 4
  %36 = zext i32 %35 to i64
  %37 = sub i64 %34, %36
  %38 = mul i64 %37, 24
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  %41 = add i64 %40, %38
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %3, align 4
  %43 = load i32, i32* %3, align 4
  %44 = load i32, i32* @x.983
  %45 = load i32, i32* @y.984
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %43

originalBBalteredBB:                              ; preds = %originalBB, %24
  %52 = load %"class.std::vector.58"*, %"class.std::vector.58"** %2, align 8
  %53 = call i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8capacityEv(%"class.std::vector.58"* %52)
  %54 = load i32, i32* %4, align 4
  %55 = zext i32 %54 to i64
  %_ = shl i64 %53, %55
  %_1 = shl i64 %53, %55
  %_2 = shl i64 %53, %55
  %_3 = sub i64 0, %53
  %gen = add i64 %_3, %55
  %_4 = sub i64 0, %53
  %gen5 = add i64 %_4, %55
  %56 = sub i64 %53, %55
  %_6 = sub i64 0, %56
  %gen7 = add i64 %_6, 24
  %57 = mul i64 %56, 24
  %58 = load i32, i32* %3, align 4
  %59 = zext i32 %58 to i64
  %_8 = sub i64 %59, %57
  %gen9 = mul i64 %_8, %57
  %60 = add i64 %59, %57
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %3, align 4
  %62 = load i32, i32* %3, align 4
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.58"* @_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EEixEm(%"class.std::vector.129"*, i64) #1 comdat align 2 {
  %3 = alloca %"class.std::vector.129"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.129"* %0, %"class.std::vector.129"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.129"*, %"class.std::vector.129"** %3, align 8
  %6 = bitcast %"class.std::vector.129"* %5 to %"struct.std::_Vector_base.130"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %7 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %"class.std::vector.58"*, %"class.std::vector.58"** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"class.std::vector.58", %"class.std::vector.58"* %10, i64 %11
  ret %"class.std::vector.58"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_I5PointILi3EESaIS1_EESaIS3_EE8capacityEv(%"class.std::vector.129"*) #1 comdat align 2 {
  %2 = alloca %"class.std::vector.129"*, align 8
  store %"class.std::vector.129"* %0, %"class.std::vector.129"** %2, align 8
  %3 = load %"class.std::vector.129"*, %"class.std::vector.129"** %2, align 8
  %4 = bitcast %"class.std::vector.129"* %3 to %"struct.std::_Vector_base.130"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %6, i32 0, i32 2
  %8 = load %"class.std::vector.58"*, %"class.std::vector.58"** %7, align 8
  %9 = bitcast %"class.std::vector.129"* %3 to %"struct.std::_Vector_base.130"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.130", %"struct.std::_Vector_base.130"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl"* %10 to %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data", %"struct.std::_Vector_base<std::vector<Point<3>, std::allocator<Point<3> > >, std::allocator<std::vector<Point<3>, std::allocator<Point<3> > > > >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %"class.std::vector.58"*, %"class.std::vector.58"** %12, align 8
  %14 = ptrtoint %"class.std::vector.58"* %8 to i64
  %15 = ptrtoint %"class.std::vector.58"* %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN17MemoryConsumption18memory_consumptionI5PointILi3EEEEjRKT_(%class.Point* dereferenceable(24)) #0 comdat {
  %2 = alloca %class.Point*, align 8
  store %class.Point* %0, %class.Point** %2, align 8
  %3 = load %class.Point*, %class.Point** %2, align 8
  %4 = call i32 @_ZN6TensorILi1ELi3EE18memory_consumptionEv()
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI5PointILi3EESaIS1_EE8capacityEv(%"class.std::vector.58"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.991
  %3 = load i32, i32* @y.992
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %10, align 8
  %11 = load %"class.std::vector.58"*, %"class.std::vector.58"** %10, align 8
  %12 = bitcast %"class.std::vector.58"* %11 to %"struct.std::_Vector_base.59"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %13 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %14, i32 0, i32 2
  %16 = load %class.Point*, %class.Point** %15, align 8
  %17 = bitcast %"class.std::vector.58"* %11 to %"struct.std::_Vector_base.59"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %18 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %class.Point*, %class.Point** %20, align 8
  %22 = ptrtoint %class.Point* %16 to i64
  %23 = ptrtoint %class.Point* %21 to i64
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 24
  %26 = load i32, i32* @x.991
  %27 = load i32, i32* @y.992
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %25

originalBBalteredBB:                              ; preds = %originalBB, %1
  %34 = alloca %"class.std::vector.58"*, align 8
  store %"class.std::vector.58"* %0, %"class.std::vector.58"** %34, align 8
  %35 = load %"class.std::vector.58"*, %"class.std::vector.58"** %34, align 8
  %36 = bitcast %"class.std::vector.58"* %35 to %"struct.std::_Vector_base.59"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %37 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %38, i32 0, i32 2
  %40 = load %class.Point*, %class.Point** %39, align 8
  %41 = bitcast %"class.std::vector.58"* %35 to %"struct.std::_Vector_base.59"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.59", %"struct.std::_Vector_base.59"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl"* %42 to %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Point<3>, std::allocator<Point<3> > >::_Vector_impl_data"* %43, i32 0, i32 0
  %45 = load %class.Point*, %class.Point** %44, align 8
  %46 = ptrtoint %class.Point* %40 to i64
  %47 = ptrtoint %class.Point* %45 to i64
  %48 = sub i64 %46, %47
  %49 = sdiv exact i64 %48, 24
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZN6TensorILi1ELi3EE18memory_consumptionEv() #1 comdat align 2 {
  ret i32 24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.DoFCellAccessor* @_ZNK15TriaRawIteratorILi3E15DoFCellAccessorILi3EEEdeEv(%class.TriaRawIterator.119*) #1 comdat align 2 {
  %2 = alloca %class.TriaRawIterator.119*, align 8
  store %class.TriaRawIterator.119* %0, %class.TriaRawIterator.119** %2, align 8
  %3 = load %class.TriaRawIterator.119*, %class.TriaRawIterator.119** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator.119, %class.TriaRawIterator.119* %3, i32 0, i32 0
  ret %class.DoFCellAccessor* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.TriaObjectAccessor.68* @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEptEv(%class.TriaRawIterator.66*) #0 comdat align 2 {
  %2 = alloca %class.TriaRawIterator.66*, align 8
  store %class.TriaRawIterator.66* %0, %class.TriaRawIterator.66** %2, align 8
  %3 = load %class.TriaRawIterator.66*, %class.TriaRawIterator.66** %2, align 8
  %4 = call dereferenceable(16) %class.TriaObjectAccessor.68* @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEdeEv(%class.TriaRawIterator.66* %3)
  ret %class.TriaObjectAccessor.68* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.TriaObjectAccessor.68* @_ZN15TriaRawIteratorILi3E18TriaObjectAccessorILi2ELi3EEEdeEv(%class.TriaRawIterator.66*) #1 comdat align 2 {
  %2 = load i32, i32* @x.999
  %3 = load i32, i32* @y.1000
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %class.TriaRawIterator.66*, align 8
  store %class.TriaRawIterator.66* %0, %class.TriaRawIterator.66** %10, align 8
  %11 = load %class.TriaRawIterator.66*, %class.TriaRawIterator.66** %10, align 8
  %12 = getelementptr inbounds %class.TriaRawIterator.66, %class.TriaRawIterator.66* %11, i32 0, i32 0
  %13 = load i32, i32* @x.999
  %14 = load i32, i32* @y.1000
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.TriaObjectAccessor.68* %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %class.TriaRawIterator.66*, align 8
  store %class.TriaRawIterator.66* %0, %class.TriaRawIterator.66** %21, align 8
  %22 = load %class.TriaRawIterator.66*, %class.TriaRawIterator.66** %21, align 8
  %23 = getelementptr inbounds %class.TriaRawIterator.66, %class.TriaRawIterator.66* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %class.TriaObjectAccessor.72* @_ZNK15TriaRawIteratorILi3E18TriaObjectAccessorILi1ELi3EEEdeEv(%class.TriaRawIterator.70*) #1 comdat align 2 {
  %2 = alloca %class.TriaRawIterator.70*, align 8
  store %class.TriaRawIterator.70* %0, %class.TriaRawIterator.70** %2, align 8
  %3 = load %class.TriaRawIterator.70*, %class.TriaRawIterator.70** %2, align 8
  %4 = getelementptr inbounds %class.TriaRawIterator.70, %class.TriaRawIterator.70* %3, i32 0, i32 0
  ret %class.TriaObjectAccessor.72* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %0, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.2"* %6) #2
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  call void @_ZNSaIdED2Ev(%"class.std::allocator.2"* %13) #2
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %3, align 8
  %16 = load i32, i32* %4, align 4
  %17 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIdEC2Ev(%"class.std::allocator.2"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EEC2Ev(%"struct.std::_Vector_base.104"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.104"*, align 8
  store %"struct.std::_Vector_base.104"* %0, %"struct.std::_Vector_base.104"** %2, align 8
  %3 = load %"struct.std::_Vector_base.104"*, %"struct.std::_Vector_base.104"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %5 to %"class.std::allocator.105"*
  call void @_ZNSaI6TensorILi1ELi3EEEC2Ev(%"class.std::allocator.105"* %6) #2
  %7 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %5 to %"class.std::allocator.105"*
  call void @_ZNSaI6TensorILi1ELi3EEED2Ev(%"class.std::allocator.105"* %13) #2
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %3, align 8
  %16 = load i32, i32* %4, align 4
  %17 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi1ELi3EEEC2Ev(%"class.std::allocator.105"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.105"*, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %2, align 8
  %3 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %2, align 8
  %4 = bitcast %"class.std::allocator.105"* %3 to %"class.__gnu_cxx::new_allocator.106"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.106"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.1017
  %3 = load i32, i32* @y.1018
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"** %10, align 8
  %11 = load %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %11, i32 0, i32 0
  store %class.Tensor* null, %class.Tensor** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %11, i32 0, i32 1
  store %class.Tensor* null, %class.Tensor** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %11, i32 0, i32 2
  store %class.Tensor* null, %class.Tensor** %14, align 8
  %15 = load i32, i32* @x.1017
  %16 = load i32, i32* @y.1018
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"** %23, align 8
  %24 = load %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %24, i32 0, i32 0
  store %class.Tensor* null, %class.Tensor** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %24, i32 0, i32 1
  store %class.Tensor* null, %class.Tensor** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %24, i32 0, i32 2
  store %class.Tensor* null, %class.Tensor** %27, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.106"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.106"*, align 8
  store %"class.__gnu_cxx::new_allocator.106"* %0, %"class.__gnu_cxx::new_allocator.106"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.106"*, %"class.__gnu_cxx::new_allocator.106"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(%"class.std::vector.0"*, double*, i64, double* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.144", align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca double*, align 8
  %9 = alloca double, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.144", align 8
  %12 = alloca double*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.144", align 8
  %16 = alloca double*, align 8
  %17 = alloca double*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %5, i32 0, i32 0
  store double* %1, double** %20, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %6, align 8
  store i64 %2, i64* %7, align 8
  store double* %3, double** %8, align 8
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %469

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %26 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %27, i32 0, i32 2
  %29 = load double*, double** %28, align 8
  %30 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %31 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %32, i32 0, i32 1
  %34 = load double*, double** %33, align 8
  %35 = ptrtoint double* %29 to i64
  %36 = ptrtoint double* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 8
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %152

; <label>:41:                                     ; preds = %24
  %42 = load double*, double** %8, align 8
  %43 = load double, double* %42, align 8
  store double %43, double* %9, align 8
  %44 = call double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"* %21)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %11, i32 0, i32 0
  store double* %44, double** %45, align 8
  %46 = call i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.144"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.144"* dereferenceable(8) %5)
  store i64 %46, i64* %10, align 8
  %47 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %48 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %49, i32 0, i32 1
  %51 = load double*, double** %50, align 8
  store double* %51, double** %12, align 8
  %52 = load i64, i64* %10, align 8
  %53 = load i64, i64* %7, align 8
  %54 = icmp ugt i64 %52, %53
  br i1 %54, label %55, label %98

; <label>:55:                                     ; preds = %41
  %56 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %56, i32 0, i32 0
  %58 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %57 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %58, i32 0, i32 1
  %60 = load double*, double** %59, align 8
  %61 = load i64, i64* %7, align 8
  %62 = sub i64 0, %61
  %63 = getelementptr inbounds double, double* %60, i64 %62
  %64 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %65 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %66, i32 0, i32 1
  %68 = load double*, double** %67, align 8
  %69 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %70 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %71, i32 0, i32 1
  %73 = load double*, double** %72, align 8
  %74 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %75 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %74)
  %76 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %63, double* %68, double* %73, %"class.std::allocator.2"* dereferenceable(1) %75)
  %77 = load i64, i64* %7, align 8
  %78 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %80 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %79 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %80, i32 0, i32 1
  %82 = load double*, double** %81, align 8
  %83 = getelementptr inbounds double, double* %82, i64 %77
  store double* %83, double** %81, align 8
  %84 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
  %85 = load double*, double** %84, align 8
  %86 = load double*, double** %12, align 8
  %87 = load i64, i64* %7, align 8
  %88 = sub i64 0, %87
  %89 = getelementptr inbounds double, double* %86, i64 %88
  %90 = load double*, double** %12, align 8
  %91 = call double* @_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_(double* %85, double* %89, double* %90)
  %92 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
  %93 = load double*, double** %92, align 8
  %94 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
  %95 = load double*, double** %94, align 8
  %96 = load i64, i64* %7, align 8
  %97 = getelementptr inbounds double, double* %95, i64 %96
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %93, double* %97, double* dereferenceable(8) %9)
  br label %151

; <label>:98:                                     ; preds = %41
  %99 = load i32, i32* @x.1021
  %100 = load i32, i32* @y.1022
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %98, %originalBBalteredBB
  %107 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %108 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %107, i32 0, i32 0
  %109 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %108 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %109, i32 0, i32 1
  %111 = load double*, double** %110, align 8
  %112 = load i64, i64* %7, align 8
  %113 = load i64, i64* %10, align 8
  %114 = sub i64 %112, %113
  %115 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %116 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %115)
  %117 = call double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %111, i64 %114, double* dereferenceable(8) %9, %"class.std::allocator.2"* dereferenceable(1) %116)
  %118 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %118, i32 0, i32 0
  %120 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %119 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %120, i32 0, i32 1
  store double* %117, double** %121, align 8
  %122 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
  %123 = load double*, double** %122, align 8
  %124 = load double*, double** %12, align 8
  %125 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %125, i32 0, i32 0
  %127 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %126 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %127, i32 0, i32 1
  %129 = load double*, double** %128, align 8
  %130 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %131 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %130)
  %132 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %123, double* %124, double* %129, %"class.std::allocator.2"* dereferenceable(1) %131)
  %133 = load i64, i64* %10, align 8
  %134 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %134, i32 0, i32 0
  %136 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %135 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %136, i32 0, i32 1
  %138 = load double*, double** %137, align 8
  %139 = getelementptr inbounds double, double* %138, i64 %133
  store double* %139, double** %137, align 8
  %140 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
  %141 = load double*, double** %140, align 8
  %142 = load double*, double** %12, align 8
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %141, double* %142, double* dereferenceable(8) %9)
  %143 = load i32, i32* @x.1021
  %144 = load i32, i32* @y.1022
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %151

; <label>:151:                                    ; preds = %originalBBpart2, %55
  br label %452

; <label>:152:                                    ; preds = %24
  %153 = load i64, i64* %7, align 8
  %154 = call i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.0"* %21, i64 %153, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %154, i64* %13, align 8
  %155 = call double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"* %21)
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %15, i32 0, i32 0
  store double* %155, double** %156, align 8
  %157 = call i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.144"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.144"* dereferenceable(8) %15)
  store i64 %157, i64* %14, align 8
  %158 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %159 = load i64, i64* %13, align 8
  %160 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %158, i64 %159)
  store double* %160, double** %16, align 8
  %161 = load double*, double** %16, align 8
  store double* %161, double** %17, align 8
  %162 = load double*, double** %16, align 8
  %163 = load i64, i64* %14, align 8
  %164 = getelementptr inbounds double, double* %162, i64 %163
  %165 = load i64, i64* %7, align 8
  %166 = load double*, double** %8, align 8
  %167 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %168 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %167)
          to label %169 unwind label %251

; <label>:169:                                    ; preds = %152
  %170 = invoke double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %164, i64 %165, double* dereferenceable(8) %166, %"class.std::allocator.2"* dereferenceable(1) %168)
          to label %171 unwind label %251

; <label>:171:                                    ; preds = %169
  store double* null, double** %17, align 8
  %172 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %172, i32 0, i32 0
  %174 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %173 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %174, i32 0, i32 0
  %176 = load double*, double** %175, align 8
  %177 = invoke dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
          to label %178 unwind label %251

; <label>:178:                                    ; preds = %171
  %179 = load i32, i32* @x.1021
  %180 = load i32, i32* @y.1022
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB2, label %originalBB2alteredBB

originalBB2:                                      ; preds = %178, %originalBB2alteredBB
  %187 = load double*, double** %177, align 8
  %188 = load double*, double** %16, align 8
  %189 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %190 = load i32, i32* @x.1021
  %191 = load i32, i32* @y.1022
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart24, label %originalBB2alteredBB

originalBBpart24:                                 ; preds = %originalBB2
  %198 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %189)
          to label %199 unwind label %251

; <label>:199:                                    ; preds = %originalBBpart24
  %200 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %176, double* %187, double* %188, %"class.std::allocator.2"* dereferenceable(1) %198)
          to label %201 unwind label %251

; <label>:201:                                    ; preds = %199
  store double* %200, double** %17, align 8
  %202 = load i64, i64* %7, align 8
  %203 = load double*, double** %17, align 8
  %204 = getelementptr inbounds double, double* %203, i64 %202
  store double* %204, double** %17, align 8
  %205 = invoke dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
          to label %206 unwind label %251

; <label>:206:                                    ; preds = %201
  %207 = load i32, i32* @x.1021
  %208 = load i32, i32* @y.1022
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %206, %originalBB6alteredBB
  %215 = load double*, double** %205, align 8
  %216 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %217 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %216, i32 0, i32 0
  %218 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %217 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %218, i32 0, i32 1
  %220 = load double*, double** %219, align 8
  %221 = load double*, double** %17, align 8
  %222 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %223 = load i32, i32* @x.1021
  %224 = load i32, i32* @y.1022
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  %231 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %222)
          to label %232 unwind label %251

; <label>:232:                                    ; preds = %originalBBpart28
  %233 = load i32, i32* @x.1021
  %234 = load i32, i32* @y.1022
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %232, %originalBB10alteredBB
  %241 = load i32, i32* @x.1021
  %242 = load i32, i32* @y.1022
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  %249 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %215, double* %220, double* %221, %"class.std::allocator.2"* dereferenceable(1) %231)
          to label %250 unwind label %251

; <label>:250:                                    ; preds = %originalBBpart212
  store double* %249, double** %17, align 8
  br label %386

; <label>:251:                                    ; preds = %originalBBpart212, %originalBBpart28, %201, %199, %originalBBpart24, %171, %169, %152
  %252 = landingpad { i8*, i32 }
          catch i8* null
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %18, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %19, align 4
  br label %255

; <label>:255:                                    ; preds = %251
  %256 = load i8*, i8** %18, align 8
  %257 = call i8* @__cxa_begin_catch(i8* %256) #2
  %258 = load double*, double** %17, align 8
  %259 = icmp ne double* %258, null
  br i1 %259, label %309, label %260

; <label>:260:                                    ; preds = %255
  %261 = load i32, i32* @x.1021
  %262 = load i32, i32* @y.1022
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %260, %originalBB14alteredBB
  %269 = load double*, double** %16, align 8
  %270 = load i64, i64* %14, align 8
  %271 = getelementptr inbounds double, double* %269, i64 %270
  %272 = load double*, double** %16, align 8
  %273 = load i64, i64* %14, align 8
  %274 = getelementptr inbounds double, double* %272, i64 %273
  %275 = load i64, i64* %7, align 8
  %276 = getelementptr inbounds double, double* %274, i64 %275
  %277 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %278 = load i32, i32* @x.1021
  %279 = load i32, i32* @y.1022
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  %286 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %277)
          to label %287 unwind label %289

; <label>:287:                                    ; preds = %originalBBpart216
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %271, double* %276, %"class.std::allocator.2"* dereferenceable(1) %286)
          to label %288 unwind label %289

; <label>:288:                                    ; preds = %287
  br label %332

; <label>:289:                                    ; preds = %originalBBpart232, %originalBBpart228, %314, %309, %287, %originalBBpart216
  %290 = load i32, i32* @x.1021
  %291 = load i32, i32* @y.1022
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %289, %originalBB18alteredBB
  %298 = landingpad { i8*, i32 }
          cleanup
  %299 = extractvalue { i8*, i32 } %298, 0
  store i8* %299, i8** %18, align 8
  %300 = extractvalue { i8*, i32 } %298, 1
  store i32 %300, i32* %19, align 4
  %301 = load i32, i32* @x.1021
  %302 = load i32, i32* @y.1022
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  invoke void @__cxa_end_catch()
          to label %369 unwind label %475

; <label>:309:                                    ; preds = %255
  %310 = load double*, double** %16, align 8
  %311 = load double*, double** %17, align 8
  %312 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %313 = invoke dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %312)
          to label %314 unwind label %289

; <label>:314:                                    ; preds = %309
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %310, double* %311, %"class.std::allocator.2"* dereferenceable(1) %313)
          to label %315 unwind label %289

; <label>:315:                                    ; preds = %314
  %316 = load i32, i32* @x.1021
  %317 = load i32, i32* @y.1022
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %315, %originalBB22alteredBB
  %324 = load i32, i32* @x.1021
  %325 = load i32, i32* @y.1022
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %332

; <label>:332:                                    ; preds = %originalBBpart224, %288
  %333 = load i32, i32* @x.1021
  %334 = load i32, i32* @y.1022
  %335 = sub i32 %333, 1
  %336 = mul i32 %333, %335
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %338, %339
  br i1 %340, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %332, %originalBB26alteredBB
  %341 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %342 = load double*, double** %16, align 8
  %343 = load i64, i64* %13, align 8
  %344 = load i32, i32* @x.1021
  %345 = load i32, i32* @y.1022
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %341, double* %342, i64 %343)
          to label %352 unwind label %289

; <label>:352:                                    ; preds = %originalBBpart228
  %353 = load i32, i32* @x.1021
  %354 = load i32, i32* @y.1022
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %352, %originalBB30alteredBB
  %361 = load i32, i32* @x.1021
  %362 = load i32, i32* @y.1022
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  invoke void @__cxa_rethrow() #15
          to label %478 unwind label %289

; <label>:369:                                    ; preds = %originalBBpart220
  %370 = load i32, i32* @x.1021
  %371 = load i32, i32* @y.1022
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %369, %originalBB34alteredBB
  %378 = load i32, i32* @x.1021
  %379 = load i32, i32* @y.1022
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %470

; <label>:386:                                    ; preds = %250
  %387 = load i32, i32* @x.1021
  %388 = load i32, i32* @y.1022
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %386, %originalBB38alteredBB
  %395 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %395, i32 0, i32 0
  %397 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %396 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %398 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %397, i32 0, i32 0
  %399 = load double*, double** %398, align 8
  %400 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %401 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %400, i32 0, i32 0
  %402 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %401 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %403 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %402, i32 0, i32 1
  %404 = load double*, double** %403, align 8
  %405 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %406 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %405)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %399, double* %404, %"class.std::allocator.2"* dereferenceable(1) %406)
  %407 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %408 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %409 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %408, i32 0, i32 0
  %410 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %409 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %411 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %410, i32 0, i32 0
  %412 = load double*, double** %411, align 8
  %413 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %414 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %413, i32 0, i32 0
  %415 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %414 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %416 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %415, i32 0, i32 2
  %417 = load double*, double** %416, align 8
  %418 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %419 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %418, i32 0, i32 0
  %420 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %419 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %421 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %420, i32 0, i32 0
  %422 = load double*, double** %421, align 8
  %423 = ptrtoint double* %417 to i64
  %424 = ptrtoint double* %422 to i64
  %425 = sub i64 %423, %424
  %426 = sdiv exact i64 %425, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %407, double* %412, i64 %426)
  %427 = load double*, double** %16, align 8
  %428 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %429 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %428, i32 0, i32 0
  %430 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %429 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %431 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %430, i32 0, i32 0
  store double* %427, double** %431, align 8
  %432 = load double*, double** %17, align 8
  %433 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %434 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %433, i32 0, i32 0
  %435 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %434 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %436 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %435, i32 0, i32 1
  store double* %432, double** %436, align 8
  %437 = load double*, double** %16, align 8
  %438 = load i64, i64* %13, align 8
  %439 = getelementptr inbounds double, double* %437, i64 %438
  %440 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %441 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %440, i32 0, i32 0
  %442 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %441 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %443 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %442, i32 0, i32 2
  store double* %439, double** %443, align 8
  %444 = load i32, i32* @x.1021
  %445 = load i32, i32* @y.1022
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBBpart261, label %originalBB38alteredBB

originalBBpart261:                                ; preds = %originalBB38
  br label %452

; <label>:452:                                    ; preds = %originalBBpart261, %151
  %453 = load i32, i32* @x.1021
  %454 = load i32, i32* @y.1022
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %452, %originalBB63alteredBB
  %461 = load i32, i32* @x.1021
  %462 = load i32, i32* @y.1022
  %463 = sub i32 %461, 1
  %464 = mul i32 %461, %463
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %466, %467
  br i1 %468, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %469

; <label>:469:                                    ; preds = %originalBBpart265, %4
  ret void

; <label>:470:                                    ; preds = %originalBBpart236
  %471 = load i8*, i8** %18, align 8
  %472 = load i32, i32* %19, align 4
  %473 = insertvalue { i8*, i32 } undef, i8* %471, 0
  %474 = insertvalue { i8*, i32 } %473, i32 %472, 1
  resume { i8*, i32 } %474

; <label>:475:                                    ; preds = %originalBBpart220
  %476 = landingpad { i8*, i32 }
          catch i8* null
  %477 = extractvalue { i8*, i32 } %476, 0
  call void @__clang_call_terminate(i8* %477) #12
  unreachable

; <label>:478:                                    ; preds = %originalBBpart232
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %98
  %479 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %480 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %479, i32 0, i32 0
  %481 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %480 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %482 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %481, i32 0, i32 1
  %483 = load double*, double** %482, align 8
  %484 = load i64, i64* %7, align 8
  %485 = load i64, i64* %10, align 8
  %_ = sub i64 0, %484
  %gen = add i64 %_, %485
  %_1 = shl i64 %484, %485
  %486 = sub i64 %484, %485
  %487 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %488 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %487)
  %489 = call double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double* %483, i64 %486, double* dereferenceable(8) %9, %"class.std::allocator.2"* dereferenceable(1) %488)
  %490 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %491 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %490, i32 0, i32 0
  %492 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %491 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %493 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %492, i32 0, i32 1
  store double* %489, double** %493, align 8
  %494 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
  %495 = load double*, double** %494, align 8
  %496 = load double*, double** %12, align 8
  %497 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %498 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %497, i32 0, i32 0
  %499 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %498 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %500 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %499, i32 0, i32 1
  %501 = load double*, double** %500, align 8
  %502 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %503 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %502)
  %504 = call double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %495, double* %496, double* %501, %"class.std::allocator.2"* dereferenceable(1) %503)
  %505 = load i64, i64* %10, align 8
  %506 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %507 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %506, i32 0, i32 0
  %508 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %507 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %509 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %508, i32 0, i32 1
  %510 = load double*, double** %509, align 8
  %511 = getelementptr inbounds double, double* %510, i64 %505
  store double* %511, double** %509, align 8
  %512 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %5)
  %513 = load double*, double** %512, align 8
  %514 = load double*, double** %12, align 8
  call void @_ZSt4fillIPddEvT_S1_RKT0_(double* %513, double* %514, double* dereferenceable(8) %9)
  br label %originalBB

originalBB2alteredBB:                             ; preds = %originalBB2, %178
  %515 = load double*, double** %177, align 8
  %516 = load double*, double** %16, align 8
  %517 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  br label %originalBB2

originalBB6alteredBB:                             ; preds = %originalBB6, %206
  %518 = load double*, double** %205, align 8
  %519 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %520 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %519, i32 0, i32 0
  %521 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %520 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %522 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %521, i32 0, i32 1
  %523 = load double*, double** %522, align 8
  %524 = load double*, double** %17, align 8
  %525 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %232
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %260
  %526 = load double*, double** %16, align 8
  %527 = load i64, i64* %14, align 8
  %528 = getelementptr inbounds double, double* %526, i64 %527
  %529 = load double*, double** %16, align 8
  %530 = load i64, i64* %14, align 8
  %531 = getelementptr inbounds double, double* %529, i64 %530
  %532 = load i64, i64* %7, align 8
  %533 = getelementptr inbounds double, double* %531, i64 %532
  %534 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %289
  %535 = landingpad { i8*, i32 }
          cleanup
  %536 = extractvalue { i8*, i32 } %535, 0
  store i8* %536, i8** %18, align 8
  %537 = extractvalue { i8*, i32 } %535, 1
  store i32 %537, i32* %19, align 4
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %315
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %332
  %538 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %539 = load double*, double** %16, align 8
  %540 = load i64, i64* %13, align 8
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %352
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %369
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %386
  %541 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %542 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %541, i32 0, i32 0
  %543 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %542 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %544 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %543, i32 0, i32 0
  %545 = load double*, double** %544, align 8
  %546 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %547 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %546, i32 0, i32 0
  %548 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %547 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %549 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %548, i32 0, i32 1
  %550 = load double*, double** %549, align 8
  %551 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %552 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %551)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %545, double* %550, %"class.std::allocator.2"* dereferenceable(1) %552)
  %553 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %554 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %555 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %554, i32 0, i32 0
  %556 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %555 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %557 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %556, i32 0, i32 0
  %558 = load double*, double** %557, align 8
  %559 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %560 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %559, i32 0, i32 0
  %561 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %560 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %562 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %561, i32 0, i32 2
  %563 = load double*, double** %562, align 8
  %564 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %565 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %564, i32 0, i32 0
  %566 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %565 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %567 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %566, i32 0, i32 0
  %568 = load double*, double** %567, align 8
  %569 = ptrtoint double* %563 to i64
  %570 = ptrtoint double* %568 to i64
  %_39 = sub i64 0, %569
  %gen40 = add i64 %_39, %570
  %_41 = shl i64 %569, %570
  %_42 = sub i64 %569, %570
  %gen43 = mul i64 %_42, %570
  %_44 = sub i64 0, %569
  %gen45 = add i64 %_44, %570
  %571 = sub i64 %569, %570
  %_46 = sub i64 %571, 8
  %gen47 = mul i64 %_46, 8
  %_48 = sub i64 0, %571
  %gen49 = add i64 %_48, 8
  %_50 = shl i64 %571, 8
  %_51 = sub i64 0, %571
  %gen52 = add i64 %_51, 8
  %_53 = sub i64 %571, 8
  %gen54 = mul i64 %_53, 8
  %_55 = sub i64 %571, 8
  %gen56 = mul i64 %_55, 8
  %_57 = sub i64 %571, 8
  %gen58 = mul i64 %_57, 8
  %_59 = shl i64 %571, 8
  %572 = sdiv exact i64 %571, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.1"* %553, double* %558, i64 %572)
  %573 = load double*, double** %16, align 8
  %574 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %575 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %574, i32 0, i32 0
  %576 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %575 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %577 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %576, i32 0, i32 0
  store double* %573, double** %577, align 8
  %578 = load double*, double** %17, align 8
  %579 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %580 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %579, i32 0, i32 0
  %581 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %580 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %582 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %581, i32 0, i32 1
  store double* %578, double** %582, align 8
  %583 = load double*, double** %16, align 8
  %584 = load i64, i64* %13, align 8
  %585 = getelementptr inbounds double, double* %583, i64 %584
  %586 = bitcast %"class.std::vector.0"* %21 to %"struct.std::_Vector_base.1"*
  %587 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %586, i32 0, i32 0
  %588 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %587 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %589 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %588, i32 0, i32 2
  store double* %585, double** %589, align 8
  br label %originalBB38

originalBB63alteredBB:                            ; preds = %originalBB63, %452
  br label %originalBB63
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt6vectorIdSaIdEE3endEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.144", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.144"* %2, double** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %2, i32 0, i32 0
  %10 = load double*, double** %9, align 8
  ret double* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(%"class.std::vector.0"*, double*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store double* %1, double** %4, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %7 = bitcast %"class.std::vector.0"* %6 to %"struct.std::_Vector_base.1"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load double*, double** %10, align 8
  %12 = load double*, double** %4, align 8
  %13 = ptrtoint double* %11 to i64
  %14 = ptrtoint double* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 8
  store i64 %16, i64* %5, align 8
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %49

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* @x.1025
  %21 = load i32, i32* @y.1026
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load double*, double** %4, align 8
  %29 = bitcast %"class.std::vector.0"* %6 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %30 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %31, i32 0, i32 1
  %33 = load double*, double** %32, align 8
  %34 = bitcast %"class.std::vector.0"* %6 to %"struct.std::_Vector_base.1"*
  %35 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %34)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %28, double* %33, %"class.std::allocator.2"* dereferenceable(1) %35)
  %36 = load double*, double** %4, align 8
  %37 = bitcast %"class.std::vector.0"* %6 to %"struct.std::_Vector_base.1"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %38 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %39, i32 0, i32 1
  store double* %36, double** %40, align 8
  %41 = load i32, i32* @x.1025
  %42 = load i32, i32* @y.1026
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49

; <label>:49:                                     ; preds = %originalBBpart2, %2
  %50 = load i32, i32* @x.1025
  %51 = load i32, i32* @y.1026
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i32, i32* @x.1025
  %59 = load i32, i32* @y.1026
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %19
  %66 = load double*, double** %4, align 8
  %67 = bitcast %"class.std::vector.0"* %6 to %"struct.std::_Vector_base.1"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %67, i32 0, i32 0
  %69 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %68 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %69, i32 0, i32 1
  %71 = load double*, double** %70, align 8
  %72 = bitcast %"class.std::vector.0"* %6 to %"struct.std::_Vector_base.1"*
  %73 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %72)
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %66, double* %71, %"class.std::allocator.2"* dereferenceable(1) %73)
  %74 = load double*, double** %4, align 8
  %75 = bitcast %"class.std::vector.0"* %6 to %"struct.std::_Vector_base.1"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %76 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %77, i32 0, i32 1
  store double* %74, double** %78, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.144"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.144"* dereferenceable(8)) #0 comdat {
  %3 = load i32, i32* @x.1027
  %4 = load i32, i32* @y.1028
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.144"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.144"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.144"* %0, %"class.__gnu_cxx::__normal_iterator.144"** %11, align 8
  store %"class.__gnu_cxx::__normal_iterator.144"* %1, %"class.__gnu_cxx::__normal_iterator.144"** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.144"*, %"class.__gnu_cxx::__normal_iterator.144"** %11, align 8
  %14 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %13)
  %15 = load double*, double** %14, align 8
  %16 = load %"class.__gnu_cxx::__normal_iterator.144"*, %"class.__gnu_cxx::__normal_iterator.144"** %12, align 8
  %17 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %16)
  %18 = load double*, double** %17, align 8
  %19 = ptrtoint double* %15 to i64
  %20 = ptrtoint double* %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 8
  %23 = load i32, i32* @x.1027
  %24 = load i32, i32* @y.1028
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %22

originalBBalteredBB:                              ; preds = %originalBB, %2
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.144"*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.144"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.144"* %0, %"class.__gnu_cxx::__normal_iterator.144"** %31, align 8
  store %"class.__gnu_cxx::__normal_iterator.144"* %1, %"class.__gnu_cxx::__normal_iterator.144"** %32, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator.144"*, %"class.__gnu_cxx::__normal_iterator.144"** %31, align 8
  %34 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %33)
  %35 = load double*, double** %34, align 8
  %36 = load %"class.__gnu_cxx::__normal_iterator.144"*, %"class.__gnu_cxx::__normal_iterator.144"** %32, align 8
  %37 = call dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"* %36)
  %38 = load double*, double** %37, align 8
  %39 = ptrtoint double* %35 to i64
  %40 = ptrtoint double* %38 to i64
  %_ = shl i64 %39, %40
  %_1 = shl i64 %39, %40
  %_2 = sub i64 %39, %40
  %gen = mul i64 %_2, %40
  %_3 = sub i64 0, %39
  %gen4 = add i64 %_3, %40
  %41 = sub i64 %39, %40
  %_5 = sub i64 %41, 8
  %gen6 = mul i64 %_5, 8
  %_7 = sub i64 0, %41
  %gen8 = add i64 %_7, 8
  %_9 = shl i64 %41, 8
  %42 = sdiv exact i64 %41, 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_move_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.1029
  %6 = load i32, i32* @y.1030
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  %16 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %13, align 8
  store double* %1, double** %14, align 8
  store double* %2, double** %15, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %16, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = load double*, double** %15, align 8
  %20 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %16, align 8
  %21 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %17, double* %18, double* %19, %"class.std::allocator.2"* dereferenceable(1) %20)
  %22 = load i32, i32* @x.1029
  %23 = load i32, i32* @y.1030
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %21

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  %32 = alloca double*, align 8
  %33 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %30, align 8
  store double* %1, double** %31, align 8
  store double* %2, double** %32, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %33, align 8
  %34 = load double*, double** %30, align 8
  %35 = load double*, double** %31, align 8
  %36 = load double*, double** %32, align 8
  %37 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %33, align 8
  %38 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %34, double* %35, double* %36, %"class.std::allocator.2"* dereferenceable(1) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13copy_backwardIPdS0_ET0_T_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double** @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.144"*) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.144"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.144"* %0, %"class.__gnu_cxx::__normal_iterator.144"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.144"*, %"class.__gnu_cxx::__normal_iterator.144"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %3, i32 0, i32 0
  ret double** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPddEvT_S1_RKT0_(double*, double*, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  call void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double* %8, double* %10, double* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt24__uninitialized_fill_n_aIPdmddET_S1_T0_RKT1_RSaIT2_E(double*, i64, double* dereferenceable(8), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.1037
  %6 = load i32, i32* @y.1038
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca double*, align 8
  %14 = alloca i64, align 8
  %15 = alloca double*, align 8
  %16 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %13, align 8
  store i64 %1, i64* %14, align 8
  store double* %2, double** %15, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %16, align 8
  %17 = load double*, double** %13, align 8
  %18 = load i64, i64* %14, align 8
  %19 = load double*, double** %15, align 8
  %20 = call double* @_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_(double* %17, i64 %18, double* dereferenceable(8) %19)
  %21 = load i32, i32* @x.1037
  %22 = load i32, i32* @y.1038
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %4
  %29 = alloca double*, align 8
  %30 = alloca i64, align 8
  %31 = alloca double*, align 8
  %32 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %29, align 8
  store i64 %1, i64* %30, align 8
  store double* %2, double** %31, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %32, align 8
  %33 = load double*, double** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load double*, double** %31, align 8
  %36 = call double* @_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_(double* %33, i64 %34, double* dereferenceable(8) %35)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.1039
  %5 = load i32, i32* @y.1040
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.0"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %18 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %17)
  %19 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %17)
  %20 = sub i64 %18, %19
  %21 = load i64, i64* %13, align 8
  %22 = icmp ult i64 %20, %21
  %23 = load i32, i32* @x.1039
  %24 = load i32, i32* @y.1040
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %33

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i8*, i8** %14, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %32) #15
  unreachable

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32, i32* @x.1039
  %35 = load i32, i32* @y.1040
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %33, %originalBB14alteredBB
  %42 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %17)
  %43 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %17)
  store i64 %43, i64* %16, align 8
  %44 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %13)
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %42, %45
  store i64 %46, i64* %15, align 8
  %47 = load i64, i64* %15, align 8
  %48 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %17)
  %49 = icmp ult i64 %47, %48
  %50 = load i32, i32* @x.1039
  %51 = load i32, i32* @y.1040
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart222, label %originalBB14alteredBB

originalBBpart222:                                ; preds = %originalBB14
  br i1 %49, label %78, label %58

; <label>:58:                                     ; preds = %originalBBpart222
  %59 = load i32, i32* @x.1039
  %60 = load i32, i32* @y.1040
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %58, %originalBB24alteredBB
  %67 = load i64, i64* %15, align 8
  %68 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %17)
  %69 = icmp ugt i64 %67, %68
  %70 = load i32, i32* @x.1039
  %71 = load i32, i32* @y.1040
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br i1 %69, label %78, label %80

; <label>:78:                                     ; preds = %originalBBpart226, %originalBBpart222
  %79 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %17)
  br label %82

; <label>:80:                                     ; preds = %originalBBpart226
  %81 = load i64, i64* %15, align 8
  br label %82

; <label>:82:                                     ; preds = %80, %78
  %83 = phi i64 [ %79, %78 ], [ %81, %80 ]
  ret i64 %83

originalBBalteredBB:                              ; preds = %originalBB, %3
  %84 = alloca %"class.std::vector.0"*, align 8
  %85 = alloca i64, align 8
  %86 = alloca i8*, align 8
  %87 = alloca i64, align 8
  %88 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %84, align 8
  store i64 %1, i64* %85, align 8
  store i8* %2, i8** %86, align 8
  %89 = load %"class.std::vector.0"*, %"class.std::vector.0"** %84, align 8
  %90 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %89)
  %91 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %89)
  %_ = shl i64 %90, %91
  %_1 = shl i64 %90, %91
  %_2 = sub i64 0, %90
  %gen = add i64 %_2, %91
  %_3 = sub i64 %90, %91
  %gen4 = mul i64 %_3, %91
  %_5 = shl i64 %90, %91
  %_6 = sub i64 %90, %91
  %gen7 = mul i64 %_6, %91
  %_8 = sub i64 0, %90
  %gen9 = add i64 %_8, %91
  %_10 = sub i64 %90, %91
  %gen11 = mul i64 %_10, %91
  %_12 = sub i64 %90, %91
  %gen13 = mul i64 %_12, %91
  %92 = sub i64 %90, %91
  %93 = load i64, i64* %85, align 8
  %94 = icmp ult i64 %92, %93
  br label %originalBB

originalBB14alteredBB:                            ; preds = %originalBB14, %33
  %95 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %17)
  %96 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %17)
  store i64 %96, i64* %16, align 8
  %97 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %13)
  %98 = load i64, i64* %97, align 8
  %_15 = shl i64 %95, %98
  %_16 = sub i64 0, %95
  %gen17 = add i64 %_16, %98
  %_18 = sub i64 0, %95
  %gen19 = add i64 %_18, %98
  %_20 = shl i64 %95, %98
  %99 = add i64 %95, %98
  store i64 %99, i64* %15, align 8
  %100 = load i64, i64* %15, align 8
  %101 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.0"* %17)
  %102 = icmp ult i64 %100, %101
  br label %originalBB14

originalBB24alteredBB:                            ; preds = %originalBB24, %58
  %103 = load i64, i64* %15, align 8
  %104 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"* %17)
  %105 = icmp ugt i64 %103, %104
  br label %originalBB24
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt6vectorIdSaIdEE5beginEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.144", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.144"* %2, double** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %2, i32 0, i32 0
  %10 = load double*, double** %9, align 8
  ret double* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.1043
  %6 = load i32, i32* @y.1044
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  %16 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %13, align 8
  store double* %1, double** %14, align 8
  store double* %2, double** %15, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %16, align 8
  %17 = load double*, double** %13, align 8
  %18 = load double*, double** %14, align 8
  %19 = load double*, double** %15, align 8
  %20 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %16, align 8
  %21 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %17, double* %18, double* %19, %"class.std::allocator.2"* dereferenceable(1) %20)
  %22 = load i32, i32* @x.1043
  %23 = load i32, i32* @y.1044
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %21

originalBBalteredBB:                              ; preds = %originalBB, %4
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  %32 = alloca double*, align 8
  %33 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %30, align 8
  store double* %1, double** %31, align 8
  store double* %2, double** %32, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %33, align 8
  %34 = load double*, double** %30, align 8
  %35 = load double*, double** %31, align 8
  %36 = load double*, double** %32, align 8
  %37 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %33, align 8
  %38 = call double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double* %34, double* %35, double* %36, %"class.std::allocator.2"* dereferenceable(1) %37)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aIPdS0_dET0_T_S2_S1_RSaIT1_E(double*, double*, double*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = load double*, double** %7, align 8
  %12 = call double* @_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_(double* %9, double* %10, double* %11)
  ret double* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyIPdS0_ET0_T_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPdS2_EET0_T_S4_S3_(double*, double*, double*) #0 comdat align 2 {
  %4 = load i32, i32* @x.1049
  %5 = load i32, i32* @y.1050
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = load double*, double** %13, align 8
  %17 = load double*, double** %14, align 8
  %18 = call double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double* %15, double* %16, double* %17)
  %19 = load i32, i32* @x.1049
  %20 = load i32, i32* @y.1050
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %18

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca double*, align 8
  %28 = alloca double*, align 8
  %29 = alloca double*, align 8
  store double* %0, double** %27, align 8
  store double* %1, double** %28, align 8
  store double* %2, double** %29, align 8
  %30 = load double*, double** %27, align 8
  %31 = load double*, double** %28, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double* %30, double* %31, double* %32)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyIPdS0_ET0_T_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.1051
  %5 = load i32, i32* @y.1052
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %15 = load double*, double** %12, align 8
  %16 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %15)
  %17 = load double*, double** %13, align 8
  %18 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %17)
  %19 = load double*, double** %14, align 8
  %20 = call double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %16, double* %18, double* %19)
  %21 = load i32, i32* @x.1051
  %22 = load i32, i32* @y.1052
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret double* %20

originalBBalteredBB:                              ; preds = %originalBB, %3
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  store double* %0, double** %29, align 8
  store double* %1, double** %30, align 8
  store double* %2, double** %31, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %32)
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZSt12__miter_baseIPdET_S1_(double* %34)
  %36 = load double*, double** %31, align 8
  %37 = call double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double* %33, double* %35, double* %36)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %11)
  %13 = call double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %12)
  %14 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %13)
  ret double* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt12__miter_baseIPdET_S1_(double*) #1 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt23__copy_move_backward_a2ILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load double*, double** %5, align 8
  %10 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %9)
  %11 = load double*, double** %6, align 8
  %12 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %11)
  %13 = call double* @_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_(double* %8, double* %10, double* %12)
  %14 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %6, double* %13)
  ret double* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__copy_move_backward_aILb0EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIdEEPT_PKS3_S6_S4_(double*, double*, double*) #1 comdat align 2 {
  %4 = load i32, i32* @x.1063
  %5 = load i32, i32* @y.1064
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca i64, align 8
  store double* %0, double** %12, align 8
  store double* %1, double** %13, align 8
  store double* %2, double** %14, align 8
  %16 = load double*, double** %13, align 8
  %17 = load double*, double** %12, align 8
  %18 = ptrtoint double* %16 to i64
  %19 = ptrtoint double* %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  store i64 %21, i64* %15, align 8
  %22 = load i64, i64* %15, align 8
  %23 = icmp ne i64 %22, 0
  %24 = load i32, i32* @x.1063
  %25 = load i32, i32* @y.1064
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %42

; <label>:32:                                     ; preds = %originalBBpart2
  %33 = load double*, double** %14, align 8
  %34 = load i64, i64* %15, align 8
  %35 = sub i64 0, %34
  %36 = getelementptr inbounds double, double* %33, i64 %35
  %37 = bitcast double* %36 to i8*
  %38 = load double*, double** %12, align 8
  %39 = bitcast double* %38 to i8*
  %40 = load i64, i64* %15, align 8
  %41 = mul i64 8, %40
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %37, i8* %39, i64 %41, i32 8, i1 false)
  br label %42

; <label>:42:                                     ; preds = %32, %originalBBpart2
  %43 = load double*, double** %14, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 0, %44
  %46 = getelementptr inbounds double, double* %43, i64 %45
  ret double* %46

originalBBalteredBB:                              ; preds = %originalBB, %3
  %47 = alloca double*, align 8
  %48 = alloca double*, align 8
  %49 = alloca double*, align 8
  %50 = alloca i64, align 8
  store double* %0, double** %47, align 8
  store double* %1, double** %48, align 8
  store double* %2, double** %49, align 8
  %51 = load double*, double** %48, align 8
  %52 = load double*, double** %47, align 8
  %53 = ptrtoint double* %51 to i64
  %54 = ptrtoint double* %52 to i64
  %_ = shl i64 %53, %54
  %_1 = shl i64 %53, %54
  %55 = sub i64 %53, %54
  %_2 = shl i64 %55, 8
  %_3 = sub i64 %55, 8
  %gen = mul i64 %_3, 8
  %56 = sdiv exact i64 %55, 8
  store i64 %56, i64* %50, align 8
  %57 = load i64, i64* %50, align 8
  %58 = icmp ne i64 %57, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(double*, double*, double* dereferenceable(8)) #1 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %6, align 8
  %9 = load double, double* %8, align 8
  store double %9, double* %7, align 8
  br label %10

; <label>:10:                                     ; preds = %originalBBpart24, %3
  %11 = load double*, double** %4, align 8
  %12 = load double*, double** %5, align 8
  %13 = icmp ne double* %11, %12
  br i1 %13, label %14, label %52

; <label>:14:                                     ; preds = %10
  %15 = load i32, i32* @x.1065
  %16 = load i32, i32* @y.1066
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load double, double* %7, align 8
  %24 = load double*, double** %4, align 8
  store double %23, double* %24, align 8
  %25 = load i32, i32* @x.1065
  %26 = load i32, i32* @y.1066
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load i32, i32* @x.1065
  %35 = load i32, i32* @y.1066
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load double*, double** %4, align 8
  %43 = getelementptr inbounds double, double* %42, i32 1
  store double* %43, double** %4, align 8
  %44 = load i32, i32* @x.1065
  %45 = load i32, i32* @y.1066
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %10

; <label>:52:                                     ; preds = %10
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %14
  %53 = load double, double* %7, align 8
  %54 = load double*, double** %4, align 8
  store double %53, double* %54, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %55 = load double*, double** %4, align 8
  %56 = getelementptr inbounds double, double* %55, i32 1
  store double* %56, double** %4, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt20uninitialized_fill_nIPdmdET_S1_T0_RKT1_(double*, i64, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_(double* %8, i64 %9, double* dereferenceable(8) %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPdmdEET_S3_T0_RKT1_(double*, i64, double* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load double*, double** %6, align 8
  %10 = call double* @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(double* %7, i64 %8, double* dereferenceable(8) %9)
  ret double* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(double*, i64, double* dereferenceable(8)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  store double* %0, double** %4, align 8
  store i64 %1, i64* %5, align 8
  store double* %2, double** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %8, i64 %9, double* dereferenceable(8) %10)
  %12 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** dereferenceable(8) %4, double* %11)
  ret double* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double*, i64, double* dereferenceable(8)) #1 comdat {
  %4 = load i32, i32* @x.1073
  %5 = load i32, i32* @y.1074
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca double*, align 8
  %13 = alloca i64, align 8
  %14 = alloca double*, align 8
  %15 = alloca double, align 8
  %16 = alloca i64, align 8
  store double* %0, double** %12, align 8
  store i64 %1, i64* %13, align 8
  store double* %2, double** %14, align 8
  %17 = load double*, double** %14, align 8
  %18 = load double, double* %17, align 8
  store double %18, double* %15, align 8
  %19 = load i64, i64* %13, align 8
  store i64 %19, i64* %16, align 8
  %20 = load i32, i32* @x.1073
  %21 = load i32, i32* @y.1074
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28

; <label>:28:                                     ; preds = %34, %originalBBpart2
  %29 = load i64, i64* %16, align 8
  %30 = icmp ugt i64 %29, 0
  br i1 %30, label %31, label %39

; <label>:31:                                     ; preds = %28
  %32 = load double, double* %15, align 8
  %33 = load double*, double** %12, align 8
  store double %32, double* %33, align 8
  br label %34

; <label>:34:                                     ; preds = %31
  %35 = load i64, i64* %16, align 8
  %36 = add i64 %35, -1
  store i64 %36, i64* %16, align 8
  %37 = load double*, double** %12, align 8
  %38 = getelementptr inbounds double, double* %37, i32 1
  store double* %38, double** %12, align 8
  br label %28

; <label>:39:                                     ; preds = %28
  %40 = load double*, double** %12, align 8
  ret double* %40

originalBBalteredBB:                              ; preds = %originalBB, %3
  %41 = alloca double*, align 8
  %42 = alloca i64, align 8
  %43 = alloca double*, align 8
  %44 = alloca double, align 8
  %45 = alloca i64, align 8
  store double* %0, double** %41, align 8
  store i64 %1, i64* %42, align 8
  store double* %2, double** %43, align 8
  %46 = load double*, double** %43, align 8
  %47 = load double, double* %46, align 8
  store double %47, double* %44, align 8
  %48 = load i64, i64* %42, align 8
  store i64 %48, i64* %45, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.0"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4)
  %6 = call i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.1077
  %3 = load i32, i32* @y.1078
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.2"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %10, align 8
  store i64 1152921504606846975, i64* %11, align 8
  %13 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.1077
  %18 = load i32, i32* @y.1078
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.2"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %25, align 8
  store i64 1152921504606846975, i64* %26, align 8
  %28 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE8max_sizeERKS1_(%"class.std::allocator.2"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.144"*, double** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.1081
  %4 = load i32, i32* @y.1082
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.144"*, align 8
  %12 = alloca double**, align 8
  store %"class.__gnu_cxx::__normal_iterator.144"* %0, %"class.__gnu_cxx::__normal_iterator.144"** %11, align 8
  store double** %1, double*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.144"*, %"class.__gnu_cxx::__normal_iterator.144"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %13, i32 0, i32 0
  %15 = load double**, double*** %12, align 8
  %16 = load double*, double** %15, align 8
  store double* %16, double** %14, align 8
  %17 = load i32, i32* @x.1081
  %18 = load i32, i32* @y.1082
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.144"*, align 8
  %26 = alloca double**, align 8
  store %"class.__gnu_cxx::__normal_iterator.144"* %0, %"class.__gnu_cxx::__normal_iterator.144"** %25, align 8
  store double** %1, double*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.144"*, %"class.__gnu_cxx::__normal_iterator.144"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.144", %"class.__gnu_cxx::__normal_iterator.144"* %27, i32 0, i32 0
  %29 = load double**, double*** %26, align 8
  %30 = load double*, double** %29, align 8
  store double* %30, double** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.103"*, %class.Tensor*, i64, %class.Tensor* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.145", align 8
  %6 = alloca %"class.std::vector.103"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %class.Tensor*, align 8
  %9 = alloca %class.Tensor, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.145", align 8
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.145", align 8
  %16 = alloca %class.Tensor*, align 8
  %17 = alloca %class.Tensor*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %5, i32 0, i32 0
  store %class.Tensor* %1, %class.Tensor** %20, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %class.Tensor* %3, %class.Tensor** %8, align 8
  %21 = load %"class.std::vector.103"*, %"class.std::vector.103"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %436

; <label>:24:                                     ; preds = %4
  %25 = load i32, i32* @x.1083
  %26 = load i32, i32* @y.1084
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %34 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %35, i32 0, i32 2
  %37 = load %class.Tensor*, %class.Tensor** %36, align 8
  %38 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %38, i32 0, i32 0
  %40 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %39 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %40, i32 0, i32 1
  %42 = load %class.Tensor*, %class.Tensor** %41, align 8
  %43 = ptrtoint %class.Tensor* %37 to i64
  %44 = ptrtoint %class.Tensor* %42 to i64
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 24
  %47 = load i64, i64* %7, align 8
  %48 = icmp uge i64 %46, %47
  %49 = load i32, i32* @x.1083
  %50 = load i32, i32* @y.1084
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %48, label %57, label %167

; <label>:57:                                     ; preds = %originalBBpart2
  %58 = load %class.Tensor*, %class.Tensor** %8, align 8
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %9, %class.Tensor* dereferenceable(24) %58)
  %59 = call %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE3endEv(%"class.std::vector.103"* %21)
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %11, i32 0, i32 0
  store %class.Tensor* %59, %class.Tensor** %60, align 8
  %61 = call i64 @_ZN9__gnu_cxxmiIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.145"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.145"* dereferenceable(8) %5)
  store i64 %61, i64* %10, align 8
  %62 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %63 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %64, i32 0, i32 1
  %66 = load %class.Tensor*, %class.Tensor** %65, align 8
  store %class.Tensor* %66, %class.Tensor** %12, align 8
  %67 = load i64, i64* %10, align 8
  %68 = load i64, i64* %7, align 8
  %69 = icmp ugt i64 %67, %68
  br i1 %69, label %70, label %113

; <label>:70:                                     ; preds = %57
  %71 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %72 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %73, i32 0, i32 1
  %75 = load %class.Tensor*, %class.Tensor** %74, align 8
  %76 = load i64, i64* %7, align 8
  %77 = sub i64 0, %76
  %78 = getelementptr inbounds %class.Tensor, %class.Tensor* %75, i64 %77
  %79 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %79, i32 0, i32 0
  %81 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %80 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %81, i32 0, i32 1
  %83 = load %class.Tensor*, %class.Tensor** %82, align 8
  %84 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %84, i32 0, i32 0
  %86 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %85 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %86, i32 0, i32 1
  %88 = load %class.Tensor*, %class.Tensor** %87, align 8
  %89 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %90 = call dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %89)
  %91 = call %class.Tensor* @_ZSt22__uninitialized_move_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Tensor* %78, %class.Tensor* %83, %class.Tensor* %88, %"class.std::allocator.105"* dereferenceable(1) %90)
  %92 = load i64, i64* %7, align 8
  %93 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %93, i32 0, i32 0
  %95 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %94 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %95, i32 0, i32 1
  %97 = load %class.Tensor*, %class.Tensor** %96, align 8
  %98 = getelementptr inbounds %class.Tensor, %class.Tensor* %97, i64 %92
  store %class.Tensor* %98, %class.Tensor** %96, align 8
  %99 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
  %100 = load %class.Tensor*, %class.Tensor** %99, align 8
  %101 = load %class.Tensor*, %class.Tensor** %12, align 8
  %102 = load i64, i64* %7, align 8
  %103 = sub i64 0, %102
  %104 = getelementptr inbounds %class.Tensor, %class.Tensor* %101, i64 %103
  %105 = load %class.Tensor*, %class.Tensor** %12, align 8
  %106 = call %class.Tensor* @_ZSt13copy_backwardIP6TensorILi1ELi3EES2_ET0_T_S4_S3_(%class.Tensor* %100, %class.Tensor* %104, %class.Tensor* %105)
  %107 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
  %108 = load %class.Tensor*, %class.Tensor** %107, align 8
  %109 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
  %110 = load %class.Tensor*, %class.Tensor** %109, align 8
  %111 = load i64, i64* %7, align 8
  %112 = getelementptr inbounds %class.Tensor, %class.Tensor* %110, i64 %111
  call void @_ZSt4fillIP6TensorILi1ELi3EES1_EvT_S3_RKT0_(%class.Tensor* %108, %class.Tensor* %112, %class.Tensor* dereferenceable(24) %9)
  br label %166

; <label>:113:                                    ; preds = %57
  %114 = load i32, i32* @x.1083
  %115 = load i32, i32* @y.1084
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %113, %originalBB6alteredBB
  %122 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %122, i32 0, i32 0
  %124 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %123 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %124, i32 0, i32 1
  %126 = load %class.Tensor*, %class.Tensor** %125, align 8
  %127 = load i64, i64* %7, align 8
  %128 = load i64, i64* %10, align 8
  %129 = sub i64 %127, %128
  %130 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %131 = call dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %130)
  %132 = call %class.Tensor* @_ZSt24__uninitialized_fill_n_aIP6TensorILi1ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor* %126, i64 %129, %class.Tensor* dereferenceable(24) %9, %"class.std::allocator.105"* dereferenceable(1) %131)
  %133 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %133, i32 0, i32 0
  %135 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %134 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %135, i32 0, i32 1
  store %class.Tensor* %132, %class.Tensor** %136, align 8
  %137 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
  %138 = load %class.Tensor*, %class.Tensor** %137, align 8
  %139 = load %class.Tensor*, %class.Tensor** %12, align 8
  %140 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %140, i32 0, i32 0
  %142 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %141 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %142, i32 0, i32 1
  %144 = load %class.Tensor*, %class.Tensor** %143, align 8
  %145 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %146 = call dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %145)
  %147 = call %class.Tensor* @_ZSt22__uninitialized_move_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Tensor* %138, %class.Tensor* %139, %class.Tensor* %144, %"class.std::allocator.105"* dereferenceable(1) %146)
  %148 = load i64, i64* %10, align 8
  %149 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %149, i32 0, i32 0
  %151 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %150 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %152 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %151, i32 0, i32 1
  %153 = load %class.Tensor*, %class.Tensor** %152, align 8
  %154 = getelementptr inbounds %class.Tensor, %class.Tensor* %153, i64 %148
  store %class.Tensor* %154, %class.Tensor** %152, align 8
  %155 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
  %156 = load %class.Tensor*, %class.Tensor** %155, align 8
  %157 = load %class.Tensor*, %class.Tensor** %12, align 8
  call void @_ZSt4fillIP6TensorILi1ELi3EES1_EvT_S3_RKT0_(%class.Tensor* %156, %class.Tensor* %157, %class.Tensor* dereferenceable(24) %9)
  %158 = load i32, i32* @x.1083
  %159 = load i32, i32* @y.1084
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart221, label %originalBB6alteredBB

originalBBpart221:                                ; preds = %originalBB6
  br label %166

; <label>:166:                                    ; preds = %originalBBpart221, %70
  br label %435

; <label>:167:                                    ; preds = %originalBBpart2
  %168 = load i32, i32* @x.1083
  %169 = load i32, i32* @y.1084
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %167, %originalBB23alteredBB
  %176 = load i64, i64* %7, align 8
  %177 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.103"* %21, i64 %176, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %177, i64* %13, align 8
  %178 = call %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.103"* %21)
  %179 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %15, i32 0, i32 0
  store %class.Tensor* %178, %class.Tensor** %179, align 8
  %180 = call i64 @_ZN9__gnu_cxxmiIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.145"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.145"* dereferenceable(8) %15)
  store i64 %180, i64* %14, align 8
  %181 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %182 = load i64, i64* %13, align 8
  %183 = call %class.Tensor* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.104"* %181, i64 %182)
  store %class.Tensor* %183, %class.Tensor** %16, align 8
  %184 = load %class.Tensor*, %class.Tensor** %16, align 8
  store %class.Tensor* %184, %class.Tensor** %17, align 8
  %185 = load %class.Tensor*, %class.Tensor** %16, align 8
  %186 = load i64, i64* %14, align 8
  %187 = getelementptr inbounds %class.Tensor, %class.Tensor* %185, i64 %186
  %188 = load i64, i64* %7, align 8
  %189 = load %class.Tensor*, %class.Tensor** %8, align 8
  %190 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %191 = load i32, i32* @x.1083
  %192 = load i32, i32* @y.1084
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  %199 = invoke dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %190)
          to label %200 unwind label %282

; <label>:200:                                    ; preds = %originalBBpart225
  %201 = invoke %class.Tensor* @_ZSt24__uninitialized_fill_n_aIP6TensorILi1ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor* %187, i64 %188, %class.Tensor* dereferenceable(24) %189, %"class.std::allocator.105"* dereferenceable(1) %199)
          to label %202 unwind label %282

; <label>:202:                                    ; preds = %200
  %203 = load i32, i32* @x.1083
  %204 = load i32, i32* @y.1084
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %202, %originalBB27alteredBB
  store %class.Tensor* null, %class.Tensor** %17, align 8
  %211 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %212 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %211, i32 0, i32 0
  %213 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %212 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %213, i32 0, i32 0
  %215 = load %class.Tensor*, %class.Tensor** %214, align 8
  %216 = load i32, i32* @x.1083
  %217 = load i32, i32* @y.1084
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  %224 = invoke dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
          to label %225 unwind label %282

; <label>:225:                                    ; preds = %originalBBpart229
  %226 = load %class.Tensor*, %class.Tensor** %224, align 8
  %227 = load %class.Tensor*, %class.Tensor** %16, align 8
  %228 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %229 = invoke dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %228)
          to label %230 unwind label %282

; <label>:230:                                    ; preds = %225
  %231 = invoke %class.Tensor* @_ZSt34__uninitialized_move_if_noexcept_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Tensor* %215, %class.Tensor* %226, %class.Tensor* %227, %"class.std::allocator.105"* dereferenceable(1) %229)
          to label %232 unwind label %282

; <label>:232:                                    ; preds = %230
  store %class.Tensor* %231, %class.Tensor** %17, align 8
  %233 = load i64, i64* %7, align 8
  %234 = load %class.Tensor*, %class.Tensor** %17, align 8
  %235 = getelementptr inbounds %class.Tensor, %class.Tensor* %234, i64 %233
  store %class.Tensor* %235, %class.Tensor** %17, align 8
  %236 = invoke dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
          to label %237 unwind label %282

; <label>:237:                                    ; preds = %232
  %238 = load i32, i32* @x.1083
  %239 = load i32, i32* @y.1084
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %237, %originalBB31alteredBB
  %246 = load %class.Tensor*, %class.Tensor** %236, align 8
  %247 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %247, i32 0, i32 0
  %249 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %248 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %250 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %249, i32 0, i32 1
  %251 = load %class.Tensor*, %class.Tensor** %250, align 8
  %252 = load %class.Tensor*, %class.Tensor** %17, align 8
  %253 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %254 = load i32, i32* @x.1083
  %255 = load i32, i32* @y.1084
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  %262 = invoke dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %253)
          to label %263 unwind label %282

; <label>:263:                                    ; preds = %originalBBpart233
  %264 = invoke %class.Tensor* @_ZSt34__uninitialized_move_if_noexcept_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Tensor* %246, %class.Tensor* %251, %class.Tensor* %252, %"class.std::allocator.105"* dereferenceable(1) %262)
          to label %265 unwind label %282

; <label>:265:                                    ; preds = %263
  %266 = load i32, i32* @x.1083
  %267 = load i32, i32* @y.1084
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %265, %originalBB35alteredBB
  store %class.Tensor* %264, %class.Tensor** %17, align 8
  %274 = load i32, i32* @x.1083
  %275 = load i32, i32* @y.1084
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %385

; <label>:282:                                    ; preds = %263, %originalBBpart233, %232, %230, %225, %originalBBpart229, %200, %originalBBpart225
  %283 = landingpad { i8*, i32 }
          catch i8* null
  %284 = extractvalue { i8*, i32 } %283, 0
  store i8* %284, i8** %18, align 8
  %285 = extractvalue { i8*, i32 } %283, 1
  store i32 %285, i32* %19, align 4
  br label %286

; <label>:286:                                    ; preds = %282
  %287 = load i8*, i8** %18, align 8
  %288 = call i8* @__cxa_begin_catch(i8* %287) #2
  %289 = load %class.Tensor*, %class.Tensor** %17, align 8
  %290 = icmp ne %class.Tensor* %289, null
  br i1 %290, label %340, label %291

; <label>:291:                                    ; preds = %286
  %292 = load %class.Tensor*, %class.Tensor** %16, align 8
  %293 = load i64, i64* %14, align 8
  %294 = getelementptr inbounds %class.Tensor, %class.Tensor* %292, i64 %293
  %295 = load %class.Tensor*, %class.Tensor** %16, align 8
  %296 = load i64, i64* %14, align 8
  %297 = getelementptr inbounds %class.Tensor, %class.Tensor* %295, i64 %296
  %298 = load i64, i64* %7, align 8
  %299 = getelementptr inbounds %class.Tensor, %class.Tensor* %297, i64 %298
  %300 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %301 = invoke dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %300)
          to label %302 unwind label %336

; <label>:302:                                    ; preds = %291
  %303 = load i32, i32* @x.1083
  %304 = load i32, i32* @y.1084
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %302, %originalBB39alteredBB
  %311 = load i32, i32* @x.1083
  %312 = load i32, i32* @y.1084
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  invoke void @_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor* %294, %class.Tensor* %299, %"class.std::allocator.105"* dereferenceable(1) %301)
          to label %319 unwind label %336

; <label>:319:                                    ; preds = %originalBBpart241
  %320 = load i32, i32* @x.1083
  %321 = load i32, i32* @y.1084
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %319, %originalBB43alteredBB
  %328 = load i32, i32* @x.1083
  %329 = load i32, i32* @y.1084
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %347

; <label>:336:                                    ; preds = %367, %originalBBpart249, %345, %340, %originalBBpart241, %291
  %337 = landingpad { i8*, i32 }
          cleanup
  %338 = extractvalue { i8*, i32 } %337, 0
  store i8* %338, i8** %18, align 8
  %339 = extractvalue { i8*, i32 } %337, 1
  store i32 %339, i32* %19, align 4
  invoke void @__cxa_end_catch()
          to label %368 unwind label %474

; <label>:340:                                    ; preds = %286
  %341 = load %class.Tensor*, %class.Tensor** %16, align 8
  %342 = load %class.Tensor*, %class.Tensor** %17, align 8
  %343 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %344 = invoke dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %343)
          to label %345 unwind label %336

; <label>:345:                                    ; preds = %340
  invoke void @_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor* %341, %class.Tensor* %342, %"class.std::allocator.105"* dereferenceable(1) %344)
          to label %346 unwind label %336

; <label>:346:                                    ; preds = %345
  br label %347

; <label>:347:                                    ; preds = %346, %originalBBpart245
  %348 = load i32, i32* @x.1083
  %349 = load i32, i32* @y.1084
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %347, %originalBB47alteredBB
  %356 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %357 = load %class.Tensor*, %class.Tensor** %16, align 8
  %358 = load i64, i64* %13, align 8
  %359 = load i32, i32* @x.1083
  %360 = load i32, i32* @y.1084
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  invoke void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.104"* %356, %class.Tensor* %357, i64 %358)
          to label %367 unwind label %336

; <label>:367:                                    ; preds = %originalBBpart249
  invoke void @__cxa_rethrow() #15
          to label %477 unwind label %336

; <label>:368:                                    ; preds = %336
  %369 = load i32, i32* @x.1083
  %370 = load i32, i32* @y.1084
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %368, %originalBB51alteredBB
  %377 = load i32, i32* @x.1083
  %378 = load i32, i32* @y.1084
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %453

; <label>:385:                                    ; preds = %originalBBpart237
  %386 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %387 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %386, i32 0, i32 0
  %388 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %387 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %389 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %388, i32 0, i32 0
  %390 = load %class.Tensor*, %class.Tensor** %389, align 8
  %391 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %392 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %391, i32 0, i32 0
  %393 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %392 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %393, i32 0, i32 1
  %395 = load %class.Tensor*, %class.Tensor** %394, align 8
  %396 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %397 = call dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %396)
  call void @_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor* %390, %class.Tensor* %395, %"class.std::allocator.105"* dereferenceable(1) %397)
  %398 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %399 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %400 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %399, i32 0, i32 0
  %401 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %400 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %401, i32 0, i32 0
  %403 = load %class.Tensor*, %class.Tensor** %402, align 8
  %404 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %405 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %404, i32 0, i32 0
  %406 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %405 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %407 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %406, i32 0, i32 2
  %408 = load %class.Tensor*, %class.Tensor** %407, align 8
  %409 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %410 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %409, i32 0, i32 0
  %411 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %410 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %412 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %411, i32 0, i32 0
  %413 = load %class.Tensor*, %class.Tensor** %412, align 8
  %414 = ptrtoint %class.Tensor* %408 to i64
  %415 = ptrtoint %class.Tensor* %413 to i64
  %416 = sub i64 %414, %415
  %417 = sdiv exact i64 %416, 24
  call void @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.104"* %398, %class.Tensor* %403, i64 %417)
  %418 = load %class.Tensor*, %class.Tensor** %16, align 8
  %419 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %420 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %419, i32 0, i32 0
  %421 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %420 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %422 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %421, i32 0, i32 0
  store %class.Tensor* %418, %class.Tensor** %422, align 8
  %423 = load %class.Tensor*, %class.Tensor** %17, align 8
  %424 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %425 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %424, i32 0, i32 0
  %426 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %425 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %427 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %426, i32 0, i32 1
  store %class.Tensor* %423, %class.Tensor** %427, align 8
  %428 = load %class.Tensor*, %class.Tensor** %16, align 8
  %429 = load i64, i64* %13, align 8
  %430 = getelementptr inbounds %class.Tensor, %class.Tensor* %428, i64 %429
  %431 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %432 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %431, i32 0, i32 0
  %433 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %432 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %434 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %433, i32 0, i32 2
  store %class.Tensor* %430, %class.Tensor** %434, align 8
  br label %435

; <label>:435:                                    ; preds = %385, %166
  br label %436

; <label>:436:                                    ; preds = %435, %4
  %437 = load i32, i32* @x.1083
  %438 = load i32, i32* @y.1084
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %436, %originalBB55alteredBB
  %445 = load i32, i32* @x.1083
  %446 = load i32, i32* @y.1084
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  ret void

; <label>:453:                                    ; preds = %originalBBpart253
  %454 = load i32, i32* @x.1083
  %455 = load i32, i32* @y.1084
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %453, %originalBB59alteredBB
  %462 = load i8*, i8** %18, align 8
  %463 = load i32, i32* %19, align 4
  %464 = insertvalue { i8*, i32 } undef, i8* %462, 0
  %465 = insertvalue { i8*, i32 } %464, i32 %463, 1
  %466 = load i32, i32* @x.1083
  %467 = load i32, i32* @y.1084
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  resume { i8*, i32 } %465

; <label>:474:                                    ; preds = %336
  %475 = landingpad { i8*, i32 }
          catch i8* null
  %476 = extractvalue { i8*, i32 } %475, 0
  call void @__clang_call_terminate(i8* %476) #12
  unreachable

; <label>:477:                                    ; preds = %367
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %24
  %478 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %479 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %478, i32 0, i32 0
  %480 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %479 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %481 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %480, i32 0, i32 2
  %482 = load %class.Tensor*, %class.Tensor** %481, align 8
  %483 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %484 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %483, i32 0, i32 0
  %485 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %484 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %486 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %485, i32 0, i32 1
  %487 = load %class.Tensor*, %class.Tensor** %486, align 8
  %488 = ptrtoint %class.Tensor* %482 to i64
  %489 = ptrtoint %class.Tensor* %487 to i64
  %490 = sub i64 %488, %489
  %_ = shl i64 %490, 24
  %_1 = sub i64 0, %490
  %gen = add i64 %_1, 24
  %_2 = shl i64 %490, 24
  %_3 = sub i64 0, %490
  %gen4 = add i64 %_3, 24
  %_5 = shl i64 %490, 24
  %491 = sdiv exact i64 %490, 24
  %492 = load i64, i64* %7, align 8
  %493 = icmp uge i64 %491, %492
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %113
  %494 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %495 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %494, i32 0, i32 0
  %496 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %495 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %497 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %496, i32 0, i32 1
  %498 = load %class.Tensor*, %class.Tensor** %497, align 8
  %499 = load i64, i64* %7, align 8
  %500 = load i64, i64* %10, align 8
  %_7 = sub i64 %499, %500
  %gen8 = mul i64 %_7, %500
  %_9 = shl i64 %499, %500
  %_10 = sub i64 %499, %500
  %gen11 = mul i64 %_10, %500
  %_12 = sub i64 %499, %500
  %gen13 = mul i64 %_12, %500
  %_14 = shl i64 %499, %500
  %_15 = sub i64 %499, %500
  %gen16 = mul i64 %_15, %500
  %_17 = shl i64 %499, %500
  %_18 = sub i64 %499, %500
  %gen19 = mul i64 %_18, %500
  %501 = sub i64 %499, %500
  %502 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %503 = call dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %502)
  %504 = call %class.Tensor* @_ZSt24__uninitialized_fill_n_aIP6TensorILi1ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor* %498, i64 %501, %class.Tensor* dereferenceable(24) %9, %"class.std::allocator.105"* dereferenceable(1) %503)
  %505 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %506 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %505, i32 0, i32 0
  %507 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %506 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %508 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %507, i32 0, i32 1
  store %class.Tensor* %504, %class.Tensor** %508, align 8
  %509 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
  %510 = load %class.Tensor*, %class.Tensor** %509, align 8
  %511 = load %class.Tensor*, %class.Tensor** %12, align 8
  %512 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %513 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %512, i32 0, i32 0
  %514 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %513 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %515 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %514, i32 0, i32 1
  %516 = load %class.Tensor*, %class.Tensor** %515, align 8
  %517 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %518 = call dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %517)
  %519 = call %class.Tensor* @_ZSt22__uninitialized_move_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Tensor* %510, %class.Tensor* %511, %class.Tensor* %516, %"class.std::allocator.105"* dereferenceable(1) %518)
  %520 = load i64, i64* %10, align 8
  %521 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %522 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %521, i32 0, i32 0
  %523 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %522 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %524 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %523, i32 0, i32 1
  %525 = load %class.Tensor*, %class.Tensor** %524, align 8
  %526 = getelementptr inbounds %class.Tensor, %class.Tensor* %525, i64 %520
  store %class.Tensor* %526, %class.Tensor** %524, align 8
  %527 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %5)
  %528 = load %class.Tensor*, %class.Tensor** %527, align 8
  %529 = load %class.Tensor*, %class.Tensor** %12, align 8
  call void @_ZSt4fillIP6TensorILi1ELi3EES1_EvT_S3_RKT0_(%class.Tensor* %528, %class.Tensor* %529, %class.Tensor* dereferenceable(24) %9)
  br label %originalBB6

originalBB23alteredBB:                            ; preds = %originalBB23, %167
  %530 = load i64, i64* %7, align 8
  %531 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.103"* %21, i64 %530, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0))
  store i64 %531, i64* %13, align 8
  %532 = call %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.103"* %21)
  %533 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %15, i32 0, i32 0
  store %class.Tensor* %532, %class.Tensor** %533, align 8
  %534 = call i64 @_ZN9__gnu_cxxmiIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.145"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.145"* dereferenceable(8) %15)
  store i64 %534, i64* %14, align 8
  %535 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %536 = load i64, i64* %13, align 8
  %537 = call %class.Tensor* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.104"* %535, i64 %536)
  store %class.Tensor* %537, %class.Tensor** %16, align 8
  %538 = load %class.Tensor*, %class.Tensor** %16, align 8
  store %class.Tensor* %538, %class.Tensor** %17, align 8
  %539 = load %class.Tensor*, %class.Tensor** %16, align 8
  %540 = load i64, i64* %14, align 8
  %541 = getelementptr inbounds %class.Tensor, %class.Tensor* %539, i64 %540
  %542 = load i64, i64* %7, align 8
  %543 = load %class.Tensor*, %class.Tensor** %8, align 8
  %544 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %202
  store %class.Tensor* null, %class.Tensor** %17, align 8
  %545 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %546 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %545, i32 0, i32 0
  %547 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %546 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %548 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %547, i32 0, i32 0
  %549 = load %class.Tensor*, %class.Tensor** %548, align 8
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %237
  %550 = load %class.Tensor*, %class.Tensor** %236, align 8
  %551 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %552 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %551, i32 0, i32 0
  %553 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %552 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %554 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %553, i32 0, i32 1
  %555 = load %class.Tensor*, %class.Tensor** %554, align 8
  %556 = load %class.Tensor*, %class.Tensor** %17, align 8
  %557 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %265
  store %class.Tensor* %264, %class.Tensor** %17, align 8
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %302
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %319
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %347
  %558 = bitcast %"class.std::vector.103"* %21 to %"struct.std::_Vector_base.104"*
  %559 = load %class.Tensor*, %class.Tensor** %16, align 8
  %560 = load i64, i64* %13, align 8
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %368
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %436
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %453
  %561 = load i8*, i8** %18, align 8
  %562 = load i32, i32* %19, align 4
  %563 = insertvalue { i8*, i32 } undef, i8* %561, 0
  %564 = insertvalue { i8*, i32 } %563, i32 %562, 1
  br label %originalBB59
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE3endEv(%"class.std::vector.103"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.145", align 8
  %3 = alloca %"class.std::vector.103"*, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %3, align 8
  %4 = load %"class.std::vector.103"*, %"class.std::vector.103"** %3, align 8
  %5 = bitcast %"class.std::vector.103"* %4 to %"struct.std::_Vector_base.104"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.145"* %2, %class.Tensor** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %2, i32 0, i32 0
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  ret %class.Tensor* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.103"*, %class.Tensor*) #0 comdat align 2 {
  %3 = load i32, i32* @x.1087
  %4 = load i32, i32* @y.1088
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::vector.103"*, align 8
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %11, align 8
  store %class.Tensor* %1, %class.Tensor** %12, align 8
  %14 = load %"class.std::vector.103"*, %"class.std::vector.103"** %11, align 8
  %15 = bitcast %"class.std::vector.103"* %14 to %"struct.std::_Vector_base.104"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %15, i32 0, i32 0
  %17 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %16 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %17, i32 0, i32 1
  %19 = load %class.Tensor*, %class.Tensor** %18, align 8
  %20 = load %class.Tensor*, %class.Tensor** %12, align 8
  %21 = ptrtoint %class.Tensor* %19 to i64
  %22 = ptrtoint %class.Tensor* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 24
  store i64 %24, i64* %13, align 8
  %25 = load i64, i64* %13, align 8
  %26 = icmp ne i64 %25, 0
  %27 = load i32, i32* @x.1087
  %28 = load i32, i32* @y.1088
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %49

; <label>:35:                                     ; preds = %originalBBpart2
  %36 = load %class.Tensor*, %class.Tensor** %12, align 8
  %37 = bitcast %"class.std::vector.103"* %14 to %"struct.std::_Vector_base.104"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %38 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %39, i32 0, i32 1
  %41 = load %class.Tensor*, %class.Tensor** %40, align 8
  %42 = bitcast %"class.std::vector.103"* %14 to %"struct.std::_Vector_base.104"*
  %43 = call dereferenceable(1) %"class.std::allocator.105"* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %42)
  call void @_ZSt8_DestroyIP6TensorILi1ELi3EES1_EvT_S3_RSaIT0_E(%class.Tensor* %36, %class.Tensor* %41, %"class.std::allocator.105"* dereferenceable(1) %43)
  %44 = load %class.Tensor*, %class.Tensor** %12, align 8
  %45 = bitcast %"class.std::vector.103"* %14 to %"struct.std::_Vector_base.104"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %45, i32 0, i32 0
  %47 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %46 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %47, i32 0, i32 1
  store %class.Tensor* %44, %class.Tensor** %48, align 8
  br label %49

; <label>:49:                                     ; preds = %35, %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %50 = alloca %"class.std::vector.103"*, align 8
  %51 = alloca %class.Tensor*, align 8
  %52 = alloca i64, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %50, align 8
  store %class.Tensor* %1, %class.Tensor** %51, align 8
  %53 = load %"class.std::vector.103"*, %"class.std::vector.103"** %50, align 8
  %54 = bitcast %"class.std::vector.103"* %53 to %"struct.std::_Vector_base.104"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %54, i32 0, i32 0
  %56 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %55 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %56, i32 0, i32 1
  %58 = load %class.Tensor*, %class.Tensor** %57, align 8
  %59 = load %class.Tensor*, %class.Tensor** %51, align 8
  %60 = ptrtoint %class.Tensor* %58 to i64
  %61 = ptrtoint %class.Tensor* %59 to i64
  %_ = shl i64 %60, %61
  %62 = sub i64 %60, %61
  %_1 = sub i64 %62, 24
  %gen = mul i64 %_1, 24
  %63 = sdiv exact i64 %62, 24
  store i64 %63, i64* %52, align 8
  %64 = load i64, i64* %52, align 8
  %65 = icmp ne i64 %64, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %6 = load %class.Tensor*, %class.Tensor** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %37, %2
  %8 = load i32, i32* @x.1089
  %9 = load i32, i32* @y.1090
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load i32, i32* %5, align 4
  %17 = icmp ult i32 %16, 3
  %18 = load i32, i32* @x.1089
  %19 = load i32, i32* @y.1090
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %17, label %26, label %40

; <label>:26:                                     ; preds = %originalBBpart2
  %27 = load %class.Tensor*, %class.Tensor** %4, align 8
  %28 = getelementptr inbounds %class.Tensor, %class.Tensor* %27, i32 0, i32 0
  %29 = load i32, i32* %5, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [3 x double], [3 x double]* %28, i64 0, i64 %30
  %32 = load double, double* %31, align 8
  %33 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %34 = load i32, i32* %5, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [3 x double], [3 x double]* %33, i64 0, i64 %35
  store double %32, double* %36, align 8
  br label %37

; <label>:37:                                     ; preds = %26
  %38 = load i32, i32* %5, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %5, align 4
  br label %7

; <label>:40:                                     ; preds = %originalBBpart2
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %7
  %41 = load i32, i32* %5, align 4
  %42 = icmp ult i32 %41, 3
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.145"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.145"* dereferenceable(8)) #0 comdat {
  %3 = load i32, i32* @x.1091
  %4 = load i32, i32* @y.1092
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.145"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.145"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.145"* %0, %"class.__gnu_cxx::__normal_iterator.145"** %11, align 8
  store %"class.__gnu_cxx::__normal_iterator.145"* %1, %"class.__gnu_cxx::__normal_iterator.145"** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.145"*, %"class.__gnu_cxx::__normal_iterator.145"** %11, align 8
  %14 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %13)
  %15 = load %class.Tensor*, %class.Tensor** %14, align 8
  %16 = load %"class.__gnu_cxx::__normal_iterator.145"*, %"class.__gnu_cxx::__normal_iterator.145"** %12, align 8
  %17 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %16)
  %18 = load %class.Tensor*, %class.Tensor** %17, align 8
  %19 = ptrtoint %class.Tensor* %15 to i64
  %20 = ptrtoint %class.Tensor* %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 24
  %23 = load i32, i32* @x.1091
  %24 = load i32, i32* @y.1092
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %22

originalBBalteredBB:                              ; preds = %originalBB, %2
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.145"*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.145"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.145"* %0, %"class.__gnu_cxx::__normal_iterator.145"** %31, align 8
  store %"class.__gnu_cxx::__normal_iterator.145"* %1, %"class.__gnu_cxx::__normal_iterator.145"** %32, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator.145"*, %"class.__gnu_cxx::__normal_iterator.145"** %31, align 8
  %34 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %33)
  %35 = load %class.Tensor*, %class.Tensor** %34, align 8
  %36 = load %"class.__gnu_cxx::__normal_iterator.145"*, %"class.__gnu_cxx::__normal_iterator.145"** %32, align 8
  %37 = call dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"* %36)
  %38 = load %class.Tensor*, %class.Tensor** %37, align 8
  %39 = ptrtoint %class.Tensor* %35 to i64
  %40 = ptrtoint %class.Tensor* %38 to i64
  %_ = sub i64 %39, %40
  %gen = mul i64 %_, %40
  %_1 = shl i64 %39, %40
  %_2 = shl i64 %39, %40
  %_3 = shl i64 %39, %40
  %41 = sub i64 %39, %40
  %_4 = shl i64 %41, 24
  %_5 = sub i64 %41, 24
  %gen6 = mul i64 %_5, 24
  %42 = sdiv exact i64 %41, 24
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt22__uninitialized_move_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.std::allocator.105"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca %class.Tensor*, align 8
  %8 = alloca %"class.std::allocator.105"*, align 8
  store %class.Tensor* %0, %class.Tensor** %5, align 8
  store %class.Tensor* %1, %class.Tensor** %6, align 8
  store %class.Tensor* %2, %class.Tensor** %7, align 8
  store %"class.std::allocator.105"* %3, %"class.std::allocator.105"** %8, align 8
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = load %class.Tensor*, %class.Tensor** %6, align 8
  %11 = load %class.Tensor*, %class.Tensor** %7, align 8
  %12 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %8, align 8
  %13 = call %class.Tensor* @_ZSt22__uninitialized_copy_aIP6TensorILi1ELi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Tensor* %9, %class.Tensor* %10, %class.Tensor* %11, %"class.std::allocator.105"* dereferenceable(1) %12)
  ret %class.Tensor* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt13copy_backwardIP6TensorILi1ELi3EES2_ET0_T_S4_S3_(%class.Tensor*, %class.Tensor*, %class.Tensor*) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %7 = load %class.Tensor*, %class.Tensor** %4, align 8
  %8 = call %class.Tensor* @_ZSt12__miter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor* %7)
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = call %class.Tensor* @_ZSt12__miter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor* %9)
  %11 = load %class.Tensor*, %class.Tensor** %6, align 8
  %12 = call %class.Tensor* @_ZSt23__copy_move_backward_a2ILb0EP6TensorILi1ELi3EES2_ET1_T0_S4_S3_(%class.Tensor* %8, %class.Tensor* %10, %class.Tensor* %11)
  ret %class.Tensor* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.Tensor** @_ZNK9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.145"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.1097
  %3 = load i32, i32* @y.1098
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.145"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.145"* %0, %"class.__gnu_cxx::__normal_iterator.145"** %10, align 8
  %11 = load %"class.__gnu_cxx::__normal_iterator.145"*, %"class.__gnu_cxx::__normal_iterator.145"** %10, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %11, i32 0, i32 0
  %13 = load i32, i32* @x.1097
  %14 = load i32, i32* @y.1098
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor** %12

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.145"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.145"* %0, %"class.__gnu_cxx::__normal_iterator.145"** %21, align 8
  %22 = load %"class.__gnu_cxx::__normal_iterator.145"*, %"class.__gnu_cxx::__normal_iterator.145"** %21, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %22, i32 0, i32 0
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIP6TensorILi1ELi3EES1_EvT_S3_RKT0_(%class.Tensor*, %class.Tensor*, %class.Tensor* dereferenceable(24)) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %7 = load %class.Tensor*, %class.Tensor** %4, align 8
  %8 = call %class.Tensor* @_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor* %7)
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = call %class.Tensor* @_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor* %9)
  %11 = load %class.Tensor*, %class.Tensor** %6, align 8
  call void @_ZSt8__fill_aIP6TensorILi1ELi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Tensor* %8, %class.Tensor* %10, %class.Tensor* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt24__uninitialized_fill_n_aIP6TensorILi1ELi3EEmS1_S1_ET_S3_T0_RKT1_RSaIT2_E(%class.Tensor*, i64, %class.Tensor* dereferenceable(24), %"class.std::allocator.105"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %class.Tensor*, align 8
  %8 = alloca %"class.std::allocator.105"*, align 8
  store %class.Tensor* %0, %class.Tensor** %5, align 8
  store i64 %1, i64* %6, align 8
  store %class.Tensor* %2, %class.Tensor** %7, align 8
  store %"class.std::allocator.105"* %3, %"class.std::allocator.105"** %8, align 8
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %class.Tensor*, %class.Tensor** %7, align 8
  %12 = call %class.Tensor* @_ZSt20uninitialized_fill_nIP6TensorILi1ELi3EEmS1_ET_S3_T0_RKT1_(%class.Tensor* %9, i64 %10, %class.Tensor* dereferenceable(24) %11)
  ret %class.Tensor* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.103"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.1103
  %5 = load i32, i32* @y.1104
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.std::vector.103"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %17 = load %"class.std::vector.103"*, %"class.std::vector.103"** %12, align 8
  %18 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE8max_sizeEv(%"class.std::vector.103"* %17)
  %19 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %17)
  %20 = sub i64 %18, %19
  %21 = load i64, i64* %13, align 8
  %22 = icmp ult i64 %20, %21
  %23 = load i32, i32* @x.1103
  %24 = load i32, i32* @y.1104
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %33

; <label>:31:                                     ; preds = %originalBBpart2
  %32 = load i8*, i8** %14, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %32) #15
  unreachable

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %17)
  %35 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %17)
  store i64 %35, i64* %16, align 8
  %36 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %13)
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %34, %37
  store i64 %38, i64* %15, align 8
  %39 = load i64, i64* %15, align 8
  %40 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %17)
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %33
  %43 = load i64, i64* %15, align 8
  %44 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE8max_sizeEv(%"class.std::vector.103"* %17)
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %48

; <label>:46:                                     ; preds = %42, %33
  %47 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE8max_sizeEv(%"class.std::vector.103"* %17)
  br label %66

; <label>:48:                                     ; preds = %42
  %49 = load i32, i32* @x.1103
  %50 = load i32, i32* @y.1104
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i64, i64* %15, align 8
  %58 = load i32, i32* @x.1103
  %59 = load i32, i32* @y.1104
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %66

; <label>:66:                                     ; preds = %originalBBpart24, %46
  %67 = phi i64 [ %47, %46 ], [ %57, %originalBBpart24 ]
  ret i64 %67

originalBBalteredBB:                              ; preds = %originalBB, %3
  %68 = alloca %"class.std::vector.103"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i8*, align 8
  %71 = alloca i64, align 8
  %72 = alloca i64, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %68, align 8
  store i64 %1, i64* %69, align 8
  store i8* %2, i8** %70, align 8
  %73 = load %"class.std::vector.103"*, %"class.std::vector.103"** %68, align 8
  %74 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE8max_sizeEv(%"class.std::vector.103"* %73)
  %75 = call i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE4sizeEv(%"class.std::vector.103"* %73)
  %_ = sub i64 0, %74
  %gen = add i64 %_, %75
  %76 = sub i64 %74, %75
  %77 = load i64, i64* %69, align 8
  %78 = icmp ult i64 %76, %77
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %79 = load i64, i64* %15, align 8
  br label %originalBB1
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE5beginEv(%"class.std::vector.103"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.145", align 8
  %3 = alloca %"class.std::vector.103"*, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %3, align 8
  %4 = load %"class.std::vector.103"*, %"class.std::vector.103"** %3, align 8
  %5 = bitcast %"class.std::vector.103"* %4 to %"struct.std::_Vector_base.104"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %6 to %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.145"* %2, %class.Tensor** dereferenceable(8) %8)
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %2, i32 0, i32 0
  %10 = load %class.Tensor*, %class.Tensor** %9, align 8
  ret %class.Tensor* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZNSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.104"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.104"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.104"* %0, %"struct.std::_Vector_base.104"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.104"*, %"struct.std::_Vector_base.104"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %9 to %"class.std::allocator.105"*
  %11 = load i64, i64* %4, align 8
  %12 = call %class.Tensor* @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8allocateERS3_m(%"class.std::allocator.105"* dereferenceable(1) %10, i64 %11)
  br label %30

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.1107
  %15 = load i32, i32* @y.1108
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i32, i32* @x.1107
  %23 = load i32, i32* @y.1108
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %30

; <label>:30:                                     ; preds = %originalBBpart2, %8
  %31 = phi %class.Tensor* [ %12, %8 ], [ null, %originalBBpart2 ]
  ret %class.Tensor* %31

originalBBalteredBB:                              ; preds = %originalBB, %13
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt34__uninitialized_move_if_noexcept_aIP6TensorILi1ELi3EES2_SaIS1_EET0_T_S5_S4_RT1_(%class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.std::allocator.105"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca %class.Tensor*, align 8
  %8 = alloca %"class.std::allocator.105"*, align 8
  store %class.Tensor* %0, %class.Tensor** %5, align 8
  store %class.Tensor* %1, %class.Tensor** %6, align 8
  store %class.Tensor* %2, %class.Tensor** %7, align 8
  store %"class.std::allocator.105"* %3, %"class.std::allocator.105"** %8, align 8
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = load %class.Tensor*, %class.Tensor** %6, align 8
  %11 = load %class.Tensor*, %class.Tensor** %7, align 8
  %12 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %8, align 8
  %13 = call %class.Tensor* @_ZSt22__uninitialized_copy_aIP6TensorILi1ELi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Tensor* %9, %class.Tensor* %10, %class.Tensor* %11, %"class.std::allocator.105"* dereferenceable(1) %12)
  ret %class.Tensor* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt22__uninitialized_copy_aIP6TensorILi1ELi3EES2_S1_ET0_T_S4_S3_RSaIT1_E(%class.Tensor*, %class.Tensor*, %class.Tensor*, %"class.std::allocator.105"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca %class.Tensor*, align 8
  %8 = alloca %"class.std::allocator.105"*, align 8
  store %class.Tensor* %0, %class.Tensor** %5, align 8
  store %class.Tensor* %1, %class.Tensor** %6, align 8
  store %class.Tensor* %2, %class.Tensor** %7, align 8
  store %"class.std::allocator.105"* %3, %"class.std::allocator.105"** %8, align 8
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = load %class.Tensor*, %class.Tensor** %6, align 8
  %11 = load %class.Tensor*, %class.Tensor** %7, align 8
  %12 = call %class.Tensor* @_ZSt18uninitialized_copyIP6TensorILi1ELi3EES2_ET0_T_S4_S3_(%class.Tensor* %9, %class.Tensor* %10, %class.Tensor* %11)
  ret %class.Tensor* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt18uninitialized_copyIP6TensorILi1ELi3EES2_ET0_T_S4_S3_(%class.Tensor*, %class.Tensor*, %class.Tensor*) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca i8, align 1
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %class.Tensor*, %class.Tensor** %4, align 8
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = load %class.Tensor*, %class.Tensor** %6, align 8
  %11 = call %class.Tensor* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6TensorILi1ELi3EES4_EET0_T_S6_S5_(%class.Tensor* %8, %class.Tensor* %9, %class.Tensor* %10)
  ret %class.Tensor* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6TensorILi1ELi3EES4_EET0_T_S6_S5_(%class.Tensor*, %class.Tensor*, %class.Tensor*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.1115
  %5 = load i32, i32* @y.1116
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca %class.Tensor*, align 8
  %14 = alloca %class.Tensor*, align 8
  %15 = alloca %class.Tensor*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  store %class.Tensor* %0, %class.Tensor** %12, align 8
  store %class.Tensor* %1, %class.Tensor** %13, align 8
  store %class.Tensor* %2, %class.Tensor** %14, align 8
  %18 = load %class.Tensor*, %class.Tensor** %14, align 8
  store %class.Tensor* %18, %class.Tensor** %15, align 8
  %19 = load i32, i32* @x.1115
  %20 = load i32, i32* @y.1116
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27

; <label>:27:                                     ; preds = %originalBBpart212, %originalBBpart2
  %28 = load %class.Tensor*, %class.Tensor** %12, align 8
  %29 = load %class.Tensor*, %class.Tensor** %13, align 8
  %30 = icmp ne %class.Tensor* %28, %29
  br i1 %30, label %31, label %100

; <label>:31:                                     ; preds = %27
  %32 = load %class.Tensor*, %class.Tensor** %15, align 8
  %33 = invoke %class.Tensor* @_ZSt11__addressofI6TensorILi1ELi3EEEPT_RS2_(%class.Tensor* dereferenceable(24) %32)
          to label %34 unwind label %90

; <label>:34:                                     ; preds = %31
  %35 = load i32, i32* @x.1115
  %36 = load i32, i32* @y.1116
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %43 = load %class.Tensor*, %class.Tensor** %12, align 8
  %44 = load i32, i32* @x.1115
  %45 = load i32, i32* @y.1116
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  invoke void @_ZSt10_ConstructI6TensorILi1ELi3EES1_EvPT_RKT0_(%class.Tensor* %33, %class.Tensor* dereferenceable(24) %43)
          to label %52 unwind label %90

; <label>:52:                                     ; preds = %originalBBpart24
  %53 = load i32, i32* @x.1115
  %54 = load i32, i32* @y.1116
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  %61 = load i32, i32* @x.1115
  %62 = load i32, i32* @y.1116
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %69

; <label>:69:                                     ; preds = %originalBBpart28
  %70 = load i32, i32* @x.1115
  %71 = load i32, i32* @y.1116
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %69, %originalBB10alteredBB
  %78 = load %class.Tensor*, %class.Tensor** %12, align 8
  %79 = getelementptr inbounds %class.Tensor, %class.Tensor* %78, i32 1
  store %class.Tensor* %79, %class.Tensor** %12, align 8
  %80 = load %class.Tensor*, %class.Tensor** %15, align 8
  %81 = getelementptr inbounds %class.Tensor, %class.Tensor* %80, i32 1
  store %class.Tensor* %81, %class.Tensor** %15, align 8
  %82 = load i32, i32* @x.1115
  %83 = load i32, i32* @y.1116
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %27

; <label>:90:                                     ; preds = %originalBBpart24, %31
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %16, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %17, align 4
  br label %94

; <label>:94:                                     ; preds = %90
  %95 = load i8*, i8** %16, align 8
  %96 = call i8* @__cxa_begin_catch(i8* %95) #2
  %97 = load %class.Tensor*, %class.Tensor** %14, align 8
  %98 = load %class.Tensor*, %class.Tensor** %15, align 8
  invoke void @_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_(%class.Tensor* %97, %class.Tensor* %98)
          to label %99 unwind label %102

; <label>:99:                                     ; preds = %94
  invoke void @__cxa_rethrow() #15
          to label %132 unwind label %102

; <label>:100:                                    ; preds = %27
  %101 = load %class.Tensor*, %class.Tensor** %15, align 8
  ret %class.Tensor* %101

; <label>:102:                                    ; preds = %99, %94
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %16, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %17, align 4
  invoke void @__cxa_end_catch()
          to label %106 unwind label %129

; <label>:106:                                    ; preds = %102
  br label %108
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:108:                                    ; preds = %106
  %109 = load i32, i32* @x.1115
  %110 = load i32, i32* @y.1116
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %108, %originalBB14alteredBB
  %117 = load i8*, i8** %16, align 8
  %118 = load i32, i32* %17, align 4
  %119 = insertvalue { i8*, i32 } undef, i8* %117, 0
  %120 = insertvalue { i8*, i32 } %119, i32 %118, 1
  %121 = load i32, i32* @x.1115
  %122 = load i32, i32* @y.1116
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  resume { i8*, i32 } %120

; <label>:129:                                    ; preds = %102
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #12
  unreachable

; <label>:132:                                    ; preds = %99
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %3
  %133 = alloca %class.Tensor*, align 8
  %134 = alloca %class.Tensor*, align 8
  %135 = alloca %class.Tensor*, align 8
  %136 = alloca %class.Tensor*, align 8
  %137 = alloca i8*
  %138 = alloca i32
  store %class.Tensor* %0, %class.Tensor** %133, align 8
  store %class.Tensor* %1, %class.Tensor** %134, align 8
  store %class.Tensor* %2, %class.Tensor** %135, align 8
  %139 = load %class.Tensor*, %class.Tensor** %135, align 8
  store %class.Tensor* %139, %class.Tensor** %136, align 8
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %140 = load %class.Tensor*, %class.Tensor** %12, align 8
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %69
  %141 = load %class.Tensor*, %class.Tensor** %12, align 8
  %142 = getelementptr inbounds %class.Tensor, %class.Tensor* %141, i32 1
  store %class.Tensor* %142, %class.Tensor** %12, align 8
  %143 = load %class.Tensor*, %class.Tensor** %15, align 8
  %144 = getelementptr inbounds %class.Tensor, %class.Tensor* %143, i32 1
  store %class.Tensor* %144, %class.Tensor** %15, align 8
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %108
  %145 = load i8*, i8** %16, align 8
  %146 = load i32, i32* %17, align 4
  %147 = insertvalue { i8*, i32 } undef, i8* %145, 0
  %148 = insertvalue { i8*, i32 } %147, i32 %146, 1
  br label %originalBB14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructI6TensorILi1ELi3EES1_EvPT_RKT0_(%class.Tensor*, %class.Tensor* dereferenceable(24)) #0 comdat {
  %3 = load i32, i32* @x.1117
  %4 = load i32, i32* @y.1118
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %class.Tensor*, align 8
  %12 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %11, align 8
  store %class.Tensor* %1, %class.Tensor** %12, align 8
  %13 = load %class.Tensor*, %class.Tensor** %11, align 8
  %14 = bitcast %class.Tensor* %13 to i8*
  %15 = bitcast i8* %14 to %class.Tensor*
  %16 = load %class.Tensor*, %class.Tensor** %12, align 8
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %15, %class.Tensor* dereferenceable(24) %16)
  %17 = load i32, i32* @x.1117
  %18 = load i32, i32* @y.1118
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %class.Tensor*, align 8
  %26 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %25, align 8
  store %class.Tensor* %1, %class.Tensor** %26, align 8
  %27 = load %class.Tensor*, %class.Tensor** %25, align 8
  %28 = bitcast %class.Tensor* %27 to i8*
  %29 = bitcast i8* %28 to %class.Tensor*
  %30 = load %class.Tensor*, %class.Tensor** %26, align 8
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %29, %class.Tensor* dereferenceable(24) %30)
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZSt11__addressofI6TensorILi1ELi3EEEPT_RS2_(%class.Tensor* dereferenceable(24)) #1 comdat {
  %2 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %2, align 8
  %3 = load %class.Tensor*, %class.Tensor** %2, align 8
  ret %class.Tensor* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt23__copy_move_backward_a2ILb0EP6TensorILi1ELi3EES2_ET1_T0_S4_S3_(%class.Tensor*, %class.Tensor*, %class.Tensor*) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %7 = load %class.Tensor*, %class.Tensor** %4, align 8
  %8 = call %class.Tensor* @_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor* %7)
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = call %class.Tensor* @_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor* %9)
  %11 = load %class.Tensor*, %class.Tensor** %6, align 8
  %12 = call %class.Tensor* @_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor* %11)
  %13 = call %class.Tensor* @_ZSt22__copy_move_backward_aILb0EP6TensorILi1ELi3EES2_ET1_T0_S4_S3_(%class.Tensor* %8, %class.Tensor* %10, %class.Tensor* %12)
  %14 = call %class.Tensor* @_ZSt12__niter_wrapIP6TensorILi1ELi3EEET_RKS3_S3_(%class.Tensor** dereferenceable(8) %6, %class.Tensor* %13)
  ret %class.Tensor* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZSt12__miter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor*) #1 comdat {
  %2 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %2, align 8
  %3 = load %class.Tensor*, %class.Tensor** %2, align 8
  ret %class.Tensor* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZSt12__niter_wrapIP6TensorILi1ELi3EEET_RKS3_S3_(%class.Tensor** dereferenceable(8), %class.Tensor*) #1 comdat {
  %3 = alloca %class.Tensor**, align 8
  %4 = alloca %class.Tensor*, align 8
  store %class.Tensor** %0, %class.Tensor*** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %5 = load %class.Tensor*, %class.Tensor** %4, align 8
  ret %class.Tensor* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt22__copy_move_backward_aILb0EP6TensorILi1ELi3EES2_ET1_T0_S4_S3_(%class.Tensor*, %class.Tensor*, %class.Tensor*) #0 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca i8, align 1
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %class.Tensor*, %class.Tensor** %4, align 8
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = load %class.Tensor*, %class.Tensor** %6, align 8
  %11 = call %class.Tensor* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6TensorILi1ELi3EES5_EET0_T_S7_S6_(%class.Tensor* %8, %class.Tensor* %9, %class.Tensor* %10)
  ret %class.Tensor* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZSt12__niter_baseIP6TensorILi1ELi3EEET_S3_(%class.Tensor*) #1 comdat {
  %2 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %2, align 8
  %3 = load %class.Tensor*, %class.Tensor** %2, align 8
  ret %class.Tensor* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.Tensor* @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6TensorILi1ELi3EES5_EET0_T_S7_S6_(%class.Tensor*, %class.Tensor*, %class.Tensor*) #1 comdat align 2 {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca i64, align 8
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %8 = load %class.Tensor*, %class.Tensor** %5, align 8
  %9 = load %class.Tensor*, %class.Tensor** %4, align 8
  %10 = ptrtoint %class.Tensor* %8 to i64
  %11 = ptrtoint %class.Tensor* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 24
  store i64 %13, i64* %7, align 8
  br label %14

; <label>:14:                                     ; preds = %39, %3
  %15 = load i32, i32* @x.1131
  %16 = load i32, i32* @y.1132
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i64, i64* %7, align 8
  %24 = icmp sgt i64 %23, 0
  %25 = load i32, i32* @x.1131
  %26 = load i32, i32* @y.1132
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %42

; <label>:33:                                     ; preds = %originalBBpart2
  %34 = load %class.Tensor*, %class.Tensor** %5, align 8
  %35 = getelementptr inbounds %class.Tensor, %class.Tensor* %34, i32 -1
  store %class.Tensor* %35, %class.Tensor** %5, align 8
  %36 = load %class.Tensor*, %class.Tensor** %6, align 8
  %37 = getelementptr inbounds %class.Tensor, %class.Tensor* %36, i32 -1
  store %class.Tensor* %37, %class.Tensor** %6, align 8
  %38 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %37, %class.Tensor* dereferenceable(24) %35)
  br label %39

; <label>:39:                                     ; preds = %33
  %40 = load i64, i64* %7, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %7, align 8
  br label %14

; <label>:42:                                     ; preds = %originalBBpart2
  %43 = load %class.Tensor*, %class.Tensor** %6, align 8
  ret %class.Tensor* %43

originalBBalteredBB:                              ; preds = %originalBB, %14
  %44 = load i64, i64* %7, align 8
  %45 = icmp sgt i64 %44, 0
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIP6TensorILi1ELi3EES1_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S8_RKS5_(%class.Tensor*, %class.Tensor*, %class.Tensor* dereferenceable(24)) #1 comdat {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca %class.Tensor*, align 8
  %6 = alloca %class.Tensor*, align 8
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store %class.Tensor* %1, %class.Tensor** %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %originalBBpart2, %3
  %8 = load %class.Tensor*, %class.Tensor** %4, align 8
  %9 = load %class.Tensor*, %class.Tensor** %5, align 8
  %10 = icmp ne %class.Tensor* %8, %9
  br i1 %10, label %11, label %34

; <label>:11:                                     ; preds = %7
  %12 = load %class.Tensor*, %class.Tensor** %6, align 8
  %13 = load %class.Tensor*, %class.Tensor** %4, align 8
  %14 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEaSERKS0_(%class.Tensor* %13, %class.Tensor* dereferenceable(24) %12)
  br label %15

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @x.1133
  %17 = load i32, i32* @y.1134
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load %class.Tensor*, %class.Tensor** %4, align 8
  %25 = getelementptr inbounds %class.Tensor, %class.Tensor* %24, i32 1
  store %class.Tensor* %25, %class.Tensor** %4, align 8
  %26 = load i32, i32* @x.1133
  %27 = load i32, i32* @y.1134
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %7

; <label>:34:                                     ; preds = %7
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %15
  %35 = load %class.Tensor*, %class.Tensor** %4, align 8
  %36 = getelementptr inbounds %class.Tensor, %class.Tensor* %35, i32 1
  store %class.Tensor* %36, %class.Tensor** %4, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZSt20uninitialized_fill_nIP6TensorILi1ELi3EEmS1_ET_S3_T0_RKT1_(%class.Tensor*, i64, %class.Tensor* dereferenceable(24)) #0 comdat {
  %4 = load i32, i32* @x.1135
  %5 = load i32, i32* @y.1136
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %class.Tensor*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %class.Tensor*, align 8
  %15 = alloca i8, align 1
  store %class.Tensor* %0, %class.Tensor** %12, align 8
  store i64 %1, i64* %13, align 8
  store %class.Tensor* %2, %class.Tensor** %14, align 8
  store i8 1, i8* %15, align 1
  %16 = load %class.Tensor*, %class.Tensor** %12, align 8
  %17 = load i64, i64* %13, align 8
  %18 = load %class.Tensor*, %class.Tensor** %14, align 8
  %19 = call %class.Tensor* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi1ELi3EEmS3_EET_S5_T0_RKT1_(%class.Tensor* %16, i64 %17, %class.Tensor* dereferenceable(24) %18)
  %20 = load i32, i32* @x.1135
  %21 = load i32, i32* @y.1136
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor* %19

originalBBalteredBB:                              ; preds = %originalBB, %3
  %28 = alloca %class.Tensor*, align 8
  %29 = alloca i64, align 8
  %30 = alloca %class.Tensor*, align 8
  %31 = alloca i8, align 1
  store %class.Tensor* %0, %class.Tensor** %28, align 8
  store i64 %1, i64* %29, align 8
  store %class.Tensor* %2, %class.Tensor** %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load %class.Tensor*, %class.Tensor** %28, align 8
  %33 = load i64, i64* %29, align 8
  %34 = load %class.Tensor*, %class.Tensor** %30, align 8
  %35 = call %class.Tensor* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi1ELi3EEmS3_EET_S5_T0_RKT1_(%class.Tensor* %32, i64 %33, %class.Tensor* dereferenceable(24) %34)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6TensorILi1ELi3EEmS3_EET_S5_T0_RKT1_(%class.Tensor*, i64, %class.Tensor* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Tensor*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.Tensor*, align 8
  %7 = alloca %class.Tensor*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Tensor* %0, %class.Tensor** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.Tensor* %2, %class.Tensor** %6, align 8
  %10 = load %class.Tensor*, %class.Tensor** %4, align 8
  store %class.Tensor* %10, %class.Tensor** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %20, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %51

; <label>:14:                                     ; preds = %11
  %15 = load %class.Tensor*, %class.Tensor** %7, align 8
  %16 = invoke %class.Tensor* @_ZSt11__addressofI6TensorILi1ELi3EEEPT_RS2_(%class.Tensor* dereferenceable(24) %15)
          to label %17 unwind label %25

; <label>:17:                                     ; preds = %14
  %18 = load %class.Tensor*, %class.Tensor** %6, align 8
  invoke void @_ZSt10_ConstructI6TensorILi1ELi3EES1_EvPT_RKT0_(%class.Tensor* %16, %class.Tensor* dereferenceable(24) %18)
          to label %19 unwind label %25

; <label>:19:                                     ; preds = %17
  br label %20

; <label>:20:                                     ; preds = %19
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, -1
  store i64 %22, i64* %5, align 8
  %23 = load %class.Tensor*, %class.Tensor** %7, align 8
  %24 = getelementptr inbounds %class.Tensor, %class.Tensor* %23, i32 1
  store %class.Tensor* %24, %class.Tensor** %7, align 8
  br label %11

; <label>:25:                                     ; preds = %17, %14
  %26 = load i32, i32* @x.1137
  %27 = load i32, i32* @y.1138
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %25, %originalBBalteredBB
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %8, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %9, align 4
  %37 = load i32, i32* @x.1137
  %38 = load i32, i32* @y.1138
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45

; <label>:45:                                     ; preds = %originalBBpart2
  %46 = load i8*, i8** %8, align 8
  %47 = call i8* @__cxa_begin_catch(i8* %46) #2
  %48 = load %class.Tensor*, %class.Tensor** %4, align 8
  %49 = load %class.Tensor*, %class.Tensor** %7, align 8
  invoke void @_ZSt8_DestroyIP6TensorILi1ELi3EEEvT_S3_(%class.Tensor* %48, %class.Tensor* %49)
          to label %50 unwind label %53

; <label>:50:                                     ; preds = %45
  invoke void @__cxa_rethrow() #15
          to label %83 unwind label %53

; <label>:51:                                     ; preds = %11
  %52 = load %class.Tensor*, %class.Tensor** %7, align 8
  ret %class.Tensor* %52

; <label>:53:                                     ; preds = %50, %45
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %8, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %57 unwind label %80

; <label>:57:                                     ; preds = %53
  br label %59
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:59:                                     ; preds = %57
  %60 = load i32, i32* @x.1137
  %61 = load i32, i32* @y.1138
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %59, %originalBB1alteredBB
  %68 = load i8*, i8** %8, align 8
  %69 = load i32, i32* %9, align 4
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  %72 = load i32, i32* @x.1137
  %73 = load i32, i32* @y.1138
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  resume { i8*, i32 } %71

; <label>:80:                                     ; preds = %53
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #12
  unreachable

; <label>:83:                                     ; preds = %50
  %84 = load i32, i32* @x.1137
  %85 = load i32, i32* @y.1138
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %83, %originalBB6alteredBB
  %92 = load i32, i32* @x.1137
  %93 = load i32, i32* @y.1138
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable

originalBBalteredBB:                              ; preds = %originalBB, %25
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %8, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %9, align 4
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %59
  %103 = load i8*, i8** %8, align 8
  %104 = load i32, i32* %9, align 4
  %105 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %106 = insertvalue { i8*, i32 } %105, i32 %104, 1
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %83
  br label %originalBB6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI6TensorILi1ELi3EESaIS1_EE8max_sizeEv(%"class.std::vector.103"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector.103"*, align 8
  store %"class.std::vector.103"* %0, %"class.std::vector.103"** %2, align 8
  %3 = load %"class.std::vector.103"*, %"class.std::vector.103"** %2, align 8
  %4 = bitcast %"class.std::vector.103"* %3 to %"struct.std::_Vector_base.104"*
  %5 = call dereferenceable(1) %"class.std::allocator.105"* @_ZNKSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"* %4)
  %6 = call i64 @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.105"* dereferenceable(1) %5)
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt6vectorI6TensorILi1ELi3EESaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.105"* dereferenceable(1)) #0 comdat align 2 {
  %2 = load i32, i32* @x.1141
  %3 = load i32, i32* @y.1142
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.std::allocator.105"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %10, align 8
  store i64 384307168202282325, i64* %11, align 8
  %13 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %10, align 8
  %14 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.105"* dereferenceable(1) %13)
  store i64 %14, i64* %12, align 8
  %15 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* @x.1141
  %18 = load i32, i32* @y.1142
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 %16

originalBBalteredBB:                              ; preds = %originalBB, %1
  %25 = alloca %"class.std::allocator.105"*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %25, align 8
  store i64 384307168202282325, i64* %26, align 8
  %28 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %25, align 8
  %29 = call i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.105"* dereferenceable(1) %28)
  store i64 %29, i64* %27, align 8
  %30 = call dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %26, i64* dereferenceable(8) %27)
  %31 = load i64, i64* %30, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.105"* @_ZNKSt12_Vector_baseI6TensorILi1ELi3EESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.104"*) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.104"*, align 8
  store %"struct.std::_Vector_base.104"* %0, %"struct.std::_Vector_base.104"** %2, align 8
  %3 = load %"struct.std::_Vector_base.104"*, %"struct.std::_Vector_base.104"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.104", %"struct.std::_Vector_base.104"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Tensor<1, 3>, std::allocator<Tensor<1, 3> > >::_Vector_impl"* %4 to %"class.std::allocator.105"*
  ret %"class.std::allocator.105"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8max_sizeERKS3_(%"class.std::allocator.105"* dereferenceable(1)) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.105"*, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %2, align 8
  %3 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %2, align 8
  %4 = bitcast %"class.std::allocator.105"* %3 to %"class.__gnu_cxx::new_allocator.106"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.106"* %4) #2
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.106"*) #1 comdat align 2 {
  %2 = load i32, i32* @x.1147
  %3 = load i32, i32* @y.1148
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.106"*, align 8
  store %"class.__gnu_cxx::new_allocator.106"* %0, %"class.__gnu_cxx::new_allocator.106"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.106"*, %"class.__gnu_cxx::new_allocator.106"** %10, align 8
  %12 = load i32, i32* @x.1147
  %13 = load i32, i32* @y.1148
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 384307168202282325

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.106"*, align 8
  store %"class.__gnu_cxx::new_allocator.106"* %0, %"class.__gnu_cxx::new_allocator.106"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.106"*, %"class.__gnu_cxx::new_allocator.106"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP6TensorILi1ELi3EESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.145"*, %class.Tensor** dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %3 = load i32, i32* @x.1149
  %4 = load i32, i32* @y.1150
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.145"*, align 8
  %12 = alloca %class.Tensor**, align 8
  store %"class.__gnu_cxx::__normal_iterator.145"* %0, %"class.__gnu_cxx::__normal_iterator.145"** %11, align 8
  store %class.Tensor** %1, %class.Tensor*** %12, align 8
  %13 = load %"class.__gnu_cxx::__normal_iterator.145"*, %"class.__gnu_cxx::__normal_iterator.145"** %11, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %13, i32 0, i32 0
  %15 = load %class.Tensor**, %class.Tensor*** %12, align 8
  %16 = load %class.Tensor*, %class.Tensor** %15, align 8
  store %class.Tensor* %16, %class.Tensor** %14, align 8
  %17 = load i32, i32* @x.1149
  %18 = load i32, i32* @y.1150
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.145"*, align 8
  %26 = alloca %class.Tensor**, align 8
  store %"class.__gnu_cxx::__normal_iterator.145"* %0, %"class.__gnu_cxx::__normal_iterator.145"** %25, align 8
  store %class.Tensor** %1, %class.Tensor*** %26, align 8
  %27 = load %"class.__gnu_cxx::__normal_iterator.145"*, %"class.__gnu_cxx::__normal_iterator.145"** %25, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.145", %"class.__gnu_cxx::__normal_iterator.145"* %27, i32 0, i32 0
  %29 = load %class.Tensor**, %class.Tensor*** %26, align 8
  %30 = load %class.Tensor*, %class.Tensor** %29, align 8
  store %class.Tensor* %30, %class.Tensor** %28, align 8
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZN9__gnu_cxx14__alloc_traitsISaI6TensorILi1ELi3EEES2_E8allocateERS3_m(%"class.std::allocator.105"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.1151
  %4 = load i32, i32* @y.1152
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca %"class.std::allocator.105"*, align 8
  %12 = alloca i64, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %11, align 8
  store i64 %1, i64* %12, align 8
  %13 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %11, align 8
  %14 = bitcast %"class.std::allocator.105"* %13 to %"class.__gnu_cxx::new_allocator.106"*
  %15 = load i64, i64* %12, align 8
  %16 = call %class.Tensor* @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.106"* %14, i64 %15, i8* null)
  %17 = load i32, i32* @x.1151
  %18 = load i32, i32* @y.1152
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret %class.Tensor* %16

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca %"class.std::allocator.105"*, align 8
  %26 = alloca i64, align 8
  store %"class.std::allocator.105"* %0, %"class.std::allocator.105"** %25, align 8
  store i64 %1, i64* %26, align 8
  %27 = load %"class.std::allocator.105"*, %"class.std::allocator.105"** %25, align 8
  %28 = bitcast %"class.std::allocator.105"* %27 to %"class.__gnu_cxx::new_allocator.106"*
  %29 = load i64, i64* %26, align 8
  %30 = call %class.Tensor* @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.106"* %28, i64 %29, i8* null)
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.Tensor* @_ZN9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.106"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.1153
  %5 = load i32, i32* @y.1154
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %"class.__gnu_cxx::new_allocator.106"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.106"* %0, %"class.__gnu_cxx::new_allocator.106"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %15 = load %"class.__gnu_cxx::new_allocator.106"*, %"class.__gnu_cxx::new_allocator.106"** %12, align 8
  %16 = load i64, i64* %13, align 8
  %17 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.106"* %15) #2
  %18 = icmp ugt i64 %16, %17
  %19 = load i32, i32* @x.1153
  %20 = load i32, i32* @y.1154
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %28

; <label>:27:                                     ; preds = %originalBBpart2
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:28:                                     ; preds = %originalBBpart2
  %29 = load i64, i64* %13, align 8
  %30 = mul i64 %29, 24
  %31 = call i8* @_Znwm(i64 %30)
  %32 = bitcast i8* %31 to %class.Tensor*
  ret %class.Tensor* %32

originalBBalteredBB:                              ; preds = %originalBB, %3
  %33 = alloca %"class.__gnu_cxx::new_allocator.106"*, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.106"* %0, %"class.__gnu_cxx::new_allocator.106"** %33, align 8
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %35, align 8
  %36 = load %"class.__gnu_cxx::new_allocator.106"*, %"class.__gnu_cxx::new_allocator.106"** %33, align 8
  %37 = load i64, i64* %34, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorI6TensorILi1ELi3EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.106"* %36) #2
  %39 = icmp ugt i64 %37, %38
  br label %originalBB
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EEC2Ev(%"struct.std::_Vector_base.109"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.109"*, align 8
  store %"struct.std::_Vector_base.109"* %0, %"struct.std::_Vector_base.109"** %2, align 8
  %3 = load %"struct.std::_Vector_base.109"*, %"struct.std::_Vector_base.109"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.109", %"struct.std::_Vector_base.109"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %2, align 8
  %5 = load %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"*, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %5 to %"class.std::allocator.110"*
  call void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.110"* %6) #2
  %7 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %5 to %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*
  invoke void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = bitcast %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl"* %5 to %"class.std::allocator.110"*
  call void @_ZNSaI6TensorILi2ELi3EEED2Ev(%"class.std::allocator.110"* %13) #2
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %3, align 8
  %16 = load i32, i32* %4, align 4
  %17 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI6TensorILi2ELi3EEEC2Ev(%"class.std::allocator.110"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator.110"*, align 8
  store %"class.std::allocator.110"* %0, %"class.std::allocator.110"** %2, align 8
  %3 = load %"class.std::allocator.110"*, %"class.std::allocator.110"** %2, align 8
  %4 = bitcast %"class.std::allocator.110"* %3 to %"class.__gnu_cxx::new_allocator.111"*
  call void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.111"* %4) #2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI6TensorILi2ELi3EESaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"*, %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %3, i32 0, i32 0
  store %class.Tensor.113* null, %class.Tensor.113** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %3, i32 0, i32 1
  store %class.Tensor.113* null, %class.Tensor.113** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data", %"struct.std::_Vector_base<Tensor<2, 3>, std::allocator<Tensor<2, 3> > >::_Vector_impl_data"* %3, i32 0, i32 2
  store %class.Tensor.113* null, %class.Tensor.113** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI6TensorILi2ELi3EEEC2Ev(%"class.__gnu_cxx::new_allocator.111"*) unnamed_addr #1 comdat align 2 {
  %2 = load i32, i32* @x.1163
  %3 = load i32, i32* @y.1164
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %"class.__gnu_cxx::new_allocator.111"*, align 8
  store %"class.__gnu_cxx::new_allocator.111"* %0, %"class.__gnu_cxx::new_allocator.111"** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.111"*, %"class.__gnu_cxx::new_allocator.111"** %10, align 8
  %12 = load i32, i32* @x.1163
  %13 = load i32, i32* @y.1164
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca %"class.__gnu_cxx::new_allocator.111"*, align 8
  store %"class.__gnu_cxx::new_allocator.111"* %0, %"class.__gnu_cxx::new_allocator.111"** %20, align 8
  %21 = load %"class.__gnu_cxx::new_allocator.111"*, %"class.__gnu_cxx::new_allocator.111"** %20, align 8
  br label %originalBB
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8internal18TableBaseAccessors8AccessorILi2EdLb1ELj1EEC2ERK9TableBaseILi2EdEPKd(%"class.internal::TableBaseAccessors::Accessor.136"*, %class.TableBase* dereferenceable(48), double*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.internal::TableBaseAccessors::Accessor.136"*, align 8
  %5 = alloca %class.TableBase*, align 8
  %6 = alloca double*, align 8
  store %"class.internal::TableBaseAccessors::Accessor.136"* %0, %"class.internal::TableBaseAccessors::Accessor.136"** %4, align 8
  store %class.TableBase* %1, %class.TableBase** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.internal::TableBaseAccessors::Accessor.136"*, %"class.internal::TableBaseAccessors::Accessor.136"** %4, align 8
  %8 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.136", %"class.internal::TableBaseAccessors::Accessor.136"* %7, i32 0, i32 0
  %9 = load %class.TableBase*, %class.TableBase** %5, align 8
  store %class.TableBase* %9, %class.TableBase** %8, align 8
  %10 = getelementptr inbounds %"class.internal::TableBaseAccessors::Accessor.136", %"class.internal::TableBaseAccessors::Accessor.136"* %7, i32 0, i32 1
  %11 = load double*, double** %6, align 8
  store double* %11, double** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNK5PointILi3EEmlEd(%class.Point* noalias sret, %class.Point*, double) #0 comdat align 2 {
  %4 = alloca %class.Point*, align 8
  %5 = alloca double, align 8
  %6 = alloca %class.Point, align 8
  store %class.Point* %1, %class.Point** %4, align 8
  store double %2, double* %5, align 8
  %7 = load %class.Point*, %class.Point** %4, align 8
  call void @_ZN5PointILi3EEC2ERKS0_(%class.Point* %6, %class.Point* dereferenceable(24) %7)
  %8 = bitcast %class.Point* %6 to %class.Tensor*
  %9 = call dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEmLERKd(%class.Tensor* %8, double* dereferenceable(8) %5)
  call void @_ZN5PointILi3EEC2ERK6TensorILi1ELi3EE(%class.Point* %0, %class.Tensor* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.Tensor* @_ZN6TensorILi1ELi3EEmLERKd(%class.Tensor*, double* dereferenceable(8)) #1 comdat align 2 {
  %3 = alloca %class.Tensor*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i32, align 4
  store %class.Tensor* %0, %class.Tensor** %3, align 8
  store double* %1, double** %4, align 8
  %6 = load %class.Tensor*, %class.Tensor** %3, align 8
  store i32 0, i32* %5, align 4
  br label %7

; <label>:7:                                      ; preds = %originalBBpart2, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %38

; <label>:10:                                     ; preds = %7
  %11 = load double*, double** %4, align 8
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %class.Tensor, %class.Tensor* %6, i32 0, i32 0
  %14 = load i32, i32* %5, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 %15
  %17 = load double, double* %16, align 8
  %18 = fmul double %17, %12
  store double %18, double* %16, align 8
  br label %19

; <label>:19:                                     ; preds = %10
  %20 = load i32, i32* @x.1169
  %21 = load i32, i32* @y.1170
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i32, i32* %5, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %5, align 4
  %30 = load i32, i32* @x.1169
  %31 = load i32, i32* @y.1170
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %7

; <label>:38:                                     ; preds = %7
  %39 = load i32, i32* @x.1169
  %40 = load i32, i32* @y.1170
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %38, %originalBB11alteredBB
  %47 = load i32, i32* @x.1169
  %48 = load i32, i32* @y.1170
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  ret %class.Tensor* %6

originalBBalteredBB:                              ; preds = %originalBB, %19
  %55 = load i32, i32* %5, align 4
  %_ = shl i32 %55, 1
  %_1 = sub i32 %55, 1
  %gen = mul i32 %_1, 1
  %_2 = sub i32 %55, 1
  %gen3 = mul i32 %_2, 1
  %_4 = sub i32 %55, 1
  %gen5 = mul i32 %_4, 1
  %_6 = shl i32 %55, 1
  %_7 = sub i32 0, %55
  %gen8 = add i32 %_7, 1
  %_9 = sub i32 %55, 1
  %gen10 = mul i32 %_9, 1
  %56 = add i32 %55, 1
  store i32 %56, i32* %5, align 4
  br label %originalBB

originalBB11alteredBB:                            ; preds = %originalBB11, %38
  br label %originalBB11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5PointILi3EEC2ERK6TensorILi1ELi3EE(%class.Point*, %class.Tensor* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.Point*, align 8
  %4 = alloca %class.Tensor*, align 8
  store %class.Point* %0, %class.Point** %3, align 8
  store %class.Tensor* %1, %class.Tensor** %4, align 8
  %5 = load %class.Point*, %class.Point** %3, align 8
  %6 = bitcast %class.Point* %5 to %class.Tensor*
  %7 = load %class.Tensor*, %class.Tensor** %4, align 8
  call void @_ZN6TensorILi1ELi3EEC2ERKS0_(%class.Tensor* %6, %class.Tensor* dereferenceable(24) %7)
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
