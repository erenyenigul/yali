#!/bin/bash
set -e

YC='\033[0;33m'
RC='\033[0;31m'
NC='\033[0m'

ROUNDS=$1
MODEL=$2
TRAINDATASET=$3
OPTLEVELTRAIN=$4
TESTDATASET=$5
OPTLEVELTEST=$6

# Set Parameters 
checkParameters() {
    if [ -z "${ROUNDS}" ]; then
        echo -e "${RC}Error: No number of rounds specified!${NC}"
        exit 1
    elif [ -z "${MODEL}" ]; then
        echo -e "${RC}Error: No model specified!${NC}"
        exit 1
    elif [ -z "${TRAINDATASET}" ]; then
        echo -e "${RC}Error: No training dataset specified!${NC}"
        exit 1
    elif [ -z "${OPTLEVELTRAIN}" ]; then
        echo -e "${RC}Error: No optimization level specified for the training dataset!${NC}"
        exit 1
    elif [ -z "${TESTDATASET}" ]; then
        echo -e "${RC}Error: No testing dataset specified!${NC}"
        exit 1
    elif [ -z "${OPTLEVELTEST}" ]; then
        echo -e "${RC}Error: No optimization level specified for the testing dataset!${NC}"
        exit 1
    fi
}

# Create the programs
extraction() {
    local setName=$1
    local optType=$2
    local subfolder=$3
    local irFolder=~/yali/Dataset/Irs/MiraiAndSpec/${setName}${optType}/${subfolder}
    local representationScriptFolder=~/yali/Extraction/

    source ${representationScriptFolder}/Extract.sh "MiraiAndSpec/${setName}${optType}/${subfolder}" "histogram"
}

# Classification process
classification() {
    local rounds=$1
    local trainName=$2
    local optTypeTrain=$3
    local testName=$4
    local optTypeTest=$5
    
    local trainDir=~/yali/Dataset/Embeddings/histogram/MiraiAndSpec/${trainName}${optTypeTrain}/train
    local testDir=~/yali/Dataset/Embeddings/histogram/MiraiAndSpec/${testName}${optTypeTest}/test
    local resultsWithTest=~/yali/Dataset/Results/Embeddings/histogram/${trainName}${optTypeTrain}_${testName}${optTypeTest}/${MODEL}/2

    echo -e "${YC}===> Classification with ${MODEL}: training phase (${trainName}${optTypeTrain} -- histogram) --- testing phase (${testName}${optTypeTest}), 2 classes ...${NC}"
    python3 ~/yali/Classification/ClassifyPrograms.py \
        --train_dataset_directory ${trainDir} \
        --rounds ${rounds} \
        --nomemory_prof \
        --classes 2 \
        --train_p 100 \
        --test_dataset_directory ${testDir} \
        --results_directory ${resultsWithTest} \
        --model ${MODEL} \
        --representation "histogram"

    echo -e "${YC}===> Classification finished <===${NC}"
}


checkParameters

extraction ${TRAINDATASET} ${OPTLEVELTRAIN} "train"
extraction ${TESTDATASET} ${OPTLEVELTEST} "test"

classification ${ROUNDS} ${TRAINDATASET} ${OPTLEVELTRAIN} ${TESTDATASET} ${OPTLEVELTEST}
